remove _*directions('This' and replace with new API.

There should be an error message (report by Tom Tromey) in 
t/results/xtable/text_between_item_itemx.pl

Verify that there is a test with a node both internal and external 
ref, like
@xref{node1}.
@xref{node1,,manual}.

sectioning/sectioning_directions
Differences with texi2html: 
* name-NodeNext (which is more like text-NodeNext
  in tp) is always the node name in texi2html, it is the command element
  text in tp (so here it is the section name). --> keep it like it
* In tp, for node-Next sectioning commands directions are taken into 
  account even if there are no automatic directions. Thus
@node First node,,Top,Top
@chapter first node chapter

...

@node Second node,Third node unnumbered,,Top
@chapter second node chapter

  leads to Second node being node-Next for First node in tp (and not in 
  texi2html).  ---> not sure about this one

* not taken by texi2html but certainly right, node-Next for unnumbered sub
  as numbered sub
@menu
* unnumbered sub:: un
* numbered sub:: nu
@end menu

@node unnumbered sub
@unnumberedsubsec unnumbered subsection

@node numbered sub
@subsection numbered subsection

  Also in texi2html 'unnumbered sub' node-NodePrev is 'unnumbered' which 
  is certainly wrong.   ---> keep it like this


Handle better @exdent in html?

LINKS_BUTTONS as config, check and document.

When the HTML.pm is finished, document the API, that is everything
in Texinfo::Config.

Add an API for everything used in conf, for example in page_head, use 
$self->title_string() and so on and so forth.  

html tests which should be right:
sectioning setfilename_on_top_and_after_node

Test tree leading to non empty preamble_before_setfilename.  Currently there
are none in the test suite, maye require a real file as input.

Handle
@xrefautomaticsectiontitle on|off
(does nothing in info, in HTML automatically set the section name as 3rd
arg of @*ref).

do something for?
@set txicodequoteundirected
@codequoteundirected
@set txicodequotebacktick
@codequotebacktick

In Info A ref like @ref{node,,,manual} should lead to
*note (manual)node::.

Document that NO_USE_SETFILENAME replaced USE_SETFILENAME

Test @w{'} for the substitution of '.

Before the release, verify that everything on 
https://savannah.gnu.org/bugs/?group=texinfo
is fixed and tested for.

In a first step, close when the the command to be closed is at the 
top of the tree, not when it should be closed theoretically.
Then it could be possible to come back to the place where the command
should be closed and give an error message.
This is certainly only an issue for @footnote and similar not a general issue.

There is no forward looking code anymore, so maybe a lex/yacc parser
could be used for the main loop.  More simply, a binary tokenizer, at 
least, could make for a notable speedup.

@Â protecting end of lines in @def* is not kept in any way in the tree.
Maybe it could be possible to have it as a 'type'?

in HTML, the argument of a quotation is ignored if the quotation is empty,
like in
 @quotation thing
 @end quotation

def/end_of_lines_protected_in_footnote.pl the footnote is
   (1)  -- category: deffn_name arguments arg2 more args with end of line
and not 
   (1)
 -- category: deffn_name arguments arg2 more args with end of line
It is unclear whether it is right or wrong. It happens this way because
the paragraph starts right after the footnote number.

test node non automatic directions, especially in html and for external
nodes.

In html, test 
 empty lines at the begining, 
 content ignored before setfilename, 
for the different cases of element/no element.
In html test empty @top for title, with different cases for 
setcontentsaftertit* and for anchors.

@var{@u{r}} leads to R( in @var?  Test in 
plaintext_tests/characters_and_commands_in_var

Flag the last end of line of text in a raw format, to let the converter 
remove it in case a running text is needed.  For example, in
  @html
  html
  something
  @end html
flag the end of line at the end of the 'something' line.

An unknwown command in a context where not all commands are accepted leads
to an error message.  There is a FIXME in the code.  The test case is
macro/unknown_macro_on_line_command

sectioning/next_in_menu_is_below there should certainly be a warning for
the subsection that is both below and next the section, because it is 
next in menu.

Use PREFIX to override setfilename/input file name to determine output
name? Isn't -o sufficient? Or call it 'setfilename'?

Punctuation and spaces before @image do not lead to a doubling of space.

Use INLINE_INSERTCOPYING as the default for some formats?

Force end lines before/after a menu?

SHOW_MENU is used to determine if menus are shown in Plaintext, and is
true in the default case.  

HEADERS is not used to determine if node headers are output or not, this is 
determined by the module used (Plaintext.pm or info.pm).  No idea whether
it is right or wrong.

tests/indices/index_entry_in_footnote_separated_info the node of index
entry is Top, it should be the node created especially for the footnote
and the lines count should also be adjusted.

Test empty/no empty line at a multitable beginning, between 2 rows and
after a multitable.

Test end_line_count in Texinfo/Convert/ containers.

Test no empty line before and after a sectioning command.  With text, but
also commands.

Test character lengths and encoding.  For instance tests in 
encodings/at_commands_in_refs_utf8.texi

Image on sectioning command line haven't their length ignored correctly.
Not sure it is a big deal.  An example in sectioning/at_commands_in_refs.

Following should be an error:
@example
@heading A heading
@end example

test empty line in block or brace command in menu description.

test recursive acronym
@acronym{GNU, @acronym{GNU}'s Not Unix}

in hyphenation: only text and accent commands, and should
only appear in toplevel

Missing warnings in
t/19def.t empty_def_arguments
for 
@deffnx {} {}
@deffnx{} {}

warn when a @noindent/@indent appears within a paragraph.

in info_tests/error_in_footnote there is an error message for each 
listoffloats;  Line numbers are right, though, so maybe this is not
an issue.

Texinfo::Convert::Text
@c in menu lines (and maybe at other places) should be replaced by 
\n and not eat the end of line.

use definfoenclose information in Convert::Text?

t/30sectioning.t setfilename_on_top_and_after_node
there could be a warning
 warning: @setfilename after the first element

No &copy; &ldquo; &rdquo; in docbook.  Use instead numeric entities.

Add @value to the corresponding commands categories?

Functions:
sectioning_command_target_name
node_target_name

Incorporation of texi2html tests
--------------------------------

tests in test/macros, not incorporated
glossary.texi
bib-example.texi (big test)

tests of the command:
macros/
cond_no-ifhtml_no-ifinfo_no-iftex cond.texi --no-ifhtml --no-ifinfo --no-iftex
cond_ifhtml_ifinfo_iftex cond.texi --ifhtml --ifinfo --iftex
Maybe:
defcondx_Ubar defcondx_Dbar
space_in_setfilename

sectioning/
node_footnote_end

formatting/
inter_item_commands.texi

HTML command:
sectioning/test_refs.texi with USE_NODES and split at nodes for testing 
nodes without sectioning commands below a chapter.

@verbatiminclude formatting/simplest.texi

@@verbatiminclude dot.
@verbatiminclude ./formatting/simplest.texi

done: test/invalid. Not completly incorporated
error_in_footnote_caption.texi    (at least partly done in 
                    info_tests/error_in_footnote.  More shouldn't be needed)
tex_in_copying.texi               (this is not invalid and not
                                   such an interesting construct to test)

partly done:
indices/recursive_synindex.texi (only done: @synindex aaa bbb
                                            @synindex bbb aaa)

done: info_coverage
code.texi                 certainly not needed
commentexample.texi       the comment is in fact in comments_in_example
                          but no test for vertical spacing (but not needed)
split_nocopying.texi      this requires not using the test suite since 
                          the test suite inhibits splitting

done:
formatting/def_end_of_line.texi
formatting/def_end_of_line_footnote.texi
formatting/empty_deftype.texi
formatting/def_cmds.texi
formatting/paragraph_in_samp.texi
formatting/test_w.texi            (done especially in t/paragraph.t)

sectioning/other_at_comands_in_nodes_refs.texi
sectioning/at_commands_in_refs.texi
sectioning/test_refs.texi
sectioning/nodename_parentheses.texi
sectioning/double_node_anchor_float.texi
sectioning/double_top.texi
sectioning/nodes_test.texi   (done: unknown entry in menu and * (info)::
                              and errors.  Not sure the remaining is 
                              interesting)
sectioning/rec_nodes.texi
sectioning/semi_auto.texi
sectioning/novalidate.texi    (errors that aren't flagged by novalidate
                               done. Not sure the remaining is interesting)
sectioning/test_two_include.texi (not done at all, but it tests 
          -I .@PATH_SEPARATOR@../manuals@PATH_SEPARATOR@../macros)
sectioning/node-whitespace.tex   (but not @ref)
sectioning/loop_nodes.texi
sectioning/sectioning.texi
sectioning/text_before_line_command.texi
sectioning/empty_nodes.texi
sectioning/node_footnote.texi   (not interesting for Parser or Info, but 
                                 maybe for html)
sectioning/nodes_before_top.texi
sectioning/no_element.texi
sectioning/no_section.texi      (no test for the whole, but it is not interesting
                                 for Structuring and Info)
sectioning/only_documentencoding.texi
sectioning/part_before_section.texi
sectioning/part_node_before_top.texi
sectioning/part_node_chapter_after_top.texi
sectioning/node_part_chapter_after_chapter.texi
sectioning/section_before_chapter.texi
sectioning/section_before_part.texi
sectioning/section_before_top.texi
sectioning/section_before_top_no_node.texi
sectioning/section_chapter_before_top.texi
sectioning/section_chapter_before_top_nodes.texi
sectioning/section_in_unnumbered.texi


indices/unknown_index_entry.texi
indices/more_unknown_index_entry.texi (but without the document structure)
indices/double_index_entry.texi

invalid/at_after_accent_command.texi
invalid/author_outside_titlepage_quotation.texi
invalid/bad_documentencoding.texi
invalid/bad_nesting.texi
invalid/bad_style_nesting.texi
invalid/bad_tab_nesting.texi
invalid/brace_not_closed.texi
invalid/caption_not_closed.texi
invalid/code_not_closed_no_newline.texi
invalid/code_not_closed.texi 
invalid/commands_not_closed.texi (but maybe still things to test)
invalid/command_without_open_brace.texi
invalid/copying_not_closed.texi
invalid/def_bad_defx_command.texi
invalid/def_braces_and_empty.texi
invalid/def_cmd_dble.texi
invalid/direntry_dircategory_after_first_node.texi
invalid/double_top_section.texi
invalid/empty_ifclear.texi
invalid/footnote_not_closed.texi
invalid/formats_not_closed.texi
invalid/html_not_closed.texi
invalid/ignored_not_closed.texi
invalid/invalid_command_in_table.texi
invalid/itemx_in_itemize.texi
invalid/macro_call_not_closed.texi
invalid/macro_def_not_closed.texi
invalid/math_not_closed.texi
invalid/multitable_begin_with_tab.texi
invalid/multitable_too_much_col.texi
invalid/node_in_copying.texi
invalid/node_too_much_arguments.texi
invalid/not_closed_in_menu.texi
invalid/recursive_copying.texi             (but not the expansion)
invalid/style_not_closed_in_cartouche.texi
invalid/style_not_closed_in_table_line.texi
invalid/tab_in_index.texi                  (but not the printindex)
invalid/tex_not_closed.texi
invalid/titlepage_not_closed.texi
invalid/unclosed_verb_line_commands.texi   (but the result is different since
                                            ignored until end of file).
invalid/unknown_command_with_braces.texi
invalid/verb_and_char_end_of_line.texi
invalid/verb_end_of_line.texi
invalid/verb_not_closed.texi
invalid/verbatim_not_closed.texi


coverage/pass0_macro.texi     (not everything, but tests are redundant)



state for sectioning
D: diffs/equivalent_nodes_no_node.diff
D: diffs/equivalent_nodes_test_renamed_nodes.diff
D: diffs/menu-whitespace_plain.diff
F: out_parser/menu-whitespace_xml/menu-whitespace.2
F: out_parser_info/menu-whitespace_xml/menu-whitespace.2
D: diffs/nodename_parentheses.diff
F: out_parser/nodes_id_docbook/nodes_id.2
F: out_parser_info/nodes_id_docbook/nodes_id.2
D: diffs/two_footnotes_in_nodes_plain.diff
D: diffs/section_in_unnumbered.diff
D: diffs/no_element.diff
D: diffs/one_element.diff
D: diffs/placed_things_before_element.diff
D: diffs/anchor_in_footnote.diff
D: diffs/double_node_anchor_float.diff
F: out_parser/empty_nodes/empty_nodes.2
D: diffs/section_before_part.diff
D: diffs/part_before_section.diff
D: diffs/chapter_before_part.diff
D: diffs/part_before_chapter.diff
D: diffs/hole_in_sectioning.diff
D: diffs/section_before_top.diff
D: diffs/section_before_top_no_node.diff
D: diffs/part_chapter_after_top.diff
D: diffs/part_node_chapter_after_top.diff
D: diffs/node_part_chapter_after_top.diff
D: diffs/node_part_chapter_after_chapter.diff
D: diffs/part_node_before_top.diff
D: diffs/part_node_after_top.diff
D: diffs/section_chapter_before_top.diff
D: diffs/section_chapter_before_top_nodes.diff
D: diffs/part_node_appendix.diff
D: diffs/part_appendix.diff
D: diffs/part_node_part_appendix.diff
D: diffs/part_node_part_node_appendix.diff
D: diffs/part_node_node_part_appendix.diff
D: diffs/empty_top_node_up.diff
D: diffs/text_before_line_command.diff
D: diffs/loop_nodes.diff
F: out_parser/test_refs_docbook/test_refs.2
F: out_parser_info/test_refs_docbook/test_refs.2
