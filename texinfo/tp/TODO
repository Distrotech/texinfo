Handle
@xrefautomaticsectiontitle on|off
(does nothing in info, in HTML automatically set the section name as 3rd
arg of @*ref).

Before the release, verify that everything on 
https://savannah.gnu.org/bugs/?group=texinfo
is fixed and tested for.

In a first step, close when the the command to be closed is at the 
top of the tree, not when it should be closed theoretically.
Then it could be possible to come back to the place where the command
should be closed and give an error message.
This is certainly only an issue for @footnote and similar not a general issue.

There is no forward looking code anymore, so maybe a lex/yacc parser
could be used for the main loop.  More simply, a binary tokenizer, at 
least, could make for a notable speedup.

@Â protecting end of lines in @def* is not kept in any way in the tree.
Maybe it could be possible to have it as a 'type'?

for i18n, one want to do something like
{style} {number}: {caption}
  -> new tree. 

and 
section {section} in @cite{{manual}} 
  -> new tree

and also maybe
{acronym_like} ({explanation})
  -> replace acronym_like with the already formatted text and 
     explanation with convert(explanation).

def/end_of_lines_protected_in_footnote.pl the footnote is
   (1)  -- category: deffn_name arguments arg2 more args with end of line
and not 
   (1)
 -- category: deffn_name arguments arg2 more args with end of line
It is unclear whether it is right or wrong, but even less clear why it 
happens this way.

Should
@node Top
@menu
* (out)::
@end menu
lead to Node: Top,  Next: (out),  Up: (dir)

An unknwown command in a context where not all commands are accepted leads
to an error message.  There is a FIXME in the code.  The test case is
macro/unknown_macro_on_line_command

Force end lines before/after a menu?

With something like
@deffn { category}
the space is stripped everywhere but in sorting. Should be stripped in 
sorting too.

tests/indices/index_entry_in_footnote_separated_info the node of index
entry is Top, it should be the node created especially for the footnote
and the lines count should also be adjusted.

Test empty/no empty line at a multitable beginning, between 2 rows and
after a multitable.

Test end_line_count in Texinfo/Convert/ containers.

Test no empty line before and after a sectioning command.  With text, but
also commands.

Following should be an error:
@example
@heading A heading
@end example

test empty line in block or brace command in menu description.

test unknown @value expanded.

test recursive acronym
@acronym{GNU, @acronym{GNU}'s Not Unix}

in hyphenation: only text and accent commands, and should
only appear in toplevel

dotless:
"%c%s expects `i' or `j' as argument, not `%s'"

Missing warnings in
t/19def.t empty_def_arguments
for 
@deffnx {} {}
@deffnx{} {}

warn when a @noindent/@indent appears within a paragraph.

in info_tests/error_in_footnote there is an error message for each 
listoffloats;  Line numbers are right, though, so maybe this is not
an issue.

Texinfo::Convert::Text
@c in menu lines (and maybe at other places) should be replaced by 
\n and not eat the end of line.

use definfoenclose information in Convert::Text?

t/30sectioning.t setfilename_on_top_and_after_node
there could be a warning
 warning: @setfilename after the first element

No &copy; &ldquo; &rdquo; in docbook.  Use instead numeric entities.

Add @value and @end to the corresponding commands categories?  Also maybe
add thischapter thischaptername thischapternum thisfile thispage thistitle
to misc_commands?

Incorporation of texi2html tests
--------------------------------

tests in test/macros, not incorporated
glossary.texi
bib-example.texi (big test)
macro-at.texi (the macro part is already done)

tests of the command:
macros/
cond_no-ifhtml_no-ifinfo_no-iftex cond.texi --no-ifhtml --no-ifinfo --no-iftex
cond_ifhtml_ifinfo_iftex cond.texi --ifhtml --ifinfo --iftex
Maybe:
defcondx_Ubar defcondx_Dbar


@verbatiminclude formatting/simplest.texi

@@verbatiminclude dot.
@verbatiminclude ./formatting/simplest.texi

done: test/invalid. Not completly incorporated
error_in_footnote_caption.texi    (at least partly done in 
                    info_tests/error_in_footnote.  More shouldn't be needed)
tex_in_copying.texi               (this is not invalid and not
                                   such an interesting construct to test)

partly done:
indices/recursive_synindex.texi (only done: @synindex aaa bbb
                                            @synindex bbb aaa)

done: info_coverage
code.texi                 certainly not needed
commentexample.texi       the comment is in fact in comments_in_example
                          but no test for vertical spacing (but not needed)
split_nocopying.texi      this requires not using the test suite since 
                          the test suite inhibits splitting

done:
formatting/def_end_of_line.texi
formatting/def_end_of_line_footnote.texi
formatting/empty_deftype.texi
formatting/def_cmds.texi
formatting/paragraph_in_samp.texi
formatting/test_w.texi            (done especially in t/paragraph.t)

sectioning/other_at_comands_in_nodes_refs.texi
sectioning/at_commands_in_refs.texi
sectioning/test_refs.texi
sectioning/nodename_parentheses.texi
sectioning/double_node_anchor_float.texi
sectioning/double_top.texi   (but not @ref)
sectioning/nodes_test.texi   (done: unknown entry in menu and * (info)::
                              and errors.  Not sure the remaining is 
                              interesting)
sectioning/rec_nodes.texi
sectioning/semi_auto.texi
sectioning/novalidate.texi    (only errors that aren't flagged by novalidate
                               done)
sectioning/test_two_include.texi (not done at all, but it tests 
          -I .@PATH_SEPARATOR@../manuals@PATH_SEPARATOR@../macros)
sectioning/node-whitespace.tex   (but not @ref)
sectioning/loop_nodes.texi
sectioning/sectioning.texi
sectioning/text_before_line_command.texi
sectioning/empty_nodes.texi  (but not the @ref)

indices/unknown_index_entry.texi
indices/more_unknown_index_entry.texi (but without the document structure)
indices/double_index_entry.texi

invalid/at_after_accent_command.texi
invalid/author_outside_titlepage_quotation.texi
invalid/bad_documentencoding.texi
invalid/bad_nesting.texi
invalid/bad_style_nesting.texi
invalid/bad_tab_nesting.texi
invalid/brace_not_closed.texi
invalid/caption_not_closed.texi
invalid/code_not_closed_no_newline.texi
invalid/code_not_closed.texi 
invalid/commands_not_closed.texi (but maybe still things to test)
invalid/command_without_open_brace.texi
invalid/copying_not_closed.texi
invalid/def_bad_defx_command.texi
invalid/def_braces_and_empty.texi
invalid/def_cmd_dble.texi
invalid/direntry_dircategory_after_first_node.texi
invalid/double_top_section.texi
invalid/empty_ifclear.texi
invalid/footnote_not_closed.texi
invalid/formats_not_closed.texi
invalid/html_not_closed.texi
invalid/ignored_not_closed.texi
invalid/invalid_command_in_table.texi
invalid/itemx_in_itemize.texi
invalid/macro_call_not_closed.texi
invalid/macro_def_not_closed.texi
invalid/math_not_closed.texi
invalid/multitable_begin_with_tab.texi
invalid/multitable_too_much_col.texi
invalid/node_in_copying.texi
invalid/node_too_much_arguments.texi
invalid/not_closed_in_menu.texi
invalid/recursive_copying.texi             (but not the expansion)
invalid/style_not_closed_in_cartouche.texi
invalid/style_not_closed_in_table_line.texi
invalid/tab_in_index.texi                  (but not the printindex)
invalid/tex_not_closed.texi
invalid/titlepage_not_closed.texi
invalid/unclosed_verb_line_commands.texi   (but the result is different since
                                            ignored until end of file).
invalid/unknown_command_with_braces.texi
invalid/verb_and_char_end_of_line.texi
invalid/verb_end_of_line.texi
invalid/verb_not_closed.texi
invalid/verbatim_not_closed.texi


coverage/pass0_macro.texi     (not everything, but tests are redundant)

