In a first step, close when the the command to be closed is at the 
top of the tree, not when it should be closed theoretically.
Then it could be possible to come back to the place where the command
should be closed and give an error message.

Karl idea to keep the information on the exact location of the @mymacro:
(pertusus had the same idea).
here's a crazy idea that just popped into my head: what if we kept track
of column numbers as well as line numbers?  Then whether the macro was
involved would be a matter of checking if the column number was < or >
the place where the error occurred.


test invalid, especially commands not closed/bad nesting
test root_commands, like nodes and sections

Test @set with an argument but no space following it. In ifset tests.

parse @sp a bit more.

tests in test/macros
glossary.texi

bib-example.texi (big test)
macro-at.texi (the macro part is already done)
include_macro.texi

stopped at  include-value.texi
(not done)
