In a first step, close when the the command to be closed is at the 
top of the tree, not when it should be closed theoretically.
Then it could be possible to come back to the place where the command
should be closed and give an error message.

Karl idea to keep the information on the exact location of the @mymacro:
(pertusus had the same idea).
here's a crazy idea that just popped into my head: what if we kept track
of column numbers as well as line numbers?  Then whether the macro was
involved would be a matter of checking if the column number was < or >
the place where the error occurred.

Following should be an error:
@example
@heading A heading
@end example


test invalid, especially commands not closed/bad nesting
test root_commands, like nodes and sections

Error message if block or line misc at-command on a 
block command or misc @-command line

Texinfo::Convert::Text
@c in menu lines (and maybe at other places) should be replaced by 
\n and not eat the end of line.

use definfoenclose information in Convert::Text?

tests in test/macros, not incorporated
glossary.texi
bib-example.texi (big test)
macro-at.texi (the macro part is already done)

todo: macro_in_pass_texi_commands
