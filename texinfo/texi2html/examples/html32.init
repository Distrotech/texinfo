# -*-perl-*-
# APA: Add SystemLiteral to identify the canonical DTD.
# [Definition:] The SystemLiteral is called the entity's system
# identifier. It is a URI, which may be used to retrieve the entity.
# See http://www.xml.com/axml/target.html#NT-ExternalID
$DOCTYPE = '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN" "http://www.w3.org/TR/html32/loose.dtd">';

$FRAMESET_DOCTYPE = $DOCTYPE;

$BODYTEXT = 'bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000"';
# this controls the pre style for menus
$MENU_PRE_STYLE = '';

$TOC_LIST_STYLE ='';
# This lines are inserted before and after the shortcontents 
$BEFORE_STOC_LINES = "";
$AFTER_STOC_LINES = '';

# This lines are inserted before and after the contents 
$BEFORE_TOC_LINES = "";
$AFTER_TOC_LINES = '';

# html version for latex2html
$L2H_HTML_VERSION = "3.2";

# no css
$CSS_LINES = "";

$things_map{'oe'} = '&#156;';
$things_map{'OE'} = '&#140;';
$things_map{'dots'} = '<small>...</small>';
$things_map{'enddots'} = '<small>....</small>';

# an eval of these $complex_format_map->{what}->{'begin'} yields beginning
# an eval of these $complex_format_map->{what}->{'end'} yields end

# no style in html 3.2
foreach my $complex_format (keys %$complex_format_map)
{
    $complex_format_map->{$complex_format}->{'pre_style'} = "";
}

# formatting functions

$summary_letter    = \&t2h_html32_summary_letter;
$protect_html      = \&t2h_html32_protect_html;
$heading           = \&t2h_html32_heading;
$preformatted      = \&t2h_html32_preformatted;
$raw               = \&t2h_html32_raw;
$menu              = \&t2h_html32_menu;
$foot_section      = \&t2h_html32_foot_section;
$cartouche         = \&t2h_html32_cartouche;

# &quot; is not in html 3.2
sub t2h_html32_protect_html($)
{
    my $what = shift;
    # protect &, <, and >.
    # APA: Keep it simple.  This is what perl's CGI::espaceHTML does.
    # We may consider using that instead.
    # If raw HTML is used outside @ifhtml or @html it's an error
    # anyway.
    $what =~ s/\&/\&amp;/go;
    #$what =~ s/\"/\&quot;/go;
    $what =~ s/\</\&lt;/go;
    $what =~ s/\>/\&gt;/go;
    return($what);
}

# a preformatted section
sub t2h_html32_preformatted($$$)
{
    my $text = shift;
    return '' if ($text eq '');
    return "<pre>$text</pre>";
}

# a heading for an element
sub t2h_html32_heading($)
{
    my $element = shift;
    return '' if ($element->{'text'} =~ /^\s*$/);
    my $level = 3;
    if (!$element->{'node'})
    {
	$level = $element->{'level'};
        print STDERR "Bug: $element->{'texi'} level undef\n" if (!defined($level));
        $level = 1 if ($level == 0);
    }
    return "<h$level> $element->{'text'} </h$level>\n";
}

# formatting of raw regions
# ih L2H is true another mechanism is used for tex
sub t2h_html32_raw($$)
{
    my $style = shift;
    my $text = shift;
    if ($style eq 'verbatim' or $style eq 'tex')
    {
        return "<pre>" . &$protect_html($text) . '</pre>';
    }
    elsif ($style eq 'html')
    {
        return $text;
    }
    else
    {
        warn "$WARN (bug) unknown style $style\n";
        return &$protect_html($text);
    }
}

# a whole menu
sub t2h_html32_menu($)
{
    my $text = shift;

    if ($text =~ /\S/)
    {
        return "<table border=\"0\" cellspacing=\"0\">\n" . $text. "</table>\n";
    }
    return '';
}

# a simple menu entry ref in case we aren't in a standard menu context
sub t2h_html32_foot_section($)
{
    my $lines = shift;
    unshift @$lines, "$DEFAULT_RULE\n<h3>$Texi2HTML::I18n::WORDS->{'Footnotes_Title'}</h3>\n";
    return $lines;
}

# a cartouche
sub t2h_html32_cartouche($)
{
    my $text = shift;

    if ($text =~ /\S/)
    {
        return "<table border=\"1\"><tr><td>\n" . $text . "</td></tr></table>\n";
    }
    return '';
}


# no style
sub t2h_html32_summary_letter($$$)
{
    my $letter = shift;
    my $file = shift;
    my $index = shift;
    my $id = shift;

    return &$anchor('', "$file#${id}_" . $index,
         "<b>" . &$protect_html($letter) . "</b>",
         '');
}
