<div id="File-status"></div>
<div class="header">
<p>
Next: [cvs: Bringing a file up to date#Updating-a-file Updating a file], Up: [cvs: Multiple developers#Multiple-developers Multiple developers] &nbsp; |[cvs: Index#SEC_Contents Contents]||[cvs: Index#Index Index]|</p>
</div>
<hr>
<div id="File-status-1"></div>
=== File status ===
<div id="index-File-status"></div>
<div id="index-Status-of-a-file"></div>

<p>Based on what operations you have performed on a
checked out file, and what operations others have
performed to that file in the repository, one can
classify a file in a number of states.  The states, as
reported by the <code>status</code> command, are:
</p>
<dl compact="compact">
<dd><div id="index-Up_002dto_002ddate"></div>
</dd>
<dt>Up-to-date</dt>
<dd><p>The file is identical with the latest revision in the
repository for the branch in use.
</p>
</dd>
<dt>Locally Modified</dt>
<dd><div id="index-Locally-Modified"></div>
<p>You have edited the file, and not yet committed your changes.
</p>
</dd>
<dt>Locally Added</dt>
<dd><div id="index-Locally-Added"></div>
<p>You have added the file with <code>add</code>, and not yet
committed your changes.
</p>
</dd>
<dt>Locally Removed</dt>
<dd><div id="index-Locally-Removed"></div>
<p>You have removed the file with <code>remove</code>, and not yet
committed your changes.
</p>
</dd>
<dt>Needs Checkout</dt>
<dd><div id="index-Needs-Checkout"></div>
<p>Someone else has committed a newer revision to the
repository.  The name is slightly misleading; you will
ordinarily use <code>update</code> rather than
<code>checkout</code> to get that newer revision.
</p>
</dd>
<dt>Needs Patch</dt>
<dd><div id="index-Needs-Patch"></div>
<p>Like Needs Checkout, but the <small>CVS</small> server will send
a patch rather than the entire file.  Sending a patch or
sending an entire file accomplishes the same thing.
</p>
</dd>
<dt>Needs Merge</dt>
<dd><div id="index-Needs-Merge"></div>
<p>Someone else has committed a newer revision to the repository, and you
have also made modifications to the file.
</p>
</dd>
<dt>Unresolved Conflict</dt>
<dd><div id="index-Unresolved-Conflict"></div>
<p>A file with the same name as this new file has been added to the repository
from a second workspace.  This file will need to be moved out of the way
to allow an <code>update</code> to complete.
</p>
</dd>
<dt>File had conflicts on merge</dt>
<dd><div id="index-File-had-conflicts-on-merge"></div>
<p>This is like Locally Modified, except that a previous
<code>update</code> command gave a conflict.  If you have not
already done so, you need to
resolve the conflict as described in [cvs: Conflicts example#Conflicts-example Conflicts example].
</p>
</dd>
<dt>Unknown</dt>
<dd><div id="index-Unknown"></div>
<p><small>CVS</small> doesn&rsquo;t know anything about this file.  For
example, you have created a new file and have not run
<code>add</code>.
</p>
</dd>
</dl>

<p>To help clarify the file status, <code>status</code> also
reports the <code>Working revision</code> which is the
revision that the file in the working directory derives
from, and the <code>Repository revision</code> which is the
latest revision in the repository for the branch in
use.
</p>
<p>The options to <code>status</code> are listed in
[cvs: Quick reference to CVS commands#Invoking-CVS Invoking CVS].  For information on its <code>Sticky tag</code>
and <code>Sticky date</code> output, see [cvs: Sticky tags#Sticky-tags Sticky tags].
For information on its <code>Sticky options</code> output,
see the &lsquo;<samp>-k</samp>&rsquo; option in [cvs: update options#update-options update options].
</p>
<p>You can think of the <code>status</code> and <code>update</code>
commands as somewhat complementary.  You use
<code>update</code> to bring your files up to date, and you
can use <code>status</code> to give you some idea of what an
<code>update</code> would do (of course, the state of the
repository might change before you actually run
<code>update</code>).  In fact, if you want a command to
display file status in a more brief format than is
displayed by the <code>status</code> command, you can invoke
</p>
<div id="index-update_002c-to-display-file-status"></div>
<table><tr><td>&nbsp;</td><td><pre class="example"><nowiki>$ cvs -n -q update
</nowiki></pre></td></tr></table>

<p>The &lsquo;<samp>-n</samp>&rsquo; option means to not actually do the
update, but merely to display statuses; the &lsquo;<samp>-q</samp>&rsquo;
option avoids printing the name of each directory.  For
more information on the <code>update</code> command, and
these options, see [cvs: Quick reference to CVS commands#Invoking-CVS Invoking CVS].
</p>
<hr>
<div class="header">
<p>
Next: [cvs: Bringing a file up to date#Updating-a-file Updating a file], Up: [cvs: Multiple developers#Multiple-developers Multiple developers] &nbsp; |[cvs: Index#SEC_Contents Contents]||[cvs: Index#Index Index]|</p>
</div>
This document was generated on <i>a sunny day</i> using [http://www.nongnu.org/texi2html/ <i>texi2html</i>].
