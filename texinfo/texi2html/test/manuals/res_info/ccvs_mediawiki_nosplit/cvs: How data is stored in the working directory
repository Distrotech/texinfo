<div id="Working-directory-storage"></div>
<div class="header">
<p>
Next: [[cvs: The administrative files#The administrative files|Intro administrative files]], Previous: [[cvs: How data is stored in the repository#How data is stored in the repository|Repository storage]], Up: [[cvs: The Repository#The Repository|Repository]] &nbsp; |[[cvs: Index#SEC_Contents|Contents]]||[[cvs: Index#Index|Index]]|</p>
</div>

----

<div id="How-data-is-stored-in-the-working-directory"></div>
=== How data is stored in the working directory ===


<div id="index-CVS-directory_002c-in-working-directory"></div>
While we are discussing <small>CVS</small> internals which may
become visible from time to time, we might as well talk
about what <small>CVS</small> puts in the &lsquo;<tt>CVS</tt>&rsquo; directories
in the working directories.  As with the repository,
<small>CVS</small> handles this information and one can usually
access it via <small>CVS</small> commands.  But in some cases it
may be useful to look at it, and other programs, such
as the <code>jCVS</code> graphical user interface or the
<code>VC</code> package for emacs, may need to look at it.
Such programs should follow the recommendations in this
section if they hope to be able to work with other
programs which use those files, including future
versions of the programs just mentioned and the
command-line <small>CVS</small> client.

The &lsquo;<tt>CVS</tt>&rsquo; directory contains several files.
Programs which are reading this directory should
silently ignore files which are in the directory but
which are not documented here, to allow for future
expansion.

The files are stored according to the text file
convention for the system in question.  This means that
working directories are not portable between systems
with differing conventions for storing text files.
This is intentional, on the theory that the files being
managed by <small>CVS</small> probably will not be portable between
such systems either.

;&lsquo;<tt>Root</tt>&rsquo;
: This file contains the current <small>CVS</small> root, as described in [[cvs: Telling CVS where your repository is#Telling CVS where your repository is|Specifying a repository]].

<div id="index-Repository-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fRepository-file"></div>
;&lsquo;<tt>Repository</tt>&rsquo;
: This file contains the directory within the repository which the current directory corresponds with.  It can be either an absolute pathname or a relative pathname; <small>CVS</small> has had the ability to read either format since at least version 1.3 or so.  The relative pathname is relative to the root, and is the more sensible approach, but the absolute pathname is quite common and implementations should accept either.  For example, after the command

<div class="example" style="margin-left: 3.2em">
 cvs -d<nowiki> :</nowiki>local:/usr/local/cvsroot checkout yoyodyne/tc
</div>

: &lsquo;<tt>Root</tt>&rsquo; will contain

<div class="example" style="margin-left: 3.2em">
 :local:/usr/local/cvsroot
</div>

: and &lsquo;<tt>Repository</tt>&rsquo; will contain either

<div class="example" style="margin-left: 3.2em">
 /usr/local/cvsroot/yoyodyne/tc
</div>

: or

<div class="example" style="margin-left: 3.2em">
 yoyodyne/tc
</div>

: If the particular working directory does not correspond to a directory in the repository, then &lsquo;<tt>Repository</tt>&rsquo; should contain &lsquo;<tt>CVSROOT/Emptydir</tt>&rsquo;. <div id="index-Emptydir_002c-in-CVSROOT-directory"></div> <div id="index-CVSROOT_002fEmptydir-directory"></div>

<div id="index-Entries-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fEntries-file"></div>
;&lsquo;<tt>Entries</tt>&rsquo;
: This file lists the files and directories in the working directory. The first character of each line indicates what sort of line it is.  If the character is unrecognized, programs reading the file should silently skip that line, to allow for future expansion.

: If the first character is &lsquo;<code>/</code>&rsquo;, then the format is:

<div class="example" style="margin-left: 3.2em">
 /<var>name</var>/<var>revision</var>/<var>timestamp</var><nowiki>[</nowiki>+<var>conflict</var><nowiki>]</nowiki>/<var>options</var>/<var>tagdate</var>
</div>

: where &lsquo;<code><nowiki>[</nowiki></code>&rsquo; and &lsquo;<code><nowiki>]</nowiki></code>&rsquo; are not part of the entry, but instead indicate that the &lsquo;<code>+</code>&rsquo; and conflict marker are optional.  <var>name</var> is the name of the file within the directory.  <var>revision</var> is the revision that the file in the working derives from, or &lsquo;<code>0</code>&rsquo; for an added file, or &lsquo;<code>-</code>&rsquo; followed by a revision for a removed file.  <var>timestamp</var> is the timestamp of the file at the time that <small>CVS</small> created it; if the timestamp differs with the actual modification time of the file it means the file has been modified.  It is stored in the format used by the ISO C asctime() function (for example, &lsquo;<code>Sun Apr  7 01:29:26 1996</code>&rsquo;).  One may write a string which is not in that format, for example, &lsquo;<code>Result of merge</code>&rsquo;, to indicate that the file should always be considered to be modified.  This is not a special case; to see whether a file is modified a program should take the timestamp of the file and simply do a string compare with <var>timestamp</var>. If there was a conflict, <var>conflict</var> can be set to the modification time of the file after the file has been written with conflict markers (see [[cvs: Conflicts example#Conflicts example|Conflicts example]]). Thus if <var>conflict</var> is subsequently the same as the actual modification time of the file it means that the user has obviously not resolved the conflict.  <var>options</var> contains sticky options (for example &lsquo;<code>-kb</code>&rsquo; for a binary file).  <var>tagdate</var> contains &lsquo;<code>T</code>&rsquo; followed by a tag name, or &lsquo;<code>D</code>&rsquo; for a date, followed by a sticky tag or date.  Note that if <var>timestamp</var> contains a pair of timestamps separated by a space, rather than a single timestamp, you are dealing with a version of <small>CVS</small> earlier than <small>CVS</small> 1.5 (not documented here).

: The timezone on the timestamp in CVS/Entries (local or universal) should be the same as the operating system stores for the timestamp of the file itself.  For example, on Unix the file&rsquo;s timestamp is in universal time (UT), so the timestamp in CVS/Entries should be too.  On <small>VMS</small>, the file&rsquo;s timestamp is in local time, so <small>CVS</small> on <small>VMS</small> should use local time. This rule is so that files do not appear to be modified merely because the timezone changed (for example, to or from summer time).

: If the first character of a line in &lsquo;<tt>Entries</tt>&rsquo; is &lsquo;<code>D</code>&rsquo;, then it indicates a subdirectory.  &lsquo;<code>D</code>&rsquo; on a line all by itself indicates that the program which wrote the &lsquo;<tt>Entries</tt>&rsquo; file does record subdirectories (therefore, if there is such a line and no other lines beginning with &lsquo;<code>D</code>&rsquo;, one knows there are no subdirectories).  Otherwise, the line looks like:

<div class="example" style="margin-left: 3.2em">
 D/<var>name</var>/<var>filler1</var>/<var>filler2</var>/<var>filler3</var>/<var>filler4</var>
</div>

: where <var>name</var> is the name of the subdirectory, and all the <var>filler</var> fields should be silently ignored, for future expansion.  Programs which modify <code>Entries</code> files should preserve these fields.

: The lines in the &lsquo;<tt>Entries</tt>&rsquo; file can be in any order.

<div id="index-Entries_002eLog-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fEntries_002eLog-file"></div>
;&lsquo;<tt>Entries.Log</tt>&rsquo;
: This file does not record any information beyond that in &lsquo;<tt>Entries</tt>&rsquo;, but it does provide a way to update the information without having to rewrite the entire &lsquo;<tt>Entries</tt>&rsquo; file, including the ability to preserve the information even if the program writing &lsquo;<tt>Entries</tt>&rsquo; and &lsquo;<tt>Entries.Log</tt>&rsquo; abruptly aborts. Programs which are reading the &lsquo;<tt>Entries</tt>&rsquo; file should also check for &lsquo;<tt>Entries.Log</tt>&rsquo;.  If the latter exists, they should read &lsquo;<tt>Entries</tt>&rsquo; and then apply the changes mentioned in &lsquo;<tt>Entries.Log</tt>&rsquo;.  After applying the changes, the recommended practice is to rewrite &lsquo;<tt>Entries</tt>&rsquo; and then delete &lsquo;<tt>Entries.Log</tt>&rsquo;. The format of a line in &lsquo;<tt>Entries.Log</tt>&rsquo; is a single character command followed by a space followed by a line in the format specified for a line in &lsquo;<tt>Entries</tt>&rsquo;.  The single character command is &lsquo;<code>A</code>&rsquo; to indicate that the entry is being added, &lsquo;<code>R</code>&rsquo; to indicate that the entry is being removed, or any other character to indicate that the entire line in &lsquo;<tt>Entries.Log</tt>&rsquo; should be silently ignored (for future expansion).  If the second character of the line in &lsquo;<tt>Entries.Log</tt>&rsquo; is not a space, then it was written by an older version of <small>CVS</small> (not documented here).

: Programs which are writing rather than reading can safely ignore &lsquo;<tt>Entries.Log</tt>&rsquo; if they so choose.

<div id="index-Entries_002eBackup-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fEntries_002eBackup-file"></div>
;&lsquo;<tt>Entries.Backup</tt>&rsquo;
: This is a temporary file.  Recommended usage is to write a new entries file to &lsquo;<tt>Entries.Backup</tt>&rsquo;, and then to rename it (atomically, where possible) to &lsquo;<tt>Entries</tt>&rsquo;.

<div id="index-Entries_002eStatic-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fEntries_002eStatic-file"></div>
;&lsquo;<tt>Entries.Static</tt>&rsquo;
: The only relevant thing about this file is whether it exists or not.  If it exists, then it means that only part of a directory was gotten and <small>CVS</small> will not create additional files in that directory.  To clear it, use the <code>update</code> command with the &lsquo;<code>-d</code>&rsquo; option, which will get the additional files and remove &lsquo;<tt>Entries.Static</tt>&rsquo;.

<div id="index-Tag-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fTag-file"></div>
<div id="index-Sticky-tags_002fdates_002c-per_002ddirectory"></div>
<div id="index-Per_002ddirectory-sticky-tags_002fdates"></div>
;&lsquo;<tt>Tag</tt>&rsquo;
: This file contains per-directory sticky tags or dates. The first character is &lsquo;<code>T</code>&rsquo; for a branch tag, &lsquo;<code>N</code>&rsquo; for a non-branch tag, or &lsquo;<code>D</code>&rsquo; for a date, or another character to mean the file should be silently ignored, for future expansion.  This character is followed by the tag or date.  Note that per-directory sticky tags or dates are used for things like applying to files which are newly added; they might not be the same as the sticky tags or dates on individual files.  For general information on sticky tags and dates, see [[cvs: Sticky tags#Sticky tags|Sticky tags]].

<div id="index-Notify-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fNotify-file"></div>
;&lsquo;<tt>Notify</tt>&rsquo;
: This file stores notifications (for example, for <code>edit</code> or <code>unedit</code>) which have not yet been sent to the server.  Its format is not yet documented here.

<div id="index-Notify_002etmp-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fNotify_002etmp-file"></div>
;&lsquo;<tt>Notify.tmp</tt>&rsquo;
: This file is to &lsquo;<tt>Notify</tt>&rsquo; as &lsquo;<tt>Entries.Backup</tt>&rsquo; is to &lsquo;<tt>Entries</tt>&rsquo;.  That is, to write &lsquo;<tt>Notify</tt>&rsquo;, first write the new contents to &lsquo;<tt>Notify.tmp</tt>&rsquo; and then (atomically where possible), rename it to &lsquo;<tt>Notify</tt>&rsquo;.

<div id="index-Base-directory_002c-in-CVS-directory"></div>
<div id="index-CVS_002fBase-directory"></div>
;&lsquo;<tt>Base</tt>&rsquo;
: If watches are in use, then an <code>edit</code> command stores the original copy of the file in the &lsquo;<tt>Base</tt>&rsquo; directory.  This allows the <code>unedit</code> command to operate even if it is unable to communicate with the server.

<div id="index-Baserev-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fBaserev-file"></div>
;&lsquo;<tt>Baserev</tt>&rsquo;
: The file lists the revision for each of the files in the &lsquo;<tt>Base</tt>&rsquo; directory.  The format is:

<div class="example" style="margin-left: 3.2em">
 B<var>name</var>/<var>rev</var>/<var>expansion</var>
</div>

: where <var>expansion</var> should be ignored, to allow for future expansion.

<div id="index-Baserev_002etmp-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fBaserev_002etmp-file"></div>
;&lsquo;<tt>Baserev.tmp</tt>&rsquo;
: This file is to &lsquo;<tt>Baserev</tt>&rsquo; as &lsquo;<tt>Entries.Backup</tt>&rsquo; is to &lsquo;<tt>Entries</tt>&rsquo;.  That is, to write &lsquo;<tt>Baserev</tt>&rsquo;, first write the new contents to &lsquo;<tt>Baserev.tmp</tt>&rsquo; and then (atomically where possible), rename it to &lsquo;<tt>Baserev</tt>&rsquo;.

<div id="index-Template-file_002c-in-CVS-directory"></div>
<div id="index-CVS_002fTemplate-file"></div>
;&lsquo;<tt>Template</tt>&rsquo;
: This file contains the template specified by the &lsquo;<tt>rcsinfo</tt>&rsquo; file (see [[cvs: Rcsinfo#Rcsinfo|rcsinfo]]).  It is only used by the client; the non-client/server <small>CVS</small> consults &lsquo;<tt>rcsinfo</tt>&rsquo; directly.


----

<div class="header">
<p>
Next: [[cvs: The administrative files#The administrative files|Intro administrative files]], Previous: [[cvs: How data is stored in the repository#How data is stored in the repository|Repository storage]], Up: [[cvs: The Repository#The Repository|Repository]] &nbsp; |[[cvs: Index#SEC_Contents|Contents]]||[[cvs: Index#Index|Index]]|</p>
</div>
This document was generated on <i>a sunny day</i> using [http://www.nongnu.org/texi2html/ <i>texi2html</i>].
