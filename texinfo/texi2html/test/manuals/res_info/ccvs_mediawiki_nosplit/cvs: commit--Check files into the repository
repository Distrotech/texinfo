<div id="commit"></div>
<div class="header">
<p>
Next: [cvs: diff--Show differences between revisions#diff diff], Previous: [cvs: checkout--Check out sources for editing#checkout checkout], Up: [cvs: Guide to CVS commands#CVS-commands CVS commands] &nbsp; |[cvs: Index#SEC_Contents Contents]||[cvs: Index#Index Index]|</p>
</div>
<hr>
<div id="commit_002d_002d_002dCheck-files-into-the-repository"></div>
=== commit&mdash;Check files into the repository ===
<div id="index-commit-_0028subcommand_0029"></div>

<ul>
<li>
Synopsis: commit [-lnRf] [-m &rsquo;log_message&rsquo; |
-F file] [-r revision] [files&hellip;]
</li><li>
Requires: working directory, repository.
</li><li>
Changes: repository.
</li><li>
Synonym: ci
</li></ul>

<p>Use <code>commit</code> when you want to incorporate changes
from your working source files into the source
repository.
</p>
<p>If you don&rsquo;t specify particular files to commit, all of
the files in your working current directory are
examined.  <code>commit</code> is careful to change in the
repository only those files that you have really
changed.  By default (or if you explicitly specify the
&lsquo;<samp>-R</samp>&rsquo; option), files in subdirectories are also
examined and committed if they have changed; you can
use the &lsquo;<samp>-l</samp>&rsquo; option to limit <code>commit</code> to the
current directory only.
</p>
<p><code>commit</code> verifies that the selected files are up
to date with the current revisions in the source
repository; it will notify you, and exit without
committing, if any of the specified files must be made
current first with <code>update</code> (see [cvs: update--Bring work tree in sync with repository#update update]).
<code>commit</code> does not call the <code>update</code> command
for you, but rather leaves that for you to do when the
time is right.
</p>
<p>When all is well, an editor is invoked to allow you to
enter a log message that will be written to one or more
logging programs (see [cvs: The modules file#modules modules], and see [cvs: Loginfo#loginfo loginfo])
and placed in the <small>RCS</small> file inside the
repository.  This log message can be retrieved with the
<code>log</code> command; see [cvs: log--Print out log information for files#log log].  You can specify the
log message on the command line with the &lsquo;<samp>-m
<var>message</var></samp>&rsquo; option, and thus avoid the editor invocation,
or use the &lsquo;<samp>-F <var>file</var></samp>&rsquo; option to specify
that the argument file contains the log message.
</p>
<pre class="menu-preformatted"><nowiki></nowiki>&bull;[cvs: commit options#commit-options  commit options]::<nowiki>              commit options
</nowiki>&bull;[cvs: commit examples#commit-examples  commit examples]::<nowiki>             commit examples
</nowiki></pre>
<hr>
<div class="header">
<p>
Next: [cvs: diff--Show differences between revisions#diff diff], Previous: [cvs: checkout--Check out sources for editing#checkout checkout], Up: [cvs: Guide to CVS commands#CVS-commands CVS commands] &nbsp; |[cvs: Index#SEC_Contents Contents]||[cvs: Index#Index Index]|</p>
</div>
This document was generated on <i>a sunny day</i> using [http://www.nongnu.org/texi2html/ <i>texi2html</i>].
