<div id="Connecting-via-fork"></div>
<div class="header">
<p>
Previous: [[cvs: Direct connection with kerberos#Direct connection with kerberos|Kerberos authenticated]], Up: [[cvs: Remote repositories#Remote repositories|Remote repositories]] &nbsp; |[[cvs: Index#SEC_Contents|Contents]]||[[cvs: Index#Index|Index]]|</p>
</div>

----

<div id="Connecting-with-fork"></div>
==== Connecting with fork ====

<div id="index-fork_002c-access-method"></div>
<div id="index-_003afork_003a_002c-setting-up"></div>
This access method allows you to connect to a
repository on your local disk via the remote protocol.
In other words it does pretty much the same thing as
<code>:local:</code>, but various quirks, bugs and the like are
those of the remote <small>CVS</small> rather than the local
<small>CVS</small>.

For day-to-day operations you might prefer either
<code>:local:</code> or <code>:fork:</code>, depending on your
preferences.  Of course <code>:fork:</code> comes in
particularly handy in testing or
debugging <code>cvs</code> and the remote protocol.
Specifically, we avoid all of the network-related
setup/configuration, timeouts, and authentication
inherent in the other remote access methods but still
create a connection which uses the remote protocol.

To connect using the <code>fork</code> method, use
&lsquo;<code>:fork:</code>&rsquo; and the pathname to your local
repository.  For example:

<div class="example" style="margin-left: 3.2em">
 cvs -d :fork:/usr/local/cvsroot checkout foo
</div>

<div id="index-CVS_005fSERVER_002c-and-_003afork_003a"></div>
As with <code>:ext:</code>, the server is called &lsquo;<code>cvs</code>&rsquo;
by default, or the value of the <code>CVS_SERVER</code>
environment variable.

This document was generated on ''a sunny day'' using [http://www.gnu.org/software/texinfo/ ''texi2html''].
