Index
*****

* Index:
* !, in modules file: C.1.4 Excluding directories.
* #cvs.lock, removing: 10.5 Several developers simultaneously attempting to run CVS.
* #cvs.lock, technical details: 2.2.6 CVS locks in the repository.
* #cvs.rfl, and backups: 2.7 Backing up a repository.
* #cvs.rfl, removing: 10.5 Several developers simultaneously attempting to run CVS.
* #cvs.rfl, technical details: 2.2.6 CVS locks in the repository.
* #cvs.tfl: 2.2.6 CVS locks in the repository.
* #cvs.wfl, removing: 10.5 Several developers simultaneously attempting to run CVS.
* #cvs.wfl, technical details: 2.2.6 CVS locks in the repository.
* &, in modules file: C.1.3 Ampersand modules.
* -a, in modules file: C.1.1 Alias modules.
* -d, in modules file: C.1.5 Module options.
* -e, in modules file: C.1.5 Module options.
* -e, in modules file: C.1.6 How the modules file "program options" programs are run.
* -j (merging branches): 5.6 Merging an entire branch.
* -j (merging branches), and keyword substitution: 5.10 Merging and keywords.
* -k (keyword substitution): 12.4 Substitution modes.
* -kk, to avoid conflicts during a merge: 5.10 Merging and keywords.
* -o, in modules file: C.1.5 Module options.
* -o, in modules file: C.1.6 How the modules file "program options" programs are run.
* -s, in modules file: C.1.5 Module options.
* -t, in modules file: C.1.5 Module options.
* -t, in modules file: C.1.6 How the modules file "program options" programs are run.
* .# files: A.16.2 update output.
* .bashrc, setting CVSROOT in: 2.1 Telling CVS where your repository is.
* .cshrc, setting CVSROOT in: 2.1 Telling CVS where your repository is.
* .cvsrc file: A.3 Default options and the ~/.cvsrc file.
* .profile, setting CVSROOT in: 2.1 Telling CVS where your repository is.
* .tcshrc, setting CVSROOT in: 2.1 Telling CVS where your repository is.
* /usr/local/cvsroot, as example repository: 2. The Repository.
* :ext:, setting up: 2.9.2 Connecting with rsh.
* :ext:, troubleshooting: F.2 Trouble making a connection to a CVS server.
* :fork:, setting up: 2.9.6 Connecting with fork.
* :gserver:, setting up: 2.9.4 Direct connection with GSSAPI.
* :kserver:, setting up: 2.9.5 Direct connection with kerberos.
* :local:, setting up: 2. The Repository.
* :pserver:, setting up: 2.9.3.2 Using the client with password authentication.
* :pserver:, troubleshooting: F.2 Trouble making a connection to a CVS server.
* :server:, setting up: 2.9.2 Connecting with rsh.
* :server:, troubleshooting: F.2 Trouble making a connection to a CVS server.
* <<<<<<<: 10.3 Conflicts example.
* =======: 10.3 Conflicts example.
* >>>>>>>: 10.3 Conflicts example.
* __ files (VMS): A.16.2 update output.
* Abandoning work: 10.6.3 How to edit a file which is being watched.
* Access a branch: 5.3 Accessing branches.
* add (subcommand): 7.1 Adding files to a directory.
* Adding a tag: 4.4 Tags-Symbolic revisions.
* Adding files: 7.1 Adding files to a directory.
* Admin (subcommand): A.6 admin--Administration.
* Administrative files (intro): 2.4 The administrative files.
* Administrative files (reference): C. Reference manual for Administrative files.
* Administrative files, editing them: 2.4.1 Editing administrative files.
* Alias modules: C.1.1 Alias modules.
* ALL in commitinfo: C.3.2 Commitinfo.
* Ampersand modules: C.1.3 Ampersand modules.
* annotate (subcommand): 8.4 Annotate command.
* Atomic transactions, lack of: 10.5 Several developers simultaneously attempting to run CVS.
* Attic: 2.2.4 The attic.
* Authenticated client, using: 2.9.3.2 Using the client with password authentication.
* Authenticating server, setting up: 2.9.3.1 Setting up the server for password authentication.
* Authentication, stream: A.4 Global options.
* Author keyword: 12.1 Keyword List.
* Automatically ignored files: C.5 Ignoring files via cvsignore.
* Avoiding editor invocation: A.5 Common command options.
* Backing up, repository: 2.7 Backing up a repository.
* Base directory, in CVS directory: 2.3 How data is stored in the working directory.
* BASE, as reserved tag name: 4.4 Tags-Symbolic revisions.
* BASE, special tag: A.5 Common command options.
* Baserev file, in CVS directory: 2.3 How data is stored in the working directory.
* Baserev.tmp file, in CVS directory: 2.3 How data is stored in the working directory.
* Bill of materials: 14. How your build system interacts with CVS.
* Binary files: 9. Handling binary files.
* Branch merge example: 5.6 Merging an entire branch.
* Branch number: 4.1 Revision numbers.
* Branch number: 5.4 Branches and revisions.
* Branch tags, deleting: 4.7 Deleting, moving, and renaming tags.
* Branch tags, moving: 4.7 Deleting, moving, and renaming tags.
* Branch, accessing: 5.3 Accessing branches.
* Branch, check out: 5.3 Accessing branches.
* Branch, creating a: 5.2 Creating a branch.
* Branch, identifying: 5.3 Accessing branches.
* Branch, retrieving: 5.3 Accessing branches.
* Branch, vendor-: 13. Tracking third-party sources.
* Branches motivation: 5.1 What branches are good for.
* Branches, copying changes between: 5. Branching and merging.
* Branches, sticky: 5.3 Accessing branches.
* Branching: 5. Branching and merging.
* Bringing a file up to date: 10.2 Bringing a file up to date.
* Bugs in this manual or CVS: H. Dealing with bugs in CVS or this manual.
* Bugs, reporting: H. Dealing with bugs in CVS or this manual.
* Builds: 14. How your build system interacts with CVS.
* Changes, copying between branches: 5. Branching and merging.
* Changing a log message: A.6.1 admin options.
* Check out a branch: 5.3 Accessing branches.
* Checked out copy, keeping: C.3.5.2 Keeping a checked out copy.
* Checking out source: 1.3.1 Getting the source.
* checkout (subcommand): A.7 checkout--Check out sources for editing.
* Checkout program: C.1.5 Module options.
* Checkout, as term for getting ready to edit: 10.6.3 How to edit a file which is being watched.
* Checkout, example: 1.3.1 Getting the source.
* checkoutlist: C.6 The checkoutlist file.
* Choosing, reserved or unreserved checkouts: 10.7 Choosing between reserved or unreserved checkouts.
* Cleaning up: 1.3.3 Cleaning up.
* Client/Server Operation: 2.9 Remote repositories.
* Client/Server Operation, port specification: 2.9 Remote repositories.
* Client/Server Operation, port specification: 2.9.3.1 Setting up the server for password authentication.
* co (subcommand): A.7 checkout--Check out sources for editing.
* Command reference: B. Quick reference to CVS commands.
* Command structure: A.1 Overall structure of CVS commands.
* Comment leader: A.6.1 admin options.
* commit (subcommand): A.8 commit--Check files into the repository.
* `commitinfo': C.3.2 Commitinfo.
* `commitinfo', command environment: C.3.2 Commitinfo.
* `commitinfo', working directory: C.3.2 Commitinfo.
* Commits, precommit verification of: C.3.2 Commitinfo.
* Committing changes to files: 1.3.2 Committing your changes.
* Committing, administrative support files: C.3 The commit support files.
* Committing, when to: 11.1 When to commit?.
* Common options: A.5 Common command options.
* Common syntax of info files: C.3.1 The common syntax.
* Compatibility, between CVS versions: E. Compatibility between CVS Versions.
* Compression: A.4 Global options.
* Compression: B. Quick reference to CVS commands.
* COMSPEC, environment variable: D. All environment variables which affect CVS.
* config, in CVSROOT: C.9 The CVSROOT/config configuration file.
* Configuring keyword expansion: 12.5 Configuring Keyord Expansion.
* Conflict markers: 10.3 Conflicts example.
* Conflict resolution: 10.3 Conflicts example.
* Conflicts (merge example): 10.3 Conflicts example.
* Contributors (CVS program): 1.1 What is CVS?.
* Contributors (manual): G. Credits.
* Copying a repository: 2.8 Moving a repository.
* Copying changes: 5. Branching and merging.
* Correcting a log message: A.6.1 admin options.
* Creating a branch: 5.2 Creating a branch.
* Creating a project: 3. Starting a project with CVS.
* Creating a repository: 2.6 Creating a repository.
* Credits (CVS program): 1.1 What is CVS?.
* Credits (manual): G. Credits.
* CVS 1.6, and watches: 10.6.5 Using watches with old versions of CVS.
* CVS command structure: A.1 Overall structure of CVS commands.
* CVS directory, in repository: 2.2.5 The CVS directory in the repository.
* CVS directory, in working directory: 2.3 How data is stored in the working directory.
* CVS passwd file: 2.9.3.1 Setting up the server for password authentication.
* CVS, history of: 1.1 What is CVS?.
* CVS, introduction to: 1.1 What is CVS?.
* CVS, versions of: E. Compatibility between CVS Versions.
* CVS/Base directory: 2.3 How data is stored in the working directory.
* CVS/Baserev file: 2.3 How data is stored in the working directory.
* CVS/Baserev.tmp file: 2.3 How data is stored in the working directory.
* CVS/Entries file: 2.3 How data is stored in the working directory.
* CVS/Entries.Backup file: 2.3 How data is stored in the working directory.
* CVS/Entries.Log file: 2.3 How data is stored in the working directory.
* CVS/Entries.Static file: 2.3 How data is stored in the working directory.
* CVS/Notify file: 2.3 How data is stored in the working directory.
* CVS/Notify.tmp file: 2.3 How data is stored in the working directory.
* CVS/Repository file: 2.3 How data is stored in the working directory.
* CVS/Root file: 2.1 Telling CVS where your repository is.
* CVS/Tag file: 2.3 How data is stored in the working directory.
* CVS/Template file: 2.3 How data is stored in the working directory.
* cvsadmin: A.6 admin--Administration.
* CVSEDITOR, environment variable: 1.3.2 Committing your changes.
* CVSEDITOR, environment variable: D. All environment variables which affect CVS.
* CVSEDITOR, internal variable: C.8 Expansions in administrative files.
* CVSHeader keyword: 12.1 Keyword List.
* cvsignore (admin file), global: C.5 Ignoring files via cvsignore.
* CVSIGNORE, environment variable: D. All environment variables which affect CVS.
* CVSREAD, environment variable: D. All environment variables which affect CVS.
* CVSREAD, overriding: A.4 Global options.
* CVSREADONLYFS, environment variable: D. All environment variables which affect CVS.
* cvsroot: 2. The Repository.
* CVSROOT (file): C. Reference manual for Administrative files.
* CVSROOT, environment variable: 2.1 Telling CVS where your repository is.
* CVSROOT, internal variable: C.8 Expansions in administrative files.
* CVSROOT, module name: 2.4 The administrative files.
* CVSROOT, multiple repositories: 2.5 Multiple repositories.
* CVSROOT, overriding: A.4 Global options.
* CVSROOT, storage of files: 2.2.7 How files are stored in the CVSROOT directory.
* CVSROOT/config: C.9 The CVSROOT/config configuration file.
* CVSROOT/Emptydir directory: 2.3 How data is stored in the working directory.
* CVSUMASK, environment variable: 2.2.2 File permissions.
* cvswrappers (admin file): C.2 The cvswrappers file.
* CVSWRAPPERS, environment variable: C.2 The cvswrappers file.
* CVSWRAPPERS, environment variable: D. All environment variables which affect CVS.
* CVS_CLIENT_LOG, environment variable: D. All environment variables which affect CVS.
* CVS_CLIENT_PORT: 2.9.5 Direct connection with kerberos.
* CVS_IGNORE_REMOTE_ROOT, environment variable: D. All environment variables which affect CVS.
* CVS_LOCAL_BRANCH_NUM, environment variable: D. All environment variables which affect CVS.
* CVS_PASSFILE, environment variable: 2.9.3.2 Using the client with password authentication.
* CVS_PID, environment variable: D. All environment variables which affect CVS.
* CVS_RCMD_PORT, environment variable: D. All environment variables which affect CVS.
* CVS_RSH, environment variable: D. All environment variables which affect CVS.
* CVS_SERVER, and :fork:: 2.9.6 Connecting with fork.
* CVS_SERVER, environment variable: 2.9.2 Connecting with rsh.
* CVS_SERVER_SLEEP, environment variable: D. All environment variables which affect CVS.
* CVS_USER, environment variable: C.8 Expansions in administrative files.
* Date keyword: 12.1 Keyword List.
* Dates: A.5 Common command options.
* Dead state: 2.2.4 The attic.
* Decimal revision number: 4.1 Revision numbers.
* DEFAULT in commitinfo: C.3.2 Commitinfo.
* DEFAULT in editinfo: C.3.4 Editinfo.
* DEFAULT in `verifymsg': C.3.3 Verifying log messages.
* Defining a module: 3.2 Defining the module.
* Defining modules (intro): 2.4 The administrative files.
* Defining modules (reference manual): C.1 The modules file.
* Deleting branch tags: 4.7 Deleting, moving, and renaming tags.
* Deleting files: 7.2 Removing files.
* Deleting revisions: A.6.1 admin options.
* Deleting sticky tags: 4.9 Sticky tags.
* Deleting tags: 4.7 Deleting, moving, and renaming tags.
* Descending directories: 6. Recursive behavior.
* Device nodes: 15. Special Files.
* Diff: 1.3.4 Viewing differences.
* diff (subcommand): A.9 diff--Show differences between revisions.
* Differences, merging: 5.8 Merging differences between any two revisions.
* Directories, moving: 7.5 Moving and renaming directories.
* Directories, removing: 7.3 Removing directories.
* Directory, descending: 6. Recursive behavior.
* Disjoint repositories: 2.5 Multiple repositories.
* Distributing log messages: C.3.5 Loginfo.
* driver.c (merge example): 10.3 Conflicts example.
* edit (subcommand): 10.6.3 How to edit a file which is being watched.
* editinfo (admin file): C.3.4 Editinfo.
* Editing administrative files: 2.4.1 Editing administrative files.
* Editing the modules file: 3.2 Defining the module.
* Editor, avoiding invocation of: A.5 Common command options.
* EDITOR, environment variable: 1.3.2 Committing your changes.
* EDITOR, environment variable: D. All environment variables which affect CVS.
* EDITOR, internal variable: C.8 Expansions in administrative files.
* EDITOR, overriding: A.4 Global options.
* Editor, specifying per module: C.3.4 Editinfo.
* editors (subcommand): 10.6.4 Information about who is watching and editing.
* emerge: 10.3 Conflicts example.
* Emptydir, in CVSROOT directory: 2.3 How data is stored in the working directory.
* Encryption: A.4 Global options.
* Entries file, in CVS directory: 2.3 How data is stored in the working directory.
* Entries.Backup file, in CVS directory: 2.3 How data is stored in the working directory.
* Entries.Log file, in CVS directory: 2.3 How data is stored in the working directory.
* Entries.Static file, in CVS directory: 2.3 How data is stored in the working directory.
* Environment variables: D. All environment variables which affect CVS.
* environment variables, passed to administrative files: C.8 Expansions in administrative files.
* Errors, reporting: H. Dealing with bugs in CVS or this manual.
* Example of a work-session: 1.3 A sample session.
* Example of merge: 10.3 Conflicts example.
* Example, branch merge: 5.6 Merging an entire branch.
* Excluding directories, in modules file: C.1.4 Excluding directories.
* Exit status, of commitinfo: C.3.2 Commitinfo.
* Exit status, of CVS: A.2 CVS's exit status.
* Exit status, of editor: F.1 Partial list of error messages.
* Exit status, of taginfo: 8.3 User-defined logging.
* Exit status, of `verifymsg': C.3.3 Verifying log messages.
* export (subcommand): A.10 export--Export sources from CVS, similar to checkout.
* Export program: C.1.5 Module options.
* Fetching source: 1.3.1 Getting the source.
* File had conflicts on merge: 10.1 File status.
* File locking: 10. Multiple developers.
* File permissions, general: 2.2.2 File permissions.
* File permissions, Windows-specific: 2.2.3 File Permission issues specific to Windows.
* File status: 10.1 File status.
* Files, moving: 7.4 Moving and renaming files.
* Files, reference manual: C. Reference manual for Administrative files.
* Fixing a log message: A.6.1 admin options.
* Forcing a tag match: A.5 Common command options.
* fork, access method: 2.9.6 Connecting with fork.
* Form for log message: C.4 Rcsinfo.
* Format of CVS commands: A.1 Overall structure of CVS commands.
* Getting started: 1.3 A sample session.
* Getting the source: 1.3.1 Getting the source.
* Global cvsignore: C.5 Ignoring files via cvsignore.
* Global options: A.4 Global options.
* Group: 2.2.2 File permissions.
* gserver (client/server connection method), port specification: 2.9 Remote repositories.
* gserver (client/server connection method), port specification: 2.9.3.1 Setting up the server for password authentication.
* GSSAPI: 2.9.4 Direct connection with GSSAPI.
* Gzip: A.4 Global options.
* Gzip: B. Quick reference to CVS commands.
* Hard links: 15. Special Files.
* HEAD, as reserved tag name: 4.4 Tags-Symbolic revisions.
* HEAD, special tag: A.5 Common command options.
* Header keyword: 12.1 Keyword List.
* history (subcommand): A.11 history--Show status of files and users.
* History browsing: 8. History browsing.
* History file: C.7 The history file.
* History files: 2.2.1 Where files are stored within the repository.
* History of CVS: 1.1 What is CVS?.
* HOME, environment variable: D. All environment variables which affect CVS.
* HOMEDRIVE, environment variable: D. All environment variables which affect CVS.
* HOMEPATH, environment variable: D. All environment variables which affect CVS.
* Id keyword: 12.1 Keyword List.
* Ident (shell command): 12.2 Using keywords.
* Identifying a branch: 5.3 Accessing branches.
* Identifying files: 12. Keyword substitution.
* Ignored files: C.5 Ignoring files via cvsignore.
* Ignoring files: C.5 Ignoring files via cvsignore.
* import (subcommand): A.12 import--Import sources into CVS, using vendor branches.
* Importing files: 3.1.1 Creating a directory tree from a number of files.
* Importing files, from other version control systems: 3.1.2 Creating Files From Other Version Control Systems.
* Importing modules: 13.1 Importing for the first time.
* Index: Index.
* inetd, configuring for pserver: 2.9.3.1 Setting up the server for password authentication.
* Info files (syntax): C.3.1 The common syntax.
* Informing others: 10.4 Informing others about commits.
* init (subcommand): 2.6 Creating a repository.
* Installed images (VMS): 2.2.2 File permissions.
* Internal variables: C.8 Expansions in administrative files.
* Introduction to CVS: 1.1 What is CVS?.
* Invoking CVS: B. Quick reference to CVS commands.
* Isolation: 8. History browsing.
* Join: 5.6 Merging an entire branch.
* Keeping a checked out copy: C.3.5.2 Keeping a checked out copy.
* Kerberos, using :gserver:: 2.9.4 Direct connection with GSSAPI.
* Kerberos, using :kserver:: 2.9.5 Direct connection with kerberos.
* Kerberos, using kerberized rsh: 2.9.2 Connecting with rsh.
* Keyword expansion: 12. Keyword substitution.
* Keyword List: 12.1 Keyword List.
* Keyword substitution: 12. Keyword substitution.
* Keyword substitution, and merging: 5.10 Merging and keywords.
* Keyword substitution, changing modes: 12.4 Substitution modes.
* Kflag: 12.4 Substitution modes.
* kinit: 2.9.5 Direct connection with kerberos.
* Known bugs in this manual or CVS: H. Dealing with bugs in CVS or this manual.
* kserver (client/server connection method), port specification: 2.9 Remote repositories.
* kserver (client/server connection method), port specification: 2.9.3.1 Setting up the server for password authentication.
* Layout of repository: 2. The Repository.
* Left-hand options: A.4 Global options.
* Linear development: 4.1 Revision numbers.
* Link, symbolic, importing: A.12.2 import output.
* List, mailing list: 1.1 What is CVS?.
* Local keyword: 12.1 Keyword List.
* Locally Added: 10.1 File status.
* Locally Modified: 10.1 File status.
* Locally Removed: 10.1 File status.
* LockDir, in CVSROOT/config: C.9 The CVSROOT/config configuration file.
* Locker keyword: 12.1 Keyword List.
* Locking files: 10. Multiple developers.
* Locks, cvs, and backups: 2.7 Backing up a repository.
* Locks, cvs, introduction: 10.5 Several developers simultaneously attempting to run CVS.
* Locks, cvs, technical details: 2.2.6 CVS locks in the repository.
* log (subcommand): A.13 log--Print out log information for files.
* Log information, saving: C.7 The history file.
* Log keyword: 12.1 Keyword List.
* Log message entry: 1.3.2 Committing your changes.
* Log message template: C.4 Rcsinfo.
* Log message, correcting: A.6.1 admin options.
* Log message, verifying: C.3.3 Verifying log messages.
* Log messages: C.3.5 Loginfo.
* Log messages, editing: C.3.4 Editinfo.
* LogHistory, in CVSROOT/config: C.9 The CVSROOT/config configuration file.
* Login (subcommand): 2.9.3.2 Using the client with password authentication.
* loginfo (admin file): C.3.5 Loginfo.
* LOGNAME, environment variable: C.8 Expansions in administrative files.
* Logout (subcommand): 2.9.3.2 Using the client with password authentication.
* Mail, automatic mail on commit: 10.4 Informing others about commits.
* Mailing list: 1.1 What is CVS?.
* Mailing log messages: C.3.5 Loginfo.
* Main trunk and branches: 5. Branching and merging.
* make: 14. How your build system interacts with CVS.
* Many repositories: 2.5 Multiple repositories.
* Markers, conflict: 10.3 Conflicts example.
* Merge, an example: 10.3 Conflicts example.
* Merge, branch example: 5.6 Merging an entire branch.
* Merging: 5. Branching and merging.
* Merging a branch: 5.6 Merging an entire branch.
* Merging a file: 10.2 Bringing a file up to date.
* Merging two revisions: 5.8 Merging differences between any two revisions.
* Merging, and keyword substitution: 5.10 Merging and keywords.
* mkmodules: F.1 Partial list of error messages.
* Modifications, copying between branches: 5. Branching and merging.
* Module status: C.1.5 Module options.
* Module, defining: 3.2 Defining the module.
* Modules (admin file): C.1 The modules file.
* Modules file: 2.4 The administrative files.
* Modules file program options: C.1.6 How the modules file "program options" programs are run.
* Modules file, changing: 3.2 Defining the module.
* modules.db: 2.2.7 How files are stored in the CVSROOT directory.
* modules.dir: 2.2.7 How files are stored in the CVSROOT directory.
* modules.pag: 2.2.7 How files are stored in the CVSROOT directory.
* Motivation for branches: 5.1 What branches are good for.
* Moving a repository: 2.8 Moving a repository.
* Moving branch tags: 4.7 Deleting, moving, and renaming tags.
* Moving directories: 7.5 Moving and renaming directories.
* Moving files: 7.4 Moving and renaming files.
* Moving tags: 4.7 Deleting, moving, and renaming tags.
* Multiple developers: 10. Multiple developers.
* Multiple repositories: 2.5 Multiple repositories.
* Name keyword: 12.1 Keyword List.
* Name, symbolic (tag): 4.4 Tags-Symbolic revisions.
* Needs Checkout: 10.1 File status.
* Needs Merge: 10.1 File status.
* Needs Patch: 10.1 File status.
* Newsgroups: 1.1 What is CVS?.
* notify (admin file): 10.6.2 Telling CVS to notify you.
* Notify file, in CVS directory: 2.3 How data is stored in the working directory.
* Notify.tmp file, in CVS directory: 2.3 How data is stored in the working directory.
* Number, branch: 4.1 Revision numbers.
* Number, branch: 5.4 Branches and revisions.
* Number, revision-: 4.1 Revision numbers.
* Option defaults: A.3 Default options and the ~/.cvsrc file.
* Options, global: A.4 Global options.
* Options, in modules file: C.1.5 Module options.
* Outdating revisions: A.6.1 admin options.
* Overlap: 10.2 Bringing a file up to date.
* Overriding CVSREAD: A.4 Global options.
* Overriding CVSROOT: A.4 Global options.
* Overriding EDITOR: A.4 Global options.
* Overriding RCSBIN: A.4 Global options.
* Overriding TMPDIR: A.4 Global options.
* Overview: 1. Overview.
* Ownership, saving in CVS: 15. Special Files.
* Parallel repositories: 2.5 Multiple repositories.
* passwd (admin file): 2.9.3.1 Setting up the server for password authentication.
* Password client, using: 2.9.3.2 Using the client with password authentication.
* Password server, setting up: 2.9.3.1 Setting up the server for password authentication.
* PATH, environment variable: D. All environment variables which affect CVS.
* Per-directory sticky tags/dates: 2.3 How data is stored in the working directory.
* Per-module editor: C.3.4 Editinfo.
* Permissions, general: 2.2.2 File permissions.
* Permissions, saving in CVS: 15. Special Files.
* Permissions, Windows-specific: 2.2.3 File Permission issues specific to Windows.
* Policy: 11.1 When to commit?.
* port, specifying for remote repositories: 2.9 Remote repositories.
* port, specifying for remote repositories: 2.9.3.1 Setting up the server for password authentication.
* Precommit checking: C.3.2 Commitinfo.
* pserver (client/server connection method), port specification: 2.9 Remote repositories.
* pserver (client/server connection method), port specification: 2.9.3.1 Setting up the server for password authentication.
* pserver (subcommand): 2.9.3.1 Setting up the server for password authentication.
* PVCS, importing files from: 3.1.2 Creating Files From Other Version Control Systems.
* RCS history files: 2.2.1 Where files are stored within the repository.
* RCS revision numbers: 4.4 Tags-Symbolic revisions.
* RCS, importing files from: 3.1.2 Creating Files From Other Version Control Systems.
* RCS-style locking: 10. Multiple developers.
* RCSBIN, in CVSROOT/config: C.9 The CVSROOT/config configuration file.
* RCSBIN, internal variable: C.8 Expansions in administrative files.
* RCSBIN, overriding: A.4 Global options.
* RCSfile keyword: 12.1 Keyword List.
* rcsinfo (admin file): C.4 Rcsinfo.
* rdiff (subcommand): A.14 rdiff--'patch' format diffs between releases.
* Read-only files, and -r: A.4 Global options.
* Read-only files, and CVSREAD: D. All environment variables which affect CVS.
* Read-only files, and watches: 10.6.1 Telling CVS to watch certain files.
* Read-only files, in repository: 2.2.2 File permissions.
* Read-only mode: A.4 Global options.
* Read-only repository access: 2.10 Read-only repository access.
* Read-only repository mode: A.4 Global options.
* readers (admin file): 2.10 Read-only repository access.
* Recursive (directory descending): 6. Recursive behavior.
* Reference manual (files): C. Reference manual for Administrative files.
* Reference manual for variables: D. All environment variables which affect CVS.
* Reference, commands: B. Quick reference to CVS commands.
* Regular expression syntax: C.3.1 The common syntax.
* Regular modules: C.1.2 Regular modules.
* release (subcommand): A.15 release--Indicate that a Module is no longer in use.
* Releases, revisions and versions: 4.2 Versions, revisions and releases.
* Releasing your working copy: 1.3.3 Cleaning up.
* Remote repositories: 2.9 Remote repositories.
* Remote repositories, port specification: 2.9 Remote repositories.
* Remote repositories, port specification: 2.9.3.1 Setting up the server for password authentication.
* Remove (subcommand): 7.2 Removing files.
* Removing a change: 5.8 Merging differences between any two revisions.
* Removing branch tags: 4.7 Deleting, moving, and renaming tags.
* Removing directories: 7.3 Removing directories.
* Removing files: 7.2 Removing files.
* Removing tags: 4.7 Deleting, moving, and renaming tags.
* Removing your working copy: 1.3.3 Cleaning up.
* Renaming directories: 7.5 Moving and renaming directories.
* Renaming files: 7.4 Moving and renaming files.
* Renaming tags: 4.7 Deleting, moving, and renaming tags.
* Replacing a log message: A.6.1 admin options.
* Reporting bugs: H. Dealing with bugs in CVS or this manual.
* Repositories, multiple: 2.5 Multiple repositories.
* Repositories, remote: 2.9 Remote repositories.
* Repositories, remote, port specification: 2.9 Remote repositories.
* Repositories, remote, port specification: 2.9.3.1 Setting up the server for password authentication.
* Repository (intro): 2. The Repository.
* Repository file, in CVS directory: 2.3 How data is stored in the working directory.
* Repository, backing up: 2.7 Backing up a repository.
* Repository, example: 2. The Repository.
* Repository, how data is stored: 2.2 How data is stored in the repository.
* Repository, moving: 2.8 Moving a repository.
* Repository, setting up: 2.6 Creating a repository.
* RereadLogAfterVerify, in CVSROOT/config: C.9 The CVSROOT/config configuration file.
* Reserved checkouts: 10. Multiple developers.
* Resetting sticky tags: 4.9 Sticky tags.
* Resolving a conflict: 10.3 Conflicts example.
* Restoring old version of removed file: 5.8 Merging differences between any two revisions.
* Resurrecting old version of dead file: 5.8 Merging differences between any two revisions.
* Retrieve a branch: 5.3 Accessing branches.
* Retrieving an old revision using tags: 4.4 Tags-Symbolic revisions.
* Reverting to repository version: 10.6.3 How to edit a file which is being watched.
* Revision keyword: 12.1 Keyword List.
* Revision management: 11. Revision management.
* Revision numbers: 4.1 Revision numbers.
* Revision numbers (branches): 5.4 Branches and revisions.
* Revision tree: 4.1 Revision numbers.
* Revision tree, making branches: 5. Branching and merging.
* Revisions, merging differences between: 5.8 Merging differences between any two revisions.
* Revisions, versions and releases: 4.2 Versions, revisions and releases.
* Right-hand options: A.5 Common command options.
* Root file, in CVS directory: 2.1 Telling CVS where your repository is.
* rsh: 2.9.2 Connecting with rsh.
* rsh replacements (Kerberized, SSH, &c): 2.9.2 Connecting with rsh.
* rtag (subcommand): 4.6 Specifying what to tag by date or revision.
* rtag (subcommand), creating a branch using: 5.2 Creating a branch.
* Saving space: A.6.1 admin options.
* SCCS, importing files from: 3.1.2 Creating Files From Other Version Control Systems.
* Security, file permissions in repository: 2.2.2 File permissions.
* Security, GSSAPI: 2.9.4 Direct connection with GSSAPI.
* Security, kerberos: 2.9.5 Direct connection with kerberos.
* Security, of pserver: 2.9.3.3 Security considerations with password authentication.
* Security, setuid: 2.2.2 File permissions.
* Server, CVS: 2.9 Remote repositories.
* Server, temporary directories: 2.11 Temporary directories for the server.
* Setgid: 2.2.2 File permissions.
* Setting up a repository: 2.6 Creating a repository.
* Setuid: 2.2.2 File permissions.
* Source keyword: 12.1 Keyword List.
* Source, getting CVS source: 1.1 What is CVS?.
* Source, getting from CVS: 1.3.1 Getting the source.
* Special files: 15. Special Files.
* Specifying dates: A.5 Common command options.
* Spreading information: 10.4 Informing others about commits.
* SSH (rsh replacement): 2.9.2 Connecting with rsh.
* Starting a project with CVS: 3. Starting a project with CVS.
* State keyword: 12.1 Keyword List.
* Status of a file: 10.1 File status.
* Status of a module: C.1.5 Module options.
* Sticky date: 4.9 Sticky tags.
* Sticky tags: 4.9 Sticky tags.
* Sticky tags, resetting: 4.9 Sticky tags.
* Sticky tags/dates, per-directory: 2.3 How data is stored in the working directory.
* Storing log messages: C.3.5 Loginfo.
* Stream authentication: A.4 Global options.
* Structure: A.1 Overall structure of CVS commands.
* Subdirectories: 6. Recursive behavior.
* Support, getting CVS support: H. Dealing with bugs in CVS or this manual.
* Symbolic link, importing: A.12.2 import output.
* Symbolic links: 15. Special Files.
* Symbolic name (tag): 4.4 Tags-Symbolic revisions.
* Syntax of info files: C.3.1 The common syntax.
* SystemAuth, in CVSROOT/config: C.9 The CVSROOT/config configuration file.
* tag (subcommand): 4.5 Specifying what to tag from the working directory.
* tag (subcommand), creating a branch using: 5.2 Creating a branch.
* tag (subcommand), introduction: 4.4 Tags-Symbolic revisions.
* Tag file, in CVS directory: 2.3 How data is stored in the working directory.
* Tag program: C.1.5 Module options.
* taginfo: 8.3 User-defined logging.
* Tags: 4.4 Tags-Symbolic revisions.
* Tags, deleting: 4.7 Deleting, moving, and renaming tags.
* Tags, example: 4.4 Tags-Symbolic revisions.
* Tags, moving: 4.7 Deleting, moving, and renaming tags.
* Tags, renaming: 4.7 Deleting, moving, and renaming tags.
* Tags, retrieving old revisions: 4.4 Tags-Symbolic revisions.
* Tags, sticky: 4.9 Sticky tags.
* Tags, symbolic name: 4.4 Tags-Symbolic revisions.
* tc, Trivial Compiler (example): 1.3 A sample session.
* Team of developers: 10. Multiple developers.
* TEMP, environment variable: D. All environment variables which affect CVS.
* Template file, in CVS directory: 2.3 How data is stored in the working directory.
* Template for log message: C.4 Rcsinfo.
* Temporary directories, and server: 2.11 Temporary directories for the server.
* Temporary files, location of: D. All environment variables which affect CVS.
* Third-party sources: 13. Tracking third-party sources.
* Time: A.5 Common command options.
* Timezone, in input: A.5 Common command options.
* Timezone, in output: A.13 log--Print out log information for files.
* TMP, environment variable: D. All environment variables which affect CVS.
* TMPDIR, environment variable: D. All environment variables which affect CVS.
* TMPDIR, overriding: A.4 Global options.
* TopLevelAdmin, in CVSROOT/config: C.9 The CVSROOT/config configuration file.
* Trace: A.4 Global options.
* Traceability: 8. History browsing.
* Tracking sources: 13. Tracking third-party sources.
* Transactions, atomic, lack of: 10.5 Several developers simultaneously attempting to run CVS.
* Trivial Compiler (example): 1.3 A sample session.
* Typical repository: 2. The Repository.
* Umask, for repository files: 2.2.2 File permissions.
* Undoing a change: 5.8 Merging differences between any two revisions.
* unedit (subcommand): 10.6.3 How to edit a file which is being watched.
* Unknown: 10.1 File status.
* Unreserved checkouts: 10. Multiple developers.
* Unresolved Conflict: 10.1 File status.
* Up-to-date: 10.1 File status.
* update (subcommand): A.16 update--Bring work tree in sync with repository.
* Update, introduction: 10.2 Bringing a file up to date.
* update, to display file status: 10.1 File status.
* Updating a file: 10.2 Bringing a file up to date.
* User aliases: 2.9.3.1 Setting up the server for password authentication.
* User variables: C.8 Expansions in administrative files.
* USER, environment variable: C.8 Expansions in administrative files.
* USER, internal variable: C.8 Expansions in administrative files.
* UserAdminOptions, in CVSROOT/config: A.6 admin--Administration.
* UserAdminOptions, in CVSROOT/config: C.9 The CVSROOT/config configuration file.
* users (admin file): 10.6.2 Telling CVS to notify you.
* Variables: C.8 Expansions in administrative files.
* Vendor: 13. Tracking third-party sources.
* Vendor branch: 13. Tracking third-party sources.
* `verifymsg' (admin file): C.3.3 Verifying log messages.
* `verifymsg', changing the log message: C.3.3 Verifying log messages.
* `verifymsg', changing the log message: C.9 The CVSROOT/config configuration file.
* version (subcommand): B. Quick reference to CVS commands.
* Versions, of CVS: E. Compatibility between CVS Versions.
* Versions, revisions and releases: 4.2 Versions, revisions and releases.
* Viewing differences: 1.3.4 Viewing differences.
* VISUAL, environment variable: 1.3.2 Committing your changes.
* VISUAL, environment variable: D. All environment variables which affect CVS.
* VISUAL, internal variable: C.8 Expansions in administrative files.
* watch add (subcommand): 10.6.2 Telling CVS to notify you.
* watch off (subcommand): 10.6.1 Telling CVS to watch certain files.
* watch on (subcommand): 10.6.1 Telling CVS to watch certain files.
* watch remove (subcommand): 10.6.2 Telling CVS to notify you.
* watchers (subcommand): 10.6.4 Information about who is watching and editing.
* Watches: 10.6 Mechanisms to track who is editing files.
* wdiff (import example): 13.1 Importing for the first time.
* Web pages, maintaining with CVS: C.3.5.2 Keeping a checked out copy.
* What (shell command): 12.2 Using keywords.
* What branches are good for: 5.1 What branches are good for.
* What is CVS not?: 1.2 What is CVS not?.
* What is CVS?: 1.1 What is CVS?.
* When to commit: 11.1 When to commit?.
* Windows, and permissions: 2.2.3 File Permission issues specific to Windows.
* Work-session, example of: 1.3 A sample session.
* Working copy: 10. Multiple developers.
* Working copy, removing: 1.3.3 Cleaning up.
* Wrappers: C.2 The cvswrappers file.
* writers (admin file): 2.10 Read-only repository access.
* Ximbiot: H. Dealing with bugs in CVS or this manual.
* xinetd, configuring for pserver: 2.9.3.1 Setting up the server for password authentication.
* Zone, time, in input: A.5 Common command options.
* Zone, time, in output: A.13 log--Print out log information for files.

Short Table of Contents
***********************


1. Overview
2. The Repository
3. Starting a project with CVS
4. Revisions
5. Branching and merging
6. Recursive behavior
7. Adding, removing, and renaming files and directories
8. History browsing
9. Handling binary files
10. Multiple developers
11. Revision management
12. Keyword substitution
13. Tracking third-party sources
14. How your build system interacts with CVS
15. Special Files
A. Guide to CVS commands
B. Quick reference to CVS commands
C. Reference manual for Administrative files
D. All environment variables which affect CVS
E. Compatibility between CVS Versions
F. Troubleshooting
G. Credits
H. Dealing with bugs in CVS or this manual
Index


Table of Contents
*****************


1. Overview
 1.1 What is CVS?
 1.2 What is CVS not?
 1.3 A sample session
  1.3.1 Getting the source
  1.3.2 Committing your changes
  1.3.3 Cleaning up
  1.3.4 Viewing differences
2. The Repository
 2.1 Telling CVS where your repository is
 2.2 How data is stored in the repository
  2.2.1 Where files are stored within the repository
  2.2.2 File permissions
  2.2.3 File Permission issues specific to Windows
  2.2.4 The attic
  2.2.5 The CVS directory in the repository
  2.2.6 CVS locks in the repository
  2.2.7 How files are stored in the CVSROOT directory
 2.3 How data is stored in the working directory
 2.4 The administrative files
  2.4.1 Editing administrative files
 2.5 Multiple repositories
 2.6 Creating a repository
 2.7 Backing up a repository
 2.8 Moving a repository
 2.9 Remote repositories
  2.9.1 Server requirements
  2.9.2 Connecting with rsh
  2.9.3 Direct connection with password authentication
   2.9.3.1 Setting up the server for password authentication
   2.9.3.2 Using the client with password authentication
   2.9.3.3 Security considerations with password authentication
  2.9.4 Direct connection with GSSAPI
  2.9.5 Direct connection with kerberos
  2.9.6 Connecting with fork
 2.10 Read-only repository access
 2.11 Temporary directories for the server
3. Starting a project with CVS
 3.1 Setting up the files
  3.1.1 Creating a directory tree from a number of files
  3.1.2 Creating Files From Other Version Control Systems
  3.1.3 Creating a directory tree from scratch
 3.2 Defining the module
4. Revisions
 4.1 Revision numbers
 4.2 Versions, revisions and releases
 4.3 Assigning revisions
 4.4 Tags-Symbolic revisions
 4.5 Specifying what to tag from the working directory
 4.6 Specifying what to tag by date or revision
 4.7 Deleting, moving, and renaming tags
 4.8 Tagging and adding and removing files
 4.9 Sticky tags
5. Branching and merging
 5.1 What branches are good for
 5.2 Creating a branch
 5.3 Accessing branches
 5.4 Branches and revisions
 5.5 Magic branch numbers
 5.6 Merging an entire branch
 5.7 Merging from a branch several times
 5.8 Merging differences between any two revisions
 5.9 Merging can add or remove files
 5.10 Merging and keywords
6. Recursive behavior
7. Adding, removing, and renaming files and directories
 7.1 Adding files to a directory
 7.2 Removing files
 7.3 Removing directories
 7.4 Moving and renaming files
  7.4.1 The Normal way to Rename
  7.4.2 Moving the history file
  7.4.3 Copying the history file
 7.5 Moving and renaming directories
8. History browsing
 8.1 Log messages
 8.2 The history database
 8.3 User-defined logging
 8.4 Annotate command
9. Handling binary files
 9.1 The issues with binary files
 9.2 How to store binary files
10. Multiple developers
 10.1 File status
 10.2 Bringing a file up to date
 10.3 Conflicts example
 10.4 Informing others about commits
 10.5 Several developers simultaneously attempting to run CVS
 10.6 Mechanisms to track who is editing files
  10.6.1 Telling CVS to watch certain files
  10.6.2 Telling CVS to notify you
  10.6.3 How to edit a file which is being watched
  10.6.4 Information about who is watching and editing
  10.6.5 Using watches with old versions of CVS
 10.7 Choosing between reserved or unreserved checkouts
11. Revision management
 11.1 When to commit?
12. Keyword substitution
 12.1 Keyword List
 12.2 Using keywords
 12.3 Avoiding substitution
 12.4 Substitution modes
 12.5 Configuring Keyord Expansion
 12.6 Problems with the $ Log$ keyword.
13. Tracking third-party sources
 13.1 Importing for the first time
 13.2 Updating with the import command
 13.3 Reverting to the latest vendor release
 13.4 How to handle binary files with cvs import
 13.5 How to handle keyword substitution with cvs import
 13.6 Multiple vendor branches
14. How your build system interacts with CVS
15. Special Files
A. Guide to CVS commands
 A.1 Overall structure of CVS commands
 A.2 CVS's exit status
 A.3 Default options and the ~/.cvsrc file
 A.4 Global options
 A.5 Common command options
 A.6 admin--Administration
  A.6.1 admin options
 A.7 checkout--Check out sources for editing
  A.7.1 checkout options
  A.7.2 checkout examples
 A.8 commit--Check files into the repository
  A.8.1 commit options
  A.8.2 commit examples
   A.8.2.1 Committing to a branch
   A.8.2.2 Creating the branch after editing
 A.9 diff--Show differences between revisions
  A.9.1 diff options
   A.9.1.1 Line group formats
   A.9.1.2 Line formats
  A.9.2 diff examples
 A.10 export--Export sources from CVS, similar to checkout
  A.10.1 export options
 A.11 history--Show status of files and users
  A.11.1 history options
 A.12 import--Import sources into CVS, using vendor branches
  A.12.1 import options
  A.12.2 import output
  A.12.3 import examples
 A.13 log--Print out log information for files
  A.13.1 log options
  A.13.2 log examples
 A.14 rdiff--'patch' format diffs between releases
  A.14.1 rdiff options
  A.14.2 rdiff examples
 A.15 release--Indicate that a Module is no longer in use
  A.15.1 release options
  A.15.2 release output
  A.15.3 release examples
 A.16 update--Bring work tree in sync with repository
  A.16.1 update options
  A.16.2 update output
B. Quick reference to CVS commands
C. Reference manual for Administrative files
 C.1 The modules file
  C.1.1 Alias modules
  C.1.2 Regular modules
  C.1.3 Ampersand modules
  C.1.4 Excluding directories
  C.1.5 Module options
  C.1.6 How the modules file "program options" programs are run
 C.2 The cvswrappers file
 C.3 The commit support files
  C.3.1 The common syntax
  C.3.2 Commitinfo
  C.3.3 Verifying log messages
  C.3.4 Editinfo
   C.3.4.1 Editinfo example
  C.3.5 Loginfo
   C.3.5.1 Loginfo example
   C.3.5.2 Keeping a checked out copy
 C.4 Rcsinfo
 C.5 Ignoring files via cvsignore
 C.6 The checkoutlist file
 C.7 The history file
 C.8 Expansions in administrative files
 C.9 The CVSROOT/config configuration file
D. All environment variables which affect CVS
E. Compatibility between CVS Versions
F. Troubleshooting
 F.1 Partial list of error messages
 F.2 Trouble making a connection to a CVS server
 F.3 Other common problems
G. Credits
H. Dealing with bugs in CVS or this manual
Index


