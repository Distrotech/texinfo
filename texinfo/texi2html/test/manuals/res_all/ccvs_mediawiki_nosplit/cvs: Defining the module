<div id="Defining-the-module"></div>
<div class="header">
<p>
Previous: [[cvs: Setting up the files#Setting up the files|Setting up the files]], Up: [[cvs: Starting a project with CVS#Starting a project with CVS|Starting a new project]] &nbsp; |[[cvs: Index#SEC_Contents|Contents]]||[[cvs: Index#Index|Index]]|</p>
</div>

----

<div id="Defining-the-module-1"></div>
=== Defining the module ===
<div id="index-Defining-a-module"></div>
<div id="index-Editing-the-modules-file"></div>
<div id="index-Module_002c-defining"></div>
<div id="index-Modules-file_002c-changing"></div>

The next step is to define the module in the
&lsquo;<tt>modules</tt>&rsquo; file.  This is not strictly necessary,
but modules can be convenient in grouping together
related files and directories.

In simple cases these steps are sufficient to define a module.


# Get a working copy of the modules file.

<div class="example" style="margin-left: 3.2em">
 $ cvs checkout CVSROOT/modules
 $ cd CVSROOT
</div>


# Edit the file and insert a line that defines the module.  See [[cvs: The administrative files#The administrative files|Intro administrative files]], for an introduction.  See [[cvs: The modules file#The modules file|modules]], for a full description of the modules file.  You can use the following line to define the module &lsquo;<code>tc</code>&rsquo;:

<div class="example" style="margin-left: 3.2em">
 tc   yoyodyne/tc
</div>


# Commit your changes to the modules file.

<div class="example" style="margin-left: 3.2em">
 $ cvs commit -m &quot;Added the tc module.&quot; modules
</div>


# Release the modules module.

<div class="example" style="margin-left: 3.2em">
 $ cd ..
 $ cvs release -d CVSROOT
</div>

This document was generated on ''a sunny day'' using [http://www.gnu.org/software/texinfo/ ''texi2html''].
