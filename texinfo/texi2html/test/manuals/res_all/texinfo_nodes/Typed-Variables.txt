15.4.4 Variables in Typed Languages
-----------------------------------

Variables in typed languages are handled in a manner similar to
functions in typed languages.  See Typed Functions.  The general
definition command @deftypevr corresponds to
@deftypefn and the specialized definition command
@deftypevar corresponds to @deftypefun.

@deftypevr category data-type name
The @deftypevr command is the general definition command for
something like a variable in a typed language--an entity that records
a value.  You must choose a term to describe the category of the
entity being defined; for example, "Variable" could be used if the
entity is a variable.

The @deftypevr command is written at the beginning of a line
and is followed on the same line by the category of the entity
being described, the data type, and the name of this particular
entity.

For example:

@deftypevr {Global Flag} int enable
...
@end deftypevr

produces the following in Info:

-- Global Flag: int enable
...

The template is:

@deftypevr category data-type name
body-of-description
@end deftypevr

@deftypevr creates an entry in the index of variables for
name.

@deftypevar data-type name
The @deftypevar command is the specialized definition command
for variables in typed languages.  @deftypevar is equivalent
to `@deftypevr Variable ...'.

For example:

@deftypevar int fubar
...
@end deftypevar

produces the following in Info:

-- Variable: int fubar
...

The template is:

@deftypevar data-type name
body-of-description
@end deftypevar

@deftypevar creates an entry in the index of variables for
name.

