D.5.2.2 mod_versal
..................
Procedure from library deform.lib (see deform_lib).

Usage:
mod_versal(Mo,I[,d,any]); I=ideal, M=module, d=int, any =list

Compute:
miniversal deformation of coker(Mo) over Qo=Po/Io, Po=basering;

Create:
Ringsr (exported):

'my'Px = extending the basering by new variables (deformation
parameters), the new variables precede the old ones,

the ordering is the product between "my_ord"

and "ord(Po)"

'my'Qx = Px/Io extending Qo (returns as basering),

'my'Ox = Px/(Io+Js) ring of the versal deformation of coker(Ms),

'my'So = embedding-ring of the versal base space. (default 'my'="")

Matrices (in Qx, exported):

Js = giving the versal base space (obstructions),

Ms = giving the versal family of Mo,

Ls = giving the lifting of syzygies Lo=syz(Mo),

If d is defined (!=0), it computes up to degree d.

If 'any' is defined and any[1] is no string, interactive version.

Otherwise 'any' gives predefined strings:"my","param","order","out"
("my" prefix-string, "param" is a letter (e.g. "A") for the name of
first parameter or (e.g. "A(") for index parameter variables, "ord"
ordering string for ring extension), "out" name of output-file).

Note:
printlevel < 0 no output at all,

printlevel >=0,1,2,.. informs you, what is going on,

this proc uses 'execute'.

Example:
LIB "deform.lib";
int p = printlevel;
printlevel = 1;
ring  Ro = 0,(x,y),wp(3,4);
ideal Io = x4+y3;
matrix Mo[2][2] = x2,y,-y2,x2;
mod_versal(Mo,Io);
==> // vdim (Ext^2) = 4
==> // vdim (Ext^1) = 4
==> // ready: Ext1 and Ext2
==> // Ext1 is quasi-homogeneous represented: 3,6,1,4
==> // infinitesimal extension
==> x2-Ax-B,   y+Cx+D,
==> -y2+Cxy+Dy,x2+Ax+B
==> // start deg = 2
==> // start deg = 3
==> // start deg = 4
==> // start deg = 5
==> // finished in degree 
==> 5
==> // quasi-homogeneous weights of miniversal base
==> 3,6,1,4
==> // Result belongs to qring Qx
==> // Equations of total space of miniversal deformation are in Js
==> -2AB+A3+3CD2-BC3-3AC2D+A2C3,
==> -B2+A2B+D3-3BC2D+ABC3
==> // Matrix of the deformed module is Ms and lifted syzygies are Ls.
==> // Make Qx the basering and list objects defined in Qx by typing:
==>    listvar(ring);setring Qx; show(Qx);listvar(ideal);listvar(matrix);
==> // NOTE: rings Qx, Ox, So are still alive!
==> // (use: 'kill_rings();' to remove them)
printlevel = p;
if(system("with","Namespaces")) {
if(nameof(Current) == "Ring" ) {
kill Top::Px,Top::Qx,Top::So;
} else {
kill Ring::Px,Ring::So;
}
}
kill Px,Qx,So;

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.nongnu.org/texi2html/"><i>texi2html</i></a>.
</font>

</body>
</html>
