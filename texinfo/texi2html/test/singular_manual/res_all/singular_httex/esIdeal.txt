D.5.3.2 esIdeal
...............
Procedure from library equising.lib (see equising_lib).

Usage:
esIdeal(f); f poly

Assume:
f is a reduced bivariate polynomial, the basering has precisely
two variables, is local and no qring, and the characteristic of
the ground field does not divide mult(f).

Return:
list of two ideals:
          _[1]:  equisingularity ideal of f (in sense of Wahl)
          _[2]:  equisingularity ideal of f with fixed section

Note:
if some of the above condition is not satisfied then return
value is list(0,0).

Example:
LIB "equising.lib";
ring r=0,(x,y),ds;
poly f=x7+y7+(x-y)^2*x2y2; 
list K=esIdeal(f);
==> polynomial is Newton degenerated !
==> 
==> // 
==> // versal deformation with triv. section
==> // =====================================
==> // 
==> // 
==> // Compute equisingular Stratum over Spec(C[t]/t^2)
==> // ================================================
==> // 
==> // finished
==> // 
option(redSB);
// Wahl's equisingularity ideal:
std(K[1]);
==> _[1]=4x4y-10x2y3+6xy4+21x6+14y6
==> _[2]=4x3y2-6x2y3+2xy4+7x6
==> _[3]=x2y4-xy5
==> _[4]=x7
==> _[5]=xy6
==> _[6]=y7
ring rr=0,(x,y),ds;
poly f=x4+4x3y+6x2y2+4xy3+y4+2x2y15+4xy16+2y17+xy23+y24+y30+y31;
list K=esIdeal(f);
==> polynomial is Newton degenerated !
==> 
==> // 
==> // versal deformation with triv. section
==> // =====================================
==> // 
==> // 
==> // Compute equisingular Stratum over Spec(C[t]/t^2)
==> // ================================================
==> // 
==> // finished
==> // 
vdim(std(K[1]));
==> 68
// the latter should be equal to: 
tau_es(f);
==> 68
See also:
esStratum;
tau_es.


<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
