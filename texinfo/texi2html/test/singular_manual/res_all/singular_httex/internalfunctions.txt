D.5.1.6 internalfunctions
.........................
Procedure from library classify.lib (see classify_lib).

Usage:
internalfunctions();

Return:
nothing, display names of internal procedures of classify.lib

Example:
LIB "classify.lib";
internalfunctions();
==>    Internal functions for the classification using Arnold's method,
==>    the function numbers correspond to numbers in Arnold's classifier:
==> Klassifiziere(poly f);      //determine the type of the singularity f
==>   Funktion1bis (poly f, list cstn)
==>   Funktion3 (poly f, list cstn)
==>   Funktion6 (poly f, list cstn)
==>   Funktion13 (poly f, list cstn)
==>   Funktion17 (poly f, list cstn)
==>   Funktion25 (poly f, list cstn)
==>   Funktion40 (poly f, list cstn, int k)
==>   Funktion47 (poly f, list cstn)
==>   Funktion50 (poly f, list cstn)
==>   Funktion58 (poly fin, list cstn)
==>   Funktion59 (poly f, list cstn)
==>   Funktion66 (poly f, list cstn)
==>   Funktion82 (poly f, list cstn)
==>   Funktion83 (poly f, list cstn)
==>   Funktion91 (poly f, list cstn, int k)
==>   Funktion92 (poly f, list cstn, int k)
==>   Funktion93 (poly f, list cstn, int k)
==>   Funktion94 (poly f, list cstn, int k)
==>   Funktion95 (poly f, list cstn, int k)
==>   Funktion96 (poly f, list cstn, int k)
==>   Funktion97 (poly f, list cstn)
==>   Isomorphie_s82_x (poly f, poly fk, int k)
==>   Isomorphie_s82_z (poly f, poly fk, int k)
==>   Isomorphie_s17 (poly f, poly fk, int k, int ct)
==>   printresult (string f,string typ,int Mu,int m,int corank,int K)
==>   
==>    Internal functions for the classifcation by invariants:
==>   Cubic (poly f)
==>   parity (int e)             //return the parity of e
==>   HKclass (intvec i)
==>   HKclass3( intvec i, string SG_Typ, int cnt)
==>   HKclass3_teil_1 (intvec i, string SG_Typ, int cnt)
==>   HKclass5 (intvec i, string SG_Typ, int cnt)
==>   HKclass5_teil_1 (intvec i, string SG_Typ, int cnt)
==>   HKclass5_teil_2 (intvec i, string SG_Typ, int cnt)
==>   HKclass7 (intvec i, string SG_Typ, int cnt)
==>   HKclass7_teil_1 (intvec i, string SG_Typ, int cnt)
==>   
==>    Internal functions for the Morse-splitting lemma:
==>   Morse(poly fi, int K, int corank)  //splitting lemma itself
==>   Coeffs (list #)
==>   Coeff
==>   
==>    Internal functions providing tools:
==>   ReOrder(poly f)
==>   Singularitaet(string typ,int k,int r,int s,poly a,poly b,poly c,poly d)
==>   RandomPolyK
==>   Faktorisiere(poly f, poly g, int p, int k)   compute g = (ax+by^k)^p
==>   Teile(poly f, poly g);             //divides f by g
==>   GetRf(poly f, int n);
==>   Show(poly f);
==>   checkring();
==>   DecodeNormalFormString(string s);
==>   Setring(int n, string ringname);
==>   

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
