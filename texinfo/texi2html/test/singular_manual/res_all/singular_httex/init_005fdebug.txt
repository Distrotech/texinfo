D.5.1.5 init_debug
..................
Procedure from library classify.lib (see classify_lib).

Usage:
init_debug([level]); level=int

Compute:
Set the global variable @DeBug to level. The variable @DeBug is
used by the function debug_log(level, list of strings) to know
when to print the list of strings. init_debug() reports only
changes of @DeBug.

Note:
The procedure init_debug(n); is useful as trace-mode. n may
range from 0 to 10, higher values of n give more information.

Example:
LIB "classify.lib";
init_debug();
debug_log(1,"no trace information printed");
init_debug(1);
==> Debugging level change from  0  to  1
debug_log(1,"some trace information");
==> some trace information
init_debug(2);
==> Debugging level change from  1  to  2
debug_log(2,"nice for debugging scripts");
==> Debug:(2):  nice for debugging scripts
init_debug(0);
==> Debugging switched off.

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
