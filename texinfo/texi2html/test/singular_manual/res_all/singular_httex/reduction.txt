D.6.2.4 reduction
.................
Procedure from library ainvar.lib (see ainvar_lib).

Usage:
reduction(p,I[,q,n]); p poly, I ideal, [q monomial, n int (optional)]

Return:
a polynomial equal to p-H(f1,...,fr), in case the leading
term LT(p) of p is of the form H(LT(f1),...,LT(fr)) for some
polynomial H in r variables over the base field, I=f1,...,fr;
if q is given, a maximal power a is computed such that q^a divides
p-H(f1,...,fr), and then (p-H(f1,...,fr))/q^a is returned;
return p if no H is found

if n=1, a different algorithm is chosen which is sometimes faster
(default: n=0; q and n can be given (or not) in any order)

Note:
this is a kind of SAGBI reduction in the subalgebra K[f1,...,fr] of
the basering

Example:
LIB "ainvar.lib";
ring q=0,(x,y,z,u,v,w),dp;
poly p=x2yz-x2v;
ideal dom =x-w,u2w+1,yz-v;
reduction(p,dom);
==> 2xyzw-yzw2-2xvw+vw2
reduction(p,dom,w);
==> 2xyz-yzw-2xv+vw

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
