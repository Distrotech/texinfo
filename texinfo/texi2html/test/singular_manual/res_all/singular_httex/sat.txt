D.4.2.5 sat
...........
Procedure from library elim.lib (see elim_lib).

Usage:
sat(id,j); id=ideal/module, j=ideal

Return:
list of an ideal/module [1] and an integer [2]:

[1] = saturation of id with respect to j (= union_(k=1...) of id:j^k)
[2] = saturation exponent (= min( k | id:j^k = id:j^(k+1) ))

Note:
[1] is a standard basis in the basering

Display:
saturation exponent during computation if printlevel >=1

Example:
LIB "elim.lib";
int p      = printlevel;
ring r     = 2,(x,y,z),dp;
poly F     = x5+y5+(x-y)^2*xyz;
ideal j    = jacob(F);
sat(j,maxideal(1));
==> [1]:
==>    _[1]=x3+x2y+xy2+y3
==>    _[2]=y4+x2yz+y3z
==>    _[3]=x2y2+x2yz+y3z
==> [2]:
==>    4
printlevel = 2;
sat(j,maxideal(2));
==> // compute quotient 1
==> // compute quotient 2
==> // compute quotient 3
==> // saturation becomes stable after 2 iteration(s)
==> 
==> [1]:
==>    _[1]=x3+x2y+xy2+y3
==>    _[2]=y4+x2yz+y3z
==>    _[3]=x2y2+x2yz+y3z
==> [2]:
==>    2
printlevel = p;

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.nongnu.org/texi2html/"><i>texi2html</i></a>.
</font>

</body>
</html>
