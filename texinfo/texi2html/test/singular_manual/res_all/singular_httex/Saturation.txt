A.4 Saturation
==============

Since in the example above, the ideal 
$j+(f)$
 has the same vdim
in the polynomial ring and in the localization at 0 (each 195),

$f=0$
 is smooth outside 0.
Hence 
$j+(f)$
 contains some power of the maximal ideal 
$m$
. We shall
check this in a different manner:
For any two ideals 
$i, j$
 in the basering 
$R$
 let
$$
\hbox{sat}(i,j)=\{x\in R\;|\; \exists\;n\hbox{ s.t. }
x\cdot(j^n)\subseteq i\}
= \bigcup_{n=1}^\infty i:j^n$$

denote the saturation of 
$i$
 with respect to 
$j$
. This defines,
geometrically, the closure of the complement of V(
$j$
) in V(
$i$
)
(V(
$i$
) denotes the variety defined by 
$i$
).
In our case, 
$sat(j+(f),m)$
 must be the whole ring, hence
generated by 1.

The saturation is computed by the procedure sat in
elim.lib by computing iterated ideal quotients with the maximal
ideal.  sat returns a list of two elements: the saturated ideal
and the number of iterations.  (Note that maxideal(n) denotes the
n-th power of the maximal ideal).

  LIB "elim.lib";         // loading library elim.lib
  // you should get the information that elim.lib has been loaded
  // together with some other libraries which are needed by it
  option(noprot);         // no protocol
  ring r2 = 32003,(x,y,z),dp;
  poly f = x^11+y^5+z^(3*3)+x^(3+2)*y^(3-1)+x^(3-1)*y^(3-1)*z3+
    x^(3-2)*y^3*(y^2)^2;
  ideal j=jacob(f);
  sat(j+f,maxideal(1));
==> [1]:
==>    _[1]=1
==> [2]:
==>    17
  // list the variables defined so far:
  listvar();
==> // r2                   [0]  *ring
==> //      j                    [0]  ideal, 3 generator(s)
==> //      f                    [0]  poly
==> // LIB                  [0]  string standard.lib,elim.li..., 83 char(s)

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
