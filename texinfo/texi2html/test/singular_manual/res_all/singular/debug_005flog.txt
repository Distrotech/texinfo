D.5.1.14 debug_log
..................
Procedure from library classify.lib (see classify_lib).

Usage:
debug_log(level,li); level=int, li=comma separated "message" list

Compute:
print "messages" if level>=@DeBug.

useful for user-defined trace messages.

Example:
LIB "classify.lib";
example init_debug;
==> // proc init_debug from lib classify.lib
==> EXAMPLE:
==>   init_debug();
==>   debug_log(1,"no trace information printed");
==>   init_debug(1);
==> Debugging level change from  0  to  1
==>   debug_log(1,"some trace information");
==> some trace information
==>   init_debug(2);
==> Debugging level change from  1  to  2
==>   debug_log(2,"nice for debugging scripts");
==> Debug:(2):  nice for debugging scripts
==>   init_debug(0);
==> Debugging switched off.
==> 
See also:
init_debug.

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.nongnu.org/texi2html/"><i>texi2html</i></a>.
</font>

</body>
</html>
