D.5.5.21 further_hn_proc
........................
Procedure from library hnoether.lib (see hnoether_lib).

Usage:
further_hn_proc();

Note:
The library hnoether.lib contains some more procedures which
are not shown when typing help hnoether.lib;. They may be useful
for interactive use (e.g. if you want to do the calculation of an HN
development "by hand" to see the intermediate results), and they
can be enumerated by calling further_hn_proc(). 

Use help <procedure>; for detailed information about each of
them.

Example:
LIB "hnoether.lib";
further_hn_proc();
==> 
==>  The following procedures are also part of `hnoether.lib':
==> 
==>  getnm(f);           intersection pts. of Newton polygon with axes
==>  T_Transform(f,Q,N); returns f(y,xy^Q)/y^NQ (f: poly, Q,N: int)
==>  T1_Transform(f,d,M); returns f(x,y+d*x^M)  (f: poly,d:number,M:int)
==>  T2_Transform(f,d,M,N,ref);   a composition of T1 & T
==>  koeff(f,I,J);       gets coefficient of indicated monomial of poly f
==>  redleit(f,S,E);     restriction of monomials of f to line (S-E)
==>  leit(f,n,m);        special case of redleit (for irred. polynomials)
==>  testreducible(f,n,m); tests whether f is reducible
==>  charPoly(f,M,N);    characteristic polynomial of f
==>  find_in_list(L,p);  find int p in list L
==>  get_last_divisor(M,N); last divisor in Euclid's algorithm
==>  factorfirst(f,M,N); try to factor f without `factorize'
==>  factorlist(L);      factorize a list L of polynomials
==>  referencepoly(D);   a polynomial f s.t. D is the Newton diagram of f
<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
