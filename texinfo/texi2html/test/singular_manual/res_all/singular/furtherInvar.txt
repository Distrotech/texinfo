D.6.2.7 furtherInvar
....................
Procedure from library ainvar.lib (see ainvar_lib).

Usage:
furtherInvar(m,id,karl,q); m matrix, id,karl ideals, q poly, n int

Assume:
karl,id,q are invariant under the vector field m,

moreover, q must be a variable

Return:
list of two ideals, the first ideal contains further invariants of
the vector field
         m = sum m[i,1]*d/dx(i) with respect to id,p,q,
i.e. we compute elements in the (invariant) subring generated by id
which are divisible by q and divide them by q as much as possible
the second ideal contains all invariants given before
if n=1, a different algorithm is chosen which is sometimes faster
(default: n=0)

Example:
LIB "ainvar.lib";
ring r=0,(x,y,z,u),dp;
matrix m[4][1];
m[2,1]=x;
m[3,1]=y;
m[4,1]=z;
ideal id=localInvar(m,z,y,x),localInvar(m,u,y,x);
ideal karl=id,x;
list in=furtherInvar(m,id,karl,x);
in;
==> [1]:
==>    _[1]=y2z2-8/3xz3-2y3u+6xyzu-3x2u2
==> [2]:
==>    _[1]=-1/2y2+xz
==>    _[2]=1/3y3-xyz+x2u
==>    _[3]=x

<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.nongnu.org/texi2html/"><i>texi2html</i></a>.
</font>

</body>
</html>
