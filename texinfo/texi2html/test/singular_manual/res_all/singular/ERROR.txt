5.1.24 ERROR
------------
Syntax:
ERROR ( string_expression )
Type:
none
Purpose:
Immediately interrupts the current computation, returns to the
top-level, and displays the argument string_expression as error
message.

Note:
This should be used as an emergency, resp. failure, exit within procedures.

Example:
int i=1;
proc myError() {ERROR("Need to leave now");i=2;}
myError();
==>    ? Need to leave now
==>    ? error occurred in line 2: `ERROR("Need to leave now");i=2;`
==>    ? leaving ::myError
==>    skipping text from `;` error at token `)`
i;
==> 1
<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
