D.5.5.2 sethnering
..................
Procedure from library hnoether.lib (see hnoether_lib).

Usage:
sethnering(L[,s]); L list, s string (optional)

Assume:
L is a list containing a ring (e.g. the output of hnexpansion).

Create:
The procedure creates a ring with name given by the optional parameter
s resp. with name hnering, if no optional parameter is given, and
changes your ring to this ring. The new ring will be the ring given
as the first entry in the list L.

Return:
nothing.

Example:
LIB "hnoether.lib";
// -------- prepare for example ---------
if (defined(hnering))
{
def rette@ring=hnering;
if (nameof(basering)=="hnering")
{
int wechsel=1;
}
else
{
int wechsel;
}
kill hnering;
}
// ------ the example starts here -------
ring r=0,(x,y),ls;
nameof(basering);
==> r
sethnering(hnexpansion(x4-y6)); // Creates hnering and changes to it!
nameof(basering);
==> hnering
// --- restore HNEring if previously defined ---
kill hnering;
if (defined(rette@ring)) {
def hnering=rette@ring;
export hnering;
if (wechsel==1)
{
setring hnering;
}
}
See also:
hnexpansion.


<font size="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <a href="http://www.singular.uni-kl.de/"><i>Singular</i></a> version 2-0-4, October 2002,
generated by <a href="http://www.gnu.org/software/texinfo/"><i>texi2html</i></a>.
</font>

</body>
</html>
