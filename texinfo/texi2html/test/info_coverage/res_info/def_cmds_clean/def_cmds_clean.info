This is def_cmds_clean.info, produced by makeinfo version 4.13 from
def_cmds_clean.texi.


File: def_cmds_clean.info,  Node: Top,  Up: (dir)

Test for definition commands
****************************

 -- category: deffn_name arguments...
     d-effn

 -- category: deffn_name arguments more args 
          even more so
     def-fn

 -- fset: I a g
 -- cmde: truc
 -- Command: log trap
 -- Command:  log trap1
 -- Command: log trap2
 -- cmde: id ule truc
 -- cmde2: id `i' ule truc
 -- id `i' ule:
 -- :
 -- aaa:
 -- :
 -- :
 -- : machin
 -- : bidule machin
 -- truc: machin
 -- truc:
 -- truc:
 -- :
 -- truc: followed by a comment
     Various deff lines
 -- truc: after a deff item
     text in def item for second def item
 -- truc: deffnx before end deffn

 -- empty: deffn

 -- empty: deffn with deffnx
 -- empty: deffnx

 -- category: defvr_name
     d-efvr

 -- category: type deftypefn_name arguments...
     d-eftypefn

 -- category on class: type deftypeop_name arguments...
     d-eftypeop

 -- category: type deftypevr_name
     d-eftypevr

 -- category of class: defcv_name
     d-efcv

 -- category on class: defop_name arguments...
     d-efop

 -- category: deftp_name attributes...
     d-eftp

 -- Function: defun_name arguments...
     d-efun

 -- Macro: defmac_name arguments...
     d-efmac

 -- Special Form: defspec_name arguments...
     d-efspec

 -- Variable: defvar_name
     d-efvar

 -- User Option: defopt_name
     d-efopt

 -- Function: type deftypefun_name arguments...
     d-eftypefun

 -- Variable: type deftypevar_name
     d-eftypevar

 -- Instance Variable of class: defivar_name
     d-efivar

 -- Instance Variable of class: type deftypeivar_name
     d-eftypeivar

 -- Method on class: defmethod_name arguments...
     d-efmethod

 -- Method on class: type deftypemethod_name arguments...
     d-eftypemethod

      -- category: deffn_name arguments...
          d--effn

      -- category: deffn_name arguments more args 
               even more so
          def--fn

      -- fset: I a g
      -- cmde: truc
      -- Command: log trap
      -- Command:  log trap1
      -- Command: log trap2
      -- cmde: id ule truc
      -- cmde2: id `i' ule truc
      -- id `i' ule:
      -- :
      -- aaa:
      -- :
      -- :
      -- : machin
      -- : bidule machin
      -- truc: machin
      -- truc:
      -- truc:
      -- :
      -- truc: followed by a comment
          Various deff lines
      -- truc: after a deff item
          text in def item for second def item
      -- truc: deffnx before end deffn

      -- empty: deffn

      -- empty: deffn with deffnx
      -- empty: deffnx

      -- category: defvr_name
          d--efvr

      -- category: type deftypefn_name arguments...
          d--eftypefn

      -- category on class: type deftypeop_name arguments...
          d--eftypeop

      -- category: type deftypevr_name
          d--eftypevr

      -- category of class: defcv_name
          d--efcv

      -- category on class: defop_name arguments...
          d--efop

      -- category: deftp_name attributes...
          d--eftp

      -- Function: defun_name arguments...
          d--efun

      -- Macro: defmac_name arguments...
          d--efmac

      -- Special Form: defspec_name arguments...
          d--efspec

      -- Variable: defvar_name
          d--efvar

      -- User Option: defopt_name
          d--efopt

      -- Function: type deftypefun_name arguments...
          d--eftypefun

      -- Variable: type deftypevar_name
          d--eftypevar

      -- Instance Variable of class: defivar_name
          d--efivar

      -- Instance Variable of class: type deftypeivar_name
          d--eftypeivar

      -- Method on class: defmethod_name arguments...
          d--efmethod

      -- Method on class: type deftypemethod_name arguments...
          d--eftypemethod


      -- category: deffn_name arguments...
          d-effn

      -- category: deffn_name arguments more args 
               even more so
          def-fn

      -- fset: I a g
      -- cmde: truc
      -- Command: log trap
      -- Command:  log trap1
      -- Command: log trap2
      -- cmde: id ule truc
      -- cmde2: id `i' ule truc
      -- id `i' ule:
      -- :
      -- aaa:
      -- :
      -- :
      -- : machin
      -- : bidule machin
      -- truc: machin
      -- truc:
      -- truc:
      -- :
      -- truc: followed by a comment
          Various deff lines
      -- truc: after a deff item
          text in def item for second def item
      -- truc: deffnx before end deffn

      -- empty: deffn

      -- empty: deffn with deffnx
      -- empty: deffnx

      -- category: defvr_name
          d-efvr

      -- category: type deftypefn_name arguments...
          d-eftypefn

      -- category on class: type deftypeop_name arguments...
          d-eftypeop

      -- category: type deftypevr_name
          d-eftypevr

      -- category of class: defcv_name
          d-efcv

      -- category on class: defop_name arguments...
          d-efop

      -- category: deftp_name attributes...
          d-eftp

      -- Function: defun_name arguments...
          d-efun

      -- Macro: defmac_name arguments...
          d-efmac

      -- Special Form: defspec_name arguments...
          d-efspec

      -- Variable: defvar_name
          d-efvar

      -- User Option: defopt_name
          d-efopt

      -- Function: type deftypefun_name arguments...
          d-eftypefun

      -- Variable: type deftypevar_name
          d-eftypevar

      -- Instance Variable of class: defivar_name
          d-efivar

      -- Instance Variable of class: type deftypeivar_name
          d-eftypeivar

      -- Method on class: defmethod_name arguments...
          d-efmethod

      -- Method on class: type deftypemethod_name arguments...
          d-eftypemethod

           -- category: deffn_name arguments...
               d--effn

           -- category: deffn_name arguments more args 
                    even more so
               def--fn

           -- fset: I a g
           -- cmde: truc
           -- Command: log trap
           -- Command:  log trap1
           -- Command: log trap2
           -- cmde: id ule truc
           -- cmde2: id `i' ule truc
           -- id `i' ule:
           -- :
           -- aaa:
           -- :
           -- :
           -- : machin
           -- : bidule machin
           -- truc: machin
           -- truc:
           -- truc:
           -- :
           -- truc: followed by a comment
               Various deff lines
           -- truc: after a deff item
               text in def item for second def item
           -- truc: deffnx before end deffn

           -- empty: deffn

           -- empty: deffn with deffnx
           -- empty: deffnx

           -- category: defvr_name
               d--efvr

           -- category: type deftypefn_name arguments...
               d--eftypefn

           -- category on class: type deftypeop_name arguments...
               d--eftypeop

           -- category: type deftypevr_name
               d--eftypevr

           -- category of class: defcv_name
               d--efcv

           -- category on class: defop_name arguments...
               d--efop

           -- category: deftp_name attributes...
               d--eftp

           -- Function: defun_name arguments...
               d--efun

           -- Macro: defmac_name arguments...
               d--efmac

           -- Special Form: defspec_name arguments...
               d--efspec

           -- Variable: defvar_name
               d--efvar

           -- User Option: defopt_name
               d--efopt

           -- Function: type deftypefun_name arguments...
               d--eftypefun

           -- Variable: type deftypevar_name
               d--eftypevar

           -- Instance Variable of class: defivar_name
               d--efivar

           -- Instance Variable of class: type deftypeivar_name
               d--eftypeivar

           -- Method on class: defmethod_name arguments...
               d--efmethod

           -- Method on class: type deftypemethod_name arguments...
               d--eftypemethod


 -- Command: FORWARDCHAR NCHARS argument2 argument3 (arg in brace,
          [something IN VAR, in, b , comma aPREF p]) last

 -- Variable: fill-column argument1 argument2 (arg in brace, [something
          IN VAR, in, b , comma aPREF p]) last

 -- Library Function: int foobar (int FOO, float BAR)

 -- Library Function: int foobar (int FOO, float BAR) (arg in brace, [
          IN VAR, in, b , comma aPREF p]) ct

          last

 -- Library Function: int foobug [

 -- stacks: private push (S:in out stack; N:in integer) ; ;barg aarg; ;
          end

 -- Global Flag: int enable (arg in brace, [something IN VAR, in, b ,
          comma aPREF p]) last

 -- Data type: pair car cdr (arg in brace, [something IN VAR, in, b ,
          comma aPREF p]) last

 -- Class Option of Window: border-pattern (arg in brace, [something IN
          VAR, in, b , comma aPREF p]) last

 -- Class Option2 of Window: `int' border-pattern (arg in brace,
          [something IN VAR, in, b , comma aPREF p]) last

 -- Operation on windows: expose (arg in brace, [something IN VAR, in, b
          , comma aPREF p]) last

 -- Operation2 on W: , indow `int' expose (arg in brace, [something IN
          VAR, in, b , comma aPREF p]) last

 -- Operation5 on Window: `int' expose type arg

 -- Operation3 on W,indow: `int' e,xpose type arg

 -- Operation4 on ,Window: `int' ,expose type arg

 -- Operation6 on W: , indow `int' e,xpose type arg

 -- Operation7 on ,: Window `int' ,expose type arg

 -- Operation13 on W)indow: `int' e)xpose type arg

 -- Operation14 on )Window: `int' )expose type arg

 -- Operation16 on W: ) indow `int' e)xpose type arg

 -- Operation17 on ): Window `int' )expose type arg

 -- Operation18 on W;indow: `int' e;xpose type arg

 -- Operation19 on ;Window: `int' ;expose type arg

 -- Operation20 on W;indow: `int' e;xpose type arg

 -- Operation21 on ;Window: `int' ;expose type arg

 -- Command on `com': Window`int' exposeEXP

 -- :

 -- :

 -- :

 -- :

 -- :

 -- :

 -- :

 -- :

 -- :

 -- A1: A2 A3 A4

 -- `A1': `A2' `A3' `A4'

 -- A1: A2 A3 A4

 -- `A1': `A2' `A3' `A4'

 -- A1: A2 A3 A4 A5

 -- `A1': `A2' `A3' `A4' `A5'

 -- A1: A2 A3 A4 A5

 -- `A1': A2 `A3' `A4' `A5'

 -- A1: A2 A3 A4

 -- `A1': `A2' `A3' `A4'

 -- A1 of A2: A3 A4 A5

 -- `A1': `A2' `A3' `A4' `A5'

 -- A1 of A2: A3 A4 A5 A6

 -- `A1' of `A2': `A3' `A4' `A5' `A6'

 -- A1 on A2: A3 A4 A5

 -- `A1' on `A2': `A3' `A4' `A5'

 -- A1 on A2: A3 A4 A5 A6

 -- `A1' on `A2': `A3' `A4' `A5' `A6'

 [index ]
* Menu:

* `A2':                                  Top.                 (line 456)
* `A3':                                  Top.                 (line 464)
* `A4' of `A2':                          Top.                 (line 476)
* A2:                                    Top.                 (line 454)
* A3:                                    Top.                 (line 462)
* A3 <1>:                                Top.                 (line 470)
* A4 of A2:                              Top.                 (line 474)
* border-pattern:                        Top.                 (line 392)
* border-pattern of Window:              Top.                 (line 395)
* defcv_name:                            Top.                 (line  54)
* defcv_name <1>:                        Top.                 (line 144)
* defcv_name <2>:                        Top.                 (line 235)
* defcv_name <3>:                        Top.                 (line 325)
* defivar_name:                          Top.                 (line  84)
* defivar_name <1>:                      Top.                 (line 174)
* defivar_name <2>:                      Top.                 (line 265)
* defivar_name <3>:                      Top.                 (line 355)
* defopt_name:                           Top.                 (line  75)
* defopt_name <1>:                       Top.                 (line 165)
* defopt_name <2>:                       Top.                 (line 256)
* defopt_name <3>:                       Top.                 (line 346)
* deftypeivar_name of class:             Top.                 (line  87)
* deftypeivar_name of class <1>:         Top.                 (line 177)
* deftypeivar_name of class <2>:         Top.                 (line 268)
* deftypeivar_name of class <3>:         Top.                 (line 358)
* deftypevar_name:                       Top.                 (line  81)
* deftypevar_name <1>:                   Top.                 (line 171)
* deftypevar_name <2>:                   Top.                 (line 262)
* deftypevar_name <3>:                   Top.                 (line 352)
* deftypevr_name:                        Top.                 (line  51)
* deftypevr_name <1>:                    Top.                 (line 141)
* deftypevr_name <2>:                    Top.                 (line 232)
* deftypevr_name <3>:                    Top.                 (line 322)
* defvar_name:                           Top.                 (line  72)
* defvar_name <1>:                       Top.                 (line 162)
* defvar_name <2>:                       Top.                 (line 253)
* defvar_name <3>:                       Top.                 (line 343)
* defvr_name:                            Top.                 (line  42)
* defvr_name <1>:                        Top.                 (line 132)
* defvr_name <2>:                        Top.                 (line 223)
* defvr_name <3>:                        Top.                 (line 313)
* enable:                                Top.                 (line 386)
* fill-column:                           Top.                 (line 371)

 [index ]
* Menu:

* )expose on )Window:                    Top.                 (line 416)
* ,expose on ,Window:                    Top.                 (line 408)
* ;expose on ;Window:                    Top.                 (line 424)
* ;expose on ;Window <1>:                Top.                 (line 428)
* `A2':                                  Top.                 (line 452)
* `A3':                                  Top.                 (line 460)
* `A3' on `A2':                          Top.                 (line 480)
* `A4' on `A2':                          Top.                 (line 484)
* `int' on ):                            Top.                 (line 420)
* `int' on ,:                            Top.                 (line 412)
* A2:                                    Top.                 (line 450)
* A3:                                    Top.                 (line 458)
* A3 on A2:                              Top.                 (line 478)
* A4 on A2:                              Top.                 (line 482)
* after:                                 Top.                 (line  33)
* after <1>:                             Top.                 (line 123)
* after <2>:                             Top.                 (line 214)
* after <3>:                             Top.                 (line 304)
* bidule machin:                         Top.                 (line  26)
* bidule machin <1>:                     Top.                 (line 116)
* bidule machin <2>:                     Top.                 (line 207)
* bidule machin <3>:                     Top.                 (line 297)
* deffn:                                 Top.                 (line  37)
* deffn <1>:                             Top.                 (line  39)
* deffn <2>:                             Top.                 (line 127)
* deffn <3>:                             Top.                 (line 129)
* deffn <4>:                             Top.                 (line 218)
* deffn <5>:                             Top.                 (line 220)
* deffn <6>:                             Top.                 (line 308)
* deffn <7>:                             Top.                 (line 310)
* deffnx:                                Top.                 (line  35)
* deffnx <1>:                            Top.                 (line  40)
* deffnx <2>:                            Top.                 (line 125)
* deffnx <3>:                            Top.                 (line 130)
* deffnx <4>:                            Top.                 (line 216)
* deffnx <5>:                            Top.                 (line 221)
* deffnx <6>:                            Top.                 (line 306)
* deffnx <7>:                            Top.                 (line 311)
* deffn_name:                            Top.                 (line   6)
* deffn_name <1>:                        Top.                 (line   9)
* deffn_name <2>:                        Top.                 (line  96)
* deffn_name <3>:                        Top.                 (line  99)
* deffn_name <4>:                        Top.                 (line 187)
* deffn_name <5>:                        Top.                 (line 190)
* deffn_name <6>:                        Top.                 (line 277)
* deffn_name <7>:                        Top.                 (line 280)
* defmac_name:                           Top.                 (line  66)
* defmac_name <1>:                       Top.                 (line 156)
* defmac_name <2>:                       Top.                 (line 247)
* defmac_name <3>:                       Top.                 (line 337)
* defmethod_name on class:               Top.                 (line  90)
* defmethod_name on class <1>:           Top.                 (line 180)
* defmethod_name on class <2>:           Top.                 (line 271)
* defmethod_name on class <3>:           Top.                 (line 361)
* defop_name on class:                   Top.                 (line  57)
* defop_name on class <1>:               Top.                 (line 147)
* defop_name on class <2>:               Top.                 (line 238)
* defop_name on class <3>:               Top.                 (line 328)
* defspec_name:                          Top.                 (line  69)
* defspec_name <1>:                      Top.                 (line 159)
* defspec_name <2>:                      Top.                 (line 250)
* defspec_name <3>:                      Top.                 (line 340)
* deftypefn_name:                        Top.                 (line  45)
* deftypefn_name <1>:                    Top.                 (line 135)
* deftypefn_name <2>:                    Top.                 (line 226)
* deftypefn_name <3>:                    Top.                 (line 316)
* deftypefun_name:                       Top.                 (line  78)
* deftypefun_name <1>:                   Top.                 (line 168)
* deftypefun_name <2>:                   Top.                 (line 259)
* deftypefun_name <3>:                   Top.                 (line 349)
* deftypemethod_name on class:           Top.                 (line  93)
* deftypemethod_name on class <1>:       Top.                 (line 183)
* deftypemethod_name on class <2>:       Top.                 (line 274)
* deftypemethod_name on class <3>:       Top.                 (line 364)
* deftypeop_name on class:               Top.                 (line  48)
* deftypeop_name on class <1>:           Top.                 (line 138)
* deftypeop_name on class <2>:           Top.                 (line 229)
* deftypeop_name on class <3>:           Top.                 (line 319)
* defun_name:                            Top.                 (line  63)
* defun_name <1>:                        Top.                 (line 153)
* defun_name <2>:                        Top.                 (line 244)
* defun_name <3>:                        Top.                 (line 334)
* e)xpose on W)indow:                    Top.                 (line 414)
* e,xpose on W,indow:                    Top.                 (line 406)
* e;xpose on W;indow:                    Top.                 (line 422)
* e;xpose on W;indow <1>:                Top.                 (line 426)
* expose on Window:                      Top.                 (line 404)
* expose on windows:                     Top.                 (line 398)
* expose on `com':                       Top.                 (line 430)
* followed:                              Top.                 (line  31)
* followed <1>:                          Top.                 (line 121)
* followed <2>:                          Top.                 (line 212)
* followed <3>:                          Top.                 (line 302)
* foobar:                                Top.                 (line 374)
* foobar <1>:                            Top.                 (line 376)
* foobug:                                Top.                 (line 381)
* FORWARDCHAR:                           Top.                 (line 368)
* I:                                     Top.                 (line  13)
* I <1>:                                 Top.                 (line 103)
* I <2>:                                 Top.                 (line 194)
* I <3>:                                 Top.                 (line 284)
* id ule:                                Top.                 (line  18)
* id ule <1>:                            Top.                 (line 108)
* id ule <2>:                            Top.                 (line 199)
* id ule <3>:                            Top.                 (line 289)
* id `i' ule:                            Top.                 (line  19)
* id `i' ule <1>:                        Top.                 (line 109)
* id `i' ule <2>:                        Top.                 (line 200)
* id `i' ule <3>:                        Top.                 (line 290)
* indow on W:                            Top.                 (line 401)
* indow on W <1>:                        Top.                 (line 410)
* indow on W <2>:                        Top.                 (line 418)
* log trap:                              Top.                 (line  15)
* log trap <1>:                          Top.                 (line 105)
* log trap <2>:                          Top.                 (line 196)
* log trap <3>:                          Top.                 (line 286)
* log trap1:                             Top.                 (line  16)
* log trap1 <1>:                         Top.                 (line 106)
* log trap1 <2>:                         Top.                 (line 197)
* log trap1 <3>:                         Top.                 (line 287)
* log trap2:                             Top.                 (line  17)
* log trap2 <1>:                         Top.                 (line 107)
* log trap2 <2>:                         Top.                 (line 198)
* log trap2 <3>:                         Top.                 (line 288)
* machin:                                Top.                 (line  25)
* machin <1>:                            Top.                 (line  27)
* machin <2>:                            Top.                 (line 115)
* machin <3>:                            Top.                 (line 117)
* machin <4>:                            Top.                 (line 206)
* machin <5>:                            Top.                 (line 208)
* machin <6>:                            Top.                 (line 296)
* machin <7>:                            Top.                 (line 298)
* push:                                  Top.                 (line 383)
* truc:                                  Top.                 (line  14)
* truc <1>:                              Top.                 (line 104)
* truc <2>:                              Top.                 (line 195)
* truc <3>:                              Top.                 (line 285)



Tag Table:
Node: Top90

End Tag Table
