../texinfo/texinfo.txi(,2) @c Id: texinfo.txi,v 1.2 2003/02/24 18:17:06 pertusus Exp $
../texinfo/texinfo.txi(,3) @c Ordinarily Texinfo files have the extension .texi.  But texinfo.texi
../texinfo/texinfo.txi(,4) @c clashes with texinfo.tex on 8.3 filesystems, so we use texinfo.txi.
../texinfo/texinfo.txi(,5) 
../texinfo/texinfo.txi(,6) @c Everything between the start/end of header lines will be passed by
../texinfo/texinfo.txi(,7) @c Emacs's {texinfo,makeinfo}-format region commands.  See the `start of
../texinfo/texinfo.txi(,8) @c header' node for more info.
../texinfo/texinfo.txi(,9) @c %**start of header
../texinfo/texinfo.txi(,10) 
../texinfo/texinfo.txi(,11) @c makeinfo and texinfo.tex ignore all text before @setfilename.
../texinfo/texinfo.txi(,12) @c
../texinfo/texinfo.txi(,13) @c Ordinarily the setfilename argument ends with .info.  But
../texinfo/texinfo.txi(,14) @c texinfo.info-13 is too long for 14-character filesystems.
../texinfo/texinfo.txi(,15) @setfilename texinfo
../texinfo/texinfo.txi(,16) 
../texinfo/texinfo.txi(,17) @c Automake automatically updates version.texi to @set VERSION and
../texinfo/texinfo.txi(,18) @c @set UPDATED to appropriate values.
../texinfo/version.texi(,1) @set UPDATED 28 March 2002
../texinfo/version.texi(,2) @set UPDATED-MONTH March 2002
../texinfo/version.texi(,3) @set EDITION 4.2
../texinfo/version.texi(,4) @set VERSION 4.2
../texinfo/texinfo.txi(,20) @settitle GNU Texinfo 4.2
../texinfo/texinfo.txi(,21) 
../texinfo/texinfo.txi(,22) @c Define a new index for options.
../texinfo/texinfo.txi(,23) @defcodeindex op
../texinfo/texinfo.txi(,24) @c Put everything except function (command, in this case) names in one
../texinfo/texinfo.txi(,25) @c index (arbitrarily chosen to be the concept index).
../texinfo/texinfo.txi(,26) @syncodeindex op cp
../texinfo/texinfo.txi(,27) @syncodeindex vr cp
../texinfo/texinfo.txi(,28) @syncodeindex pg cp
../texinfo/texinfo.txi(,29) 
../texinfo/texinfo.txi(,30) @footnotestyle separate
../texinfo/texinfo.txi(,31) @paragraphindent 2
../texinfo/texinfo.txi(,32) @c finalout
../texinfo/texinfo.txi(,33) 
../texinfo/texinfo.txi(,34) @comment %**end of header
../texinfo/texinfo.txi(,35) 
../texinfo/texinfo.txi(,57) 
../texinfo/texinfo.txi(,58) @dircategory Texinfo documentation system
../texinfo/texinfo.txi(,66) 
../texinfo/texinfo.txi(,67) @c Before release, run C-u C-c C-u C-a (texinfo-all-menus-update with a
../texinfo/texinfo.txi(,68) @c prefix arg).  This updates the node pointers, which texinfmt.el needs.
../texinfo/texinfo.txi(,69) 
../texinfo/texinfo.txi(,70) @c Set smallbook if printing in smallbook format so the example of the
../texinfo/texinfo.txi(,71) @c smallbook font is actually written using smallbook; in bigbook, a kludge
../texinfo/texinfo.txi(,72) @c is used for TeX output.  Do this through the -t option to texi2dvi,
../texinfo/texinfo.txi(,73) @c so this same source can be used for other paper sizes as well.
../texinfo/texinfo.txi(,74) @c smallbook
../texinfo/texinfo.txi(,75) @c set smallbook
../texinfo/texinfo.txi(,76) @c @@clear smallbook
../texinfo/texinfo.txi(,77) 
../texinfo/texinfo.txi(,78) @c If you like blank pages, add through texi2dvi -t.
../texinfo/texinfo.txi(,79) @c setchapternewpage odd
../texinfo/texinfo.txi(,80) 
../texinfo/texinfo.txi(,81) @c Currently undocumented command, 5 December 1993:
../texinfo/texinfo.txi(,82) @c nwnode          (Same as node, but no warnings; for `makeinfo'.)
../texinfo/texinfo.txi(,83) 
../texinfo/texinfo.txi(,84) 
../texinfo/texinfo.txi(,85) @shorttitlepage Texinfo
../texinfo/texinfo.txi(,86) 
../texinfo/texinfo.txi(,113) 
../texinfo/texinfo.txi(,114) 
../texinfo/texinfo.txi(,115) @summarycontents
../texinfo/texinfo.txi(,116) @contents
../texinfo/texinfo.txi(,117) 
../texinfo/texinfo.txi(,118) 
../texinfo/texinfo.txi(,120) @node Top
../texinfo/texinfo.txi(,121) @top Texinfo
../texinfo/texinfo.txi(,122) 
../texinfo/texinfo.txi(,123) @insertcopying
../texinfo/texinfo.txi(,124) 
../texinfo/texinfo.txi(,125) The first part of this master menu lists the major nodes in this Info
../texinfo/texinfo.txi(,126) document, including the @@-command and concept indices.  The rest of
../texinfo/texinfo.txi(,127) the menu lists all the lower level nodes in the document.
../texinfo/texinfo.txi(,128) 
../texinfo/texinfo.txi(,130) 
../texinfo/texinfo.txi(,131) @menu
../texinfo/texinfo.txi(,132) * Copying Conditions::          Your rights.
../texinfo/texinfo.txi(,133) * Overview::                    Texinfo in brief.
../texinfo/texinfo.txi(,134) * Texinfo Mode::                How to use Texinfo mode.
../texinfo/texinfo.txi(,135) * Beginning a File::            What is at the beginning of a Texinfo file?
../texinfo/texinfo.txi(,136) * Ending a File::               What is at the end of a Texinfo file?
../texinfo/texinfo.txi(,137) * Structuring::                 How to create chapters, sections, subsections,
../texinfo/texinfo.txi(,138)                                   appendices, and other parts.
../texinfo/texinfo.txi(,139) * Nodes::                       How to write nodes.
../texinfo/texinfo.txi(,140) * Menus::                       How to write menus.
../texinfo/texinfo.txi(,141) * Cross References::            How to write cross references.
../texinfo/texinfo.txi(,142) * Marking Text::                How to mark words and phrases as code,
../texinfo/texinfo.txi(,143)                                   keyboard input, meta-syntactic
../texinfo/texinfo.txi(,144)                                   variables, and the like.
../texinfo/texinfo.txi(,145) * Quotations and Examples::     How to write quotations, examples, etc.
../texinfo/texinfo.txi(,146) * Lists and Tables::            How to write lists and tables.
../texinfo/texinfo.txi(,147) * Indices::                     How to create indices.
../texinfo/texinfo.txi(,148) * Insertions::                  How to insert @@-signs, braces, etc.
../texinfo/texinfo.txi(,149) * Breaks::                      How to force and prevent line and page breaks.
../texinfo/texinfo.txi(,150) * Definition Commands::         How to describe functions and the like
../texinfo/texinfo.txi(,151)                                   in a uniform manner.
../texinfo/texinfo.txi(,152) * Conditionals::                How to specify text for either @TeX{} or Info.
../texinfo/texinfo.txi(,153) * Internationalization::        
../texinfo/texinfo.txi(,154) * Defining New Texinfo Commands::  
../texinfo/texinfo.txi(,155) * Hardcopy::                    How to convert a Texinfo file to a file
../texinfo/texinfo.txi(,156)                                   for printing and how to print that file.
../texinfo/texinfo.txi(,157) * Creating and Installing Info Files::  
../texinfo/texinfo.txi(,158) * Command List::                All the Texinfo @@-commands.
../texinfo/texinfo.txi(,159) * Tips::                        Hints on how to write a Texinfo document.
../texinfo/texinfo.txi(,160) * Sample Texinfo Files::        Complete examples, including full texts.
../texinfo/texinfo.txi(,161) * Include Files::               How to incorporate other Texinfo files.
../texinfo/texinfo.txi(,162) * Headings::                    How to write page headings and footings.
../texinfo/texinfo.txi(,163) * Catching Mistakes::           How to find formatting mistakes.
../texinfo/texinfo.txi(,164) * Refilling Paragraphs::        All about paragraph refilling.
../texinfo/texinfo.txi(,165) * Command Syntax::              A description of @@-Command syntax.
../texinfo/texinfo.txi(,166) * Obtaining TeX::               How to Obtain @TeX{}.
../texinfo/texinfo.txi(,167) * Copying This Manual::         The GNU Free Documentation License.
../texinfo/texinfo.txi(,168) * Command and Variable Index::  A menu containing commands and variables.
../texinfo/texinfo.txi(,169) * Concept Index::               A menu covering many topics.
../texinfo/texinfo.txi(,170) 
../texinfo/texinfo.txi(,171) @detailmenu
../texinfo/texinfo.txi(,172)  --- The Detailed Node Listing ---
../texinfo/texinfo.txi(,173) 
../texinfo/texinfo.txi(,174) Overview of Texinfo
../texinfo/texinfo.txi(,175) 
../texinfo/texinfo.txi(,176) * Reporting Bugs::              Submitting effective bug reports.
../texinfo/texinfo.txi(,177) * Using Texinfo::               Create printed or online output.
../texinfo/texinfo.txi(,178) * Info Files::                  What is an Info file?
../texinfo/texinfo.txi(,179) * Printed Books::               Characteristics of a printed book or manual.
../texinfo/texinfo.txi(,180) * Formatting Commands::         @@-commands are used for formatting.
../texinfo/texinfo.txi(,181) * Conventions::                 General rules for writing a Texinfo file.
../texinfo/texinfo.txi(,182) * Comments::                    Writing comments and ignored text in general.
../texinfo/texinfo.txi(,183) * Minimum::                     What a Texinfo file must have.
../texinfo/texinfo.txi(,184) * Six Parts::                   Usually, a Texinfo file has six parts.
../texinfo/texinfo.txi(,185) * Short Sample::                A short sample Texinfo file.
../texinfo/texinfo.txi(,186) * History::                     Acknowledgements, contributors and genesis.
../texinfo/texinfo.txi(,187) 
../texinfo/texinfo.txi(,188) Using Texinfo Mode
../texinfo/texinfo.txi(,189) 
../texinfo/texinfo.txi(,190) * Texinfo Mode Overview::       How Texinfo mode can help you.
../texinfo/texinfo.txi(,191) * Emacs Editing::               Texinfo mode adds to GNU Emacs' general
../texinfo/texinfo.txi(,192)                                   purpose editing features.
../texinfo/texinfo.txi(,193) * Inserting::                   How to insert frequently used @@-commands.
../texinfo/texinfo.txi(,194) * Showing the Structure::       How to show the structure of a file.
../texinfo/texinfo.txi(,195) * Updating Nodes and Menus::    How to update or create new nodes and menus.
../texinfo/texinfo.txi(,196) * Info Formatting::             How to format for Info.
../texinfo/texinfo.txi(,197) * Printing::                    How to format and print part or all of a file.
../texinfo/texinfo.txi(,198) * Texinfo Mode Summary::        Summary of all the Texinfo mode commands.
../texinfo/texinfo.txi(,199) 
../texinfo/texinfo.txi(,200) Updating Nodes and Menus
../texinfo/texinfo.txi(,201) 
../texinfo/texinfo.txi(,202) * Updating Commands::           Five major updating commands.
../texinfo/texinfo.txi(,203) * Updating Requirements::       How to structure a Texinfo file for
../texinfo/texinfo.txi(,204)                                   using the updating command.
../texinfo/texinfo.txi(,205) * Other Updating Commands::     How to indent descriptions, insert
../texinfo/texinfo.txi(,206)                                   missing nodes lines, and update
../texinfo/texinfo.txi(,207)                                   nodes in sequence.
../texinfo/texinfo.txi(,208) 
../texinfo/texinfo.txi(,209) Beginning a Texinfo File
../texinfo/texinfo.txi(,210) 
../texinfo/texinfo.txi(,211) * Sample Beginning::            A sample beginning for a Texinfo file.
../texinfo/texinfo.txi(,212) * Texinfo File Header::         
../texinfo/texinfo.txi(,213) * Document Permissions::        
../texinfo/texinfo.txi(,214) * Titlepage & Copyright Page::  Creating the title and copyright pages.
../texinfo/texinfo.txi(,215) * The Top Node::                Creating the `Top' node and master menu.
../texinfo/texinfo.txi(,216) * Global Document Commands::    
../texinfo/texinfo.txi(,217) * Software Copying Permissions::  Ensure that you and others continue to
../texinfo/texinfo.txi(,218)                                     have the right to use and share software.
../texinfo/texinfo.txi(,219) 
../texinfo/texinfo.txi(,220) Texinfo File Header
../texinfo/texinfo.txi(,221) 
../texinfo/texinfo.txi(,222) * First Line::                  The first line of a Texinfo file.
../texinfo/texinfo.txi(,223) * Start of Header::             Formatting a region requires this.
../texinfo/texinfo.txi(,224) * setfilename::                 Tell Info the name of the Info file.
../texinfo/texinfo.txi(,225) * settitle::                    Create a title for the printed work.
../texinfo/texinfo.txi(,226) * End of Header::               Formatting a region requires this.
../texinfo/texinfo.txi(,227) 
../texinfo/texinfo.txi(,228) Document Permissions
../texinfo/texinfo.txi(,229) 
../texinfo/texinfo.txi(,230) * copying::                     Declare the document's copying permissions.
../texinfo/texinfo.txi(,231) * insertcopying::               Where to insert the permissions.
../texinfo/texinfo.txi(,232) 
../texinfo/texinfo.txi(,233) Title and Copyright Pages
../texinfo/texinfo.txi(,234) 
../texinfo/texinfo.txi(,235) * titlepage::                   Create a title for the printed document.
../texinfo/texinfo.txi(,236) * titlefont center sp::         The @code{@@titlefont}, @code{@@center},
../texinfo/texinfo.txi(,237)                                   and @code{@@sp} commands.
../texinfo/texinfo.txi(,238) * title subtitle author::       The @code{@@title}, @code{@@subtitle},
../texinfo/texinfo.txi(,239)                                   and @code{@@author} commands.
../texinfo/texinfo.txi(,240) * Copyright::                   How to write the copyright notice and
../texinfo/texinfo.txi(,241)                                   include copying permissions.
../texinfo/texinfo.txi(,242) * end titlepage::               Turn on page headings after the title and
../texinfo/texinfo.txi(,243)                                   copyright pages.
../texinfo/texinfo.txi(,244) * headings on off::             An option for turning headings on and off
../texinfo/texinfo.txi(,245)                                   and double or single sided printing.
../texinfo/texinfo.txi(,246) 
../texinfo/texinfo.txi(,247) The `Top' Node and Master Menu
../texinfo/texinfo.txi(,248) 
../texinfo/texinfo.txi(,249) * Top Node Example::            
../texinfo/texinfo.txi(,250) * Master Menu Parts::           
../texinfo/texinfo.txi(,251) 
../texinfo/texinfo.txi(,252) Global Document Commands
../texinfo/texinfo.txi(,253) 
../texinfo/texinfo.txi(,254) * documentdescription::         Document summary for the HTML output.
../texinfo/texinfo.txi(,255) * setchapternewpage::           Start chapters on right-hand pages.
../texinfo/texinfo.txi(,256) * paragraphindent::             Specify paragraph indentation.
../texinfo/texinfo.txi(,257) * exampleindent::               Specify environment indentation.
../texinfo/texinfo.txi(,258) 
../texinfo/texinfo.txi(,259) Ending a Texinfo File
../texinfo/texinfo.txi(,260) 
../texinfo/texinfo.txi(,261) * Printing Indices & Menus::    How to print an index in hardcopy and
../texinfo/texinfo.txi(,262)                                   generate index menus in Info.
../texinfo/texinfo.txi(,263) * Contents::                    How to create a table of contents.
../texinfo/texinfo.txi(,264) * File End::                    How to mark the end of a file.
../texinfo/texinfo.txi(,265) 
../texinfo/texinfo.txi(,266) Chapter Structuring
../texinfo/texinfo.txi(,267) 
../texinfo/texinfo.txi(,268) * Tree Structuring::            A manual is like an upside down tree @dots{}
../texinfo/texinfo.txi(,269) * Structuring Command Types::   How to divide a manual into parts.
../texinfo/texinfo.txi(,270) * makeinfo top::                The @code{@@top} command, part of the `Top' node.
../texinfo/texinfo.txi(,271) * chapter::                     
../texinfo/texinfo.txi(,272) * unnumbered & appendix::       
../texinfo/texinfo.txi(,273) * majorheading & chapheading::  
../texinfo/texinfo.txi(,274) * section::                     
../texinfo/texinfo.txi(,275) * unnumberedsec appendixsec heading::  
../texinfo/texinfo.txi(,276) * subsection::                  
../texinfo/texinfo.txi(,277) * unnumberedsubsec appendixsubsec subheading::  
../texinfo/texinfo.txi(,278) * subsubsection::               Commands for the lowest level sections.
../texinfo/texinfo.txi(,279) * Raise/lower sections::        How to change commands' hierarchical level.
../texinfo/texinfo.txi(,280) 
../texinfo/texinfo.txi(,281) Nodes
../texinfo/texinfo.txi(,282) 
../texinfo/texinfo.txi(,283) * Two Paths::                   Different commands to structure
../texinfo/texinfo.txi(,284)                                   Info output and printed output.
../texinfo/texinfo.txi(,285) * Node Menu Illustration::      A diagram, and sample nodes and menus.
../texinfo/texinfo.txi(,286) * node::                        Creating nodes, in detail.
../texinfo/texinfo.txi(,287) * makeinfo Pointer Creation::   Letting makeinfo determine node pointers.
../texinfo/texinfo.txi(,288) * anchor::                      Defining arbitrary cross-reference targets.
../texinfo/texinfo.txi(,289) 
../texinfo/texinfo.txi(,290) The @code{@@node} Command
../texinfo/texinfo.txi(,291) 
../texinfo/texinfo.txi(,292) * Node Names::                  How to choose node and pointer names.
../texinfo/texinfo.txi(,293) * Writing a Node::              How to write an @code{@@node} line.
../texinfo/texinfo.txi(,294) * Node Line Tips::              Keep names short.
../texinfo/texinfo.txi(,295) * Node Line Requirements::      Keep names unique, without @@-commands.
../texinfo/texinfo.txi(,296) * First Node::                  How to write a `Top' node.
../texinfo/texinfo.txi(,297) * makeinfo top command::        How to use the @code{@@top} command.
../texinfo/texinfo.txi(,298) 
../texinfo/texinfo.txi(,299) Menus
../texinfo/texinfo.txi(,300) 
../texinfo/texinfo.txi(,301) * Menu Location::               Put a menu in a short node.
../texinfo/texinfo.txi(,302) * Writing a Menu::              What is a menu?
../texinfo/texinfo.txi(,303) * Menu Parts::                  A menu entry has three parts.
../texinfo/texinfo.txi(,304) * Less Cluttered Menu Entry::   Two part menu entry.
../texinfo/texinfo.txi(,305) * Menu Example::                Two and three part menu entries.
../texinfo/texinfo.txi(,306) * Other Info Files::            How to refer to a different Info file.
../texinfo/texinfo.txi(,307) 
../texinfo/texinfo.txi(,308) Cross References
../texinfo/texinfo.txi(,309) 
../texinfo/texinfo.txi(,310) * References::                  What cross references are for.
../texinfo/texinfo.txi(,311) * Cross Reference Commands::    A summary of the different commands.
../texinfo/texinfo.txi(,312) * Cross Reference Parts::       A cross reference has several parts.
../texinfo/texinfo.txi(,313) * xref::                        Begin a reference with `See' @dots{}
../texinfo/texinfo.txi(,314) * Top Node Naming::             How to refer to the beginning of another file.
../texinfo/texinfo.txi(,315) * ref::                         A reference for the last part of a sentence.
../texinfo/texinfo.txi(,316) * pxref::                       How to write a parenthetical cross reference.
../texinfo/texinfo.txi(,317) * inforef::                     How to refer to an Info-only file.
../texinfo/texinfo.txi(,318) * uref::                        How to refer to a uniform resource locator.
../texinfo/texinfo.txi(,319) 
../texinfo/texinfo.txi(,320) @code{@@xref}
../texinfo/texinfo.txi(,321) 
../texinfo/texinfo.txi(,322) * Reference Syntax::            What a reference looks like and requires.
../texinfo/texinfo.txi(,323) * One Argument::                @code{@@xref} with one argument.
../texinfo/texinfo.txi(,324) * Two Arguments::               @code{@@xref} with two arguments.
../texinfo/texinfo.txi(,325) * Three Arguments::             @code{@@xref} with three arguments.
../texinfo/texinfo.txi(,326) * Four and Five Arguments::     @code{@@xref} with four and five arguments.
../texinfo/texinfo.txi(,327) 
../texinfo/texinfo.txi(,328) Marking Words and Phrases
../texinfo/texinfo.txi(,329) 
../texinfo/texinfo.txi(,330) * Indicating::                  How to indicate definitions, files, etc.
../texinfo/texinfo.txi(,331) * Emphasis::                    How to emphasize text.
../texinfo/texinfo.txi(,332) 
../texinfo/texinfo.txi(,333) Indicating Definitions, Commands, etc.
../texinfo/texinfo.txi(,334) 
../texinfo/texinfo.txi(,335) * Useful Highlighting::         Highlighting provides useful information.
../texinfo/texinfo.txi(,336) * code::                        Indicating program code.
../texinfo/texinfo.txi(,337) * kbd::                         Showing keyboard input.
../texinfo/texinfo.txi(,338) * key::                         Specifying keys.
../texinfo/texinfo.txi(,339) * samp::                        A literal sequence of characters.
../texinfo/texinfo.txi(,340) * verb::                        A verbatim sequence of characters.
../texinfo/texinfo.txi(,341) * var::                         Indicating metasyntactic variables.
../texinfo/texinfo.txi(,342) * env::                         Indicating environment variables.
../texinfo/texinfo.txi(,343) * file::                        Indicating file names.
../texinfo/texinfo.txi(,344) * command::                     Indicating command names.
../texinfo/texinfo.txi(,345) * option::                      Indicating option names.
../texinfo/texinfo.txi(,346) * dfn::                         Specifying definitions.
../texinfo/texinfo.txi(,347) * cite::                        Referring to books not in the  Info system.
../texinfo/texinfo.txi(,348) * acronym::                     Indicating acronyms.
../texinfo/texinfo.txi(,349) * url::                         Indicating a World Wide Web reference.
../texinfo/texinfo.txi(,350) * email::                       Indicating an electronic mail address.
../texinfo/texinfo.txi(,351) 
../texinfo/texinfo.txi(,352) Emphasizing Text
../texinfo/texinfo.txi(,353) 
../texinfo/texinfo.txi(,354) * emph & strong::               How to emphasize text in Texinfo.
../texinfo/texinfo.txi(,355) * Smallcaps::                   How to use the small caps font.
../texinfo/texinfo.txi(,356) * Fonts::                       Various font commands for printed output.
../texinfo/texinfo.txi(,357) 
../texinfo/texinfo.txi(,358) Quotations and Examples
../texinfo/texinfo.txi(,359) 
../texinfo/texinfo.txi(,360) * Block Enclosing Commands::    Different constructs for different purposes.
../texinfo/texinfo.txi(,361) * quotation::                   Writing a quotation.
../texinfo/texinfo.txi(,362) * example::                     Writing an example in a fixed-width font.
../texinfo/texinfo.txi(,363) * verbatim::                    Writing a verbatim example.
../texinfo/texinfo.txi(,364) * verbatiminclude::             Including a file verbatim.
../texinfo/texinfo.txi(,365) * lisp::                        Illustrating Lisp code.
../texinfo/texinfo.txi(,366) * small::                       Forms for @code{@@smallbook}.
../texinfo/texinfo.txi(,367) * display::                     Writing an example in the current font.
../texinfo/texinfo.txi(,368) * format::                      Writing an example without narrowed margins.
../texinfo/texinfo.txi(,369) * exdent::                      Undo indentation on a line.
../texinfo/texinfo.txi(,370) * flushleft & flushright::      Pushing text flush left or flush right.
../texinfo/texinfo.txi(,371) * noindent::                    Preventing paragraph indentation.
../texinfo/texinfo.txi(,372) * cartouche::                   Drawing rounded rectangles around examples.
../texinfo/texinfo.txi(,373) 
../texinfo/texinfo.txi(,374) Lists and Tables
../texinfo/texinfo.txi(,375) 
../texinfo/texinfo.txi(,376) * Introducing Lists::           Texinfo formats lists for you.
../texinfo/texinfo.txi(,377) * itemize::                     How to construct a simple list.
../texinfo/texinfo.txi(,378) * enumerate::                   How to construct a numbered list.
../texinfo/texinfo.txi(,379) * Two-column Tables::           How to construct a two-column table.
../texinfo/texinfo.txi(,380) * Multi-column Tables::         How to construct generalized tables.
../texinfo/texinfo.txi(,381) 
../texinfo/texinfo.txi(,382) Making a Two-column Table
../texinfo/texinfo.txi(,383) 
../texinfo/texinfo.txi(,384) * table::                       How to construct a two-column table.
../texinfo/texinfo.txi(,385) * ftable vtable::               Automatic indexing for two-column tables.
../texinfo/texinfo.txi(,386) * itemx::                       How to put more entries in the first column.
../texinfo/texinfo.txi(,387) 
../texinfo/texinfo.txi(,388) Multi-column Tables
../texinfo/texinfo.txi(,389) 
../texinfo/texinfo.txi(,390) * Multitable Column Widths::    Defining multitable column widths.
../texinfo/texinfo.txi(,391) * Multitable Rows::             Defining multitable rows, with examples.
../texinfo/texinfo.txi(,392) 
../texinfo/texinfo.txi(,393) Indices
../texinfo/texinfo.txi(,394) 
../texinfo/texinfo.txi(,395) * Index Entries::               Choose different words for index entries.
../texinfo/texinfo.txi(,396) * Predefined Indices::          Use different indices for different kinds
../texinfo/texinfo.txi(,397)                                   of entry.
../texinfo/texinfo.txi(,398) * Indexing Commands::           How to make an index entry.
../texinfo/texinfo.txi(,399) * Combining Indices::           How to combine indices.
../texinfo/texinfo.txi(,400) * New Indices::                 How to define your own indices.
../texinfo/texinfo.txi(,401) 
../texinfo/texinfo.txi(,402) Combining Indices
../texinfo/texinfo.txi(,403) 
../texinfo/texinfo.txi(,404) * syncodeindex::                How to merge two indices, using @code{@@code}
../texinfo/texinfo.txi(,405)                                   font for the merged-from index.
../texinfo/texinfo.txi(,406) * synindex::                    How to merge two indices, using the
../texinfo/texinfo.txi(,407)                                   default font of the merged-to index.
../texinfo/texinfo.txi(,408) 
../texinfo/texinfo.txi(,409) Special Insertions
../texinfo/texinfo.txi(,410) 
../texinfo/texinfo.txi(,411) * Braces Atsigns::              How to insert braces, @samp{@@}.
../texinfo/texinfo.txi(,412) * Inserting Space::             How to insert the right amount of space
../texinfo/texinfo.txi(,413)                                   within a sentence.
../texinfo/texinfo.txi(,414) * Inserting Accents::           How to insert accents and special characters.
../texinfo/texinfo.txi(,415) * Dots Bullets::                How to insert dots and bullets.
../texinfo/texinfo.txi(,416) * TeX and copyright::           How to insert the @TeX{} logo
../texinfo/texinfo.txi(,417)                                   and the copyright symbol.
../texinfo/texinfo.txi(,418) * pounds::                      How to insert the pounds currency symbol.
../texinfo/texinfo.txi(,419) * minus::                       How to insert a minus sign.
../texinfo/texinfo.txi(,420) * math::                        How to format a mathematical expression.
../texinfo/texinfo.txi(,421) * Glyphs::                      How to indicate results of evaluation,
../texinfo/texinfo.txi(,422)                                   expansion of macros, errors, etc.
../texinfo/texinfo.txi(,423) * Footnotes::                   How to include footnotes.
../texinfo/texinfo.txi(,424) * Images::                      How to include graphics.
../texinfo/texinfo.txi(,425) 
../texinfo/texinfo.txi(,426) Inserting @@ and Braces
../texinfo/texinfo.txi(,427) 
../texinfo/texinfo.txi(,428) * Inserting An Atsign::         How to insert @samp{@@}.
../texinfo/texinfo.txi(,429) * Inserting Braces::            How to insert @samp{@{} and @samp{@}}.
../texinfo/texinfo.txi(,430) 
../texinfo/texinfo.txi(,431) Inserting Space
../texinfo/texinfo.txi(,432) 
../texinfo/texinfo.txi(,433) * Not Ending a Sentence::       Sometimes a . doesn't end a sentence.
../texinfo/texinfo.txi(,434) * Ending a Sentence::           Sometimes it does.
../texinfo/texinfo.txi(,435) * Multiple Spaces::             Inserting multiple spaces.
../texinfo/texinfo.txi(,436) * dmn::                         How to format a dimension.
../texinfo/texinfo.txi(,437) 
../texinfo/texinfo.txi(,438) Inserting Ellipsis and Bullets
../texinfo/texinfo.txi(,439) 
../texinfo/texinfo.txi(,440) * dots::                        How to insert dots @dots{}
../texinfo/texinfo.txi(,441) * bullet::                      How to insert a bullet.
../texinfo/texinfo.txi(,442) 
../texinfo/texinfo.txi(,443) Inserting @TeX{} and the Copyright Symbol
../texinfo/texinfo.txi(,444) 
../texinfo/texinfo.txi(,445) * tex::                         How to insert the @TeX{} logo.
../texinfo/texinfo.txi(,446) * copyright symbol::            How to use @code{@@copyright}@{@}.
../texinfo/texinfo.txi(,447) 
../texinfo/texinfo.txi(,448) Glyphs for Examples
../texinfo/texinfo.txi(,449) 
../texinfo/texinfo.txi(,450) * Glyphs Summary::              
../texinfo/texinfo.txi(,451) * result::                      How to show the result of expression.
../texinfo/texinfo.txi(,452) * expansion::                   How to indicate an expansion.
../texinfo/texinfo.txi(,453) * Print Glyph::                 How to indicate printed output.
../texinfo/texinfo.txi(,454) * Error Glyph::                 How to indicate an error message.
../texinfo/texinfo.txi(,455) * Equivalence::                 How to indicate equivalence.
../texinfo/texinfo.txi(,456) * Point Glyph::                 How to indicate the location of point.
../texinfo/texinfo.txi(,457) 
../texinfo/texinfo.txi(,458) Glyphs Summary
../texinfo/texinfo.txi(,459) 
../texinfo/texinfo.txi(,460) * result::
../texinfo/texinfo.txi(,461) * expansion::
../texinfo/texinfo.txi(,462) * Print Glyph::
../texinfo/texinfo.txi(,463) * Error Glyph::
../texinfo/texinfo.txi(,464) * Equivalence::
../texinfo/texinfo.txi(,465) * Point Glyph::
../texinfo/texinfo.txi(,466) 
../texinfo/texinfo.txi(,467) Footnotes
../texinfo/texinfo.txi(,468) 
../texinfo/texinfo.txi(,469) * Footnote Commands::           How to write a footnote in Texinfo.
../texinfo/texinfo.txi(,470) * Footnote Styles::             Controlling how footnotes appear in Info.
../texinfo/texinfo.txi(,471) 
../texinfo/texinfo.txi(,472) Making and Preventing Breaks
../texinfo/texinfo.txi(,473) 
../texinfo/texinfo.txi(,474) * Break Commands::              Cause and prevent splits.
../texinfo/texinfo.txi(,475) * Line Breaks::                 How to force a single line to use two lines.
../texinfo/texinfo.txi(,476) * - and hyphenation::           How to tell @TeX{} about hyphenation points.
../texinfo/texinfo.txi(,477) * w::                           How to prevent unwanted line breaks.
../texinfo/texinfo.txi(,478) * sp::                          How to insert blank lines.
../texinfo/texinfo.txi(,479) * page::                        How to force the start of a new page.
../texinfo/texinfo.txi(,480) * group::                       How to prevent unwanted page breaks.
../texinfo/texinfo.txi(,481) * need::                        Another way to prevent unwanted page breaks.
../texinfo/texinfo.txi(,482) 
../texinfo/texinfo.txi(,483) Definition Commands
../texinfo/texinfo.txi(,484) 
../texinfo/texinfo.txi(,485) * Def Cmd Template::            How to structure a description using a
../texinfo/texinfo.txi(,486)                                   definition command.
../texinfo/texinfo.txi(,487) * Optional Arguments::          How to handle optional and repeated arguments.
../texinfo/texinfo.txi(,488) * deffnx::                      How to group two or more `first' lines.
../texinfo/texinfo.txi(,489) * Def Cmds in Detail::          All the definition commands.
../texinfo/texinfo.txi(,490) * Def Cmd Conventions::         Conventions for writing definitions.
../texinfo/texinfo.txi(,491) * Sample Function Definition::  
../texinfo/texinfo.txi(,492) 
../texinfo/texinfo.txi(,493) The Definition Commands
../texinfo/texinfo.txi(,494) 
../texinfo/texinfo.txi(,495) * Functions Commands::          Commands for functions and similar entities.
../texinfo/texinfo.txi(,496) * Variables Commands::          Commands for variables and similar entities.
../texinfo/texinfo.txi(,497) * Typed Functions::             Commands for functions in typed languages.
../texinfo/texinfo.txi(,498) * Typed Variables::             Commands for variables in typed languages.
../texinfo/texinfo.txi(,499) * Abstract Objects::            Commands for object-oriented programming.
../texinfo/texinfo.txi(,500) * Data Types::                  The definition command for data types.
../texinfo/texinfo.txi(,501) 
../texinfo/texinfo.txi(,502) Conditionally Visible Text
../texinfo/texinfo.txi(,503) 
../texinfo/texinfo.txi(,504) * Conditional Commands::        Specifying text for HTML, Info, or @TeX{}.
../texinfo/texinfo.txi(,505) * Conditional Not Commands::    Specifying text for not HTML, Info, or @TeX{}.
../texinfo/texinfo.txi(,506) * Raw Formatter Commands::      Using raw @TeX{} or HTML commands.
../texinfo/texinfo.txi(,507) * set clear value::             Designating which text to format (for
../texinfo/texinfo.txi(,508)                                   all output formats); and how to set a
../texinfo/texinfo.txi(,509)                                   flag to a string that you can insert.
../texinfo/texinfo.txi(,510) 
../texinfo/texinfo.txi(,511) @code{@@set}, @code{@@clear}, and @code{@@value}
../texinfo/texinfo.txi(,512) 
../texinfo/texinfo.txi(,513) * set value::                   Expand a flag variable to a string.
../texinfo/texinfo.txi(,514) * ifset ifclear::               Format a region if a flag is set.
../texinfo/texinfo.txi(,515) * value Example::               An easy way to update edition information.
../texinfo/texinfo.txi(,516) 
../texinfo/texinfo.txi(,517) Internationalization
../texinfo/texinfo.txi(,518) 
../texinfo/texinfo.txi(,519) * documentlanguage::            Declaring the current language.
../texinfo/texinfo.txi(,520) * documentencoding::            Declaring the input encoding.
../texinfo/texinfo.txi(,521) 
../texinfo/texinfo.txi(,522) Defining New Texinfo Commands
../texinfo/texinfo.txi(,523) 
../texinfo/texinfo.txi(,524) * Defining Macros::             Defining and undefining new commands.
../texinfo/texinfo.txi(,525) * Invoking Macros::             Using a macro, once you've defined it.
../texinfo/texinfo.txi(,526) * Macro Details::               Beyond basic macro usage.
../texinfo/texinfo.txi(,527) * alias::                       Command aliases.
../texinfo/texinfo.txi(,528) * definfoenclose::              Customized highlighting.
../texinfo/texinfo.txi(,529) 
../texinfo/texinfo.txi(,530) Formatting and Printing Hardcopy
../texinfo/texinfo.txi(,531) 
../texinfo/texinfo.txi(,532) * Use TeX::                     Use @TeX{} to format for hardcopy.
../texinfo/texinfo.txi(,533) * Format with tex/texindex::    How to format with explicit shell commands.
../texinfo/texinfo.txi(,534) * Format with texi2dvi::        A simpler way to format.
../texinfo/texinfo.txi(,535) * Print with lpr::              How to print.
../texinfo/texinfo.txi(,536) * Within Emacs::                How to format and print from an Emacs shell.
../texinfo/texinfo.txi(,537) * Texinfo Mode Printing::       How to format and print in Texinfo mode.
../texinfo/texinfo.txi(,538) * Compile-Command::             How to print using Emacs's compile command.
../texinfo/texinfo.txi(,539) * Requirements Summary::        @TeX{} formatting requirements summary.
../texinfo/texinfo.txi(,540) * Preparing for TeX::           What to do before you use @TeX{}.
../texinfo/texinfo.txi(,541) * Overfull hboxes::             What are and what to do with overfull hboxes.
../texinfo/texinfo.txi(,542) * smallbook::                   How to print small format books and manuals.
../texinfo/texinfo.txi(,543) * A4 Paper::                    How to print on A4 or A5 paper.
../texinfo/texinfo.txi(,544) * pagesizes::                   How to print with customized page sizes.
../texinfo/texinfo.txi(,545) * Cropmarks and Magnification::  How to print marks to indicate the size
../texinfo/texinfo.txi(,546)                                 of pages and how to print scaled up output.
../texinfo/texinfo.txi(,547) * PDF Output::                  Portable Document Format output.
../texinfo/texinfo.txi(,548) 
../texinfo/texinfo.txi(,549) Creating and Installing Info Files
../texinfo/texinfo.txi(,550) 
../texinfo/texinfo.txi(,551) * Creating an Info File::       
../texinfo/texinfo.txi(,552) * Installing an Info File::     
../texinfo/texinfo.txi(,553) 
../texinfo/texinfo.txi(,554) Creating an Info File
../texinfo/texinfo.txi(,555) 
../texinfo/texinfo.txi(,556) * makeinfo advantages::         @code{makeinfo} provides better error checking.
../texinfo/texinfo.txi(,557) * Invoking makeinfo::           How to run @code{makeinfo} from a shell.
../texinfo/texinfo.txi(,558) * makeinfo options::            Specify fill-column and other options.
../texinfo/texinfo.txi(,559) * Pointer Validation::          How to check that pointers point somewhere.
../texinfo/texinfo.txi(,560) * makeinfo in Emacs::           How to run @code{makeinfo} from Emacs.
../texinfo/texinfo.txi(,561) * texinfo-format commands::     Two Info formatting commands written
../texinfo/texinfo.txi(,562)                                   in Emacs Lisp are an alternative
../texinfo/texinfo.txi(,563)                                   to @code{makeinfo}.
../texinfo/texinfo.txi(,564) * Batch Formatting::            How to format for Info in Emacs Batch mode.
../texinfo/texinfo.txi(,565) * Tag and Split Files::         How tagged and split files help Info
../texinfo/texinfo.txi(,566)                                   to run better.
../texinfo/texinfo.txi(,567) * makeinfo html::               Generating HTML output.
../texinfo/texinfo.txi(,568) 
../texinfo/texinfo.txi(,569) Installing an Info File
../texinfo/texinfo.txi(,570) 
../texinfo/texinfo.txi(,571) * Directory File::              The top level menu for all Info files.
../texinfo/texinfo.txi(,572) * New Info File::               Listing a new Info file.
../texinfo/texinfo.txi(,573) * Other Info Directories::      How to specify Info files that are
../texinfo/texinfo.txi(,574)                                   located in other directories.
../texinfo/texinfo.txi(,575) * Installing Dir Entries::      How to specify what menu entry to add
../texinfo/texinfo.txi(,576)                                   to the Info directory.
../texinfo/texinfo.txi(,577) * Invoking install-info::       @code{install-info} options.
../texinfo/texinfo.txi(,578) 
../texinfo/texinfo.txi(,579) Sample Texinfo Files
../texinfo/texinfo.txi(,580) 
../texinfo/texinfo.txi(,581) * Short Sample Texinfo File::   
../texinfo/texinfo.txi(,582) * GNU Sample Texts::            
../texinfo/texinfo.txi(,583) 
../texinfo/texinfo.txi(,584) Include Files
../texinfo/texinfo.txi(,585) 
../texinfo/texinfo.txi(,586) * Using Include Files::         How to use the @code{@@include} command.
../texinfo/texinfo.txi(,587) * texinfo-multiple-files-update::  How to create and update nodes and
../texinfo/texinfo.txi(,588)                                   menus when using included files.
../texinfo/texinfo.txi(,589) * Include File Requirements::   What @code{texinfo-multiple-files-update} expects.
../texinfo/texinfo.txi(,590) * Sample Include File::         A sample outer file with included files
../texinfo/texinfo.txi(,591)                                   within it; and a sample included file.
../texinfo/texinfo.txi(,592) * Include Files Evolution::     How use of the @code{@@include} command
../texinfo/texinfo.txi(,593)                                   has changed over time.
../texinfo/texinfo.txi(,594) 
../texinfo/texinfo.txi(,595) Page Headings
../texinfo/texinfo.txi(,596) 
../texinfo/texinfo.txi(,597) * Headings Introduced::         Conventions for using page headings.
../texinfo/texinfo.txi(,598) * Heading Format::              Standard page heading formats.
../texinfo/texinfo.txi(,599) * Heading Choice::              How to specify the type of page heading.
../texinfo/texinfo.txi(,600) * Custom Headings::             How to create your own headings and footings.
../texinfo/texinfo.txi(,601) 
../texinfo/texinfo.txi(,602) Formatting Mistakes
../texinfo/texinfo.txi(,603) 
../texinfo/texinfo.txi(,604) * makeinfo Preferred::          @code{makeinfo} finds errors.
../texinfo/texinfo.txi(,605) * Debugging with Info::         How to catch errors with Info formatting.
../texinfo/texinfo.txi(,606) * Debugging with TeX::          How to catch errors with @TeX{} formatting.
../texinfo/texinfo.txi(,607) * Using texinfo-show-structure::  How to use @code{texinfo-show-structure}.
../texinfo/texinfo.txi(,608) * Using occur::                 How to list all lines containing a pattern.
../texinfo/texinfo.txi(,609) * Running Info-Validate::       How to find badly referenced nodes.
../texinfo/texinfo.txi(,610) 
../texinfo/texinfo.txi(,611) Finding Badly Referenced Nodes
../texinfo/texinfo.txi(,612) 
../texinfo/texinfo.txi(,613) * Using Info-validate::         How to run @code{Info-validate}.
../texinfo/texinfo.txi(,614) * Unsplit::                     How to create an unsplit file.
../texinfo/texinfo.txi(,615) * Tagifying::                   How to tagify a file.
../texinfo/texinfo.txi(,616) * Splitting::                   How to split a file manually.
../texinfo/texinfo.txi(,617) 
../texinfo/texinfo.txi(,618) Copying This Manual
../texinfo/texinfo.txi(,619) 
../texinfo/texinfo.txi(,620) * GNU Free Documentation License::  License for copying this manual.
../texinfo/texinfo.txi(,621) 
../texinfo/texinfo.txi(,622) @end detailmenu
../texinfo/texinfo.txi(,623) @end menu
../texinfo/texinfo.txi(,624) 
../texinfo/texinfo.txi(,625) @c Reward readers for getting to the end of the menu :).
../texinfo/texinfo.txi(,626) @c Contributed by Arnold Robbins.
../texinfo/texinfo.txi(,627) @quotation
../texinfo/texinfo.txi(,628) Documentation is like sex: when it is good, it is very, very good; and
../texinfo/texinfo.txi(,629) when it is bad, it is better than nothing.
../texinfo/texinfo.txi(,630) ---Dick Brandon
../texinfo/texinfo.txi(,631) @end quotation
../texinfo/texinfo.txi(,632) 
../texinfo/texinfo.txi(,633) 
../texinfo/texinfo.txi(,634) @node Copying Conditions
../texinfo/texinfo.txi(,635) @unnumbered Texinfo Copying Conditions
../texinfo/texinfo.txi(,636) @cindex Copying conditions
../texinfo/texinfo.txi(,637) @cindex Conditions for copying Texinfo
../texinfo/texinfo.txi(,638) 
../texinfo/texinfo.txi(,639) The programs currently being distributed that relate to Texinfo include
../texinfo/texinfo.txi(,640) @code{makeinfo}, @code{info}, @code{texindex}, and @file{texinfo.tex}.
../texinfo/texinfo.txi(,641) These programs are @dfn{free}; this means that everyone is free to use
../texinfo/texinfo.txi(,642) them and free to redistribute them on a free basis.  The Texinfo-related
../texinfo/texinfo.txi(,643) programs are not in the public domain; they are copyrighted and there
../texinfo/texinfo.txi(,644) are restrictions on their distribution, but these restrictions are
../texinfo/texinfo.txi(,645) designed to permit everything that a good cooperating citizen would want
../texinfo/texinfo.txi(,646) to do.  What is not allowed is to try to prevent others from further
../texinfo/texinfo.txi(,647) sharing any version of these programs that they might get from you.
../texinfo/texinfo.txi(,648) 
../texinfo/texinfo.txi(,649) Specifically, we want to make sure that you have the right to give away
../texinfo/texinfo.txi(,650) copies of the programs that relate to Texinfo, that you receive source
../texinfo/texinfo.txi(,651) code or else can get it if you want it, that you can change these
../texinfo/texinfo.txi(,652) programs or use pieces of them in new free programs, and that you know
../texinfo/texinfo.txi(,653) you can do these things.
../texinfo/texinfo.txi(,654) 
../texinfo/texinfo.txi(,655) To make sure that everyone has such rights, we have to forbid you to
../texinfo/texinfo.txi(,656) deprive anyone else of these rights.  For example, if you distribute
../texinfo/texinfo.txi(,657) copies of the Texinfo related programs, you must give the recipients all
../texinfo/texinfo.txi(,658) the rights that you have.  You must make sure that they, too, receive or
../texinfo/texinfo.txi(,659) can get the source code.  And you must tell them their rights.
../texinfo/texinfo.txi(,660) 
../texinfo/texinfo.txi(,661) Also, for our own protection, we must make certain that everyone finds
../texinfo/texinfo.txi(,662) out that there is no warranty for the programs that relate to Texinfo.
../texinfo/texinfo.txi(,663) If these programs are modified by someone else and passed on, we want
../texinfo/texinfo.txi(,664) their recipients to know that what they have is not what we distributed,
../texinfo/texinfo.txi(,665) so that any problems introduced by others will not reflect on our
../texinfo/texinfo.txi(,666) reputation.
../texinfo/texinfo.txi(,667) 
../texinfo/texinfo.txi(,668) The precise conditions of the licenses for the programs currently being
../texinfo/texinfo.txi(,669) distributed that relate to Texinfo are found in the General Public
../texinfo/texinfo.txi(,670) Licenses that accompany them.  This manual specifically is covered by
../texinfo/texinfo.txi(,671) the GNU Free Documentation License (@pxref{GNU Free Documentation
../texinfo/texinfo.txi(,672) License}).
../texinfo/texinfo.txi(,673) 
../texinfo/texinfo.txi(,674) 
../texinfo/texinfo.txi(,675) @node Overview
../texinfo/texinfo.txi(,676) @chapter Overview of Texinfo
../texinfo/texinfo.txi(,677) @cindex Overview of Texinfo
../texinfo/texinfo.txi(,678) @cindex Texinfo overview
../texinfo/texinfo.txi(,679) 
../texinfo/texinfo.txi(,680) @dfn{Texinfo}@footnote{The first syllable of ``Texinfo'' is pronounced
../texinfo/texinfo.txi(,681) like ``speck'', not ``hex''.  This odd pronunciation is derived from,
../texinfo/texinfo.txi(,682) but is not the same as, the pronunciation of @TeX{}.  In the word
../texinfo/texinfo.txi(,683) @TeX{}, the @samp{X} is actually the Greek letter ``chi'' rather than
../texinfo/texinfo.txi(,684) the English letter ``ex''.  Pronounce @TeX{} as if the @samp{X} were the
../texinfo/texinfo.txi(,685) last sound in the name `Bach'; but pronounce Texinfo as if the @samp{x}
../texinfo/texinfo.txi(,686) were a `k'.  Spell ``Texinfo'' with a capital ``T'' and the other
../texinfo/texinfo.txi(,687) letters in lower case.}  is a documentation system that uses a single
../texinfo/texinfo.txi(,688) source file to produce both online information and printed output.  This
../texinfo/texinfo.txi(,689) means that instead of writing two different documents, one for the
../texinfo/texinfo.txi(,690) online information and the other for a printed work, you need write only
../texinfo/texinfo.txi(,691) one document.  Therefore, when the work is revised, you need revise only
../texinfo/texinfo.txi(,692) that one document.
../texinfo/texinfo.txi(,693) 
../texinfo/texinfo.txi(,694) @menu
../texinfo/texinfo.txi(,695) * Reporting Bugs::              Submitting effective bug reports.
../texinfo/texinfo.txi(,696) * Using Texinfo::               Create printed or online output.
../texinfo/texinfo.txi(,697) * Info Files::                  What is an Info file?
../texinfo/texinfo.txi(,698) * Printed Books::               Characteristics of a printed book or manual.
../texinfo/texinfo.txi(,699) * Formatting Commands::         @@-commands are used for formatting.
../texinfo/texinfo.txi(,700) * Conventions::                 General rules for writing a Texinfo file.
../texinfo/texinfo.txi(,701) * Comments::                    Writing comments and ignored text in general.
../texinfo/texinfo.txi(,702) * Minimum::                     What a Texinfo file must have.
../texinfo/texinfo.txi(,703) * Six Parts::                   Usually, a Texinfo file has six parts.
../texinfo/texinfo.txi(,704) * Short Sample::                A short sample Texinfo file.
../texinfo/texinfo.txi(,705) * History::                     Acknowledgements, contributors and genesis.
../texinfo/texinfo.txi(,706) @end menu
../texinfo/texinfo.txi(,707) 
../texinfo/texinfo.txi(,708) 
../texinfo/texinfo.txi(,709) @node Reporting Bugs
../texinfo/texinfo.txi(,710) @section Reporting Bugs
../texinfo/texinfo.txi(,711) 
../texinfo/texinfo.txi(,712) @cindex Bugs, reporting
../texinfo/texinfo.txi(,713) @cindex Suggestions for Texinfo, making
../texinfo/texinfo.txi(,714) @cindex Reporting bugs
../texinfo/texinfo.txi(,715) We welcome bug reports and suggestions for any aspect of the Texinfo system,
../texinfo/texinfo.txi(,716) programs, documentation, installation, anything.  Please email them to
../texinfo/texinfo.txi(,717) @email{bug-texinfo@@gnu.org}.  You can get the latest version of Texinfo
../texinfo/texinfo.txi(,718) from @uref{ftp://ftp.gnu.org/gnu/texinfo/} and its mirrors worldwide.
../texinfo/texinfo.txi(,719) 
../texinfo/texinfo.txi(,720) @cindex Checklist for bug reports
../texinfo/texinfo.txi(,721) For bug reports, please include enough information for the maintainers
../texinfo/texinfo.txi(,722) to reproduce the problem.  Generally speaking, that means:
../texinfo/texinfo.txi(,723) 
../texinfo/texinfo.txi(,724) @itemize @bullet
../texinfo/texinfo.txi(,725) @item the version number of Texinfo and the program(s) or manual(s) involved.
../texinfo/texinfo.txi(,726) @item hardware and operating system names and versions.
../texinfo/texinfo.txi(,727) @item the contents of any input files necessary to reproduce the bug.
../texinfo/texinfo.txi(,728) @item a description of the problem and samples of any erroneous output.
../texinfo/texinfo.txi(,729) @item any unusual options you gave to @command{configure}.
../texinfo/texinfo.txi(,730) @item anything else that you think would be helpful.
../texinfo/texinfo.txi(,731) @end itemize
../texinfo/texinfo.txi(,732) 
../texinfo/texinfo.txi(,733) When in doubt whether something is needed or not, include it.  It's
../texinfo/texinfo.txi(,734) better to include too much than to leave out something important.
../texinfo/texinfo.txi(,735) 
../texinfo/texinfo.txi(,736) @cindex Patches, contributing
../texinfo/texinfo.txi(,737) Patches are most welcome; if possible, please make them with
../texinfo/texinfo.txi(,738) @samp{@w{diff -c}} (@pxref{Top,, Overview, diffutils, Comparing and
../texinfo/texinfo.txi(,739) Merging Files}) and include @file{ChangeLog} entries (@pxref{Change
../texinfo/texinfo.txi(,740) Log,,, emacs, The GNU Emacs Manual}).
../texinfo/texinfo.txi(,741) 
../texinfo/texinfo.txi(,742) When sending patches, if possible please do not encode or split them in
../texinfo/texinfo.txi(,743) any way; it's much easier to deal with one plain text message, however
../texinfo/texinfo.txi(,744) large, than many small ones.  @uref{ftp://ftp.gnu.org/gnu/sharutils/,
../texinfo/texinfo.txi(,745) GNU shar} is a convenient way of packaging multiple and/or binary files
../texinfo/texinfo.txi(,746) for email.
../texinfo/texinfo.txi(,747) 
../texinfo/texinfo.txi(,748) 
../texinfo/texinfo.txi(,749) @node Using Texinfo
../texinfo/texinfo.txi(,750) @section Using Texinfo
../texinfo/texinfo.txi(,751) 
../texinfo/texinfo.txi(,752) @cindex Using Texinfo in general
../texinfo/texinfo.txi(,753) @cindex Texinfo, introduction to
../texinfo/texinfo.txi(,754) @cindex Introduction to Texinfo
../texinfo/texinfo.txi(,755) 
../texinfo/texinfo.txi(,756) Using Texinfo, you can create a printed document with the normal
../texinfo/texinfo.txi(,757) features of a book, including chapters, sections, cross references, and
../texinfo/texinfo.txi(,758) indices.  From the same Texinfo source file, you can create a
../texinfo/texinfo.txi(,759) menu-driven, online Info file with nodes, menus, cross references, and
../texinfo/texinfo.txi(,760) indices.  You can also create from that same source file an HTML output
../texinfo/texinfo.txi(,761) file suitable for use with a web browser, or an XML file.  @cite{The GNU
../texinfo/texinfo.txi(,762) Emacs Manual} is a good example of a Texinfo file, as is this manual.
../texinfo/texinfo.txi(,763) 
../texinfo/texinfo.txi(,764) To make a printed document, you process a Texinfo source file with the
../texinfo/texinfo.txi(,765) @TeX{} typesetting program (but the Texinfo language is very different
../texinfo/texinfo.txi(,766) and much stricter than @TeX{}'s usual language, plain @TeX{}).  This
../texinfo/texinfo.txi(,767) creates a DVI file that you can typeset and print as a book or report
../texinfo/texinfo.txi(,768) (@pxref{Hardcopy}).
../texinfo/texinfo.txi(,769) 
../texinfo/texinfo.txi(,770) @pindex makeinfo
../texinfo/texinfo.txi(,771) To output an Info file, process your Texinfo source with the
../texinfo/texinfo.txi(,772) @code{makeinfo} utility or Emacs's @code{texinfo-format-buffer} command.
../texinfo/texinfo.txi(,773) You can install the result in your Info tree (@pxref{Installing an Info
../texinfo/texinfo.txi(,774) File}).
../texinfo/texinfo.txi(,775) 
../texinfo/texinfo.txi(,776) To output an HTML file, run @code{makeinfo --html} on your Texinfo
../texinfo/texinfo.txi(,777) source.  You can (for example) install the result on your web site.
../texinfo/texinfo.txi(,778) 
../texinfo/texinfo.txi(,779) @cindex Docbook, converting to Texinfo
../texinfo/texinfo.txi(,780) @cindex Conversion, from Docbook to Texinfo
../texinfo/texinfo.txi(,781) To output an XML file, run @code{makeinfo --xml} on your Texinfo source.
../texinfo/texinfo.txi(,782) To output DocBook (a particular form of XML), run @code{makeinfo
../texinfo/texinfo.txi(,783) --docbook}.  If you want to convert from Docbook @emph{to} Texinfo,
../texinfo/texinfo.txi(,784) please see @uref{http://docbook2X.sourceforge.net/}.
../texinfo/texinfo.txi(,785) 
../texinfo/texinfo.txi(,786) @cindex Output formats, supporting more
../texinfo/texinfo.txi(,787) @cindex SGML-tools output format
../texinfo/texinfo.txi(,788) If you are a programmer and would like to contribute to the GNU project
../texinfo/texinfo.txi(,789) by implementing additional output formats for Texinfo, that would be
../texinfo/texinfo.txi(,790) excellent.  But please do not write a separate translator texi2foo for
../texinfo/texinfo.txi(,791) your favorite format foo!  That is the hard way to do the job, and makes
../texinfo/texinfo.txi(,792) extra work in subsequent maintenance, since the Texinfo language is
../texinfo/texinfo.txi(,793) continually being enhanced and updated.  Instead, the best approach is
../texinfo/texinfo.txi(,794) modify @code{makeinfo} to generate the new format, as it does now for
../texinfo/texinfo.txi(,795) Info, plain text, HTML, XML, and DocBook.
../texinfo/texinfo.txi(,796) 
../texinfo/texinfo.txi(,797) @TeX{} works with virtually all printers; Info works with virtually all
../texinfo/texinfo.txi(,798) computer terminals; the HTML output works with virtually all web
../texinfo/texinfo.txi(,799) browsers.  Thus Texinfo can be used by almost any computer user.
../texinfo/texinfo.txi(,800) 
../texinfo/texinfo.txi(,801) @cindex Source file
../texinfo/texinfo.txi(,802) A Texinfo source file is a plain @sc{ascii} file containing text and
../texinfo/texinfo.txi(,803) @dfn{@@-commands} (words preceded by an @samp{@@}) that tell the
../texinfo/texinfo.txi(,804) typesetting and formatting programs what to do.  You may edit a Texinfo
../texinfo/texinfo.txi(,805) file with any text editor; but it is especially convenient to use GNU
../texinfo/texinfo.txi(,806) Emacs since that editor has a special mode, called Texinfo mode, that
../texinfo/texinfo.txi(,807) provides various Texinfo-related features.  (@xref{Texinfo Mode}.)
../texinfo/texinfo.txi(,808) 
../texinfo/texinfo.txi(,809) Before writing a Texinfo source file, you should learn about nodes,
../texinfo/texinfo.txi(,810) menus, cross references, and the rest, for example by reading this
../texinfo/texinfo.txi(,811) manual.
../texinfo/texinfo.txi(,812) 
../texinfo/texinfo.txi(,813) You can use Texinfo to create both online help and printed manuals;
../texinfo/texinfo.txi(,814) moreover, Texinfo is freely redistributable.  For these reasons, Texinfo
../texinfo/texinfo.txi(,815) is the official documentation format of the GNU project.  More
../texinfo/texinfo.txi(,816) information is available at the @uref{http://www.gnu.org/doc/, GNU
../texinfo/texinfo.txi(,817) documentation web page}.
../texinfo/texinfo.txi(,818) 
../texinfo/texinfo.txi(,819) @cindex Man page output, not supported
../texinfo/texinfo.txi(,820) From time to time, proposals are made to generate traditional Unix man
../texinfo/texinfo.txi(,821) pages from Texinfo source.  This is not likely to ever be supported,
../texinfo/texinfo.txi(,822) because man pages have a very strict conventional format.  Merely
../texinfo/texinfo.txi(,823) enhancing @command{makeinfo} to output troff format would be
../texinfo/texinfo.txi(,824) insufficient.  Generating a good man page therefore requires a
../texinfo/texinfo.txi(,825) completely different source than the typical Texinfo applications of
../texinfo/texinfo.txi(,826) writing a good user tutorial or a good reference manual.  This makes
../texinfo/texinfo.txi(,827) generating man pages incompatible with the Texinfo design goal of not
../texinfo/texinfo.txi(,828) having to document the same information in different ways for different
../texinfo/texinfo.txi(,829) output formats.  You might as well just write the man page directly.
../texinfo/texinfo.txi(,830) 
../texinfo/texinfo.txi(,831) @pindex help2man 
../texinfo/texinfo.txi(,832) @cindex O'Dea, Brendan
../texinfo/texinfo.txi(,833) Man pages still have their place, and if you wish to support them, the
../texinfo/texinfo.txi(,834) program @command{help2man} may be useful; it generates a traditional man
../texinfo/texinfo.txi(,835) page from the @samp{--help} output of a program.  In fact, this is
../texinfo/texinfo.txi(,836) currently used to generate man pages for the Texinfo programs
../texinfo/texinfo.txi(,837) themselves.  It is GNU software written by Brendan O'Dea, available from
../texinfo/texinfo.txi(,838) @uref{ftp://ftp.gnu.org/gnu/help2man/}.
../texinfo/texinfo.txi(,839) 
../texinfo/texinfo.txi(,840) 
../texinfo/texinfo.txi(,841) @node Info Files
../texinfo/texinfo.txi(,842) @section Info files
../texinfo/texinfo.txi(,843) @cindex Info files
../texinfo/texinfo.txi(,844) 
../texinfo/texinfo.txi(,845) An Info file is a Texinfo file formatted so that the Info documentation
../texinfo/texinfo.txi(,846) reading program can operate on it.  (@code{makeinfo}
../texinfo/texinfo.txi(,847) and @code{texinfo-format-buffer} are two commands that convert a Texinfo file
../texinfo/texinfo.txi(,848) into an Info file.)
../texinfo/texinfo.txi(,849) 
../texinfo/texinfo.txi(,850) Info files are divided into pieces called @dfn{nodes}, each of which
../texinfo/texinfo.txi(,851) contains the discussion of one topic.  Each node has a name, and
../texinfo/texinfo.txi(,852) contains both text for the user to read and pointers to other nodes,
../texinfo/texinfo.txi(,853) which are identified by their names.  The Info program displays one node
../texinfo/texinfo.txi(,854) at a time, and provides commands with which the user can move to other
../texinfo/texinfo.txi(,855) related nodes.
../texinfo/texinfo.txi(,856) 
../texinfo/texinfo.txi(,858) @inforef{Top, info, info}, for more information about using Info.
../texinfo/texinfo.txi(,860) 
../texinfo/texinfo.txi(,861) Each node of an Info file may have any number of child nodes that
../texinfo/texinfo.txi(,862) describe subtopics of the node's topic.  The names of child
../texinfo/texinfo.txi(,863) nodes are listed in a @dfn{menu} within the parent node; this
../texinfo/texinfo.txi(,864) allows you to use certain Info commands to move to one of the child
../texinfo/texinfo.txi(,865) nodes.  Generally, an Info file is organized like a book.  If a node
../texinfo/texinfo.txi(,866) is at the logical level of a chapter, its child nodes are at the level
../texinfo/texinfo.txi(,867) of sections; likewise, the child nodes of sections are at the level
../texinfo/texinfo.txi(,868) of subsections.
../texinfo/texinfo.txi(,869) 
../texinfo/texinfo.txi(,870) All the children of any one parent are linked together in a
../texinfo/texinfo.txi(,871) bidirectional chain of `Next' and `Previous' pointers.  The `Next'
../texinfo/texinfo.txi(,872) pointer provides a link to the next section, and the `Previous' pointer
../texinfo/texinfo.txi(,873) provides a link to the previous section.  This means that all the nodes
../texinfo/texinfo.txi(,874) that are at the level of sections within a chapter are linked together.
../texinfo/texinfo.txi(,875) Normally the order in this chain is the same as the order of the
../texinfo/texinfo.txi(,876) children in the parent's menu.  Each child node records the parent node
../texinfo/texinfo.txi(,877) name as its `Up' pointer.  The last child has no `Next' pointer, and the
../texinfo/texinfo.txi(,878) first child has the parent both as its `Previous' and as its `Up'
../texinfo/texinfo.txi(,879) pointer.@footnote{In some documents, the first child has no `Previous'
../texinfo/texinfo.txi(,880) pointer.  Occasionally, the last child has the node name of the next
../texinfo/texinfo.txi(,881) following higher level node as its `Next' pointer.}
../texinfo/texinfo.txi(,882) 
../texinfo/texinfo.txi(,883) The book-like structuring of an Info file into nodes that correspond
../texinfo/texinfo.txi(,884) to chapters, sections, and the like is a matter of convention, not a
../texinfo/texinfo.txi(,885) requirement.  The `Up', `Previous', and `Next' pointers of a node can
../texinfo/texinfo.txi(,886) point to any other nodes, and a menu can contain any other nodes.
../texinfo/texinfo.txi(,887) Thus, the node structure can be any directed graph.  But it is usually
../texinfo/texinfo.txi(,888) more comprehensible to follow a structure that corresponds to the
../texinfo/texinfo.txi(,889) structure of chapters and sections in a printed book or report.@refill
../texinfo/texinfo.txi(,890) 
../texinfo/texinfo.txi(,891) In addition to menus and to `Next', `Previous', and `Up' pointers, Info
../texinfo/texinfo.txi(,892) provides pointers of another kind, called references, that can be
../texinfo/texinfo.txi(,893) sprinkled throughout the text.  This is usually the best way to
../texinfo/texinfo.txi(,894) represent links that do not fit a hierarchical structure.@refill
../texinfo/texinfo.txi(,895) 
../texinfo/texinfo.txi(,896) Usually, you will design a document so that its nodes match the
../texinfo/texinfo.txi(,897) structure of chapters and sections in the printed output.  But
../texinfo/texinfo.txi(,898) occasionally there are times when this is not right for the material
../texinfo/texinfo.txi(,899) being discussed.  Therefore, Texinfo uses separate commands to specify
../texinfo/texinfo.txi(,900) the node structure for the Info file and the section structure for the
../texinfo/texinfo.txi(,901) printed output.@refill
../texinfo/texinfo.txi(,902) 
../texinfo/texinfo.txi(,903) Generally, you enter an Info file through a node that by convention is
../texinfo/texinfo.txi(,904) named `Top'.  This node normally contains just a brief summary of the
../texinfo/texinfo.txi(,905) file's purpose, and a large menu through which the rest of the file is
../texinfo/texinfo.txi(,906) reached.  From this node, you can either traverse the file
../texinfo/texinfo.txi(,907) systematically by going from node to node, or you can go to a specific
../texinfo/texinfo.txi(,908) node listed in the main menu, or you can search the index menus and then
../texinfo/texinfo.txi(,909) go directly to the node that has the information you want.  Alternatively,
../texinfo/texinfo.txi(,910) with the standalone Info program, you can specify specific menu items on
../texinfo/texinfo.txi(,911) the command line (@pxref{Top,,, info, Info}).
../texinfo/texinfo.txi(,912) 
../texinfo/texinfo.txi(,913) If you want to read through an Info file in sequence, as if it were a
../texinfo/texinfo.txi(,914) printed manual, you can hit @key{SPC} repeatedly, or you get the whole
../texinfo/texinfo.txi(,915) file with the advanced Info command @kbd{g *}.  (@inforef{Expert,
../texinfo/texinfo.txi(,916) Advanced Info commands, info}.)@refill
../texinfo/texinfo.txi(,917) 
../texinfo/texinfo.txi(,918) @c !!! dir file may be located in one of many places:
../texinfo/texinfo.txi(,919) @c     /usr/local/emacs/info            mentioned in info.c DEFAULT_INFOPATH
../texinfo/texinfo.txi(,920) @c     /usr/local/lib/emacs/info        mentioned in info.c DEFAULT_INFOPATH
../texinfo/texinfo.txi(,921) @c     /usr/gnu/info                    mentioned in info.c DEFAULT_INFOPATH
../texinfo/texinfo.txi(,922) @c     /usr/local/info
../texinfo/texinfo.txi(,923) @c     /usr/local/lib/info
../texinfo/texinfo.txi(,924) The @file{dir} file in the @file{info} directory serves as the
../texinfo/texinfo.txi(,925) departure point for the whole Info system.  From it, you can reach the
../texinfo/texinfo.txi(,926) `Top' nodes of each of the documents in a complete Info system.@refill
../texinfo/texinfo.txi(,927) 
../texinfo/texinfo.txi(,928) @cindex URI syntax for Info
../texinfo/texinfo.txi(,929) If you wish to refer to an Info file in a URI, you can use the
../texinfo/texinfo.txi(,930) (unofficial) syntax exemplified in the following.  This works with
../texinfo/texinfo.txi(,931) Emacs/W3, for example:
../texinfo/texinfo.txi(,932) @example
../texinfo/texinfo.txi(,933) info:///usr/info/emacs#Dissociated%20Press
../texinfo/texinfo.txi(,934) info:emacs#Dissociated%20Press
../texinfo/texinfo.txi(,935) info://localhost/usr/info/emacs#Dissociated%20Press
../texinfo/texinfo.txi(,936) @end example
../texinfo/texinfo.txi(,937) 
../texinfo/texinfo.txi(,938) The @command{info} program itself does not follow URI's of any kind.
../texinfo/texinfo.txi(,939) 
../texinfo/texinfo.txi(,940) 
../texinfo/texinfo.txi(,941) @node Printed Books
../texinfo/texinfo.txi(,942) @section Printed Books
../texinfo/texinfo.txi(,943) @cindex Printed book and manual characteristics
../texinfo/texinfo.txi(,944) @cindex Manual characteristics, printed
../texinfo/texinfo.txi(,945) @cindex Book characteristics, printed
../texinfo/texinfo.txi(,946) @cindex Texinfo printed book characteristics
../texinfo/texinfo.txi(,947) @cindex Characteristics, printed books or manuals
../texinfo/texinfo.txi(,948) 
../texinfo/texinfo.txi(,949) @cindex Knuth, Donald
../texinfo/texinfo.txi(,950) A Texinfo file can be formatted and typeset as a printed book or manual.
../texinfo/texinfo.txi(,951) To do this, you need @TeX{}, a powerful, sophisticated typesetting
../texinfo/texinfo.txi(,952) program written by Donald Knuth.@footnote{You can also use the
../texinfo/texinfo.txi(,953) @pindex texi2roff@r{, unsupported software}
../texinfo/texinfo.txi(,954) @uref{ftp://tug.org/texi2roff.tar.gz, @code{texi2roff}} program if you
../texinfo/texinfo.txi(,955) do not have @TeX{}; since Texinfo is designed for use with @TeX{},
../texinfo/texinfo.txi(,956) @code{texi2roff} is not described here.  @code{texi2roff} is not part of
../texinfo/texinfo.txi(,957) the standard GNU distribution and is not maintained or up-to-date with
../texinfo/texinfo.txi(,958) all the Texinfo features described in this manual.}
../texinfo/texinfo.txi(,959) 
../texinfo/texinfo.txi(,960) A Texinfo-based book is similar to any other typeset, printed work: it
../texinfo/texinfo.txi(,961) can have a title page, copyright page, table of contents, and preface,
../texinfo/texinfo.txi(,962) as well as chapters, numbered or unnumbered sections and subsections,
../texinfo/texinfo.txi(,963) page headers, cross references, footnotes, and indices.@refill
../texinfo/texinfo.txi(,964) 
../texinfo/texinfo.txi(,965) You can use Texinfo to write a book without ever having the intention
../texinfo/texinfo.txi(,966) of converting it into online information.  You can use Texinfo for
../texinfo/texinfo.txi(,967) writing a printed novel, and even to write a printed memo, although
../texinfo/texinfo.txi(,968) this latter application is not recommended since electronic mail is so
../texinfo/texinfo.txi(,969) much easier.@refill
../texinfo/texinfo.txi(,970) 
../texinfo/texinfo.txi(,971) @TeX{} is a general purpose typesetting program.  Texinfo provides a
../texinfo/texinfo.txi(,972) file @file{texinfo.tex} that contains information (definitions or
../texinfo/texinfo.txi(,973) @dfn{macros}) that @TeX{} uses when it typesets a Texinfo file.
../texinfo/texinfo.txi(,974) (@file{texinfo.tex} tells @TeX{} how to convert the Texinfo @@-commands
../texinfo/texinfo.txi(,975) to @TeX{} commands, which @TeX{} can then process to create the typeset
../texinfo/texinfo.txi(,976) document.)  @file{texinfo.tex} contains the specifications for printing
../texinfo/texinfo.txi(,977) a document.  You can get the latest version of @file{texinfo.tex} from
../texinfo/texinfo.txi(,978) @uref{ftp://ftp.gnu.org/gnu/texinfo.tex}.
../texinfo/texinfo.txi(,979) 
../texinfo/texinfo.txi(,980) In the United States, documents are most often printed on 8.5 inch by 11
../texinfo/texinfo.txi(,981) inch pages (216@dmn{mm} by 280@dmn{mm}); this is the default size.  But
../texinfo/texinfo.txi(,982) you can also print for 7 inch by 9.25 inch pages (178@dmn{mm} by
../texinfo/texinfo.txi(,983) 235@dmn{mm}, the @code{@@smallbook} size; or on A4 or A5 size paper
../texinfo/texinfo.txi(,984) (@code{@@afourpaper}, @code{@@afivepaper}).  (@xref{smallbook, ,
../texinfo/texinfo.txi(,985) Printing ``Small'' Books}.  Also, see @ref{A4 Paper, ,Printing on A4
../texinfo/texinfo.txi(,986) Paper}.)
../texinfo/texinfo.txi(,987) 
../texinfo/texinfo.txi(,988) By changing the parameters in @file{texinfo.tex}, you can change the
../texinfo/texinfo.txi(,989) size of the printed document.  In addition, you can change the style in
../texinfo/texinfo.txi(,990) which the printed document is formatted; for example, you can change the
../texinfo/texinfo.txi(,991) sizes and fonts used, the amount of indentation for each paragraph, the
../texinfo/texinfo.txi(,992) degree to which words are hyphenated, and the like.  By changing the
../texinfo/texinfo.txi(,993) specifications, you can make a book look dignified, old and serious, or
../texinfo/texinfo.txi(,994) light-hearted, young and cheery.
../texinfo/texinfo.txi(,995) 
../texinfo/texinfo.txi(,996) @TeX{} is freely distributable.  It is written in a superset of Pascal
../texinfo/texinfo.txi(,997) called WEB and can be compiled either in Pascal or (by using a
../texinfo/texinfo.txi(,998) conversion program that comes with the @TeX{} distribution) in C.
../texinfo/texinfo.txi(,999) (@xref{TeX Mode, ,@TeX{} Mode, emacs, The GNU Emacs Manual}, for information
../texinfo/texinfo.txi(,1000) about @TeX{}.)@refill
../texinfo/texinfo.txi(,1001) 
../texinfo/texinfo.txi(,1002) @TeX{} is very powerful and has a great many features.  Because a
../texinfo/texinfo.txi(,1003) Texinfo file must be able to present information both on a
../texinfo/texinfo.txi(,1004) character-only terminal in Info form and in a typeset book, the
../texinfo/texinfo.txi(,1005) formatting commands that Texinfo supports are necessarily limited.
../texinfo/texinfo.txi(,1006) 
../texinfo/texinfo.txi(,1007) To get a copy of @TeX{}, see
../texinfo/texinfo.txi(,1008) @ref{Obtaining TeX, , How to Obtain @TeX{}}.
../texinfo/texinfo.txi(,1009) 
../texinfo/texinfo.txi(,1010) 
../texinfo/texinfo.txi(,1011) @node Formatting Commands
../texinfo/texinfo.txi(,1012) @section @@-commands
../texinfo/texinfo.txi(,1013) @cindex @@-commands
../texinfo/texinfo.txi(,1014) @cindex Formatting commands
../texinfo/texinfo.txi(,1015) 
../texinfo/texinfo.txi(,1016) In a Texinfo file, the commands that tell @TeX{} how to typeset the
../texinfo/texinfo.txi(,1017) printed manual and tell @code{makeinfo} and
../texinfo/texinfo.txi(,1018) @code{texinfo-format-buffer} how to create an Info file are preceded
../texinfo/texinfo.txi(,1019) by @samp{@@}; they are called @dfn{@@-commands}.  For example,
../texinfo/texinfo.txi(,1020) @code{@@node} is the command to indicate a node and @code{@@chapter}
../texinfo/texinfo.txi(,1021) is the command to indicate the start of a chapter.@refill
../texinfo/texinfo.txi(,1022) 
../texinfo/texinfo.txi(,1023) @quotation
../texinfo/texinfo.txi(,1024) @strong{Please note:} All the @@-commands, with the exception of the
../texinfo/texinfo.txi(,1025) @code{@@TeX@{@}} command, must be written entirely in lower case.
../texinfo/texinfo.txi(,1026) @end quotation
../texinfo/texinfo.txi(,1027) 
../texinfo/texinfo.txi(,1028) The Texinfo @@-commands are a strictly limited set of constructs.  The
../texinfo/texinfo.txi(,1029) strict limits make it possible for Texinfo files to be understood both
../texinfo/texinfo.txi(,1030) by @TeX{} and by the code that converts them into Info files.  You can
../texinfo/texinfo.txi(,1031) display Info files on any terminal that displays alphabetic and
../texinfo/texinfo.txi(,1032) numeric characters.  Similarly, you can print the output generated by
../texinfo/texinfo.txi(,1033) @TeX{} on a wide variety of printers.@refill
../texinfo/texinfo.txi(,1034) 
../texinfo/texinfo.txi(,1035) Depending on what they do or what arguments@footnote{The word
../texinfo/texinfo.txi(,1036) @dfn{argument} comes from the way it is used in mathematics and does not
../texinfo/texinfo.txi(,1037) refer to a dispute between two people; it refers to the information
../texinfo/texinfo.txi(,1038) presented to the command.  According to the @cite{Oxford English
../texinfo/texinfo.txi(,1039) Dictionary}, the word derives from the Latin for @dfn{to make clear,
../texinfo/texinfo.txi(,1040) prove}; thus it came to mean `the evidence offered as proof', which is
../texinfo/texinfo.txi(,1041) to say, `the information offered', which led to its mathematical
../texinfo/texinfo.txi(,1042) meaning.  In its other thread of derivation, the word came to mean `to
../texinfo/texinfo.txi(,1043) assert in a manner against which others may make counter assertions',
../texinfo/texinfo.txi(,1044) which led to the meaning of `argument' as a dispute.} they take, you
../texinfo/texinfo.txi(,1045) need to write @@-commands on lines of their own or as part of
../texinfo/texinfo.txi(,1046) sentences:
../texinfo/texinfo.txi(,1047) 
../texinfo/texinfo.txi(,1048) @itemize @bullet
../texinfo/texinfo.txi(,1049) @item
../texinfo/texinfo.txi(,1050) Write a command such as @code{@@noindent} at the beginning of a line as
../texinfo/texinfo.txi(,1051) the only text on the line.  (@code{@@noindent} prevents the beginning of
../texinfo/texinfo.txi(,1052) the next line from being indented as the beginning of a
../texinfo/texinfo.txi(,1053) paragraph.)@refill
../texinfo/texinfo.txi(,1054) 
../texinfo/texinfo.txi(,1055) @item
../texinfo/texinfo.txi(,1056) Write a command such as @code{@@chapter} at the beginning of a line
../texinfo/texinfo.txi(,1057) followed by the command's arguments, in this case the chapter title, on
../texinfo/texinfo.txi(,1058) the rest of the line.  (@code{@@chapter} creates chapter titles.)@refill
../texinfo/texinfo.txi(,1059) 
../texinfo/texinfo.txi(,1060) @item
../texinfo/texinfo.txi(,1061) Write a command such as @code{@@dots@{@}} wherever you wish but usually
../texinfo/texinfo.txi(,1062) within a sentence. (@code{@@dots@{@}} creates dots @dots{})@refill
../texinfo/texinfo.txi(,1063) 
../texinfo/texinfo.txi(,1064) @item
../texinfo/texinfo.txi(,1065) Write a command such as @code{@@code@{@var{sample-code}@}} wherever you
../texinfo/texinfo.txi(,1066) wish (but usually within a sentence) with its argument,
../texinfo/texinfo.txi(,1067) @var{sample-code} in this example, between the braces.  (@code{@@code}
../texinfo/texinfo.txi(,1068) marks text as being code.)@refill
../texinfo/texinfo.txi(,1069) 
../texinfo/texinfo.txi(,1070) @item
../texinfo/texinfo.txi(,1071) Write a command such as @code{@@example} on a line of its own; write the
../texinfo/texinfo.txi(,1072) body-text on following lines; and write the matching @code{@@end}
../texinfo/texinfo.txi(,1073) command, @code{@@end example} in this case, at the on a line of its own
../texinfo/texinfo.txi(,1074) after the body-text. (@code{@@example} @dots{} @code{@@end example}
../texinfo/texinfo.txi(,1075) indents and typesets body-text as an example.)  It's usually ok to
../texinfo/texinfo.txi(,1076) indent environment commands like this, but in complicated and
../texinfo/texinfo.txi(,1077) hard-to-define circumstances the extra spaces cause extra space to
../texinfo/texinfo.txi(,1078) appear in the output, so beware.
../texinfo/texinfo.txi(,1079) @end itemize
../texinfo/texinfo.txi(,1080) 
../texinfo/texinfo.txi(,1081) @noindent
../texinfo/texinfo.txi(,1082) @cindex Braces, when to use
../texinfo/texinfo.txi(,1083) As a general rule, a command requires braces if it mingles among other
../texinfo/texinfo.txi(,1084) text; but it does not need braces if it starts a line of its own.  The
../texinfo/texinfo.txi(,1085) non-alphabetic commands, such as @code{@@:}, are exceptions to the rule;
../texinfo/texinfo.txi(,1086) they do not need braces.@refill
../texinfo/texinfo.txi(,1087) 
../texinfo/texinfo.txi(,1088) As you gain experience with Texinfo, you will rapidly learn how to
../texinfo/texinfo.txi(,1089) write the different commands: the different ways to write commands
../texinfo/texinfo.txi(,1090) make it easier to write and read Texinfo files than if all commands
../texinfo/texinfo.txi(,1091) followed exactly the same syntax.  (For details about @@-command
../texinfo/texinfo.txi(,1092) syntax, see @ref{Command Syntax, , @@-Command Syntax}.)@refill
../texinfo/texinfo.txi(,1093) 
../texinfo/texinfo.txi(,1094) 
../texinfo/texinfo.txi(,1095) @node Conventions
../texinfo/texinfo.txi(,1096) @section General Syntactic Conventions
../texinfo/texinfo.txi(,1097) @cindex General syntactic conventions
../texinfo/texinfo.txi(,1098) @cindex Syntactic conventions
../texinfo/texinfo.txi(,1099) @cindex Conventions, syntactic
../texinfo/texinfo.txi(,1100) 
../texinfo/texinfo.txi(,1101) This section describes the general conventions used in all Texinfo documents.
../texinfo/texinfo.txi(,1102) 
../texinfo/texinfo.txi(,1103) @itemize @bullet
../texinfo/texinfo.txi(,1104) @item
../texinfo/texinfo.txi(,1105) All printable @sc{ascii} characters except @samp{@@}, @samp{@{} and
../texinfo/texinfo.txi(,1106) @samp{@}} can appear in a Texinfo file and stand for themselves.
../texinfo/texinfo.txi(,1107) @samp{@@} is the escape character which introduces commands, while
../texinfo/texinfo.txi(,1108) @samp{@{} and @samp{@}} are used to surround arguments to certain
../texinfo/texinfo.txi(,1109) commands.  To put one of these special characters into the document, put
../texinfo/texinfo.txi(,1110) an @samp{@@} character in front of it, like this: @samp{@@@@},
../texinfo/texinfo.txi(,1111) @samp{@@@{}, and @samp{@@@}}.
../texinfo/texinfo.txi(,1112) 
../texinfo/texinfo.txi(,1113) @item
../texinfo/texinfo.txi(,1114) It is customary in @TeX{} to use doubled single-quote characters to
../texinfo/texinfo.txi(,1115) begin and end quotations: @w{@t{`@w{}`@dots{}'@w{}'}}.  This
../texinfo/texinfo.txi(,1116) convention should be followed in Texinfo files.  @TeX{} converts
../texinfo/texinfo.txi(,1117) two single quotes to left- and right-hand doubled
../texinfo/texinfo.txi(,1118) quotation marks, 
../texinfo/texinfo.txi(,1119) @c this comes out as "like this" in Info, of course, which is just confusing.
../texinfo/texinfo.txi(,1123) and Info converts doubled single-quote characters to @sc{ascii}
../texinfo/texinfo.txi(,1124) double-quotes: @w{@t{`@w{}`@dots{}'@w{}'}} becomes @w{@t{"@dots{}"}}.
../texinfo/texinfo.txi(,1125) 
../texinfo/texinfo.txi(,1126) @item
../texinfo/texinfo.txi(,1127) Use three hyphens in a row, @samp{---}, for a dash---like this.  In
../texinfo/texinfo.txi(,1128) @TeX{}, a single or double hyphen produces a printed dash that is
../texinfo/texinfo.txi(,1129) shorter than the usual typeset dash. Info reduces three hyphens to two
../texinfo/texinfo.txi(,1130) for display on the screen.
../texinfo/texinfo.txi(,1131) 
../texinfo/texinfo.txi(,1132) @item
../texinfo/texinfo.txi(,1133) To prevent a paragraph from being indented in the printed manual, put
../texinfo/texinfo.txi(,1134) the command @code{@@noindent} on a line by itself before the
../texinfo/texinfo.txi(,1135) paragraph.
../texinfo/texinfo.txi(,1136) 
../texinfo/texinfo.txi(,1137) @item
../texinfo/texinfo.txi(,1138) If you mark off a region of the Texinfo file with the @code{@@iftex}
../texinfo/texinfo.txi(,1139) and @w{@code{@@end iftex}} commands, that region will appear only in
../texinfo/texinfo.txi(,1140) the printed copy; in that region, you can use certain commands
../texinfo/texinfo.txi(,1141) borrowed from plain @TeX{} that you cannot use in Info.  Conversely,
../texinfo/texinfo.txi(,1142) text surrounded by @code{@@ifnottex} and @code{@@end ifnottex} will
../texinfo/texinfo.txi(,1143) appear in all output formats @emph{except} @TeX{}.
../texinfo/texinfo.txi(,1144) 
../texinfo/texinfo.txi(,1145) Each of the other output formats (@code{html}, @code{info},
../texinfo/texinfo.txi(,1146) @code{plaintext}) have an analogous pair of commands.  @xref{Conditionals}.
../texinfo/texinfo.txi(,1147) @end itemize
../texinfo/texinfo.txi(,1148) 
../texinfo/texinfo.txi(,1149) @cindex Tabs; don't use!
../texinfo/texinfo.txi(,1150) @quotation
../texinfo/texinfo.txi(,1151) @strong{Caution:} Do not use tab characters in a Texinfo file (except in
../texinfo/texinfo.txi(,1152) verbatim modes)!  @TeX{} uses variable-width fonts, which means that it
../texinfo/texinfo.txi(,1153) is impractical at best to define a tab to work in all circumstances.
../texinfo/texinfo.txi(,1154) Consequently, @TeX{} treats tabs like single spaces, and that is not
../texinfo/texinfo.txi(,1155) what they look like.  Furthermore, @code{makeinfo} does nothing special
../texinfo/texinfo.txi(,1156) with tabs, and thus a tab character in your input file may appear
../texinfo/texinfo.txi(,1157) differently in the output, for example, in indented text.
../texinfo/texinfo.txi(,1158) 
../texinfo/texinfo.txi(,1159) @noindent
../texinfo/texinfo.txi(,1160) To avoid this problem, Texinfo mode causes GNU Emacs to insert multiple
../texinfo/texinfo.txi(,1161) spaces when you press the @key{TAB} key.
../texinfo/texinfo.txi(,1162) 
../texinfo/texinfo.txi(,1163) @noindent
../texinfo/texinfo.txi(,1164) Also, you can run @code{untabify} in Emacs to convert tabs in a region
../texinfo/texinfo.txi(,1165) to multiple spaces.
../texinfo/texinfo.txi(,1166) @end quotation
../texinfo/texinfo.txi(,1167) 
../texinfo/texinfo.txi(,1168) 
../texinfo/texinfo.txi(,1169) @node Comments
../texinfo/texinfo.txi(,1170) @section Comments
../texinfo/texinfo.txi(,1171) 
../texinfo/texinfo.txi(,1172) @cindex Comments
../texinfo/texinfo.txi(,1173) @findex comment
../texinfo/texinfo.txi(,1174) @findex c @r{(comment)}
../texinfo/texinfo.txi(,1175) 
../texinfo/texinfo.txi(,1176) You can write comments in a Texinfo file that will not appear in
../texinfo/texinfo.txi(,1177) either the Info file or the printed manual by using the
../texinfo/texinfo.txi(,1178) @code{@@comment} command (which may be abbreviated to @code{@@c}).
../texinfo/texinfo.txi(,1179) Such comments are for the person who revises the Texinfo file.  All the
../texinfo/texinfo.txi(,1180) text on a line that follows either @code{@@comment} or @code{@@c} is a
../texinfo/texinfo.txi(,1181) comment; the rest of the line does not appear in either the Info file
../texinfo/texinfo.txi(,1182) or the printed manual.
../texinfo/texinfo.txi(,1183) 
../texinfo/texinfo.txi(,1184) Often, you can write the @code{@@comment} or @code{@@c} in the middle of
../texinfo/texinfo.txi(,1185) a line, and only the text that follows after the @code{@@comment} or
../texinfo/texinfo.txi(,1186) @code{@@c} command does not appear; but some commands, such as
../texinfo/texinfo.txi(,1187) @code{@@settitle} and @code{@@setfilename}, work on a whole line.  You
../texinfo/texinfo.txi(,1188) cannot use @code{@@comment} or @code{@@c} in a line beginning with such
../texinfo/texinfo.txi(,1189) a command.
../texinfo/texinfo.txi(,1190) 
../texinfo/texinfo.txi(,1191) @cindex Ignored text
../texinfo/texinfo.txi(,1192) @cindex Unprocessed text
../texinfo/texinfo.txi(,1193) @findex ignore
../texinfo/texinfo.txi(,1194) You can write long stretches of text that will not appear in either
../texinfo/texinfo.txi(,1195) the Info file or the printed manual by using the @code{@@ignore} and
../texinfo/texinfo.txi(,1196) @code{@@end ignore} commands.  Write each of these commands on a line
../texinfo/texinfo.txi(,1197) of its own, starting each command at the beginning of the line.  Text
../texinfo/texinfo.txi(,1198) between these two commands does not appear in the processed output.
../texinfo/texinfo.txi(,1199) You can use @code{@@ignore} and @code{@@end ignore} for writing
../texinfo/texinfo.txi(,1200) comments.
../texinfo/texinfo.txi(,1201) 
../texinfo/texinfo.txi(,1202) Text enclosed by @code{@@ignore} or by failing @code{@@ifset} or
../texinfo/texinfo.txi(,1203) @code{@@ifclear} conditions is ignored in the sense that it will not
../texinfo/texinfo.txi(,1204) contribute to the formatted output.  However, @TeX{} and makeinfo must
../texinfo/texinfo.txi(,1205) still parse the ignored text, in order to understand when to @emph{stop}
../texinfo/texinfo.txi(,1206) ignoring text from the source file; that means that you may still get
../texinfo/texinfo.txi(,1207) error messages if you have invalid Texinfo commands within ignored text.
../texinfo/texinfo.txi(,1208) 
../texinfo/texinfo.txi(,1209) 
../texinfo/texinfo.txi(,1210) @node Minimum
../texinfo/texinfo.txi(,1211) @section What a Texinfo File Must Have
../texinfo/texinfo.txi(,1212) @cindex Minimal Texinfo file (requirements)
../texinfo/texinfo.txi(,1213) @cindex Must have in Texinfo file
../texinfo/texinfo.txi(,1214) @cindex Required in Texinfo file
../texinfo/texinfo.txi(,1215) @cindex Texinfo file minimum
../texinfo/texinfo.txi(,1216) 
../texinfo/texinfo.txi(,1217) By convention, the namea of a Texinfo file ends with (in order of
../texinfo/texinfo.txi(,1218) preference) one of the extensions @file{.texinfo}, @file{.texi},
../texinfo/texinfo.txi(,1219) @file{.txi}, or @file{.tex}.  The longer extensions are preferred since
../texinfo/texinfo.txi(,1220) they describe more clearly to a human reader the nature of the file.
../texinfo/texinfo.txi(,1221) The shorter extensions are for operating systems that cannot handle long
../texinfo/texinfo.txi(,1222) file names.
../texinfo/texinfo.txi(,1223) 
../texinfo/texinfo.txi(,1224) In order to be made into a printed manual and an Info file, a Texinfo
../texinfo/texinfo.txi(,1225) file @strong{must} begin with lines like this:
../texinfo/texinfo.txi(,1226) 
../texinfo/texinfo.txi(,1227) @example
../texinfo/texinfo.txi(,1228) @group
../texinfo/texinfo.txi(,1229) \input texinfo
../texinfo/texinfo.txi(,1230) @@setfilename @var{info-file-name}
../texinfo/texinfo.txi(,1231) @@settitle @var{name-of-manual}
../texinfo/texinfo.txi(,1232) @end group
../texinfo/texinfo.txi(,1233) @end example
../texinfo/texinfo.txi(,1234) 
../texinfo/texinfo.txi(,1235) @noindent
../texinfo/texinfo.txi(,1236) The contents of the file follow this beginning, and then you
../texinfo/texinfo.txi(,1237) @strong{must} end a Texinfo file with a line like this:
../texinfo/texinfo.txi(,1238) 
../texinfo/texinfo.txi(,1239) @example
../texinfo/texinfo.txi(,1240) @@bye
../texinfo/texinfo.txi(,1241) @end example
../texinfo/texinfo.txi(,1242) 
../texinfo/texinfo.txi(,1243) @findex \input @r{(raw @TeX{} startup)}
../texinfo/texinfo.txi(,1244) @noindent
../texinfo/texinfo.txi(,1245) Here's an explanation:
../texinfo/texinfo.txi(,1246) 
../texinfo/texinfo.txi(,1247) @itemize @bullet
../texinfo/texinfo.txi(,1248) @item
../texinfo/texinfo.txi(,1249) The @samp{\input texinfo} line tells @TeX{} to use the
../texinfo/texinfo.txi(,1250) @file{texinfo.tex} file, which tells @TeX{} how to translate the Texinfo
../texinfo/texinfo.txi(,1251) @@-commands into @TeX{} typesetting commands.  (Note the use of the
../texinfo/texinfo.txi(,1252) backslash, @samp{\}; this is correct for @TeX{}.)
../texinfo/texinfo.txi(,1253) 
../texinfo/texinfo.txi(,1254) @item
../texinfo/texinfo.txi(,1255) The @code{@@setfilename} line provides a name for the Info file and
../texinfo/texinfo.txi(,1256) tells @TeX{} to open auxiliary files.  @strong{All text before
../texinfo/texinfo.txi(,1257) @code{@@setfilename} is ignored!}
../texinfo/texinfo.txi(,1258) 
../texinfo/texinfo.txi(,1259) @item
../texinfo/texinfo.txi(,1260) The @code{@@settitle} line specifies a title for the page headers (or
../texinfo/texinfo.txi(,1261) footers) of the printed manual, and the default document description for
../texinfo/texinfo.txi(,1262) the @samp{<head>} in HTML format.  Strictly speaking, @code{@@settitle}
../texinfo/texinfo.txi(,1263) is optional---if you don't mind your document being titled `Untitled'.
../texinfo/texinfo.txi(,1264) 
../texinfo/texinfo.txi(,1265) @item
../texinfo/texinfo.txi(,1266) The @code{@@bye} line at the end of the file on a line of its own tells
../texinfo/texinfo.txi(,1267) the formatters that the file is ended and to stop formatting.
../texinfo/texinfo.txi(,1268) 
../texinfo/texinfo.txi(,1269) @end itemize
../texinfo/texinfo.txi(,1270) 
../texinfo/texinfo.txi(,1271) Typically, you will not use quite such a spare format, but will include
../texinfo/texinfo.txi(,1272) mode setting and start-of-header and end-of-header lines at the
../texinfo/texinfo.txi(,1273) beginning of a Texinfo file, like this:
../texinfo/texinfo.txi(,1274) 
../texinfo/texinfo.txi(,1275) @example
../texinfo/texinfo.txi(,1276) @group
../texinfo/texinfo.txi(,1277) \input texinfo   @@c -*-texinfo-*-
../texinfo/texinfo.txi(,1278) @@c %**start of header
../texinfo/texinfo.txi(,1279) @@setfilename @var{info-file-name}
../texinfo/texinfo.txi(,1280) @@settitle @var{name-of-manual}
../texinfo/texinfo.txi(,1281) @@c %**end of header
../texinfo/texinfo.txi(,1282) @end group
../texinfo/texinfo.txi(,1283) @end example
../texinfo/texinfo.txi(,1284) 
../texinfo/texinfo.txi(,1285) @noindent
../texinfo/texinfo.txi(,1286) In the first line, @samp{-*-texinfo-*-} causes Emacs to switch into
../texinfo/texinfo.txi(,1287) Texinfo mode when you edit the file.
../texinfo/texinfo.txi(,1288) 
../texinfo/texinfo.txi(,1289) The @code{@@c} lines which surround the @code{@@setfilename} and
../texinfo/texinfo.txi(,1290) @code{@@settitle} lines are optional, but you need them in order to
../texinfo/texinfo.txi(,1291) run @TeX{} or Info on just part of the file.  (@xref{Start of Header}.)
../texinfo/texinfo.txi(,1292) 
../texinfo/texinfo.txi(,1293) Furthermore, you will usually provide a Texinfo file with a title page,
../texinfo/texinfo.txi(,1294) indices, and the like, all of which are explained in this manual.  But
../texinfo/texinfo.txi(,1295) the minimum, which can be useful for short documents, is just the three
../texinfo/texinfo.txi(,1296) lines at the beginning and the one line at the end.
../texinfo/texinfo.txi(,1297) 
../texinfo/texinfo.txi(,1298) 
../texinfo/texinfo.txi(,1299) @node Six Parts
../texinfo/texinfo.txi(,1300) @section Six Parts of a Texinfo File
../texinfo/texinfo.txi(,1301) 
../texinfo/texinfo.txi(,1302) Generally, a Texinfo file contains more than the minimal beginning and
../texinfo/texinfo.txi(,1303) end described in the previous section---it usually contains the six
../texinfo/texinfo.txi(,1304) parts listed below.  These are described fully in the following sections.
../texinfo/texinfo.txi(,1305) 
../texinfo/texinfo.txi(,1306) @table @r
../texinfo/texinfo.txi(,1307) @item 1. Header
../texinfo/texinfo.txi(,1308) The @dfn{Header} names the file, tells @TeX{} which definitions file to
../texinfo/texinfo.txi(,1309) use, and other such housekeeping tasks.
../texinfo/texinfo.txi(,1310) 
../texinfo/texinfo.txi(,1311) @item 2. Summary and Copyright
../texinfo/texinfo.txi(,1312) The @dfn{Summary and Copyright} segment describes the document and
../texinfo/texinfo.txi(,1313) contains the copyright notice and copying permissions.  This is done
../texinfo/texinfo.txi(,1314) with the @code{@@copying} command.
../texinfo/texinfo.txi(,1315) 
../texinfo/texinfo.txi(,1316) @item 3. Title and Copyright
../texinfo/texinfo.txi(,1317) The @dfn{Title and Copyright} segment contains the title and copyright
../texinfo/texinfo.txi(,1318) pages for the printed manual.  The segment must be enclosed between
../texinfo/texinfo.txi(,1319) @code{@@titlepage} and @code{@@end titlepage} commands.  The title and
../texinfo/texinfo.txi(,1320) copyright page appear only in the printed manual.
../texinfo/texinfo.txi(,1321) 
../texinfo/texinfo.txi(,1322) @item 4. `Top' Node and Master Menu
../texinfo/texinfo.txi(,1323) The `Top' node starts off the online output; it does not appear in the
../texinfo/texinfo.txi(,1324) printed manual.  We recommend including the copying permissions here as
../texinfo/texinfo.txi(,1325) well as the segments above.  And it contains at least a top-level menu
../texinfo/texinfo.txi(,1326) listing the chapters, and possibly a @dfn{Master Menu} listing all the
../texinfo/texinfo.txi(,1327) nodes in the entire document.
../texinfo/texinfo.txi(,1328) 
../texinfo/texinfo.txi(,1329) @item 5. Body
../texinfo/texinfo.txi(,1330) The @dfn{Body} of the document is typically structured like a
../texinfo/texinfo.txi(,1331) traditional book or encyclopedia, but it may be free form.
../texinfo/texinfo.txi(,1332) 
../texinfo/texinfo.txi(,1333) @item 6. End
../texinfo/texinfo.txi(,1334) The @dfn{End} segment contains commands for printing indices and
../texinfo/texinfo.txi(,1335) generating the table of contents, and the @code{@@bye} command on a line
../texinfo/texinfo.txi(,1336) of its own.
../texinfo/texinfo.txi(,1337) @end table
../texinfo/texinfo.txi(,1338) 
../texinfo/texinfo.txi(,1339) 
../texinfo/texinfo.txi(,1340) @node Short Sample
../texinfo/texinfo.txi(,1341) @section A Short Sample Texinfo File
../texinfo/texinfo.txi(,1342) @cindex Sample Texinfo file, with comments
../texinfo/texinfo.txi(,1343) 
../texinfo/texinfo.txi(,1344) Here is a very short but complete Texinfo file, in the six conventional
../texinfo/texinfo.txi(,1345) parts enumerated in the previous section, so you can see how Texinfo
../texinfo/texinfo.txi(,1346) source appears in practice.  The first three parts of the file, from
../texinfo/texinfo.txi(,1347) @samp{\input texinfo} through to @samp{@@end titlepage}, look more
../texinfo/texinfo.txi(,1348) intimidating than they are: most of the material is standard
../texinfo/texinfo.txi(,1349) boilerplate; when writing a manual, you simply change the names as
../texinfo/texinfo.txi(,1350) appropriate.
../texinfo/texinfo.txi(,1351) 
../texinfo/texinfo.txi(,1352) @xref{Beginning a File}, for full documentation on the commands listed
../texinfo/texinfo.txi(,1353) here.  @xref{GNU Sample Texts}, for the full texts to be used in GNU manuals.
../texinfo/texinfo.txi(,1354) 
../texinfo/texinfo.txi(,1355) In the following, the sample text is @emph{indented}; comments on it are
../texinfo/texinfo.txi(,1356) not.  The complete file, without interspersed comments, is shown in
../texinfo/texinfo.txi(,1357) @ref{Short Sample Texinfo File}.
../texinfo/texinfo.txi(,1358) 
../texinfo/texinfo.txi(,1359) @subheading Part 1: Header
../texinfo/texinfo.txi(,1360) 
../texinfo/texinfo.txi(,1361) @noindent
../texinfo/texinfo.txi(,1362) The header does not appear in either the Info file or the
../texinfo/texinfo.txi(,1363) printed output.  It sets various parameters, including the
../texinfo/texinfo.txi(,1364) name of the Info file and the title used in the header.
../texinfo/texinfo.txi(,1365) 
../texinfo/texinfo.txi(,1366) @example
../texinfo/texinfo.txi(,1367) @group
../texinfo/texinfo.txi(,1368) \input texinfo   @@c -*-texinfo-*-
../texinfo/texinfo.txi(,1369) @@c %**start of header
../texinfo/texinfo.txi(,1370) @@setfilename sample.info
../texinfo/texinfo.txi(,1371) @@settitle Sample Manual 1.0
../texinfo/texinfo.txi(,1372) @@c %**end of header
../texinfo/texinfo.txi(,1373) @end group
../texinfo/texinfo.txi(,1374) @end example
../texinfo/texinfo.txi(,1375) 
../texinfo/texinfo.txi(,1376) @subheading Part 2: Summary Description and Copyright
../texinfo/texinfo.txi(,1377) 
../texinfo/texinfo.txi(,1378) @noindent
../texinfo/texinfo.txi(,1379) A real manual includes more text here, according to the license under
../texinfo/texinfo.txi(,1380) which it is distributed.  @xref{GNU Sample Texts}.
../texinfo/texinfo.txi(,1381) 
../texinfo/texinfo.txi(,1382) @example
../texinfo/texinfo.txi(,1383) @group
../texinfo/texinfo.txi(,1384) @@copying
../texinfo/texinfo.txi(,1385) This is a short example of a complete Texinfo file, version 1.0.
../texinfo/texinfo.txi(,1386) 
../texinfo/texinfo.txi(,1387) Copyright @@copyright@{@} 2002 Free Software Foundation, Inc.
../texinfo/texinfo.txi(,1388) @@end copying
../texinfo/texinfo.txi(,1389) @end group
../texinfo/texinfo.txi(,1390) @end example
../texinfo/texinfo.txi(,1391) 
../texinfo/texinfo.txi(,1392) @subheading Part 3: Titlepage, Contents, Copyright
../texinfo/texinfo.txi(,1393) 
../texinfo/texinfo.txi(,1394) @noindent
../texinfo/texinfo.txi(,1395) The titlepage segment does not appear in the online output, only in the
../texinfo/texinfo.txi(,1396) printed manual.  We use the @code{@@insertcopying} command to
../texinfo/texinfo.txi(,1397) include the permission text from the previous section, instead of
../texinfo/texinfo.txi(,1398) writing it out again; it is output on the back of the title page.  The
../texinfo/texinfo.txi(,1399) @code{@@contents} command generates a table of contents.
../texinfo/texinfo.txi(,1400) 
../texinfo/texinfo.txi(,1401) @example
../texinfo/texinfo.txi(,1402) @group
../texinfo/texinfo.txi(,1403) @@titlepage
../texinfo/texinfo.txi(,1404) @@title Sample Title
../texinfo/texinfo.txi(,1405) @end group
../texinfo/texinfo.txi(,1406) 
../texinfo/texinfo.txi(,1407) @group
../texinfo/texinfo.txi(,1408) @@c The following two commands start the copyright page.
../texinfo/texinfo.txi(,1409) @@page
../texinfo/texinfo.txi(,1410) @@vskip 0pt plus 1filll
../texinfo/texinfo.txi(,1411) @@insertcopying
../texinfo/texinfo.txi(,1412) @@end titlepage
../texinfo/texinfo.txi(,1413) @end group
../texinfo/texinfo.txi(,1414) 
../texinfo/texinfo.txi(,1415) @@c Output the table of contents at the beginning.
../texinfo/texinfo.txi(,1416) @@contents
../texinfo/texinfo.txi(,1417) @end example
../texinfo/texinfo.txi(,1418) 
../texinfo/texinfo.txi(,1419) @subheading Part 4: `Top' Node and Master Menu
../texinfo/texinfo.txi(,1420) 
../texinfo/texinfo.txi(,1421) @noindent
../texinfo/texinfo.txi(,1422) The `Top' node contains the master menu for the Info file.  Since a
../texinfo/texinfo.txi(,1423) printed manual uses a table of contents rather than a menu, the master
../texinfo/texinfo.txi(,1424) menu appears only in online output.  We also include the copying text
../texinfo/texinfo.txi(,1425) again for the benefit of online readers.  And since the copying text
../texinfo/texinfo.txi(,1426) begins with a brief description of the manual, no other text is needed.
../texinfo/texinfo.txi(,1427) 
../texinfo/texinfo.txi(,1428) @example
../texinfo/texinfo.txi(,1429) @group
../texinfo/texinfo.txi(,1430) @@ifnottex
../texinfo/texinfo.txi(,1431) @@node Top
../texinfo/texinfo.txi(,1432) @@end ifnottex
../texinfo/texinfo.txi(,1433) @end group
../texinfo/texinfo.txi(,1434) @end example
../texinfo/texinfo.txi(,1435) 
../texinfo/texinfo.txi(,1436) @example
../texinfo/texinfo.txi(,1437) @group
../texinfo/texinfo.txi(,1438) @@insertcopying
../texinfo/texinfo.txi(,1439) 
../texinfo/texinfo.txi(,1440) @@menu
../texinfo/texinfo.txi(,1441) * First Chapter::    The first chapter is the
../texinfo/texinfo.txi(,1442)                        only chapter in this sample.
../texinfo/texinfo.txi(,1443) * Index::            Complete index.
../texinfo/texinfo.txi(,1444) @@end menu
../texinfo/texinfo.txi(,1445) @end group
../texinfo/texinfo.txi(,1446) @end example
../texinfo/texinfo.txi(,1447) 
../texinfo/texinfo.txi(,1448) 
../texinfo/texinfo.txi(,1449) @subheading Part 5: The Body of the Document
../texinfo/texinfo.txi(,1450) 
../texinfo/texinfo.txi(,1451) @noindent
../texinfo/texinfo.txi(,1452) The body segment contains all the text of the document, but not the
../texinfo/texinfo.txi(,1453) indices or table of contents.  This example illustrates a node and a
../texinfo/texinfo.txi(,1454) chapter containing an enumerated list.
../texinfo/texinfo.txi(,1455) 
../texinfo/texinfo.txi(,1456) @example
../texinfo/texinfo.txi(,1457) @group
../texinfo/texinfo.txi(,1458) @@node First Chapter
../texinfo/texinfo.txi(,1459) @@chapter First Chapter
../texinfo/texinfo.txi(,1460) 
../texinfo/texinfo.txi(,1461) @@cindex chapter, first
../texinfo/texinfo.txi(,1462) @end group
../texinfo/texinfo.txi(,1463) 
../texinfo/texinfo.txi(,1464) @group
../texinfo/texinfo.txi(,1465) This is the first chapter.
../texinfo/texinfo.txi(,1466) @@cindex index entry, another
../texinfo/texinfo.txi(,1467) @end group
../texinfo/texinfo.txi(,1468) 
../texinfo/texinfo.txi(,1469) @group
../texinfo/texinfo.txi(,1470) Here is a numbered list.
../texinfo/texinfo.txi(,1471) 
../texinfo/texinfo.txi(,1472) @@enumerate
../texinfo/texinfo.txi(,1473) @@item
../texinfo/texinfo.txi(,1474) This is the first item.
../texinfo/texinfo.txi(,1475) 
../texinfo/texinfo.txi(,1476) @@item
../texinfo/texinfo.txi(,1477) This is the second item.
../texinfo/texinfo.txi(,1478) @@end enumerate
../texinfo/texinfo.txi(,1479) @end group
../texinfo/texinfo.txi(,1480) @end example
../texinfo/texinfo.txi(,1481) 
../texinfo/texinfo.txi(,1482) 
../texinfo/texinfo.txi(,1483) @subheading Part 6: The End of the Document
../texinfo/texinfo.txi(,1484) 
../texinfo/texinfo.txi(,1485) @noindent
../texinfo/texinfo.txi(,1486) The end segment contains commands for generating an index in a node and
../texinfo/texinfo.txi(,1487) unnumbered chapter of its own, and the @code{@@bye} command that marks
../texinfo/texinfo.txi(,1488) the end of the document.
../texinfo/texinfo.txi(,1489) 
../texinfo/texinfo.txi(,1490) @example
../texinfo/texinfo.txi(,1491) @group
../texinfo/texinfo.txi(,1492) @@node Index
../texinfo/texinfo.txi(,1493) @@unnumbered Index
../texinfo/texinfo.txi(,1494) @end group
../texinfo/texinfo.txi(,1495) 
../texinfo/texinfo.txi(,1496) @group
../texinfo/texinfo.txi(,1497) @@printindex cp
../texinfo/texinfo.txi(,1498) 
../texinfo/texinfo.txi(,1499) @@bye
../texinfo/texinfo.txi(,1500) @end group
../texinfo/texinfo.txi(,1501) @end example
../texinfo/texinfo.txi(,1502) 
../texinfo/texinfo.txi(,1503) 
../texinfo/texinfo.txi(,1504) @subheading Some Results
../texinfo/texinfo.txi(,1505) 
../texinfo/texinfo.txi(,1506) Here is what the contents of the first chapter of the sample look like:
../texinfo/texinfo.txi(,1507) 
../texinfo/texinfo.txi(,1508) @sp 1
../texinfo/texinfo.txi(,1509) @need 700
../texinfo/texinfo.txi(,1510) @quotation
../texinfo/texinfo.txi(,1511) This is the first chapter.
../texinfo/texinfo.txi(,1512) 
../texinfo/texinfo.txi(,1513) Here is a numbered list.
../texinfo/texinfo.txi(,1514) 
../texinfo/texinfo.txi(,1515) @enumerate
../texinfo/texinfo.txi(,1516) @item
../texinfo/texinfo.txi(,1517) This is the first item.
../texinfo/texinfo.txi(,1518) 
../texinfo/texinfo.txi(,1519) @item
../texinfo/texinfo.txi(,1520) This is the second item.
../texinfo/texinfo.txi(,1521) @end enumerate
../texinfo/texinfo.txi(,1522) @end quotation
../texinfo/texinfo.txi(,1523) 
../texinfo/texinfo.txi(,1524) 
../texinfo/texinfo.txi(,1525) @node History
../texinfo/texinfo.txi(,1526) @section History
../texinfo/texinfo.txi(,1527) 
../texinfo/texinfo.txi(,1528) @cindex Stallman, Richard M.
../texinfo/texinfo.txi(,1529) @cindex Chassell, Robert J.
../texinfo/texinfo.txi(,1530) @cindex Fox, Brian
../texinfo/texinfo.txi(,1531) @cindex Berry, Karl
../texinfo/texinfo.txi(,1532) Richard M.@: Stallman invented the Texinfo format, wrote the initial
../texinfo/texinfo.txi(,1533) processors, and created Edition 1.0 of this manual.  @w{Robert J.@:}
../texinfo/texinfo.txi(,1534) Chassell greatly revised and extended the manual, starting with Edition
../texinfo/texinfo.txi(,1535) 1.1.  Brian Fox was responsible for the standalone Texinfo distribution
../texinfo/texinfo.txi(,1536) until version 3.8, and wrote the standalone @command{makeinfo} and
../texinfo/texinfo.txi(,1537) @command{info} programs.  Karl Berry has continued maintenance since
../texinfo/texinfo.txi(,1538) Texinfo 3.8 (manual edition 2.22).
../texinfo/texinfo.txi(,1539) 
../texinfo/texinfo.txi(,1540) @cindex Pinard, Fran@,{c}ois
../texinfo/texinfo.txi(,1541) @cindex Zuhn, David D.
../texinfo/texinfo.txi(,1542) @cindex Weisshaus, Melissa
../texinfo/texinfo.txi(,1543) @cindex Zaretskii, Eli
../texinfo/texinfo.txi(,1544) @cindex Schwab, Andreas
../texinfo/texinfo.txi(,1545) @cindex Weinberg, Zack
../texinfo/texinfo.txi(,1546) Our thanks go out to all who helped improve this work, particularly the
../texinfo/texinfo.txi(,1547) indefatigable Eli Zaretskii and Andreas Schwab, who have provided
../texinfo/texinfo.txi(,1548) patches beyond counting.  Fran@,{c}ois Pinard and @w{David D.@: Zuhn},
../texinfo/texinfo.txi(,1549) tirelessly recorded and reported mistakes and obscurities.  Zack
../texinfo/texinfo.txi(,1550) Weinberg did the impossible by implementing the macro syntax in
../texinfo/texinfo.txi(,1551) @file{texinfo.tex}.  Special thanks go to Melissa Weisshaus for her
../texinfo/texinfo.txi(,1552) frequent reviews of nearly similar editions.  Dozens of others have
../texinfo/texinfo.txi(,1553) contributed patches and suggestions, they are gratefully acknowledged in
../texinfo/texinfo.txi(,1554) the @file{ChangeLog} file.  Our mistakes are our own.
../texinfo/texinfo.txi(,1555) 
../texinfo/texinfo.txi(,1556) @cindex Scribe
../texinfo/texinfo.txi(,1557) @cindex Reid, Brian
../texinfo/texinfo.txi(,1558) @cindex History of Texinfo
../texinfo/texinfo.txi(,1559) @cindex Texinfo history
../texinfo/texinfo.txi(,1560) A bit of history: in the 1970's at CMU, Brian Reid developed a program
../texinfo/texinfo.txi(,1561) and format named Scribe to mark up documents for printing.  It used the
../texinfo/texinfo.txi(,1562) @code{@@} character to introduce commands, as Texinfo does.  Much more
../texinfo/texinfo.txi(,1563) consequentially, it strived to describe document contents rather than
../texinfo/texinfo.txi(,1564) formatting, an idea wholeheartedly adopted by Texinfo.
../texinfo/texinfo.txi(,1565) 
../texinfo/texinfo.txi(,1566) @cindex Bolio
../texinfo/texinfo.txi(,1567) @cindex Bo@TeX{}
../texinfo/texinfo.txi(,1568) Meanwhile, people at MIT developed another, not too dissimilar format
../texinfo/texinfo.txi(,1569) called Bolio.  This then was converted to using @TeX{} as its typesetting
../texinfo/texinfo.txi(,1570) language: Bo@TeX{}.  The earliest Bo@TeX{} version seems to have been
../texinfo/texinfo.txi(,1571) 0.02 on October 31, 1984.
../texinfo/texinfo.txi(,1572) 
../texinfo/texinfo.txi(,1573) Bo@TeX{} could only be used as a markup language for documents to be
../texinfo/texinfo.txi(,1574) printed, not for online documents.  Richard Stallman (RMS) worked on
../texinfo/texinfo.txi(,1575) both Bolio and Bo@TeX{}.  He also developed a nifty on-line help format
../texinfo/texinfo.txi(,1576) called Info, and then combined Bo@TeX{} and Info to create Texinfo, a
../texinfo/texinfo.txi(,1577) mark up language for text that is intended to be read both online and
../texinfo/texinfo.txi(,1578) as printed hard copy.
../texinfo/texinfo.txi(,1579) 
../texinfo/texinfo.txi(,1580) 
../texinfo/texinfo.txi(,1581) @node Texinfo Mode
../texinfo/texinfo.txi(,1582) @chapter Using Texinfo Mode
../texinfo/texinfo.txi(,1583) @cindex Texinfo mode
../texinfo/texinfo.txi(,1584) @cindex Mode, using Texinfo
../texinfo/texinfo.txi(,1585) @cindex GNU Emacs
../texinfo/texinfo.txi(,1586) @cindex Emacs
../texinfo/texinfo.txi(,1587) 
../texinfo/texinfo.txi(,1588) You may edit a Texinfo file with any text editor you choose.  A Texinfo
../texinfo/texinfo.txi(,1589) file is no different from any other @sc{ascii} file.  However, GNU Emacs
../texinfo/texinfo.txi(,1590) comes with a special mode, called Texinfo mode, that provides Emacs
../texinfo/texinfo.txi(,1591) commands and tools to help ease your work.
../texinfo/texinfo.txi(,1592) 
../texinfo/texinfo.txi(,1593) This chapter describes features of GNU Emacs' Texinfo mode but not any
../texinfo/texinfo.txi(,1594) features of the Texinfo formatting language.  So if you are reading this
../texinfo/texinfo.txi(,1595) manual straight through from the beginning, you may want to skim through
../texinfo/texinfo.txi(,1596) this chapter briefly and come back to it after reading succeeding
../texinfo/texinfo.txi(,1597) chapters which describe the Texinfo formatting language in detail.
../texinfo/texinfo.txi(,1598) 
../texinfo/texinfo.txi(,1599) @menu
../texinfo/texinfo.txi(,1600) * Texinfo Mode Overview::       How Texinfo mode can help you.
../texinfo/texinfo.txi(,1601) * Emacs Editing::               Texinfo mode adds to GNU Emacs' general
../texinfo/texinfo.txi(,1602)                                   purpose editing features.
../texinfo/texinfo.txi(,1603) * Inserting::                   How to insert frequently used @@-commands.
../texinfo/texinfo.txi(,1604) * Showing the Structure::       How to show the structure of a file.
../texinfo/texinfo.txi(,1605) * Updating Nodes and Menus::    How to update or create new nodes and menus.
../texinfo/texinfo.txi(,1606) * Info Formatting::             How to format for Info.
../texinfo/texinfo.txi(,1607) * Printing::                    How to format and print part or all of a file.
../texinfo/texinfo.txi(,1608) * Texinfo Mode Summary::        Summary of all the Texinfo mode commands.
../texinfo/texinfo.txi(,1609) @end menu
../texinfo/texinfo.txi(,1610) 
../texinfo/texinfo.txi(,1611) @node Texinfo Mode Overview, Emacs Editing, Texinfo Mode, Texinfo Mode
../texinfo/texinfo.txi(,1613) @heading Texinfo Mode Overview
../texinfo/texinfo.txi(,1615) 
../texinfo/texinfo.txi(,1616) Texinfo mode provides special features for working with Texinfo
../texinfo/texinfo.txi(,1617) files.
../texinfo/texinfo.txi(,1618) You can:@refill
../texinfo/texinfo.txi(,1619) 
../texinfo/texinfo.txi(,1620) @itemize @bullet
../texinfo/texinfo.txi(,1621) @item
../texinfo/texinfo.txi(,1622) Insert frequently used @@-commands. @refill
../texinfo/texinfo.txi(,1623) 
../texinfo/texinfo.txi(,1624) @item
../texinfo/texinfo.txi(,1625) Automatically create @code{@@node} lines.
../texinfo/texinfo.txi(,1626) 
../texinfo/texinfo.txi(,1627) @item
../texinfo/texinfo.txi(,1628) Show the structure of a Texinfo source file.@refill
../texinfo/texinfo.txi(,1629) 
../texinfo/texinfo.txi(,1630) @item
../texinfo/texinfo.txi(,1631) Automatically create or update the `Next',
../texinfo/texinfo.txi(,1632) `Previous', and `Up' pointers of a node.
../texinfo/texinfo.txi(,1633) 
../texinfo/texinfo.txi(,1634) @item
../texinfo/texinfo.txi(,1635) Automatically create or update menus.@refill
../texinfo/texinfo.txi(,1636) 
../texinfo/texinfo.txi(,1637) @item
../texinfo/texinfo.txi(,1638) Automatically create a master menu.@refill
../texinfo/texinfo.txi(,1639) 
../texinfo/texinfo.txi(,1640) @item
../texinfo/texinfo.txi(,1641) Format a part or all of a file for Info.@refill
../texinfo/texinfo.txi(,1642) 
../texinfo/texinfo.txi(,1643) @item
../texinfo/texinfo.txi(,1644) Typeset and print part or all of a file.@refill
../texinfo/texinfo.txi(,1645) @end itemize
../texinfo/texinfo.txi(,1646) 
../texinfo/texinfo.txi(,1647) Perhaps the two most helpful features are those for inserting frequently
../texinfo/texinfo.txi(,1648) used @@-commands and for creating node pointers and menus.@refill
../texinfo/texinfo.txi(,1649) 
../texinfo/texinfo.txi(,1650) @node Emacs Editing, Inserting, Texinfo Mode Overview, Texinfo Mode
../texinfo/texinfo.txi(,1651) @section The Usual GNU Emacs Editing Commands
../texinfo/texinfo.txi(,1652) 
../texinfo/texinfo.txi(,1653) In most cases, the usual Text mode commands work the same in Texinfo
../texinfo/texinfo.txi(,1654) mode as they do in Text mode.  Texinfo mode adds new editing commands
../texinfo/texinfo.txi(,1655) and tools to GNU Emacs' general purpose editing features.  The major
../texinfo/texinfo.txi(,1656) difference concerns filling.  In Texinfo mode, the paragraph
../texinfo/texinfo.txi(,1657) separation variable and syntax table are redefined so that Texinfo
../texinfo/texinfo.txi(,1658) commands that should be on lines of their own are not inadvertently
../texinfo/texinfo.txi(,1659) included in paragraphs.  Thus, the @kbd{M-q} (@code{fill-paragraph})
../texinfo/texinfo.txi(,1660) command will refill a paragraph but not mix an indexing command on a
../texinfo/texinfo.txi(,1661) line adjacent to it into the paragraph.@refill
../texinfo/texinfo.txi(,1662) 
../texinfo/texinfo.txi(,1663) In addition, Texinfo mode sets the @code{page-delimiter} variable to
../texinfo/texinfo.txi(,1664) the value of @code{texinfo-chapter-level-regexp}; by default, this is
../texinfo/texinfo.txi(,1665) a regular expression matching the commands for chapters and their
../texinfo/texinfo.txi(,1666) equivalents, such as appendices.  With this value for the page
../texinfo/texinfo.txi(,1667) delimiter, you can jump from chapter title to chapter title with the
../texinfo/texinfo.txi(,1668) @kbd{C-x ]} (@code{forward-page}) and @kbd{C-x [}
../texinfo/texinfo.txi(,1669) (@code{backward-page}) commands and narrow to a chapter with the
../texinfo/texinfo.txi(,1670) @kbd{C-x p} (@code{narrow-to-page}) command.  (@xref{Pages, , ,emacs,
../texinfo/texinfo.txi(,1671) The GNU Emacs Manual}, for details about the page commands.)@refill
../texinfo/texinfo.txi(,1672) 
../texinfo/texinfo.txi(,1673) You may name a Texinfo file however you wish, but the convention is to
../texinfo/texinfo.txi(,1674) end a Texinfo file name with one of the extensions
../texinfo/texinfo.txi(,1675) @file{.texinfo}, @file{.texi}, @file{.txi}, or @file{.tex}.  A longer
../texinfo/texinfo.txi(,1676) extension is preferred, since it is explicit, but a shorter extension
../texinfo/texinfo.txi(,1677) may be necessary for operating systems that limit the length of file
../texinfo/texinfo.txi(,1678) names.  GNU Emacs automatically enters Texinfo mode when you visit a
../texinfo/texinfo.txi(,1679) file with a @file{.texinfo}, @file{.texi} or @file{.txi}
../texinfo/texinfo.txi(,1680) extension.  Also, Emacs switches to Texinfo mode
../texinfo/texinfo.txi(,1681) when you visit a
../texinfo/texinfo.txi(,1682) file that has @samp{-*-texinfo-*-} in its first line.  If ever you are
../texinfo/texinfo.txi(,1683) in another mode and wish to switch to Texinfo mode, type @code{M-x
../texinfo/texinfo.txi(,1684) texinfo-mode}.@refill
../texinfo/texinfo.txi(,1685) 
../texinfo/texinfo.txi(,1686) Like all other Emacs features, you can customize or enhance Texinfo
../texinfo/texinfo.txi(,1687) mode as you wish.  In particular, the keybindings are very easy to
../texinfo/texinfo.txi(,1688) change.  The keybindings described here are the default or standard
../texinfo/texinfo.txi(,1689) ones.@refill
../texinfo/texinfo.txi(,1690) 
../texinfo/texinfo.txi(,1691) @node Inserting, Showing the Structure, Emacs Editing, Texinfo Mode
../texinfo/texinfo.txi(,1692) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,1693) @section Inserting Frequently Used Commands
../texinfo/texinfo.txi(,1694) @cindex Inserting frequently used commands
../texinfo/texinfo.txi(,1695) @cindex Frequently used commands, inserting
../texinfo/texinfo.txi(,1696) @cindex Commands, inserting them
../texinfo/texinfo.txi(,1697) 
../texinfo/texinfo.txi(,1698) Texinfo mode provides commands to insert various frequently used
../texinfo/texinfo.txi(,1699) @@-commands into the buffer.  You can use these commands to save
../texinfo/texinfo.txi(,1700) keystrokes.@refill
../texinfo/texinfo.txi(,1701) 
../texinfo/texinfo.txi(,1702) The insert commands are invoked by typing @kbd{C-c} twice and then the
../texinfo/texinfo.txi(,1703) first letter of the @@-command:@refill
../texinfo/texinfo.txi(,1704) 
../texinfo/texinfo.txi(,1705) @table @kbd
../texinfo/texinfo.txi(,1706) @item  C-c C-c c
../texinfo/texinfo.txi(,1707) @itemx M-x texinfo-insert-@@code
../texinfo/texinfo.txi(,1708) @findex texinfo-insert-@@code
../texinfo/texinfo.txi(,1709) Insert @code{@@code@{@}} and put the
../texinfo/texinfo.txi(,1710) cursor between the braces.@refill
../texinfo/texinfo.txi(,1711) 
../texinfo/texinfo.txi(,1712) @item  C-c C-c d
../texinfo/texinfo.txi(,1713) @itemx M-x texinfo-insert-@@dfn
../texinfo/texinfo.txi(,1714) @findex texinfo-insert-@@dfn
../texinfo/texinfo.txi(,1715) Insert @code{@@dfn@{@}} and put the
../texinfo/texinfo.txi(,1716) cursor between the braces.@refill
../texinfo/texinfo.txi(,1717) 
../texinfo/texinfo.txi(,1718) @item  C-c C-c e
../texinfo/texinfo.txi(,1719) @itemx M-x texinfo-insert-@@end
../texinfo/texinfo.txi(,1720) @findex texinfo-insert-@@end
../texinfo/texinfo.txi(,1721) Insert @code{@@end} and attempt to insert the correct following word,
../texinfo/texinfo.txi(,1722) such as @samp{example} or @samp{table}.  (This command does not handle
../texinfo/texinfo.txi(,1723) nested lists correctly, but inserts the word appropriate to the
../texinfo/texinfo.txi(,1724) immediately preceding list.)@refill
../texinfo/texinfo.txi(,1725) 
../texinfo/texinfo.txi(,1726) @item  C-c C-c i
../texinfo/texinfo.txi(,1727) @itemx M-x texinfo-insert-@@item
../texinfo/texinfo.txi(,1728) @findex texinfo-insert-@@item
../texinfo/texinfo.txi(,1729) Insert @code{@@item} and put the
../texinfo/texinfo.txi(,1730) cursor at the beginning of the next line.@refill
../texinfo/texinfo.txi(,1731) 
../texinfo/texinfo.txi(,1732) @item  C-c C-c k
../texinfo/texinfo.txi(,1733) @itemx M-x texinfo-insert-@@kbd
../texinfo/texinfo.txi(,1734) @findex texinfo-insert-@@kbd
../texinfo/texinfo.txi(,1735) Insert @code{@@kbd@{@}} and put the
../texinfo/texinfo.txi(,1736) cursor between the braces.@refill
../texinfo/texinfo.txi(,1737) 
../texinfo/texinfo.txi(,1738) @item  C-c C-c n
../texinfo/texinfo.txi(,1739) @itemx M-x texinfo-insert-@@node
../texinfo/texinfo.txi(,1740) @findex texinfo-insert-@@node
../texinfo/texinfo.txi(,1741) Insert @code{@@node} and a comment line
../texinfo/texinfo.txi(,1742) listing the sequence for the `Next',
../texinfo/texinfo.txi(,1743) `Previous', and `Up' nodes.
../texinfo/texinfo.txi(,1744) Leave point after the @code{@@node}.@refill
../texinfo/texinfo.txi(,1745) 
../texinfo/texinfo.txi(,1746) @item  C-c C-c o
../texinfo/texinfo.txi(,1747) @itemx M-x texinfo-insert-@@noindent
../texinfo/texinfo.txi(,1748) @findex texinfo-insert-@@noindent
../texinfo/texinfo.txi(,1749) Insert @code{@@noindent} and put the
../texinfo/texinfo.txi(,1750) cursor at the beginning of the next line.@refill
../texinfo/texinfo.txi(,1751) 
../texinfo/texinfo.txi(,1752) @item  C-c C-c s
../texinfo/texinfo.txi(,1753) @itemx M-x texinfo-insert-@@samp
../texinfo/texinfo.txi(,1754) @findex texinfo-insert-@@samp
../texinfo/texinfo.txi(,1755) Insert @code{@@samp@{@}} and put the
../texinfo/texinfo.txi(,1756) cursor between the braces.@refill
../texinfo/texinfo.txi(,1757) 
../texinfo/texinfo.txi(,1758) @item  C-c C-c t
../texinfo/texinfo.txi(,1759) @itemx M-x texinfo-insert-@@table
../texinfo/texinfo.txi(,1760) @findex texinfo-insert-@@table
../texinfo/texinfo.txi(,1761) Insert @code{@@table} followed by a @key{SPC}
../texinfo/texinfo.txi(,1762) and leave the cursor after the @key{SPC}.@refill
../texinfo/texinfo.txi(,1763) 
../texinfo/texinfo.txi(,1764) @item  C-c C-c v
../texinfo/texinfo.txi(,1765) @itemx M-x texinfo-insert-@@var
../texinfo/texinfo.txi(,1766) @findex texinfo-insert-@@var
../texinfo/texinfo.txi(,1767) Insert @code{@@var@{@}} and put the
../texinfo/texinfo.txi(,1768) cursor between the braces.@refill
../texinfo/texinfo.txi(,1769) 
../texinfo/texinfo.txi(,1770) @item  C-c C-c x
../texinfo/texinfo.txi(,1771) @itemx M-x texinfo-insert-@@example
../texinfo/texinfo.txi(,1772) @findex texinfo-insert-@@example
../texinfo/texinfo.txi(,1773) Insert @code{@@example} and put the
../texinfo/texinfo.txi(,1774) cursor at the beginning of the next line.@refill
../texinfo/texinfo.txi(,1775) 
../texinfo/texinfo.txi(,1776) @c M-@{  was the binding for texinfo-insert-braces;
../texinfo/texinfo.txi(,1777) @c in Emacs 19, backward-paragraph will take this binding.
../texinfo/texinfo.txi(,1778) @item C-c C-c @{
../texinfo/texinfo.txi(,1779) @itemx M-x texinfo-insert-braces
../texinfo/texinfo.txi(,1780) @findex texinfo-insert-braces
../texinfo/texinfo.txi(,1781) Insert @code{@{@}} and put the cursor between the braces.@refill
../texinfo/texinfo.txi(,1782) 
../texinfo/texinfo.txi(,1783) @item C-c C-c @}
../texinfo/texinfo.txi(,1784) @itemx C-c C-c ]
../texinfo/texinfo.txi(,1785) @itemx M-x up-list
../texinfo/texinfo.txi(,1786) @findex up-list
../texinfo/texinfo.txi(,1787) Move from between a pair of braces forward past the closing brace.
../texinfo/texinfo.txi(,1788) Typing @kbd{C-c C-c ]} is easier than typing @kbd{C-c C-c @}}, which
../texinfo/texinfo.txi(,1789) is, however, more mnemonic; hence the two keybindings.  (Also, you can
../texinfo/texinfo.txi(,1790) move out from between braces by typing @kbd{C-f}.)@refill
../texinfo/texinfo.txi(,1791) @end table
../texinfo/texinfo.txi(,1792) 
../texinfo/texinfo.txi(,1793) To put a command such as @w{@code{@@code@{@dots{}@}}} around an
../texinfo/texinfo.txi(,1794) @emph{existing} word, position the cursor in front of the word and type
../texinfo/texinfo.txi(,1795) @kbd{C-u 1 C-c C-c c}.  This makes it easy to edit existing plain text.
../texinfo/texinfo.txi(,1796) The value of the prefix argument tells Emacs how many words following
../texinfo/texinfo.txi(,1797) point to include between braces---@samp{1} for one word, @samp{2} for
../texinfo/texinfo.txi(,1798) two words, and so on.  Use a negative argument to enclose the previous
../texinfo/texinfo.txi(,1799) word or words.  If you do not specify a prefix argument, Emacs inserts
../texinfo/texinfo.txi(,1800) the @@-command string and positions the cursor between the braces.  This
../texinfo/texinfo.txi(,1801) feature works only for those @@-commands that operate on a word or words
../texinfo/texinfo.txi(,1802) within one line, such as @code{@@kbd} and @code{@@var}.@refill
../texinfo/texinfo.txi(,1803) 
../texinfo/texinfo.txi(,1804) This set of insert commands was created after analyzing the frequency
../texinfo/texinfo.txi(,1805) with which different @@-commands are used in the @cite{GNU Emacs
../texinfo/texinfo.txi(,1806) Manual} and the @cite{GDB Manual}.  If you wish to add your own insert
../texinfo/texinfo.txi(,1807) commands, you can bind a keyboard macro to a key, use abbreviations,
../texinfo/texinfo.txi(,1808) or extend the code in @file{texinfo.el}.@refill
../texinfo/texinfo.txi(,1809) 
../texinfo/texinfo.txi(,1810) @findex texinfo-start-menu-description
../texinfo/texinfo.txi(,1811) @cindex Menu description, start
../texinfo/texinfo.txi(,1812) @cindex Description for menu, start
../texinfo/texinfo.txi(,1813) @kbd{C-c C-c C-d} (@code{texinfo-start-menu-description}) is an insert
../texinfo/texinfo.txi(,1814) command that works differently from the other insert commands.  It
../texinfo/texinfo.txi(,1815) inserts a node's section or chapter title in the space for the
../texinfo/texinfo.txi(,1816) description in a menu entry line.  (A menu entry has three parts, the
../texinfo/texinfo.txi(,1817) entry name, the node name, and the description.  Only the node name is
../texinfo/texinfo.txi(,1818) required, but a description helps explain what the node is about.
../texinfo/texinfo.txi(,1819) @xref{Menu Parts, , The Parts of a Menu}.)@refill
../texinfo/texinfo.txi(,1820) 
../texinfo/texinfo.txi(,1821) To use @code{texinfo-start-menu-description}, position point in a menu
../texinfo/texinfo.txi(,1822) entry line and type @kbd{C-c C-c C-d}.  The command looks for and copies
../texinfo/texinfo.txi(,1823) the title that goes with the node name, and inserts the title as a
../texinfo/texinfo.txi(,1824) description; it positions point at beginning of the inserted text so you
../texinfo/texinfo.txi(,1825) can edit it.  The function does not insert the title if the menu entry
../texinfo/texinfo.txi(,1826) line already contains a description.@refill
../texinfo/texinfo.txi(,1827) 
../texinfo/texinfo.txi(,1828) This command is only an aid to writing descriptions; it does not do the
../texinfo/texinfo.txi(,1829) whole job.  You must edit the inserted text since a title tends to use
../texinfo/texinfo.txi(,1830) the same words as a node name but a useful description uses different
../texinfo/texinfo.txi(,1831) words.@refill
../texinfo/texinfo.txi(,1832) 
../texinfo/texinfo.txi(,1833) @node Showing the Structure, Updating Nodes and Menus, Inserting, Texinfo Mode
../texinfo/texinfo.txi(,1834) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,1835) @section Showing the Section Structure of a File
../texinfo/texinfo.txi(,1836) @cindex Showing the section structure of a file
../texinfo/texinfo.txi(,1837) @cindex Section structure of a file, showing it
../texinfo/texinfo.txi(,1838) @cindex Structure of a file, showing it
../texinfo/texinfo.txi(,1839) @cindex Outline of file structure, showing it
../texinfo/texinfo.txi(,1840) @cindex Contents-like outline of file structure
../texinfo/texinfo.txi(,1841) @cindex File section structure, showing it
../texinfo/texinfo.txi(,1842) @cindex Texinfo file section structure, showing it
../texinfo/texinfo.txi(,1843) 
../texinfo/texinfo.txi(,1844) You can show the section structure of a Texinfo file by using the
../texinfo/texinfo.txi(,1845) @kbd{C-c C-s} command (@code{texinfo-show-structure}).  This command
../texinfo/texinfo.txi(,1846) shows the section structure of a Texinfo file by listing the lines
../texinfo/texinfo.txi(,1847) that begin with the @@-commands for @code{@@chapter},
../texinfo/texinfo.txi(,1848) @code{@@section}, and the like.  It constructs what amounts
../texinfo/texinfo.txi(,1849) to a table of contents.  These lines are displayed in another buffer
../texinfo/texinfo.txi(,1850) called the @samp{*Occur*} buffer.  In that buffer, you can position
../texinfo/texinfo.txi(,1851) the cursor over one of the lines and use the @kbd{C-c C-c} command
../texinfo/texinfo.txi(,1852) (@code{occur-mode-goto-occurrence}), to jump to the corresponding spot
../texinfo/texinfo.txi(,1853) in the Texinfo file.@refill
../texinfo/texinfo.txi(,1854) 
../texinfo/texinfo.txi(,1855) @table @kbd
../texinfo/texinfo.txi(,1856) @item  C-c C-s
../texinfo/texinfo.txi(,1857) @itemx M-x texinfo-show-structure
../texinfo/texinfo.txi(,1858) @findex texinfo-show-structure
../texinfo/texinfo.txi(,1859) Show the @code{@@chapter}, @code{@@section}, and such lines of a
../texinfo/texinfo.txi(,1860) Texinfo file.@refill
../texinfo/texinfo.txi(,1861) 
../texinfo/texinfo.txi(,1862) @item  C-c C-c
../texinfo/texinfo.txi(,1863) @itemx M-x occur-mode-goto-occurrence
../texinfo/texinfo.txi(,1864) @findex occur-mode-goto-occurrence
../texinfo/texinfo.txi(,1865) Go to the line in the Texinfo file corresponding to the line under the
../texinfo/texinfo.txi(,1866) cursor in the @file{*Occur*} buffer.@refill
../texinfo/texinfo.txi(,1867) @end table
../texinfo/texinfo.txi(,1868) 
../texinfo/texinfo.txi(,1869) If you call @code{texinfo-show-structure} with a prefix argument by
../texinfo/texinfo.txi(,1870) typing @w{@kbd{C-u C-c C-s}}, it will list not only those lines with the
../texinfo/texinfo.txi(,1871) @@-commands for @code{@@chapter}, @code{@@section}, and the like, but
../texinfo/texinfo.txi(,1872) also the @code{@@node} lines.  You can use @code{texinfo-show-structure}
../texinfo/texinfo.txi(,1873) with a prefix argument to check whether the `Next', `Previous', and `Up'
../texinfo/texinfo.txi(,1874) pointers of an @code{@@node} line are correct.
../texinfo/texinfo.txi(,1875) 
../texinfo/texinfo.txi(,1876) Often, when you are working on a manual, you will be interested only
../texinfo/texinfo.txi(,1877) in the structure of the current chapter.  In this case, you can mark
../texinfo/texinfo.txi(,1878) off the region of the buffer that you are interested in by using the
../texinfo/texinfo.txi(,1879) @kbd{C-x n n} (@code{narrow-to-region}) command and
../texinfo/texinfo.txi(,1880) @code{texinfo-show-structure} will work on only that region.  To see
../texinfo/texinfo.txi(,1881) the whole buffer again, use @w{@kbd{C-x n w}} (@code{widen}).
../texinfo/texinfo.txi(,1882) (@xref{Narrowing, , , emacs, The GNU Emacs Manual}, for more
../texinfo/texinfo.txi(,1883) information about the narrowing commands.)@refill
../texinfo/texinfo.txi(,1884) 
../texinfo/texinfo.txi(,1885) @vindex page-delimiter
../texinfo/texinfo.txi(,1886) @cindex Page delimiter in Texinfo mode
../texinfo/texinfo.txi(,1887) In addition to providing the @code{texinfo-show-structure} command,
../texinfo/texinfo.txi(,1888) Texinfo mode sets the value of the page delimiter variable to match
../texinfo/texinfo.txi(,1889) the chapter-level @@-commands.  This enables you to use the @kbd{C-x
../texinfo/texinfo.txi(,1890) ]} (@code{forward-page}) and @kbd{C-x [} (@code{backward-page})
../texinfo/texinfo.txi(,1891) commands to move forward and backward by chapter, and to use the
../texinfo/texinfo.txi(,1892) @kbd{C-x p} (@code{narrow-to-page}) command to narrow to a chapter.
../texinfo/texinfo.txi(,1893) @xref{Pages, , , emacs, The GNU Emacs Manual}, for more information
../texinfo/texinfo.txi(,1894) about the page commands.@refill
../texinfo/texinfo.txi(,1895) 
../texinfo/texinfo.txi(,1896) @node Updating Nodes and Menus, Info Formatting, Showing the Structure, Texinfo Mode
../texinfo/texinfo.txi(,1897) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,1898) @section Updating Nodes and Menus
../texinfo/texinfo.txi(,1899) @cindex Updating nodes and menus
../texinfo/texinfo.txi(,1900) @cindex Create nodes, menus automatically
../texinfo/texinfo.txi(,1901) @cindex Insert nodes, menus automatically
../texinfo/texinfo.txi(,1902) @cindex Automatically insert nodes, menus
../texinfo/texinfo.txi(,1903) 
../texinfo/texinfo.txi(,1904) Texinfo mode provides commands for automatically creating or updating
../texinfo/texinfo.txi(,1905) menus and node pointers.  The commands are called ``update'' commands
../texinfo/texinfo.txi(,1906) because their most frequent use is for updating a Texinfo file after you
../texinfo/texinfo.txi(,1907) have worked on it; but you can use them to insert the `Next',
../texinfo/texinfo.txi(,1908) `Previous', and `Up' pointers into an @code{@@node} line that has none
../texinfo/texinfo.txi(,1909) and to create menus in a file that has none.
../texinfo/texinfo.txi(,1910) 
../texinfo/texinfo.txi(,1911) If you do not use the updating commands, you need to write menus and
../texinfo/texinfo.txi(,1912) node pointers by hand, which is a tedious task.@refill
../texinfo/texinfo.txi(,1913) 
../texinfo/texinfo.txi(,1914) @menu
../texinfo/texinfo.txi(,1915) * Updating Commands::           Five major updating commands.
../texinfo/texinfo.txi(,1916) * Updating Requirements::       How to structure a Texinfo file for
../texinfo/texinfo.txi(,1917)                                   using the updating command.
../texinfo/texinfo.txi(,1918) * Other Updating Commands::     How to indent descriptions, insert
../texinfo/texinfo.txi(,1919)                                   missing nodes lines, and update
../texinfo/texinfo.txi(,1920)                                   nodes in sequence.
../texinfo/texinfo.txi(,1921) @end menu
../texinfo/texinfo.txi(,1922) 
../texinfo/texinfo.txi(,1923) @node Updating Commands, Updating Requirements, Updating Nodes and Menus, Updating Nodes and Menus
../texinfo/texinfo.txi(,1925) @subheading The Updating Commands
../texinfo/texinfo.txi(,1927) 
../texinfo/texinfo.txi(,1928) You can use the updating commands to:@refill
../texinfo/texinfo.txi(,1929) 
../texinfo/texinfo.txi(,1930) @itemize @bullet
../texinfo/texinfo.txi(,1931) @item
../texinfo/texinfo.txi(,1932) insert or update the `Next', `Previous', and `Up' pointers of a
../texinfo/texinfo.txi(,1933) node,@refill
../texinfo/texinfo.txi(,1934) 
../texinfo/texinfo.txi(,1935) @item
../texinfo/texinfo.txi(,1936) insert or update the menu for a section, and@refill
../texinfo/texinfo.txi(,1937) 
../texinfo/texinfo.txi(,1938) @item
../texinfo/texinfo.txi(,1939) create a master menu for a Texinfo source file.@refill
../texinfo/texinfo.txi(,1940) @end itemize
../texinfo/texinfo.txi(,1941) 
../texinfo/texinfo.txi(,1942) You can also use the commands to update all the nodes and menus in a
../texinfo/texinfo.txi(,1943) region or in a whole Texinfo file.@refill
../texinfo/texinfo.txi(,1944) 
../texinfo/texinfo.txi(,1945) The updating commands work only with conventional Texinfo files, which
../texinfo/texinfo.txi(,1946) are structured hierarchically like books.  In such files, a structuring
../texinfo/texinfo.txi(,1947) command line must follow closely after each @code{@@node} line, except
../texinfo/texinfo.txi(,1948) for the `Top' @code{@@node} line.  (A @dfn{structuring command line} is
../texinfo/texinfo.txi(,1949) a line beginning with @code{@@chapter}, @code{@@section}, or other
../texinfo/texinfo.txi(,1950) similar command.)
../texinfo/texinfo.txi(,1951) 
../texinfo/texinfo.txi(,1952) You can write the structuring command line on the line that follows
../texinfo/texinfo.txi(,1953) immediately after an @code{@@node} line or else on the line that
../texinfo/texinfo.txi(,1954) follows after a single @code{@@comment} line or a single
../texinfo/texinfo.txi(,1955) @code{@@ifinfo} line.  You cannot interpose more than one line between
../texinfo/texinfo.txi(,1956) the @code{@@node} line and the structuring command line; and you may
../texinfo/texinfo.txi(,1957) interpose only an @code{@@comment} line or an @code{@@ifinfo} line.
../texinfo/texinfo.txi(,1958) 
../texinfo/texinfo.txi(,1959) Commands which work on a whole buffer require that the `Top' node be
../texinfo/texinfo.txi(,1960) followed by a node with an @code{@@chapter} or equivalent-level command.
../texinfo/texinfo.txi(,1961) The menu updating commands will not create a main or master menu for a
../texinfo/texinfo.txi(,1962) Texinfo file that has only @code{@@chapter}-level nodes!  The menu
../texinfo/texinfo.txi(,1963) updating commands only create menus @emph{within} nodes for lower level
../texinfo/texinfo.txi(,1964) nodes.  To create a menu of chapters, you must provide a `Top'
../texinfo/texinfo.txi(,1965) node.
../texinfo/texinfo.txi(,1966) 
../texinfo/texinfo.txi(,1967) The menu updating commands remove menu entries that refer to other Info
../texinfo/texinfo.txi(,1968) files since they do not refer to nodes within the current buffer.  This
../texinfo/texinfo.txi(,1969) is a deficiency.  Rather than use menu entries, you can use cross
../texinfo/texinfo.txi(,1970) references to refer to other Info files.  None of the updating commands
../texinfo/texinfo.txi(,1971) affect cross references.@refill
../texinfo/texinfo.txi(,1972) 
../texinfo/texinfo.txi(,1973) Texinfo mode has five updating commands that are used most often: two
../texinfo/texinfo.txi(,1974) are for updating the node pointers or menu of a single node (or a
../texinfo/texinfo.txi(,1975) region); two are for updating every node pointer and menu in a file;
../texinfo/texinfo.txi(,1976) and one, the @code{texinfo-master-menu} command, is for creating a
../texinfo/texinfo.txi(,1977) master menu for a complete file, and optionally, for updating every
../texinfo/texinfo.txi(,1978) node and menu in the whole Texinfo file.@refill
../texinfo/texinfo.txi(,1979) 
../texinfo/texinfo.txi(,1980) The @code{texinfo-master-menu} command is the primary command:@refill
../texinfo/texinfo.txi(,1981) 
../texinfo/texinfo.txi(,1982) @table @kbd
../texinfo/texinfo.txi(,1983) @item C-c C-u m
../texinfo/texinfo.txi(,1984) @itemx M-x texinfo-master-menu
../texinfo/texinfo.txi(,1985) @findex texinfo-master-menu
../texinfo/texinfo.txi(,1986) Create or update a master menu that includes all the other menus
../texinfo/texinfo.txi(,1987) (incorporating the descriptions from pre-existing menus, if
../texinfo/texinfo.txi(,1988) any).@refill
../texinfo/texinfo.txi(,1989) 
../texinfo/texinfo.txi(,1990) With an argument (prefix argument, @kbd{C-u,} if interactive), first create or
../texinfo/texinfo.txi(,1991) update all the nodes and all the regular menus in the buffer before
../texinfo/texinfo.txi(,1992) constructing the master menu.  (@xref{The Top Node, , The Top Node and
../texinfo/texinfo.txi(,1993) Master Menu}, for more about a master menu.)@refill
../texinfo/texinfo.txi(,1994) 
../texinfo/texinfo.txi(,1995) For @code{texinfo-master-menu} to work, the Texinfo file must have a
../texinfo/texinfo.txi(,1996) `Top' node and at least one subsequent node.@refill
../texinfo/texinfo.txi(,1997) 
../texinfo/texinfo.txi(,1998) After extensively editing a Texinfo file, you can type the following:
../texinfo/texinfo.txi(,1999) 
../texinfo/texinfo.txi(,2000) @example
../texinfo/texinfo.txi(,2001) C-u M-x texinfo-master-menu
../texinfo/texinfo.txi(,2002) @exdent or
../texinfo/texinfo.txi(,2003) C-u C-c C-u m
../texinfo/texinfo.txi(,2004) @end example
../texinfo/texinfo.txi(,2005) 
../texinfo/texinfo.txi(,2006) @noindent
../texinfo/texinfo.txi(,2007) This updates all the nodes and menus completely and all at once.@refill
../texinfo/texinfo.txi(,2008) @end table
../texinfo/texinfo.txi(,2009) 
../texinfo/texinfo.txi(,2010) The other major updating commands do smaller jobs and are designed for
../texinfo/texinfo.txi(,2011) the person who updates nodes and menus as he or she writes a Texinfo
../texinfo/texinfo.txi(,2012) file.@refill
../texinfo/texinfo.txi(,2013) 
../texinfo/texinfo.txi(,2014) @need 1000
../texinfo/texinfo.txi(,2015) The commands are:@refill
../texinfo/texinfo.txi(,2016) 
../texinfo/texinfo.txi(,2017) @table @kbd
../texinfo/texinfo.txi(,2018) @item C-c C-u C-n
../texinfo/texinfo.txi(,2019) @itemx M-x texinfo-update-node
../texinfo/texinfo.txi(,2020) @findex texinfo-update-node
../texinfo/texinfo.txi(,2021) Insert the `Next', `Previous', and `Up' pointers for the node that point is
../texinfo/texinfo.txi(,2022) within (i.e., for the @code{@@node} line preceding point).  If the
../texinfo/texinfo.txi(,2023) @code{@@node} line has pre-existing `Next', `Previous', or `Up'
../texinfo/texinfo.txi(,2024) pointers in it, the old pointers are removed and new ones inserted.
../texinfo/texinfo.txi(,2025) With an argument (prefix argument, @kbd{C-u}, if interactive), this command
../texinfo/texinfo.txi(,2026) updates all @code{@@node} lines in the region (which is the text
../texinfo/texinfo.txi(,2027) between point and mark).@refill
../texinfo/texinfo.txi(,2028) 
../texinfo/texinfo.txi(,2029) @item C-c C-u C-m
../texinfo/texinfo.txi(,2030) @itemx M-x texinfo-make-menu
../texinfo/texinfo.txi(,2031) @findex texinfo-make-menu
../texinfo/texinfo.txi(,2032) Create or update the menu in the node that point is within.
../texinfo/texinfo.txi(,2033) With an argument (@kbd{C-u} as prefix argument, if
../texinfo/texinfo.txi(,2034) interactive), the command makes or updates menus for the
../texinfo/texinfo.txi(,2035) nodes which are either within or a part of the
../texinfo/texinfo.txi(,2036) region.@refill
../texinfo/texinfo.txi(,2037) 
../texinfo/texinfo.txi(,2038) Whenever @code{texinfo-make-menu} updates an existing menu, the
../texinfo/texinfo.txi(,2039) descriptions from that menu are incorporated into the new menu.  This
../texinfo/texinfo.txi(,2040) is done by copying descriptions from the existing menu to the entries
../texinfo/texinfo.txi(,2041) in the new menu that have the same node names.  If the node names are
../texinfo/texinfo.txi(,2042) different, the descriptions are not copied to the new menu.@refill
../texinfo/texinfo.txi(,2043) 
../texinfo/texinfo.txi(,2044) @item C-c C-u C-e
../texinfo/texinfo.txi(,2045) @itemx M-x texinfo-every-node-update
../texinfo/texinfo.txi(,2046) @findex texinfo-every-node-update
../texinfo/texinfo.txi(,2047) Insert or update the `Next', `Previous', and `Up' pointers for every
../texinfo/texinfo.txi(,2048) node in the buffer.@refill
../texinfo/texinfo.txi(,2049) 
../texinfo/texinfo.txi(,2050) @item C-c C-u C-a
../texinfo/texinfo.txi(,2051) @itemx M-x texinfo-all-menus-update
../texinfo/texinfo.txi(,2052) @findex texinfo-all-menus-update
../texinfo/texinfo.txi(,2053) Create or update all the menus in the buffer.  With an argument
../texinfo/texinfo.txi(,2054) (@kbd{C-u} as prefix argument, if interactive), first insert
../texinfo/texinfo.txi(,2055) or update all the node
../texinfo/texinfo.txi(,2056) pointers before working on the menus.@refill
../texinfo/texinfo.txi(,2057) 
../texinfo/texinfo.txi(,2058) If a master menu exists, the @code{texinfo-all-menus-update} command
../texinfo/texinfo.txi(,2059) updates it; but the command does not create a new master menu if none
../texinfo/texinfo.txi(,2060) already exists.  (Use the @code{texinfo-master-menu} command for
../texinfo/texinfo.txi(,2061) that.)@refill
../texinfo/texinfo.txi(,2062) 
../texinfo/texinfo.txi(,2063) When working on a document that does not merit a master menu, you can
../texinfo/texinfo.txi(,2064) type the following:
../texinfo/texinfo.txi(,2065) 
../texinfo/texinfo.txi(,2066) @example
../texinfo/texinfo.txi(,2067) C-u C-c C-u C-a
../texinfo/texinfo.txi(,2068) @exdent or
../texinfo/texinfo.txi(,2069) C-u M-x texinfo-all-menus-update
../texinfo/texinfo.txi(,2070) @end example
../texinfo/texinfo.txi(,2071) 
../texinfo/texinfo.txi(,2072) @noindent
../texinfo/texinfo.txi(,2073) This updates all the nodes and menus.@refill
../texinfo/texinfo.txi(,2074) @end table
../texinfo/texinfo.txi(,2075) 
../texinfo/texinfo.txi(,2076) The @code{texinfo-column-for-description} variable specifies the
../texinfo/texinfo.txi(,2077) column to which menu descriptions are indented.  By default, the value
../texinfo/texinfo.txi(,2078) is 32 although it is often useful to reduce it to as low as 24.  You
../texinfo/texinfo.txi(,2079) can set the variable with the @kbd{M-x edit-options} command
../texinfo/texinfo.txi(,2080) (@pxref{Edit Options, , Editing Variable Values, emacs, The GNU Emacs
../texinfo/texinfo.txi(,2081) Manual}) or with the @kbd{M-x set-variable} command (@pxref{Examining,
../texinfo/texinfo.txi(,2082) , Examining and Setting Variables, emacs, The GNU Emacs
../texinfo/texinfo.txi(,2083) Manual}).@refill
../texinfo/texinfo.txi(,2084) 
../texinfo/texinfo.txi(,2085) Also, the @code{texinfo-indent-menu-description} command may be used to
../texinfo/texinfo.txi(,2086) indent existing menu descriptions to a specified column.  Finally, if
../texinfo/texinfo.txi(,2087) you wish, you can use the @code{texinfo-insert-node-lines} command to
../texinfo/texinfo.txi(,2088) insert missing @code{@@node} lines into a file.  (@xref{Other Updating
../texinfo/texinfo.txi(,2089) Commands}, for more information.)@refill
../texinfo/texinfo.txi(,2090) 
../texinfo/texinfo.txi(,2091) @node Updating Requirements
../texinfo/texinfo.txi(,2092) @subsection Updating Requirements
../texinfo/texinfo.txi(,2093) @cindex Updating requirements
../texinfo/texinfo.txi(,2094) @cindex Requirements for updating commands
../texinfo/texinfo.txi(,2095) 
../texinfo/texinfo.txi(,2096) To use the updating commands, you must organize the Texinfo file
../texinfo/texinfo.txi(,2097) hierarchically with chapters, sections, subsections, and the like.
../texinfo/texinfo.txi(,2098) When you construct the hierarchy of the manual, do not `jump down'
../texinfo/texinfo.txi(,2099) more than one level at a time: you can follow the `Top' node with a
../texinfo/texinfo.txi(,2100) chapter, but not with a section; you can follow a chapter with a
../texinfo/texinfo.txi(,2101) section, but not with a subsection.  However, you may `jump up' any
../texinfo/texinfo.txi(,2102) number of levels at one time---for example, from a subsection to a
../texinfo/texinfo.txi(,2103) chapter.@refill
../texinfo/texinfo.txi(,2104) 
../texinfo/texinfo.txi(,2105) Each @code{@@node} line, with the exception of the line for the `Top'
../texinfo/texinfo.txi(,2106) node, must be followed by a line with a structuring command such as
../texinfo/texinfo.txi(,2107) @code{@@chapter}, @code{@@section}, or
../texinfo/texinfo.txi(,2108) @code{@@unnumberedsubsec}.@refill
../texinfo/texinfo.txi(,2109) 
../texinfo/texinfo.txi(,2110) Each @code{@@node} line/structuring-command line combination
../texinfo/texinfo.txi(,2111) must look either like this:
../texinfo/texinfo.txi(,2112) 
../texinfo/texinfo.txi(,2113) @example
../texinfo/texinfo.txi(,2114) @group
../texinfo/texinfo.txi(,2115) @@node     Comments,  Minimum, Conventions, Overview
../texinfo/texinfo.txi(,2116) @@comment  node-name, next,    previous,    up
../texinfo/texinfo.txi(,2117) @@section Comments
../texinfo/texinfo.txi(,2118) @end group
../texinfo/texinfo.txi(,2119) @end example
../texinfo/texinfo.txi(,2120) 
../texinfo/texinfo.txi(,2121) or like this (without the @code{@@comment} line):
../texinfo/texinfo.txi(,2122) 
../texinfo/texinfo.txi(,2123) @example
../texinfo/texinfo.txi(,2124) @group
../texinfo/texinfo.txi(,2125) @@node Comments, Minimum, Conventions, Overview
../texinfo/texinfo.txi(,2126) @@section Comments
../texinfo/texinfo.txi(,2127) @end group
../texinfo/texinfo.txi(,2128) @end example
../texinfo/texinfo.txi(,2129) 
../texinfo/texinfo.txi(,2130) or like this (without the explicit node pointers):
../texinfo/texinfo.txi(,2131) 
../texinfo/texinfo.txi(,2132) @example
../texinfo/texinfo.txi(,2133) @group
../texinfo/texinfo.txi(,2134) @@node Comments
../texinfo/texinfo.txi(,2135) @@section Comments
../texinfo/texinfo.txi(,2136) @end group
../texinfo/texinfo.txi(,2137) @end example
../texinfo/texinfo.txi(,2138) 
../texinfo/texinfo.txi(,2139) @noindent
../texinfo/texinfo.txi(,2140) In this example, `Comments' is the name of both the node and the
../texinfo/texinfo.txi(,2141) section.  The next node is called `Minimum' and the previous node is
../texinfo/texinfo.txi(,2142) called `Conventions'.  The `Comments' section is within the `Overview'
../texinfo/texinfo.txi(,2143) node, which is specified by the `Up' pointer.  (Instead of an
../texinfo/texinfo.txi(,2144) @code{@@comment} line, you may also write an @code{@@ifinfo} line.)
../texinfo/texinfo.txi(,2145) 
../texinfo/texinfo.txi(,2146) If a file has a `Top' node, it must be called @samp{top} or @samp{Top}
../texinfo/texinfo.txi(,2147) and be the first node in the file.
../texinfo/texinfo.txi(,2148) 
../texinfo/texinfo.txi(,2149) The menu updating commands create a menu of sections within a chapter,
../texinfo/texinfo.txi(,2150) a menu of subsections within a section, and so on.  This means that
../texinfo/texinfo.txi(,2151) you must have a `Top' node if you want a menu of chapters.@refill
../texinfo/texinfo.txi(,2152) 
../texinfo/texinfo.txi(,2153) Incidentally, the @code{makeinfo} command will create an Info file for a
../texinfo/texinfo.txi(,2154) hierarchically organized Texinfo file that lacks `Next', `Previous' and
../texinfo/texinfo.txi(,2155) `Up' pointers.  Thus, if you can be sure that your Texinfo file will be
../texinfo/texinfo.txi(,2156) formatted with @code{makeinfo}, you have no need for the update node
../texinfo/texinfo.txi(,2157) commands.  (@xref{Creating an Info File}, for more information about
../texinfo/texinfo.txi(,2158) @code{makeinfo}.)  However, both @code{makeinfo} and the
../texinfo/texinfo.txi(,2159) @code{texinfo-format-@dots{}} commands require that you insert menus in
../texinfo/texinfo.txi(,2160) the file.
../texinfo/texinfo.txi(,2161) 
../texinfo/texinfo.txi(,2162) 
../texinfo/texinfo.txi(,2163) @node Other Updating Commands
../texinfo/texinfo.txi(,2164) @subsection Other Updating Commands
../texinfo/texinfo.txi(,2165) 
../texinfo/texinfo.txi(,2166) In addition to the five major updating commands, Texinfo mode
../texinfo/texinfo.txi(,2167) possesses several less frequently used updating commands:@refill
../texinfo/texinfo.txi(,2168) 
../texinfo/texinfo.txi(,2169) @table @kbd
../texinfo/texinfo.txi(,2170) @item M-x texinfo-insert-node-lines
../texinfo/texinfo.txi(,2171) @findex texinfo-insert-node-lines
../texinfo/texinfo.txi(,2172) Insert @code{@@node} lines before the @code{@@chapter},
../texinfo/texinfo.txi(,2173) @code{@@section}, and other sectioning commands wherever they are
../texinfo/texinfo.txi(,2174) missing throughout a region in a Texinfo file.@refill
../texinfo/texinfo.txi(,2175) 
../texinfo/texinfo.txi(,2176) With an argument (@kbd{C-u} as prefix argument, if interactive), the
../texinfo/texinfo.txi(,2177) @code{texinfo-insert-node-lines} command not only inserts
../texinfo/texinfo.txi(,2178) @code{@@node} lines but also inserts the chapter or section titles as
../texinfo/texinfo.txi(,2179) the names of the corresponding nodes.  In addition, it inserts the
../texinfo/texinfo.txi(,2180) titles as node names in pre-existing @code{@@node} lines that lack
../texinfo/texinfo.txi(,2181) names.  Since node names should be more concise than section or
../texinfo/texinfo.txi(,2182) chapter titles, you must manually edit node names so inserted.@refill
../texinfo/texinfo.txi(,2183) 
../texinfo/texinfo.txi(,2184) For example, the following marks a whole buffer as a region and inserts
../texinfo/texinfo.txi(,2185) @code{@@node} lines and titles throughout:@refill
../texinfo/texinfo.txi(,2186) 
../texinfo/texinfo.txi(,2187) @example
../texinfo/texinfo.txi(,2188) C-x h C-u M-x texinfo-insert-node-lines
../texinfo/texinfo.txi(,2189) @end example
../texinfo/texinfo.txi(,2190) 
../texinfo/texinfo.txi(,2191) This command inserts titles as node names in @code{@@node} lines; the
../texinfo/texinfo.txi(,2192) @code{texinfo-start-menu-description} command (@pxref{Inserting,
../texinfo/texinfo.txi(,2193) Inserting Frequently Used Commands}) inserts titles as descriptions in
../texinfo/texinfo.txi(,2194) menu entries, a different action.  However, in both cases, you need to
../texinfo/texinfo.txi(,2195) edit the inserted text.
../texinfo/texinfo.txi(,2196) 
../texinfo/texinfo.txi(,2197) @item M-x texinfo-multiple-files-update
../texinfo/texinfo.txi(,2198) @findex texinfo-multiple-files-update @r{(in brief)}
../texinfo/texinfo.txi(,2199) Update nodes and menus in a document built from several separate files.
../texinfo/texinfo.txi(,2200) With @kbd{C-u} as a prefix argument, create and insert a master menu in
../texinfo/texinfo.txi(,2201) the outer file.  With a numeric prefix argument, such as @kbd{C-u 2}, first
../texinfo/texinfo.txi(,2202) update all the menus and all the `Next', `Previous', and `Up' pointers
../texinfo/texinfo.txi(,2203) of all the included files before creating and inserting a master menu in
../texinfo/texinfo.txi(,2204) the outer file.  The @code{texinfo-multiple-files-update} command is
../texinfo/texinfo.txi(,2205) described in the appendix on @code{@@include} files.
../texinfo/texinfo.txi(,2207) @xref{texinfo-multiple-files-update}.@refill
../texinfo/texinfo.txi(,2213) 
../texinfo/texinfo.txi(,2214) @item M-x texinfo-indent-menu-description
../texinfo/texinfo.txi(,2215) @findex texinfo-indent-menu-description
../texinfo/texinfo.txi(,2216) Indent every description in the menu following point to the specified
../texinfo/texinfo.txi(,2217) column.  You can use this command to give yourself more space for
../texinfo/texinfo.txi(,2218) descriptions.  With an argument (@kbd{C-u} as prefix argument, if
../texinfo/texinfo.txi(,2219) interactive), the @code{texinfo-indent-menu-description} command indents
../texinfo/texinfo.txi(,2220) every description in every menu in the region.  However, this command
../texinfo/texinfo.txi(,2221) does not indent the second and subsequent lines of a multi-line
../texinfo/texinfo.txi(,2222) description.@refill
../texinfo/texinfo.txi(,2223) 
../texinfo/texinfo.txi(,2224) @item M-x texinfo-sequential-node-update
../texinfo/texinfo.txi(,2225) @findex texinfo-sequential-node-update
../texinfo/texinfo.txi(,2226) Insert the names of the nodes immediately following and preceding the
../texinfo/texinfo.txi(,2227) current node as the `Next' or `Previous' pointers regardless of those
../texinfo/texinfo.txi(,2228) nodes' hierarchical level.  This means that the `Next' node of a
../texinfo/texinfo.txi(,2229) subsection may well be the next chapter.  Sequentially ordered nodes are
../texinfo/texinfo.txi(,2230) useful for novels and other documents that you read through
../texinfo/texinfo.txi(,2231) sequentially.  (However, in Info, the @kbd{g *} command lets
../texinfo/texinfo.txi(,2232) you look through the file sequentially, so sequentially ordered nodes
../texinfo/texinfo.txi(,2233) are not strictly necessary.)  With an argument (prefix argument, if
../texinfo/texinfo.txi(,2234) interactive), the @code{texinfo-sequential-node-update} command
../texinfo/texinfo.txi(,2235) sequentially updates all the nodes in the region.@refill
../texinfo/texinfo.txi(,2236) @end table
../texinfo/texinfo.txi(,2237) 
../texinfo/texinfo.txi(,2238) @node Info Formatting, Printing, Updating Nodes and Menus, Texinfo Mode
../texinfo/texinfo.txi(,2239) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,2240) @section Formatting for Info
../texinfo/texinfo.txi(,2241) @cindex Formatting for Info
../texinfo/texinfo.txi(,2242) @cindex Running an Info formatter
../texinfo/texinfo.txi(,2243) @cindex Info formatting
../texinfo/texinfo.txi(,2244) 
../texinfo/texinfo.txi(,2245) Texinfo mode provides several commands for formatting part or all of a
../texinfo/texinfo.txi(,2246) Texinfo file for Info.  Often, when you are writing a document, you
../texinfo/texinfo.txi(,2247) want to format only part of a file---that is, a region.@refill
../texinfo/texinfo.txi(,2248) 
../texinfo/texinfo.txi(,2249) You can use either the @code{texinfo-format-region} or the
../texinfo/texinfo.txi(,2250) @code{makeinfo-region} command to format a region:@refill
../texinfo/texinfo.txi(,2251) 
../texinfo/texinfo.txi(,2252) @table @kbd
../texinfo/texinfo.txi(,2253) @findex texinfo-format-region
../texinfo/texinfo.txi(,2254) @item  C-c C-e C-r
../texinfo/texinfo.txi(,2255) @itemx M-x texinfo-format-region
../texinfo/texinfo.txi(,2256) @itemx C-c C-m C-r
../texinfo/texinfo.txi(,2257) @itemx M-x makeinfo-region
../texinfo/texinfo.txi(,2258) Format the current region for Info.@refill
../texinfo/texinfo.txi(,2259) @end table
../texinfo/texinfo.txi(,2260) 
../texinfo/texinfo.txi(,2261) You can use either the @code{texinfo-format-buffer} or the
../texinfo/texinfo.txi(,2262) @code{makeinfo-buffer} command to format a whole buffer:@refill
../texinfo/texinfo.txi(,2263) 
../texinfo/texinfo.txi(,2264) @table @kbd
../texinfo/texinfo.txi(,2265) @findex texinfo-format-buffer
../texinfo/texinfo.txi(,2266) @item  C-c C-e C-b
../texinfo/texinfo.txi(,2267) @itemx M-x texinfo-format-buffer
../texinfo/texinfo.txi(,2268) @itemx C-c C-m C-b
../texinfo/texinfo.txi(,2269) @itemx M-x makeinfo-buffer
../texinfo/texinfo.txi(,2270) Format the current buffer for Info.@refill
../texinfo/texinfo.txi(,2271) @end table
../texinfo/texinfo.txi(,2272) 
../texinfo/texinfo.txi(,2273) @need 1000
../texinfo/texinfo.txi(,2274) For example, after writing a Texinfo file, you can type the following:
../texinfo/texinfo.txi(,2275) 
../texinfo/texinfo.txi(,2276) @example
../texinfo/texinfo.txi(,2277) C-u C-c C-u m
../texinfo/texinfo.txi(,2278) @exdent or
../texinfo/texinfo.txi(,2279) C-u M-x texinfo-master-menu
../texinfo/texinfo.txi(,2280) @end example
../texinfo/texinfo.txi(,2281) 
../texinfo/texinfo.txi(,2282) @noindent
../texinfo/texinfo.txi(,2283) This updates all the nodes and menus.  Then type the following to create
../texinfo/texinfo.txi(,2284) an Info file:
../texinfo/texinfo.txi(,2285) 
../texinfo/texinfo.txi(,2286) @example
../texinfo/texinfo.txi(,2287) C-c C-m C-b
../texinfo/texinfo.txi(,2288) @exdent or
../texinfo/texinfo.txi(,2289) M-x makeinfo-buffer
../texinfo/texinfo.txi(,2290) @end example
../texinfo/texinfo.txi(,2291) 
../texinfo/texinfo.txi(,2292) For @TeX{} or the Info formatting commands to work, the file @emph{must}
../texinfo/texinfo.txi(,2293) include a line that has @code{@@setfilename} in its header.
../texinfo/texinfo.txi(,2294) 
../texinfo/texinfo.txi(,2295) @xref{Creating an Info File}, for details about Info formatting.@refill
../texinfo/texinfo.txi(,2296) 
../texinfo/texinfo.txi(,2297) @node Printing, Texinfo Mode Summary, Info Formatting, Texinfo Mode
../texinfo/texinfo.txi(,2298) @comment node-name,  next,  previous,  up
../texinfo/texinfo.txi(,2299) @section Formatting and Printing
../texinfo/texinfo.txi(,2300) @cindex Formatting for printing
../texinfo/texinfo.txi(,2301) @cindex Printing a region or buffer
../texinfo/texinfo.txi(,2302) @cindex Region formatting and printing
../texinfo/texinfo.txi(,2303) @cindex Buffer formatting and printing
../texinfo/texinfo.txi(,2304) @cindex Part of file formatting and printing
../texinfo/texinfo.txi(,2305) 
../texinfo/texinfo.txi(,2306) Typesetting and printing a Texinfo file is a multi-step process in which
../texinfo/texinfo.txi(,2307) you first create a file for printing (called a DVI file), and then
../texinfo/texinfo.txi(,2308) print the file.  Optionally, you may also create indices.  To do this,
../texinfo/texinfo.txi(,2309) you must run the @code{texindex} command after first running the
../texinfo/texinfo.txi(,2310) @code{tex} typesetting command; and then you must run the @code{tex}
../texinfo/texinfo.txi(,2311) command again.  Or else run the @code{texi2dvi} command which
../texinfo/texinfo.txi(,2312) automatically creates indices as needed (@pxref{Format with texi2dvi}).
../texinfo/texinfo.txi(,2313) 
../texinfo/texinfo.txi(,2314) Often, when you are writing a document, you want to typeset and print
../texinfo/texinfo.txi(,2315) only part of a file to see what it will look like.  You can use the
../texinfo/texinfo.txi(,2316) @code{texinfo-tex-region} and related commands for this purpose.  Use
../texinfo/texinfo.txi(,2317) the @code{texinfo-tex-buffer} command to format all of a
../texinfo/texinfo.txi(,2318) buffer.@refill
../texinfo/texinfo.txi(,2319) 
../texinfo/texinfo.txi(,2320) @table @kbd
../texinfo/texinfo.txi(,2321) @item  C-c C-t C-b
../texinfo/texinfo.txi(,2322) @itemx M-x texinfo-tex-buffer
../texinfo/texinfo.txi(,2323) @findex texinfo-tex-buffer
../texinfo/texinfo.txi(,2324) Run @code{texi2dvi} on the buffer.  In addition to running @TeX{} on the
../texinfo/texinfo.txi(,2325) buffer, this command automatically creates or updates indices as
../texinfo/texinfo.txi(,2326) needed.@refill
../texinfo/texinfo.txi(,2327) 
../texinfo/texinfo.txi(,2328) @item  C-c C-t C-r
../texinfo/texinfo.txi(,2329) @itemx M-x texinfo-tex-region
../texinfo/texinfo.txi(,2330) @findex texinfo-tex-region
../texinfo/texinfo.txi(,2331) Run @TeX{} on the region.@refill
../texinfo/texinfo.txi(,2332) 
../texinfo/texinfo.txi(,2333) @item C-c C-t C-i
../texinfo/texinfo.txi(,2334) @itemx M-x texinfo-texindex
../texinfo/texinfo.txi(,2335) Run @code{texindex} to sort the indices of a Texinfo file formatted with
../texinfo/texinfo.txi(,2336) @code{texinfo-tex-region}.  The @code{texinfo-tex-region} command does
../texinfo/texinfo.txi(,2337) not run @code{texindex} automatically; it only runs the @code{tex}
../texinfo/texinfo.txi(,2338) typesetting command.  You must run the @code{texinfo-tex-region} command
../texinfo/texinfo.txi(,2339) a second time after sorting the raw index files with the @code{texindex}
../texinfo/texinfo.txi(,2340) command.  (Usually, you do not format an index when you format a region,
../texinfo/texinfo.txi(,2341) only when you format a buffer.  Now that the @code{texi2dvi} command
../texinfo/texinfo.txi(,2342) exists, there is little or no need for this command.)@refill
../texinfo/texinfo.txi(,2343) 
../texinfo/texinfo.txi(,2344) @item C-c C-t C-p
../texinfo/texinfo.txi(,2345) @itemx M-x texinfo-tex-print
../texinfo/texinfo.txi(,2346) @findex texinfo-tex-print
../texinfo/texinfo.txi(,2347) Print the file (or the part of the file) previously formatted with
../texinfo/texinfo.txi(,2348) @code{texinfo-tex-buffer} or @code{texinfo-tex-region}.@refill
../texinfo/texinfo.txi(,2349) @end table
../texinfo/texinfo.txi(,2350) 
../texinfo/texinfo.txi(,2351) For @code{texinfo-tex-region} or @code{texinfo-tex-buffer} to work, the
../texinfo/texinfo.txi(,2352) file @emph{must} start with a @samp{\input texinfo} line and must
../texinfo/texinfo.txi(,2353) include an @code{@@settitle} line.  The file must end with @code{@@bye}
../texinfo/texinfo.txi(,2354) on a line by itself.  (When you use @code{texinfo-tex-region}, you must
../texinfo/texinfo.txi(,2355) surround the @code{@@settitle} line with start-of-header and
../texinfo/texinfo.txi(,2356) end-of-header lines.)@refill
../texinfo/texinfo.txi(,2357) 
../texinfo/texinfo.txi(,2358) @xref{Hardcopy}, for a description of the other @TeX{} related
../texinfo/texinfo.txi(,2359) commands, such as @code{tex-show-print-queue}.@refill
../texinfo/texinfo.txi(,2360) 
../texinfo/texinfo.txi(,2361) @node Texinfo Mode Summary,  , Printing, Texinfo Mode
../texinfo/texinfo.txi(,2362) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,2363) @section Texinfo Mode Summary
../texinfo/texinfo.txi(,2364) 
../texinfo/texinfo.txi(,2365) In Texinfo mode, each set of commands has default keybindings that
../texinfo/texinfo.txi(,2366) begin with the same keys.  All the commands that are custom-created
../texinfo/texinfo.txi(,2367) for Texinfo mode begin with @kbd{C-c}.  The keys are somewhat
../texinfo/texinfo.txi(,2368) mnemonic.@refill
../texinfo/texinfo.txi(,2369) 
../texinfo/texinfo.txi(,2370) @subheading Insert Commands
../texinfo/texinfo.txi(,2371) 
../texinfo/texinfo.txi(,2372) The insert commands are invoked by typing @kbd{C-c} twice and then the
../texinfo/texinfo.txi(,2373) first letter of the @@-command to be inserted.  (It might make more
../texinfo/texinfo.txi(,2374) sense mnemonically to use @kbd{C-c C-i}, for `custom insert', but
../texinfo/texinfo.txi(,2375) @kbd{C-c C-c} is quick to type.)@refill
../texinfo/texinfo.txi(,2376) 
../texinfo/texinfo.txi(,2377) @example
../texinfo/texinfo.txi(,2378) C-c C-c c       @r{Insert} @samp{@@code}.
../texinfo/texinfo.txi(,2379) C-c C-c d       @r{Insert} @samp{@@dfn}.
../texinfo/texinfo.txi(,2380) C-c C-c e       @r{Insert} @samp{@@end}.
../texinfo/texinfo.txi(,2381) C-c C-c i       @r{Insert} @samp{@@item}.
../texinfo/texinfo.txi(,2382) C-c C-c n       @r{Insert} @samp{@@node}.
../texinfo/texinfo.txi(,2383) C-c C-c s       @r{Insert} @samp{@@samp}.
../texinfo/texinfo.txi(,2384) C-c C-c v       @r{Insert} @samp{@@var}.
../texinfo/texinfo.txi(,2385) C-c C-c @{       @r{Insert braces.}
../texinfo/texinfo.txi(,2386) C-c C-c ]
../texinfo/texinfo.txi(,2387) C-c C-c @}       @r{Move out of enclosing braces.}
../texinfo/texinfo.txi(,2388) 
../texinfo/texinfo.txi(,2389) @group
../texinfo/texinfo.txi(,2390) C-c C-c C-d     @r{Insert a node's section title}
../texinfo/texinfo.txi(,2391)                 @r{in the space for the description}
../texinfo/texinfo.txi(,2392)                 @r{in a menu entry line.}
../texinfo/texinfo.txi(,2393) @end group
../texinfo/texinfo.txi(,2394) @end example
../texinfo/texinfo.txi(,2395) 
../texinfo/texinfo.txi(,2396) @subheading Show Structure
../texinfo/texinfo.txi(,2397) 
../texinfo/texinfo.txi(,2398) The @code{texinfo-show-structure} command is often used within a
../texinfo/texinfo.txi(,2399) narrowed region.@refill
../texinfo/texinfo.txi(,2400) 
../texinfo/texinfo.txi(,2401) @example
../texinfo/texinfo.txi(,2402) C-c C-s         @r{List all the headings.}
../texinfo/texinfo.txi(,2403) @end example
../texinfo/texinfo.txi(,2404) 
../texinfo/texinfo.txi(,2405) @subheading The Master Update Command
../texinfo/texinfo.txi(,2406) 
../texinfo/texinfo.txi(,2407) The @code{texinfo-master-menu} command creates a master menu; and can
../texinfo/texinfo.txi(,2408) be used to update every node and menu in a file as well.@refill
../texinfo/texinfo.txi(,2409) 
../texinfo/texinfo.txi(,2410) @c Probably should use @tables in this section.
../texinfo/texinfo.txi(,2411) @example
../texinfo/texinfo.txi(,2412) @group
../texinfo/texinfo.txi(,2413) C-c C-u m
../texinfo/texinfo.txi(,2414) M-x texinfo-master-menu
../texinfo/texinfo.txi(,2415)                 @r{Create or update a master menu.}
../texinfo/texinfo.txi(,2416) @end group
../texinfo/texinfo.txi(,2417) 
../texinfo/texinfo.txi(,2418) @group
../texinfo/texinfo.txi(,2419) C-u C-c C-u m   @r{With @kbd{C-u} as a prefix argument, first}
../texinfo/texinfo.txi(,2420)                 @r{create or update all nodes and regular}
../texinfo/texinfo.txi(,2421)                 @r{menus, and then create a master menu.}
../texinfo/texinfo.txi(,2422) @end group
../texinfo/texinfo.txi(,2423) @end example
../texinfo/texinfo.txi(,2424) 
../texinfo/texinfo.txi(,2425) @subheading Update Pointers
../texinfo/texinfo.txi(,2426) 
../texinfo/texinfo.txi(,2427) The update pointer commands are invoked by typing @kbd{C-c C-u} and
../texinfo/texinfo.txi(,2428) then either @kbd{C-n} for @code{texinfo-update-node} or @kbd{C-e} for
../texinfo/texinfo.txi(,2429) @code{texinfo-every-node-update}.@refill
../texinfo/texinfo.txi(,2430) 
../texinfo/texinfo.txi(,2431) @example
../texinfo/texinfo.txi(,2432) C-c C-u C-n     @r{Update a node.}
../texinfo/texinfo.txi(,2433) C-c C-u C-e     @r{Update every node in the buffer.}
../texinfo/texinfo.txi(,2434) @end example
../texinfo/texinfo.txi(,2435) 
../texinfo/texinfo.txi(,2436) @subheading Update Menus
../texinfo/texinfo.txi(,2437) 
../texinfo/texinfo.txi(,2438) Invoke the  update menu commands by typing @kbd{C-c C-u}
../texinfo/texinfo.txi(,2439) and then either @kbd{C-m} for @code{texinfo-make-menu} or
../texinfo/texinfo.txi(,2440) @kbd{C-a} for @code{texinfo-all-menus-update}.  To update
../texinfo/texinfo.txi(,2441) both nodes and menus at the same time, precede @kbd{C-c C-u
../texinfo/texinfo.txi(,2442) C-a} with @kbd{C-u}.@refill
../texinfo/texinfo.txi(,2443) 
../texinfo/texinfo.txi(,2444) @example
../texinfo/texinfo.txi(,2445) C-c C-u C-m     @r{Make or update a menu.}
../texinfo/texinfo.txi(,2446) 
../texinfo/texinfo.txi(,2447) @group
../texinfo/texinfo.txi(,2448) C-c C-u C-a     @r{Make or update all}
../texinfo/texinfo.txi(,2449)                 @r{menus in a buffer.}
../texinfo/texinfo.txi(,2450) @end group
../texinfo/texinfo.txi(,2451) 
../texinfo/texinfo.txi(,2452) @group
../texinfo/texinfo.txi(,2453) C-u C-c C-u C-a @r{With @kbd{C-u} as a prefix argument,}
../texinfo/texinfo.txi(,2454)                 @r{first create or update all nodes and}
../texinfo/texinfo.txi(,2455)                 @r{then create or update all menus.}
../texinfo/texinfo.txi(,2456) @end group
../texinfo/texinfo.txi(,2457) @end example
../texinfo/texinfo.txi(,2458) 
../texinfo/texinfo.txi(,2459) @subheading Format for Info
../texinfo/texinfo.txi(,2460) 
../texinfo/texinfo.txi(,2461) The Info formatting commands that are written in Emacs Lisp are
../texinfo/texinfo.txi(,2462) invoked by typing @kbd{C-c C-e} and then either @kbd{C-r} for a region
../texinfo/texinfo.txi(,2463) or @kbd{C-b} for the whole buffer.@refill
../texinfo/texinfo.txi(,2464) 
../texinfo/texinfo.txi(,2465) The Info formatting commands that are written in C and based on the
../texinfo/texinfo.txi(,2466) @code{makeinfo} program are invoked by typing @kbd{C-c C-m} and then
../texinfo/texinfo.txi(,2467) either @kbd{C-r} for a region or @kbd{C-b} for the whole buffer.@refill
../texinfo/texinfo.txi(,2468) 
../texinfo/texinfo.txi(,2469) @need 800
../texinfo/texinfo.txi(,2470) @noindent
../texinfo/texinfo.txi(,2471) Use the @code{texinfo-format@dots{}} commands:
../texinfo/texinfo.txi(,2472) 
../texinfo/texinfo.txi(,2473) @example
../texinfo/texinfo.txi(,2474) @group
../texinfo/texinfo.txi(,2475) C-c C-e C-r     @r{Format the region.}
../texinfo/texinfo.txi(,2476) C-c C-e C-b     @r{Format the buffer.}
../texinfo/texinfo.txi(,2477) @end group
../texinfo/texinfo.txi(,2478) @end example
../texinfo/texinfo.txi(,2479) 
../texinfo/texinfo.txi(,2480) @need 750
../texinfo/texinfo.txi(,2481) @noindent
../texinfo/texinfo.txi(,2482) Use @code{makeinfo}:
../texinfo/texinfo.txi(,2483) 
../texinfo/texinfo.txi(,2484) @example
../texinfo/texinfo.txi(,2485) C-c C-m C-r     @r{Format the region.}
../texinfo/texinfo.txi(,2486) C-c C-m C-b     @r{Format the buffer.}
../texinfo/texinfo.txi(,2487) C-c C-m C-l     @r{Recenter the @code{makeinfo} output buffer.}
../texinfo/texinfo.txi(,2488) C-c C-m C-k     @r{Kill the @code{makeinfo} formatting job.}
../texinfo/texinfo.txi(,2489) @end example
../texinfo/texinfo.txi(,2490) 
../texinfo/texinfo.txi(,2491) @subheading Typeset and Print
../texinfo/texinfo.txi(,2492) 
../texinfo/texinfo.txi(,2493) The @TeX{} typesetting and printing commands are invoked by typing
../texinfo/texinfo.txi(,2494) @kbd{C-c C-t} and then another control command: @kbd{C-r} for
../texinfo/texinfo.txi(,2495) @code{texinfo-tex-region}, @kbd{C-b} for @code{texinfo-tex-buffer},
../texinfo/texinfo.txi(,2496) and so on.@refill
../texinfo/texinfo.txi(,2497) 
../texinfo/texinfo.txi(,2498) @example
../texinfo/texinfo.txi(,2499) C-c C-t C-r     @r{Run @TeX{} on the region.}
../texinfo/texinfo.txi(,2500) C-c C-t C-b     @r{Run} @code{texi2dvi} @r{on the buffer.}
../texinfo/texinfo.txi(,2501) C-c C-t C-i     @r{Run} @code{texindex}.
../texinfo/texinfo.txi(,2502) C-c C-t C-p     @r{Print the DVI file.}
../texinfo/texinfo.txi(,2503) C-c C-t C-q     @r{Show the print queue.}
../texinfo/texinfo.txi(,2504) C-c C-t C-d     @r{Delete a job from the print queue.}
../texinfo/texinfo.txi(,2505) C-c C-t C-k     @r{Kill the current @TeX{} formatting job.}
../texinfo/texinfo.txi(,2506) C-c C-t C-x     @r{Quit a currently stopped @TeX{} formatting job.}
../texinfo/texinfo.txi(,2507) C-c C-t C-l     @r{Recenter the output buffer.}
../texinfo/texinfo.txi(,2508) @end example
../texinfo/texinfo.txi(,2509) 
../texinfo/texinfo.txi(,2510) @subheading Other Updating Commands
../texinfo/texinfo.txi(,2511) 
../texinfo/texinfo.txi(,2512) The remaining updating commands do not have standard keybindings because
../texinfo/texinfo.txi(,2513) they are rarely used.
../texinfo/texinfo.txi(,2514) 
../texinfo/texinfo.txi(,2515) @example
../texinfo/texinfo.txi(,2516) @group
../texinfo/texinfo.txi(,2517) M-x texinfo-insert-node-lines
../texinfo/texinfo.txi(,2518)                 @r{Insert missing @code{@@node} lines in region.}
../texinfo/texinfo.txi(,2519)                 @r{With @kbd{C-u} as a prefix argument,}
../texinfo/texinfo.txi(,2520)                 @r{use section titles as node names.}
../texinfo/texinfo.txi(,2521) @end group
../texinfo/texinfo.txi(,2522) 
../texinfo/texinfo.txi(,2523) @group
../texinfo/texinfo.txi(,2524) M-x texinfo-multiple-files-update
../texinfo/texinfo.txi(,2525)                 @r{Update a multi-file document.}
../texinfo/texinfo.txi(,2526)                 @r{With @kbd{C-u 2} as a prefix argument,}
../texinfo/texinfo.txi(,2527)                 @r{create or update all nodes and menus}
../texinfo/texinfo.txi(,2528)                 @r{in all included files first.}
../texinfo/texinfo.txi(,2529) @end group
../texinfo/texinfo.txi(,2530) 
../texinfo/texinfo.txi(,2531) @group
../texinfo/texinfo.txi(,2532) M-x texinfo-indent-menu-description
../texinfo/texinfo.txi(,2533)                 @r{Indent descriptions.}
../texinfo/texinfo.txi(,2534) @end group
../texinfo/texinfo.txi(,2535) 
../texinfo/texinfo.txi(,2536) @group
../texinfo/texinfo.txi(,2537) M-x texinfo-sequential-node-update
../texinfo/texinfo.txi(,2538)                 @r{Insert node pointers in strict sequence.}
../texinfo/texinfo.txi(,2539) @end group
../texinfo/texinfo.txi(,2540) @end example
../texinfo/texinfo.txi(,2541) 
../texinfo/texinfo.txi(,2542) 
../texinfo/texinfo.txi(,2543) @node Beginning a File
../texinfo/texinfo.txi(,2544) @chapter Beginning a Texinfo File
../texinfo/texinfo.txi(,2545) @cindex Beginning a Texinfo file
../texinfo/texinfo.txi(,2546) @cindex Texinfo file beginning
../texinfo/texinfo.txi(,2547) @cindex File beginning
../texinfo/texinfo.txi(,2548) 
../texinfo/texinfo.txi(,2549) Certain pieces of information must be provided at the beginning of a
../texinfo/texinfo.txi(,2550) Texinfo file, such as the name for the output file(s), the title of the
../texinfo/texinfo.txi(,2551) document, and the Top node.
../texinfo/texinfo.txi(,2552) 
../texinfo/texinfo.txi(,2553) This chapter expands on the minimal complete Texinfo source file
../texinfo/texinfo.txi(,2554) previously given (@pxref{Six Parts}).
../texinfo/texinfo.txi(,2555) 
../texinfo/texinfo.txi(,2556) @menu
../texinfo/texinfo.txi(,2557) * Sample Beginning::            A sample beginning for a Texinfo file.
../texinfo/texinfo.txi(,2558) * Texinfo File Header::         The first lines.
../texinfo/texinfo.txi(,2559) * Document Permissions::        Ensuring your manual is free.
../texinfo/texinfo.txi(,2560) * Titlepage & Copyright Page::  Creating the title and copyright pages.
../texinfo/texinfo.txi(,2561) * The Top Node::                Creating the `Top' node and master menu.
../texinfo/texinfo.txi(,2562) * Global Document Commands::    Affecting formatting throughout.
../texinfo/texinfo.txi(,2563) * Software Copying Permissions::  Ensure that you and others continue to
../texinfo/texinfo.txi(,2564)                                     have the right to use and share software.
../texinfo/texinfo.txi(,2565) @end menu
../texinfo/texinfo.txi(,2566) 
../texinfo/texinfo.txi(,2567) 
../texinfo/texinfo.txi(,2568) @node Sample Beginning
../texinfo/texinfo.txi(,2569) @section Sample Texinfo File Beginning
../texinfo/texinfo.txi(,2570) 
../texinfo/texinfo.txi(,2571) @cindex Example beginning of Texinfo file 
../texinfo/texinfo.txi(,2572) 
../texinfo/texinfo.txi(,2573) The following sample shows what is needed.  The elements given here are
../texinfo/texinfo.txi(,2574) explained in more detail in the following sections.  Other commands are
../texinfo/texinfo.txi(,2575) often included at the beginning of Texinfo files, but the ones here are
../texinfo/texinfo.txi(,2576) the most critical.
../texinfo/texinfo.txi(,2577) 
../texinfo/texinfo.txi(,2578) @xref{GNU Sample Texts}, for the full texts to be used in GNU manuals.
../texinfo/texinfo.txi(,2579) 
../texinfo/texinfo.txi(,2580) @example
../texinfo/texinfo.txi(,2581) \input texinfo   @@c -*-texinfo-*-
../texinfo/texinfo.txi(,2582) @@c %**start of header
../texinfo/texinfo.txi(,2583) @@setfilename @var{infoname}.info
../texinfo/texinfo.txi(,2584) @@settitle @var{name-of-manual} @var{version}
../texinfo/texinfo.txi(,2585) @@c %**end of header
../texinfo/texinfo.txi(,2586) 
../texinfo/texinfo.txi(,2587) @@copying
../texinfo/texinfo.txi(,2588) This manual is for @var{program}, version @var{version}.
../texinfo/texinfo.txi(,2589) 
../texinfo/texinfo.txi(,2590) Copyright @@copyright@{@} @var{years} @var{copyright-owner}.
../texinfo/texinfo.txi(,2591) 
../texinfo/texinfo.txi(,2592) @group
../texinfo/texinfo.txi(,2593) @@quotation
../texinfo/texinfo.txi(,2594) Permission is granted to @dots{}
../texinfo/texinfo.txi(,2595) @@end quotation
../texinfo/texinfo.txi(,2596) @@end copying
../texinfo/texinfo.txi(,2597) @end group
../texinfo/texinfo.txi(,2598) 
../texinfo/texinfo.txi(,2599) @group
../texinfo/texinfo.txi(,2600) @@titlepage
../texinfo/texinfo.txi(,2601) @@title @var{name-of-manual-when-printed}
../texinfo/texinfo.txi(,2602) @@subtitle @var{subtitle-if-any}
../texinfo/texinfo.txi(,2603) @@subtitle @var{second-subtitle}
../texinfo/texinfo.txi(,2604) @@author @var{author}
../texinfo/texinfo.txi(,2605) @end group
../texinfo/texinfo.txi(,2606) 
../texinfo/texinfo.txi(,2607) @group
../texinfo/texinfo.txi(,2608) @@c  The following two commands
../texinfo/texinfo.txi(,2609) @@c  start the copyright page.
../texinfo/texinfo.txi(,2610) @@page
../texinfo/texinfo.txi(,2611) @@vskip 0pt plus 1filll
../texinfo/texinfo.txi(,2612) @@insertcopying
../texinfo/texinfo.txi(,2613) @end group
../texinfo/texinfo.txi(,2614) 
../texinfo/texinfo.txi(,2615) Published by @dots{}
../texinfo/texinfo.txi(,2616) @@end titlepage
../texinfo/texinfo.txi(,2617) 
../texinfo/texinfo.txi(,2618) @@c So the toc is printed in the right place.
../texinfo/texinfo.txi(,2619) @@contents
../texinfo/texinfo.txi(,2620) 
../texinfo/texinfo.txi(,2621) @@ifnottex
../texinfo/texinfo.txi(,2622) @@node Top
../texinfo/texinfo.txi(,2623) @@top @var{title}
../texinfo/texinfo.txi(,2624) 
../texinfo/texinfo.txi(,2625) @@insertcopying
../texinfo/texinfo.txi(,2626) @@end ifnottex
../texinfo/texinfo.txi(,2627) 
../texinfo/texinfo.txi(,2628) @group
../texinfo/texinfo.txi(,2629) @@menu
../texinfo/texinfo.txi(,2630) * First Chapter::    Getting started @dots{}
../texinfo/texinfo.txi(,2631) * Second Chapter::          @dots{}
../texinfo/texinfo.txi(,2632)   @dots{}
../texinfo/texinfo.txi(,2633) * Copying::          Your rights and freedoms.
../texinfo/texinfo.txi(,2634) @@end menu
../texinfo/texinfo.txi(,2635) @end group
../texinfo/texinfo.txi(,2636) 
../texinfo/texinfo.txi(,2637) @group
../texinfo/texinfo.txi(,2638) @@node First Chapter
../texinfo/texinfo.txi(,2639) @@chapter First Chapter
../texinfo/texinfo.txi(,2640) 
../texinfo/texinfo.txi(,2641) @@cindex first chapter
../texinfo/texinfo.txi(,2642) @@cindex chapter, first
../texinfo/texinfo.txi(,2643) @dots{}
../texinfo/texinfo.txi(,2644) @end group
../texinfo/texinfo.txi(,2645) @end example
../texinfo/texinfo.txi(,2646) 
../texinfo/texinfo.txi(,2647) 
../texinfo/texinfo.txi(,2648) @node Texinfo File Header
../texinfo/texinfo.txi(,2649) @section Texinfo File Header
../texinfo/texinfo.txi(,2650) @cindex Header for Texinfo files
../texinfo/texinfo.txi(,2651) @cindex Texinfo file header
../texinfo/texinfo.txi(,2652) 
../texinfo/texinfo.txi(,2653) Texinfo files start with at least three lines that provide Info and
../texinfo/texinfo.txi(,2654) @TeX{} with necessary information.  These are the @code{\input texinfo}
../texinfo/texinfo.txi(,2655) line, the @code{@@settitle} line, and the @code{@@setfilename} line.
../texinfo/texinfo.txi(,2656) 
../texinfo/texinfo.txi(,2657) Also, if you want to format just part of the Texinfo file, you must
../texinfo/texinfo.txi(,2658) write the @code{@@settitle} and @code{@@setfilename} lines between
../texinfo/texinfo.txi(,2659) start-of-header and end-of-header lines.  The start- and end-of-header
../texinfo/texinfo.txi(,2660) lines are optional, but they do no harm, so you might as well always
../texinfo/texinfo.txi(,2661) include them.
../texinfo/texinfo.txi(,2662) 
../texinfo/texinfo.txi(,2663) Any command that affects document formatting as a whole makes sense to
../texinfo/texinfo.txi(,2664) include in the header.  @code{@@synindex} (@pxref{synindex}), for
../texinfo/texinfo.txi(,2665) instance, is another command often included in the header.  @xref{GNU
../texinfo/texinfo.txi(,2666) Sample Texts}, for complete sample texts.
../texinfo/texinfo.txi(,2667) 
../texinfo/texinfo.txi(,2668) Thus, the beginning of a Texinfo file generally looks like this:
../texinfo/texinfo.txi(,2669) 
../texinfo/texinfo.txi(,2670) @example
../texinfo/texinfo.txi(,2671) @group
../texinfo/texinfo.txi(,2672) \input texinfo   @@c -*-texinfo-*-
../texinfo/texinfo.txi(,2673) @@c %**start of header
../texinfo/texinfo.txi(,2674) @@setfilename sample.info
../texinfo/texinfo.txi(,2675) @@settitle Sample Manual 1.0
../texinfo/texinfo.txi(,2676) @@c %**end of header
../texinfo/texinfo.txi(,2677) @end group
../texinfo/texinfo.txi(,2678) @end example
../texinfo/texinfo.txi(,2679) 
../texinfo/texinfo.txi(,2680) @menu
../texinfo/texinfo.txi(,2681) * First Line::                  The first line of a Texinfo file.
../texinfo/texinfo.txi(,2682) * Start of Header::             Formatting a region requires this.
../texinfo/texinfo.txi(,2683) * setfilename::                 Tell Info the name of the Info file.
../texinfo/texinfo.txi(,2684) * settitle::                    Create a title for the printed work.
../texinfo/texinfo.txi(,2685) * End of Header::               Formatting a region requires this.
../texinfo/texinfo.txi(,2686) @end menu
../texinfo/texinfo.txi(,2687) 
../texinfo/texinfo.txi(,2688) 
../texinfo/texinfo.txi(,2689) @node First Line
../texinfo/texinfo.txi(,2690) @subsection The First Line of a Texinfo File
../texinfo/texinfo.txi(,2691) @cindex First line of a Texinfo file
../texinfo/texinfo.txi(,2692) @cindex Beginning line of a Texinfo file
../texinfo/texinfo.txi(,2693) @cindex Header of a Texinfo file
../texinfo/texinfo.txi(,2694) 
../texinfo/texinfo.txi(,2695) Every Texinfo file that is to be the top-level input to @TeX{} must begin
../texinfo/texinfo.txi(,2696) with a line that looks like this:
../texinfo/texinfo.txi(,2697) 
../texinfo/texinfo.txi(,2698) @example
../texinfo/texinfo.txi(,2699) \input texinfo   @@c -*-texinfo-*-
../texinfo/texinfo.txi(,2700) @end example
../texinfo/texinfo.txi(,2701) 
../texinfo/texinfo.txi(,2702) @noindent
../texinfo/texinfo.txi(,2703) This line serves two functions:
../texinfo/texinfo.txi(,2704) 
../texinfo/texinfo.txi(,2705) @enumerate
../texinfo/texinfo.txi(,2706) @item
../texinfo/texinfo.txi(,2707) When the file is processed by @TeX{}, the @samp{\input texinfo} command
../texinfo/texinfo.txi(,2708) tells @TeX{} to load the macros needed for processing a Texinfo file.
../texinfo/texinfo.txi(,2709) These are in a file called @file{texinfo.tex}, which should have been
../texinfo/texinfo.txi(,2710) installed on your system along with either the @TeX{} or Texinfo
../texinfo/texinfo.txi(,2711) software.  @TeX{} uses the backslash, @samp{\}, to mark the beginning of
../texinfo/texinfo.txi(,2712) a command, exactly as Texinfo uses @samp{@@}.  The @file{texinfo.tex}
../texinfo/texinfo.txi(,2713) file causes the switch from @samp{\} to @samp{@@}; before the switch
../texinfo/texinfo.txi(,2714) occurs, @TeX{} requires @samp{\}, which is why it appears at the
../texinfo/texinfo.txi(,2715) beginning of the file.
../texinfo/texinfo.txi(,2716) 
../texinfo/texinfo.txi(,2717) @item
../texinfo/texinfo.txi(,2718) When the file is edited in GNU Emacs, the @samp{-*-texinfo-*-} mode
../texinfo/texinfo.txi(,2719) specification tells Emacs to use Texinfo mode.
../texinfo/texinfo.txi(,2720) @end enumerate
../texinfo/texinfo.txi(,2721) 
../texinfo/texinfo.txi(,2722) 
../texinfo/texinfo.txi(,2723) @node Start of Header
../texinfo/texinfo.txi(,2724) @subsection Start of Header
../texinfo/texinfo.txi(,2725) @cindex Start of header line
../texinfo/texinfo.txi(,2726) 
../texinfo/texinfo.txi(,2727) A start-of-header line is a Texinfo comment that looks like this:
../texinfo/texinfo.txi(,2728) 
../texinfo/texinfo.txi(,2729) @example
../texinfo/texinfo.txi(,2730) @@c %**start of header
../texinfo/texinfo.txi(,2731) @end example
../texinfo/texinfo.txi(,2732) 
../texinfo/texinfo.txi(,2733) Write the start-of-header line on the second line of a Texinfo file.
../texinfo/texinfo.txi(,2734) Follow the start-of-header line with @code{@@setfilename} and
../texinfo/texinfo.txi(,2735) @code{@@settitle} lines and, optionally, with other commands that
../texinfo/texinfo.txi(,2736) globally affect the document formatting, such as @code{@@synindex} or
../texinfo/texinfo.txi(,2737) @code{@@footnotestyle}; and then by an end-of-header line (@pxref{End of
../texinfo/texinfo.txi(,2738) Header}).
../texinfo/texinfo.txi(,2739) 
../texinfo/texinfo.txi(,2740) The start- and end-of-header lines allow you to format only part of a
../texinfo/texinfo.txi(,2741) Texinfo file for Info or printing.  @xref{texinfo-format commands}.
../texinfo/texinfo.txi(,2742) 
../texinfo/texinfo.txi(,2743) The odd string of characters, @samp{%**}, is to ensure that no other
../texinfo/texinfo.txi(,2744) comment is accidentally taken for a start-of-header line.  You can
../texinfo/texinfo.txi(,2745) change it if you wish by setting the @code{tex-start-of-header} and/or
../texinfo/texinfo.txi(,2746) @code{tex-end-of-header} Emacs variables.  @xref{Texinfo Mode Printing}.
../texinfo/texinfo.txi(,2747) 
../texinfo/texinfo.txi(,2748) 
../texinfo/texinfo.txi(,2749) @node setfilename
../texinfo/texinfo.txi(,2750) @subsection @code{@@setfilename}: Set the output file name
../texinfo/texinfo.txi(,2751) @findex setfilename
../texinfo/texinfo.txi(,2752) @cindex Texinfo requires @code{@@setfilename}
../texinfo/texinfo.txi(,2753) 
../texinfo/texinfo.txi(,2754) In order to serve as the primary input file for either @code{makeinfo}
../texinfo/texinfo.txi(,2755) or @TeX{}, a Texinfo file must contain a line that looks like this:
../texinfo/texinfo.txi(,2756) 
../texinfo/texinfo.txi(,2757) @example
../texinfo/texinfo.txi(,2758) @@setfilename @var{info-file-name}
../texinfo/texinfo.txi(,2759) @end example
../texinfo/texinfo.txi(,2760) 
../texinfo/texinfo.txi(,2761) Write the @code{@@setfilename} command at the beginning of a line and
../texinfo/texinfo.txi(,2762) follow it on the same line by the Info file name.  Do not write anything
../texinfo/texinfo.txi(,2763) else on the line; anything on the line after the command is considered
../texinfo/texinfo.txi(,2764) part of the file name, including what would otherwise be a
../texinfo/texinfo.txi(,2765) comment.
../texinfo/texinfo.txi(,2766) 
../texinfo/texinfo.txi(,2767) @cindex Ignored before @code{@@setfilename}
../texinfo/texinfo.txi(,2768) @cindex @samp{\input} source line ignored
../texinfo/texinfo.txi(,2769) The Info formatting commands ignore everything written before the
../texinfo/texinfo.txi(,2770) @code{@@setfilename} line, which is why the very first line of
../texinfo/texinfo.txi(,2771) the file (the @code{\input} line) does not show up in the output.
../texinfo/texinfo.txi(,2772) 
../texinfo/texinfo.txi(,2773) The @code{@@setfilename} line specifies the name of the output file to
../texinfo/texinfo.txi(,2774) be generated.  This name must be different from the name of the Texinfo
../texinfo/texinfo.txi(,2775) file.  There are two conventions for choosing the name: you can either
../texinfo/texinfo.txi(,2776) remove the extension (such as @samp{.texi}) entirely from the input file
../texinfo/texinfo.txi(,2777) name, or, preferably, replace it with the @samp{.info} extension.
../texinfo/texinfo.txi(,2778) 
../texinfo/texinfo.txi(,2779) @cindex Length of file names
../texinfo/texinfo.txi(,2780) @cindex File name collision
../texinfo/texinfo.txi(,2781) @cindex Info file name, choosing
../texinfo/texinfo.txi(,2782) Although an explicit @samp{.info} extension is preferable, some
../texinfo/texinfo.txi(,2783) operating systems cannot handle long file names.  You can run into a
../texinfo/texinfo.txi(,2784) problem even when the file name you specify is itself short enough.
../texinfo/texinfo.txi(,2785) This occurs because the Info formatters split a long Info file into
../texinfo/texinfo.txi(,2786) short indirect subfiles, and name them by appending @samp{-1},
../texinfo/texinfo.txi(,2787) @samp{-2}, @dots{}, @samp{-10}, @samp{-11}, and so on, to the original
../texinfo/texinfo.txi(,2788) file name.  (@xref{Tag and Split Files}.)  The subfile name
../texinfo/texinfo.txi(,2789) @file{texinfo.info-10}, for example, is too long for old systems with a
../texinfo/texinfo.txi(,2790) 14-character limit on filenames; so the Info file name for this document
../texinfo/texinfo.txi(,2791) is @file{texinfo} rather than @file{texinfo.info}.  When @code{makeinfo}
../texinfo/texinfo.txi(,2792) is running on operating systems such as MS-DOS which impose severe
../texinfo/texinfo.txi(,2793) limits on file names, it may remove some characters from the original
../texinfo/texinfo.txi(,2794) file name to leave enough space for the subfile suffix, thus producing
../texinfo/texinfo.txi(,2795) files named @file{texin-10}, @file{gcc.i12}, etc.
../texinfo/texinfo.txi(,2796) 
../texinfo/texinfo.txi(,2797) When producing HTML output, @code{makeinfo} will replace any extension
../texinfo/texinfo.txi(,2798) with @samp{html}, or add @samp{.html} if the given name has no
../texinfo/texinfo.txi(,2799) extension.
../texinfo/texinfo.txi(,2800) 
../texinfo/texinfo.txi(,2801) @pindex texinfo.cnf
../texinfo/texinfo.txi(,2802) The @code{@@setfilename} line produces no output when you typeset a
../texinfo/texinfo.txi(,2803) manual with @TeX{}, but it is nevertheless essential: it opens the
../texinfo/texinfo.txi(,2804) index, cross-reference, and other auxiliary files used by Texinfo, and
../texinfo/texinfo.txi(,2805) also reads @file{texinfo.cnf} if that file is present on your system
../texinfo/texinfo.txi(,2806) (@pxref{Preparing for TeX,, Preparing for @TeX{}}).
../texinfo/texinfo.txi(,2807) 
../texinfo/texinfo.txi(,2808) 
../texinfo/texinfo.txi(,2809) @node settitle
../texinfo/texinfo.txi(,2810) @subsection @code{@@settitle}: Set the document title
../texinfo/texinfo.txi(,2811) @findex settitle
../texinfo/texinfo.txi(,2812) 
../texinfo/texinfo.txi(,2813) In order to be made into a printed manual, a Texinfo file must contain
../texinfo/texinfo.txi(,2814) a line that looks like this:
../texinfo/texinfo.txi(,2815) 
../texinfo/texinfo.txi(,2816) @example
../texinfo/texinfo.txi(,2817) @@settitle @var{title}
../texinfo/texinfo.txi(,2818) @end example
../texinfo/texinfo.txi(,2819) 
../texinfo/texinfo.txi(,2820) Write the @code{@@settitle} command at the beginning of a line and
../texinfo/texinfo.txi(,2821) follow it on the same line by the title.  This tells @TeX{} the title to
../texinfo/texinfo.txi(,2822) use in a header or footer.  Do not write anything else on the line;
../texinfo/texinfo.txi(,2823) anything on the line after the command is considered part of the title,
../texinfo/texinfo.txi(,2824) including what would otherwise be a comment.
../texinfo/texinfo.txi(,2825) 
../texinfo/texinfo.txi(,2826) The @code{@@settitle} command should precede everything that generates
../texinfo/texinfo.txi(,2827) actual output in @TeX{}.
../texinfo/texinfo.txi(,2828) 
../texinfo/texinfo.txi(,2829) @cindex <title> HTML tag
../texinfo/texinfo.txi(,2830) In the HTML file produced by @command{makeinfo}, @var{title} also serves
../texinfo/texinfo.txi(,2831) as the document @samp{<title>} and the default document description in
../texinfo/texinfo.txi(,2832) the @samp{<head>} part; see @ref{documentdescription}, for how to change
../texinfo/texinfo.txi(,2833) that.
../texinfo/texinfo.txi(,2834) 
../texinfo/texinfo.txi(,2835) The title in the @code{@@settitle} command does not affect the title as
../texinfo/texinfo.txi(,2836) it appears on the title page.  Thus, the two do not need not match
../texinfo/texinfo.txi(,2837) exactly.  A practice we recommend is to include the version or edition
../texinfo/texinfo.txi(,2838) number of the manual in the @code{@@settitle} title; on the title page,
../texinfo/texinfo.txi(,2839) the version number generally appears as a @code{@@subtitle} so it would
../texinfo/texinfo.txi(,2840) be omitted from the @code{@@title}.  (@xref{titlepage}.)
../texinfo/texinfo.txi(,2841) 
../texinfo/texinfo.txi(,2842) Conventionally, when @TeX{} formats a Texinfo file for double-sided
../texinfo/texinfo.txi(,2843) output, the title is printed in the left-hand (even-numbered) page
../texinfo/texinfo.txi(,2844) headings and the current chapter title is printed in the right-hand
../texinfo/texinfo.txi(,2845) (odd-numbered) page headings.  (@TeX{} learns the title of each chapter
../texinfo/texinfo.txi(,2846) from each @code{@@chapter} command.)  By default, no page footer is
../texinfo/texinfo.txi(,2847) printed.
../texinfo/texinfo.txi(,2848) 
../texinfo/texinfo.txi(,2849) Even if you are printing in a single-sided style, @TeX{} looks for an
../texinfo/texinfo.txi(,2850) @code{@@settitle} command line, in case you include the manual title
../texinfo/texinfo.txi(,2851) in the heading.
../texinfo/texinfo.txi(,2852) 
../texinfo/texinfo.txi(,2853) @TeX{} prints page headings only for that text that comes after the
../texinfo/texinfo.txi(,2854) @code{@@end titlepage} command in the Texinfo file, or that comes
../texinfo/texinfo.txi(,2855) after an @code{@@headings} command that turns on headings.
../texinfo/texinfo.txi(,2856) (@xref{headings on off, , The @code{@@headings} Command}, for more
../texinfo/texinfo.txi(,2857) information.)
../texinfo/texinfo.txi(,2858) 
../texinfo/texinfo.txi(,2859) You may, if you wish, create your own, customized headings and footings.
../texinfo/texinfo.txi(,2860) @xref{Headings}, for a detailed discussion of this.
../texinfo/texinfo.txi(,2861) 
../texinfo/texinfo.txi(,2862) 
../texinfo/texinfo.txi(,2863) @node End of Header
../texinfo/texinfo.txi(,2864) @subsection End of Header
../texinfo/texinfo.txi(,2865) @cindex End of header line
../texinfo/texinfo.txi(,2866) 
../texinfo/texinfo.txi(,2867) Follow the header lines with an @w{end-of-header} line, which is a
../texinfo/texinfo.txi(,2868) Texinfo comment that looks like this:
../texinfo/texinfo.txi(,2869) 
../texinfo/texinfo.txi(,2870) @example
../texinfo/texinfo.txi(,2871) @@c %**end of header
../texinfo/texinfo.txi(,2872) @end example
../texinfo/texinfo.txi(,2873) 
../texinfo/texinfo.txi(,2874) @xref{Start of Header}.
../texinfo/texinfo.txi(,2875) 
../texinfo/texinfo.txi(,2876) 
../texinfo/texinfo.txi(,2877) @node Document Permissions
../texinfo/texinfo.txi(,2878) @section Document Permissions
../texinfo/texinfo.txi(,2879) @cindex Document Permissions
../texinfo/texinfo.txi(,2880) @cindex Copying Permissions
../texinfo/texinfo.txi(,2881) 
../texinfo/texinfo.txi(,2882) The copyright notice and copying permissions for a document need to
../texinfo/texinfo.txi(,2883) appear in several places in the various Texinfo output formats.
../texinfo/texinfo.txi(,2884) Therefore, Texinfo provides a command (@code{@@copying}) to declare
../texinfo/texinfo.txi(,2885) this text once, and another command (@code{@@insertcopying}) to
../texinfo/texinfo.txi(,2886) insert the text at appropriate points.
../texinfo/texinfo.txi(,2887) 
../texinfo/texinfo.txi(,2888) @menu
../texinfo/texinfo.txi(,2889) * copying::                 Declare the document's copying permissions.
../texinfo/texinfo.txi(,2890) * insertcopying::           Where to insert the permissions.
../texinfo/texinfo.txi(,2891) @end menu
../texinfo/texinfo.txi(,2892) 
../texinfo/texinfo.txi(,2893) 
../texinfo/texinfo.txi(,2894) @node copying
../texinfo/texinfo.txi(,2895) @subsection @code{@@copying}: Declare copying permissions
../texinfo/texinfo.txi(,2896) @findex copying
../texinfo/texinfo.txi(,2897) 
../texinfo/texinfo.txi(,2898) The @code{@@copying} command should be given very early in the document;
../texinfo/texinfo.txi(,2899) right after the header material (@pxref{Texinfo File Header}) is the
../texinfo/texinfo.txi(,2900) recommended location.  It conventionally consists of a sentence or two
../texinfo/texinfo.txi(,2901) about what the program is, the legal copyright line, and the copying
../texinfo/texinfo.txi(,2902) permissions.  Here is a skeletal example:
../texinfo/texinfo.txi(,2903) 
../texinfo/texinfo.txi(,2904) @example
../texinfo/texinfo.txi(,2905) @@copying
../texinfo/texinfo.txi(,2906) This manual is for @var{program} (version @var{version}),
../texinfo/texinfo.txi(,2907) which @dots{}
../texinfo/texinfo.txi(,2908) 
../texinfo/texinfo.txi(,2909) Copyright @@copyright@{@} @var{years} @var{copyright-owner}.
../texinfo/texinfo.txi(,2910) 
../texinfo/texinfo.txi(,2911) @@quotation
../texinfo/texinfo.txi(,2912) Permission is granted to @dots{}
../texinfo/texinfo.txi(,2913) @@end quotation
../texinfo/texinfo.txi(,2914) @@end copying
../texinfo/texinfo.txi(,2915) @end example
../texinfo/texinfo.txi(,2916) 
../texinfo/texinfo.txi(,2917) The @code{@@quotation} has no legal significance; it's there to improve
../texinfo/texinfo.txi(,2918) readability in some contexts.
../texinfo/texinfo.txi(,2919) 
../texinfo/texinfo.txi(,2920) @xref{GNU Sample Texts}, for the full text to be used in GNU manuals.
../texinfo/texinfo.txi(,2921) @xref{GNU Free Documentation License}, for the license itself under
../texinfo/texinfo.txi(,2922) which GNU and other free manuals are distributed.
../texinfo/texinfo.txi(,2923) 
../texinfo/texinfo.txi(,2924) The text of @code{@@copying} is output as a comment at the beginning of
../texinfo/texinfo.txi(,2925) Info, HTML, and XML output files.  It is @emph{not} output implicitly in
../texinfo/texinfo.txi(,2926) plain text or @TeX{}; it's up to you to use @code{@@insertcopying} to
../texinfo/texinfo.txi(,2927) emit the copying information.  See the next section for details.
../texinfo/texinfo.txi(,2928) 
../texinfo/texinfo.txi(,2929) @findex copyright
../texinfo/texinfo.txi(,2930) In output formats that support it (print and HTML), the
../texinfo/texinfo.txi(,2931) @code{@@copyright@{@}} command generates a @samp{c} inside a circle.  In
../texinfo/texinfo.txi(,2932) Info and plain text, it generates @samp{(C)}.  The copyright notice
../texinfo/texinfo.txi(,2933) itself has the following legally defined sequence:
../texinfo/texinfo.txi(,2934) 
../texinfo/texinfo.txi(,2935) @example
../texinfo/texinfo.txi(,2936) Copyright @copyright{} @var{years} @var{copyright-owner}.
../texinfo/texinfo.txi(,2937) @end example
../texinfo/texinfo.txi(,2938) 
../texinfo/texinfo.txi(,2939) @cindex Copyright word, always in English
../texinfo/texinfo.txi(,2940) The word `Copyright' must always be written in English, even if the
../texinfo/texinfo.txi(,2941) manual is otherwise in another language.  This is due to international
../texinfo/texinfo.txi(,2942) law.
../texinfo/texinfo.txi(,2943) 
../texinfo/texinfo.txi(,2944) @cindex Years, in copyright line
../texinfo/texinfo.txi(,2945) The list of years should include all years in which a version was
../texinfo/texinfo.txi(,2946) completed (even if it was released in a subsequent year).  Ranges are
../texinfo/texinfo.txi(,2947) not allowed, each year must be written out individually, separated by
../texinfo/texinfo.txi(,2948) commas.
../texinfo/texinfo.txi(,2949) 
../texinfo/texinfo.txi(,2950) @cindex Copyright owner for FSF works
../texinfo/texinfo.txi(,2951) The copyright owner (or owners) is whoever holds legal copyright on the
../texinfo/texinfo.txi(,2952) work.  In the case of works assigned to the FSF, the owner is `Free
../texinfo/texinfo.txi(,2953) Software Foundation, Inc.'.
../texinfo/texinfo.txi(,2954) 
../texinfo/texinfo.txi(,2955) @xref{Copyright Notices,,,maintain,GNU Maintenance Instructions}, for
../texinfo/texinfo.txi(,2956) additional information.
../texinfo/texinfo.txi(,2957) 
../texinfo/texinfo.txi(,2958) 
../texinfo/texinfo.txi(,2959) @node insertcopying
../texinfo/texinfo.txi(,2960) @subsection @code{@@insertcopying}: Include permissions text
../texinfo/texinfo.txi(,2961) @findex insertcopying
../texinfo/texinfo.txi(,2962) @cindex Copying text, including
../texinfo/texinfo.txi(,2963) @cindex Permissions text, including
../texinfo/texinfo.txi(,2964) @cindex Including permissions text
../texinfo/texinfo.txi(,2965) 
../texinfo/texinfo.txi(,2966) The @code{@@insertcopying} command is simply written on a line by
../texinfo/texinfo.txi(,2967) itself, like this:
../texinfo/texinfo.txi(,2968) 
../texinfo/texinfo.txi(,2969) @example
../texinfo/texinfo.txi(,2970) @@insertcopying
../texinfo/texinfo.txi(,2971) @end example
../texinfo/texinfo.txi(,2972) 
../texinfo/texinfo.txi(,2973) It inserts the text previously defined by @code{@@copying}.  Legally, it
../texinfo/texinfo.txi(,2974) must be used on the copyright page in the printed manual
../texinfo/texinfo.txi(,2975) (@pxref{Copyright}).
../texinfo/texinfo.txi(,2976) 
../texinfo/texinfo.txi(,2977) Although it's not a legal requirement, we also strongly recommend using
../texinfo/texinfo.txi(,2978) @code{@@insertcopying} in the Top node of your manual (@pxref{The Top
../texinfo/texinfo.txi(,2979) Node}).  Here's why:
../texinfo/texinfo.txi(,2980) 
../texinfo/texinfo.txi(,2981) The @code{@@copying} command itself causes the permissions text to
../texinfo/texinfo.txi(,2982) appear in an Info file @emph{before} the first node.  The text is also
../texinfo/texinfo.txi(,2983) copied into the beginning of each split Info output file, as is legally
../texinfo/texinfo.txi(,2984) necessary.  This location implies a human reading the manual using Info
../texinfo/texinfo.txi(,2985) does @emph{not} see this text (except when using the advanced Info
../texinfo/texinfo.txi(,2986) command @kbd{g *}).  Therefore, an explicit @code{@@insertcopying}
../texinfo/texinfo.txi(,2987) in the Top node makes it apparent to readers that the manual is free.
../texinfo/texinfo.txi(,2988) 
../texinfo/texinfo.txi(,2989) Similarly, the @code{@@copying} text is automatically included at the
../texinfo/texinfo.txi(,2990) beginning of each HTML output file, as an HTML comment.  Again, this
../texinfo/texinfo.txi(,2991) text is not visible (unless the reader views the HTML source).  And
../texinfo/texinfo.txi(,2992) therefore again, the @code{@@insertcopying} in the Top node is valuable
../texinfo/texinfo.txi(,2993) because it makes the copying permissions visible and thus promotes
../texinfo/texinfo.txi(,2994) freedom.
../texinfo/texinfo.txi(,2995) 
../texinfo/texinfo.txi(,2996) The permissions text defined by @code{@@copying} also appears
../texinfo/texinfo.txi(,2997) automatically at the beginning of the XML output file.
../texinfo/texinfo.txi(,2998) 
../texinfo/texinfo.txi(,2999) 
../texinfo/texinfo.txi(,3000) @node Titlepage & Copyright Page
../texinfo/texinfo.txi(,3001) @section Title and Copyright Pages
../texinfo/texinfo.txi(,3002) 
../texinfo/texinfo.txi(,3003) In hard copy output, the manual's name and author are usually printed on
../texinfo/texinfo.txi(,3004) a title page.  Copyright information is usually printed on the back of
../texinfo/texinfo.txi(,3005) the title page.
../texinfo/texinfo.txi(,3006) 
../texinfo/texinfo.txi(,3007) The title and copyright pages appear in the printed manual, but not in
../texinfo/texinfo.txi(,3008) the Info file.  Because of this, it is possible to use several slightly
../texinfo/texinfo.txi(,3009) obscure @TeX{} typesetting commands that cannot be used in an Info file.
../texinfo/texinfo.txi(,3010) In addition, this part of the beginning of a Texinfo file contains the
../texinfo/texinfo.txi(,3011) text of the copying permissions that appears in the printed manual.
../texinfo/texinfo.txi(,3012) 
../texinfo/texinfo.txi(,3013) @cindex Title page, for plain text
../texinfo/texinfo.txi(,3014) @cindex Copyright page, for plain text
../texinfo/texinfo.txi(,3015) You may wish to include titlepage-like information for plain text
../texinfo/texinfo.txi(,3016) output.  Simply place any such leading material between
../texinfo/texinfo.txi(,3017) @code{@@ifplaintext} and @code{@@end ifplaintext}; @command{makeinfo}
../texinfo/texinfo.txi(,3018) includes this when writing plain text (@samp{--no-headers}), along with
../texinfo/texinfo.txi(,3019) an @code{@@insertcopying}.
../texinfo/texinfo.txi(,3020) 
../texinfo/texinfo.txi(,3021) @menu
../texinfo/texinfo.txi(,3022) * titlepage::                   Create a title for the printed document.
../texinfo/texinfo.txi(,3023) * titlefont center sp::         The @code{@@titlefont}, @code{@@center},
../texinfo/texinfo.txi(,3024)                                   and @code{@@sp} commands.
../texinfo/texinfo.txi(,3025) * title subtitle author::       The @code{@@title}, @code{@@subtitle},
../texinfo/texinfo.txi(,3026)                                   and @code{@@author} commands.
../texinfo/texinfo.txi(,3027) * Copyright::                   How to write the copyright notice and
../texinfo/texinfo.txi(,3028)                                   include copying permissions.
../texinfo/texinfo.txi(,3029) * end titlepage::               Turn on page headings after the title and
../texinfo/texinfo.txi(,3030)                                   copyright pages.
../texinfo/texinfo.txi(,3031) * headings on off::             An option for turning headings on and off
../texinfo/texinfo.txi(,3032)                                   and double or single sided printing.
../texinfo/texinfo.txi(,3033) @end menu
../texinfo/texinfo.txi(,3034) 
../texinfo/texinfo.txi(,3035) 
../texinfo/texinfo.txi(,3036) @node titlepage
../texinfo/texinfo.txi(,3037) @subsection @code{@@titlepage}
../texinfo/texinfo.txi(,3038) @cindex Title page
../texinfo/texinfo.txi(,3039) @findex titlepage
../texinfo/texinfo.txi(,3040) 
../texinfo/texinfo.txi(,3041) Start the material for the title page and following copyright page
../texinfo/texinfo.txi(,3042) with @code{@@titlepage} on a line by itself and end it with
../texinfo/texinfo.txi(,3043) @code{@@end titlepage} on a line by itself.
../texinfo/texinfo.txi(,3044) 
../texinfo/texinfo.txi(,3045) The @code{@@end titlepage} command starts a new page and turns on page
../texinfo/texinfo.txi(,3046) numbering.  (@xref{Headings, , Page Headings}, for details about how to
../texinfo/texinfo.txi(,3047) generate page headings.)  All the material that you want to appear on
../texinfo/texinfo.txi(,3048) unnumbered pages should be put between the @code{@@titlepage} and
../texinfo/texinfo.txi(,3049) @code{@@end titlepage} commands.  You can force the table of contents to
../texinfo/texinfo.txi(,3050) appear there with the @code{@@setcontentsaftertitlepage} command
../texinfo/texinfo.txi(,3051) (@pxref{Contents}).
../texinfo/texinfo.txi(,3052) 
../texinfo/texinfo.txi(,3053) @findex page@r{, within @code{@@titlepage}}
../texinfo/texinfo.txi(,3054) By using the @code{@@page} command you can force a page break within the
../texinfo/texinfo.txi(,3055) region delineated by the @code{@@titlepage} and @code{@@end titlepage}
../texinfo/texinfo.txi(,3056) commands and thereby create more than one unnumbered page.  This is how
../texinfo/texinfo.txi(,3057) the copyright page is produced.  (The @code{@@titlepage} command might
../texinfo/texinfo.txi(,3058) perhaps have been better named the @code{@@titleandadditionalpages}
../texinfo/texinfo.txi(,3059) command, but that would have been rather long!)
../texinfo/texinfo.txi(,3060) 
../texinfo/texinfo.txi(,3061) When you write a manual about a computer program, you should write the
../texinfo/texinfo.txi(,3062) version of the program to which the manual applies on the title page.
../texinfo/texinfo.txi(,3063) If the manual changes more frequently than the program or is independent
../texinfo/texinfo.txi(,3064) of it, you should also include an edition number@footnote{We have found
../texinfo/texinfo.txi(,3065) that it is helpful to refer to versions of independent manuals as
../texinfo/texinfo.txi(,3066) `editions' and versions of programs as `versions'; otherwise, we find we
../texinfo/texinfo.txi(,3067) are liable to confuse each other in conversation by referring to both
../texinfo/texinfo.txi(,3068) the documentation and the software with the same words.} for the manual.
../texinfo/texinfo.txi(,3069) This helps readers keep track of which manual is for which version of
../texinfo/texinfo.txi(,3070) the program.  (The `Top' node should also contain this information; see
../texinfo/texinfo.txi(,3071) @ref{The Top Node}.)
../texinfo/texinfo.txi(,3072) 
../texinfo/texinfo.txi(,3073) Texinfo provides two main methods for creating a title page.  One method
../texinfo/texinfo.txi(,3074) uses the @code{@@titlefont}, @code{@@sp}, and @code{@@center} commands
../texinfo/texinfo.txi(,3075) to generate a title page in which the words on the page are
../texinfo/texinfo.txi(,3076) centered.
../texinfo/texinfo.txi(,3077) 
../texinfo/texinfo.txi(,3078) The second method uses the @code{@@title}, @code{@@subtitle}, and
../texinfo/texinfo.txi(,3079) @code{@@author} commands to create a title page with black rules under
../texinfo/texinfo.txi(,3080) the title and author lines and the subtitle text set flush to the
../texinfo/texinfo.txi(,3081) right hand side of the page.  With this method, you do not specify any
../texinfo/texinfo.txi(,3082) of the actual formatting of the title page.  You specify the text
../texinfo/texinfo.txi(,3083) you want, and Texinfo does the formatting.
../texinfo/texinfo.txi(,3084) 
../texinfo/texinfo.txi(,3085) You may use either method, or you may combine them; see the examples in
../texinfo/texinfo.txi(,3086) the sections below.
../texinfo/texinfo.txi(,3087) 
../texinfo/texinfo.txi(,3088) @findex shorttitlepage
../texinfo/texinfo.txi(,3089) @cindex Bastard title page
../texinfo/texinfo.txi(,3090) @cindex Title page, bastard
../texinfo/texinfo.txi(,3091) For extremely simple applications, and for the bastard title page in
../texinfo/texinfo.txi(,3092) traditional book front matter, Texinfo also provides a command
../texinfo/texinfo.txi(,3093) @code{@@shorttitlepage} which takes the rest of the line as the title.
../texinfo/texinfo.txi(,3094) The argument is typeset on a page by itself and followed by a blank
../texinfo/texinfo.txi(,3095) page.
../texinfo/texinfo.txi(,3096) 
../texinfo/texinfo.txi(,3097) 
../texinfo/texinfo.txi(,3098) @node titlefont center sp
../texinfo/texinfo.txi(,3099) @subsection @code{@@titlefont}, @code{@@center}, and @code{@@sp}
../texinfo/texinfo.txi(,3100) @findex titlefont
../texinfo/texinfo.txi(,3101) @findex center
../texinfo/texinfo.txi(,3102) @findex sp @r{(titlepage line spacing)}
../texinfo/texinfo.txi(,3103) 
../texinfo/texinfo.txi(,3104) You can use the @code{@@titlefont}, @code{@@sp}, and @code{@@center}
../texinfo/texinfo.txi(,3105) commands to create a title page for a printed document.  (This is the
../texinfo/texinfo.txi(,3106) first of the two methods for creating a title page in Texinfo.)
../texinfo/texinfo.txi(,3107) 
../texinfo/texinfo.txi(,3108) Use the @code{@@titlefont} command to select a large font suitable for
../texinfo/texinfo.txi(,3109) the title itself.  You can use @code{@@titlefont} more than once if you
../texinfo/texinfo.txi(,3110) have an especially long title.
../texinfo/texinfo.txi(,3111) 
../texinfo/texinfo.txi(,3112) @need 700
../texinfo/texinfo.txi(,3113) For example:
../texinfo/texinfo.txi(,3114) 
../texinfo/texinfo.txi(,3115) @example
../texinfo/texinfo.txi(,3116) @@titlefont@{Texinfo@}
../texinfo/texinfo.txi(,3117) @end example
../texinfo/texinfo.txi(,3118) 
../texinfo/texinfo.txi(,3119) Use the @code{@@center} command at the beginning of a line to center
../texinfo/texinfo.txi(,3120) the remaining text on that line.  Thus,
../texinfo/texinfo.txi(,3121) 
../texinfo/texinfo.txi(,3122) @example
../texinfo/texinfo.txi(,3123) @@center @@titlefont@{Texinfo@}
../texinfo/texinfo.txi(,3124) @end example
../texinfo/texinfo.txi(,3125) 
../texinfo/texinfo.txi(,3126) @noindent
../texinfo/texinfo.txi(,3127) centers the title, which in this example is ``Texinfo'' printed
../texinfo/texinfo.txi(,3128) in the title font.
../texinfo/texinfo.txi(,3129) 
../texinfo/texinfo.txi(,3130) Use the @code{@@sp} command to insert vertical space.  For example:
../texinfo/texinfo.txi(,3131) 
../texinfo/texinfo.txi(,3132) @example
../texinfo/texinfo.txi(,3133) @@sp 2
../texinfo/texinfo.txi(,3134) @end example
../texinfo/texinfo.txi(,3135) 
../texinfo/texinfo.txi(,3136) @noindent
../texinfo/texinfo.txi(,3137) This inserts two blank lines on the printed page.  (@xref{sp, ,
../texinfo/texinfo.txi(,3138) @code{@@sp}}, for more information about the @code{@@sp}
../texinfo/texinfo.txi(,3139) command.)
../texinfo/texinfo.txi(,3140) 
../texinfo/texinfo.txi(,3141) A template for this method looks like this:
../texinfo/texinfo.txi(,3142) 
../texinfo/texinfo.txi(,3143) @example
../texinfo/texinfo.txi(,3144) @group
../texinfo/texinfo.txi(,3145) @@titlepage
../texinfo/texinfo.txi(,3146) @@sp 10
../texinfo/texinfo.txi(,3147) @@center @@titlefont@{@var{name-of-manual-when-printed}@}
../texinfo/texinfo.txi(,3148) @@sp 2
../texinfo/texinfo.txi(,3149) @@center @var{subtitle-if-any}
../texinfo/texinfo.txi(,3150) @@sp 2
../texinfo/texinfo.txi(,3151) @@center @var{author}
../texinfo/texinfo.txi(,3152) @dots{}
../texinfo/texinfo.txi(,3153) @@end titlepage
../texinfo/texinfo.txi(,3154) @end group
../texinfo/texinfo.txi(,3155) @end example
../texinfo/texinfo.txi(,3156) 
../texinfo/texinfo.txi(,3157) The spacing of the example fits an 8.5 by 11 inch manual.
../texinfo/texinfo.txi(,3158) 
../texinfo/texinfo.txi(,3159) 
../texinfo/texinfo.txi(,3160) @node title subtitle author
../texinfo/texinfo.txi(,3161) @subsection @code{@@title}, @code{@@subtitle}, and @code{@@author}
../texinfo/texinfo.txi(,3162) @findex title
../texinfo/texinfo.txi(,3163) @findex subtitle
../texinfo/texinfo.txi(,3164) @findex author
../texinfo/texinfo.txi(,3165) 
../texinfo/texinfo.txi(,3166) You can use the @code{@@title}, @code{@@subtitle}, and @code{@@author}
../texinfo/texinfo.txi(,3167) commands to create a title page in which the vertical and horizontal
../texinfo/texinfo.txi(,3168) spacing is done for you automatically.  This contrasts with the method
../texinfo/texinfo.txi(,3169) described in the previous section, in which the @code{@@sp} command is
../texinfo/texinfo.txi(,3170) needed to adjust vertical spacing.
../texinfo/texinfo.txi(,3171) 
../texinfo/texinfo.txi(,3172) Write the @code{@@title}, @code{@@subtitle}, or @code{@@author}
../texinfo/texinfo.txi(,3173) commands at the beginning of a line followed by the title, subtitle,
../texinfo/texinfo.txi(,3174) or author.
../texinfo/texinfo.txi(,3175) 
../texinfo/texinfo.txi(,3176) The @code{@@title} command produces a line in which the title is set
../texinfo/texinfo.txi(,3177) flush to the left-hand side of the page in a larger than normal font.
../texinfo/texinfo.txi(,3178) The title is underlined with a black rule.  Only a single line is
../texinfo/texinfo.txi(,3179) allowed; the @code{@@*} command may not be used to break the title into
../texinfo/texinfo.txi(,3180) two lines.  To handle very long titles, you may find it profitable to
../texinfo/texinfo.txi(,3181) use both @code{@@title} and @code{@@titlefont}; see the final example in
../texinfo/texinfo.txi(,3182) this section.
../texinfo/texinfo.txi(,3183) 
../texinfo/texinfo.txi(,3184) The @code{@@subtitle} command sets subtitles in a normal-sized font
../texinfo/texinfo.txi(,3185) flush to the right-hand side of the page.
../texinfo/texinfo.txi(,3186) 
../texinfo/texinfo.txi(,3187) The @code{@@author} command sets the names of the author or authors in
../texinfo/texinfo.txi(,3188) a middle-sized font flush to the left-hand side of the page on a line
../texinfo/texinfo.txi(,3189) near the bottom of the title page.  The names are underlined with a
../texinfo/texinfo.txi(,3190) black rule that is thinner than the rule that underlines the title.
../texinfo/texinfo.txi(,3191) (The black rule only occurs if the @code{@@author} command line is
../texinfo/texinfo.txi(,3192) followed by an @code{@@page} command line.)
../texinfo/texinfo.txi(,3193) 
../texinfo/texinfo.txi(,3194) There are two ways to use the @code{@@author} command: you can write
../texinfo/texinfo.txi(,3195) the name or names on the remaining part of the line that starts with
../texinfo/texinfo.txi(,3196) an @code{@@author} command:
../texinfo/texinfo.txi(,3197) 
../texinfo/texinfo.txi(,3198) @example
../texinfo/texinfo.txi(,3199) @@author by Jane Smith and John Doe
../texinfo/texinfo.txi(,3200) @end example
../texinfo/texinfo.txi(,3201) 
../texinfo/texinfo.txi(,3202) @noindent
../texinfo/texinfo.txi(,3203) or you can write the names one above each other by using two (or more)
../texinfo/texinfo.txi(,3204) @code{@@author} commands:
../texinfo/texinfo.txi(,3205) 
../texinfo/texinfo.txi(,3206) @example
../texinfo/texinfo.txi(,3207) @group
../texinfo/texinfo.txi(,3208) @@author Jane Smith
../texinfo/texinfo.txi(,3209) @@author John Doe
../texinfo/texinfo.txi(,3210) @end group
../texinfo/texinfo.txi(,3211) @end example
../texinfo/texinfo.txi(,3212) 
../texinfo/texinfo.txi(,3213) @noindent
../texinfo/texinfo.txi(,3214) (Only the bottom name is underlined with a black rule.)
../texinfo/texinfo.txi(,3215) 
../texinfo/texinfo.txi(,3216) @need 950
../texinfo/texinfo.txi(,3217) A template for this method looks like this:
../texinfo/texinfo.txi(,3218) 
../texinfo/texinfo.txi(,3219) @example
../texinfo/texinfo.txi(,3220) @group
../texinfo/texinfo.txi(,3221) @@titlepage
../texinfo/texinfo.txi(,3222) @@title @var{name-of-manual-when-printed}
../texinfo/texinfo.txi(,3223) @@subtitle @var{subtitle-if-any}
../texinfo/texinfo.txi(,3224) @@subtitle @var{second-subtitle}
../texinfo/texinfo.txi(,3225) @@author @var{author}
../texinfo/texinfo.txi(,3226) @@page
../texinfo/texinfo.txi(,3227) @dots{}
../texinfo/texinfo.txi(,3228) @@end titlepage
../texinfo/texinfo.txi(,3229) @end group
../texinfo/texinfo.txi(,3230) @end example
../texinfo/texinfo.txi(,3231) 
../texinfo/texinfo.txi(,3232) You may also combine the @code{@@titlefont} method described in the
../texinfo/texinfo.txi(,3233) previous section and @code{@@title} method described in this one.  This
../texinfo/texinfo.txi(,3234) may be useful if you have a very long title.  Here is a real-life example:
../texinfo/texinfo.txi(,3235) 
../texinfo/texinfo.txi(,3236) @example
../texinfo/texinfo.txi(,3237) @group
../texinfo/texinfo.txi(,3238) @@titlepage
../texinfo/texinfo.txi(,3239) @@titlefont@{GNU Software@}
../texinfo/texinfo.txi(,3240) @@sp 1
../texinfo/texinfo.txi(,3241) @@title for MS-Windows and MS-DOS
../texinfo/texinfo.txi(,3242) @@subtitle Edition @@value@{e@} for Release @@value@{cde@}
../texinfo/texinfo.txi(,3243) @@author by Daniel Hagerty, Melissa Weisshaus
../texinfo/texinfo.txi(,3244) @@author and Eli Zaretskii
../texinfo/texinfo.txi(,3245) @end group
../texinfo/texinfo.txi(,3246) @end example
../texinfo/texinfo.txi(,3247) 
../texinfo/texinfo.txi(,3248) @noindent
../texinfo/texinfo.txi(,3249) (The use of @code{@@value} here is explained in @ref{value Example}.
../texinfo/texinfo.txi(,3250) 
../texinfo/texinfo.txi(,3251) 
../texinfo/texinfo.txi(,3252) @node Copyright
../texinfo/texinfo.txi(,3253) @subsection Copyright Page
../texinfo/texinfo.txi(,3254) @cindex Copyright page
../texinfo/texinfo.txi(,3255) @cindex Printed permissions
../texinfo/texinfo.txi(,3256) @cindex Permissions, printed
../texinfo/texinfo.txi(,3257) 
../texinfo/texinfo.txi(,3258) By international treaty, the copyright notice for a book must be either
../texinfo/texinfo.txi(,3259) on the title page or on the back of the title page.  When the copyright
../texinfo/texinfo.txi(,3260) notice is on the back of the title page, that page is customarily not
../texinfo/texinfo.txi(,3261) numbered.  Therefore, in Texinfo, the information on the copyright page
../texinfo/texinfo.txi(,3262) should be within @code{@@titlepage} and @code{@@end titlepage}
../texinfo/texinfo.txi(,3263) commands.
../texinfo/texinfo.txi(,3264) 
../texinfo/texinfo.txi(,3265) @findex vskip @r{@TeX{} vertical skip}
../texinfo/texinfo.txi(,3266) @findex filll @r{@TeX{} dimension}
../texinfo/texinfo.txi(,3267) Use the @code{@@page} command to cause a page break.  To push the
../texinfo/texinfo.txi(,3268) copyright notice and the other text on the copyright page towards the
../texinfo/texinfo.txi(,3269) bottom of the page, use the following incantantion after @code{@@page}:
../texinfo/texinfo.txi(,3270) 
../texinfo/texinfo.txi(,3271) @example
../texinfo/texinfo.txi(,3272) @@vskip 0pt plus 1filll
../texinfo/texinfo.txi(,3273) @end example
../texinfo/texinfo.txi(,3274) 
../texinfo/texinfo.txi(,3275) @noindent
../texinfo/texinfo.txi(,3276) This is a @TeX{} command that is not supported by the Info formatting
../texinfo/texinfo.txi(,3277) commands.  The @code{@@vskip} command inserts whitespace.  The @samp{0pt
../texinfo/texinfo.txi(,3278) plus 1filll} means to put in zero points of mandatory whitespace, and as
../texinfo/texinfo.txi(,3279) much optional whitespace as needed to push the following text to the
../texinfo/texinfo.txi(,3280) bottom of the page.  Note the use of three @samp{l}s in the word
../texinfo/texinfo.txi(,3281) @samp{filll}; this is correct.
../texinfo/texinfo.txi(,3282) 
../texinfo/texinfo.txi(,3283) To insert the copyright text itself, write @code{@@insertcopying}
../texinfo/texinfo.txi(,3284) next (@pxref{Document Permissions}):
../texinfo/texinfo.txi(,3285) 
../texinfo/texinfo.txi(,3286) @example
../texinfo/texinfo.txi(,3287) @@insertcopying
../texinfo/texinfo.txi(,3288) @end example
../texinfo/texinfo.txi(,3289) 
../texinfo/texinfo.txi(,3290) Follow the copying text by the publisher, ISBN numbers, cover art
../texinfo/texinfo.txi(,3291) credits, and other such information.
../texinfo/texinfo.txi(,3292) 
../texinfo/texinfo.txi(,3293) Here is an example putting all this together:
../texinfo/texinfo.txi(,3294) 
../texinfo/texinfo.txi(,3295) @example
../texinfo/texinfo.txi(,3296) @@titlepage
../texinfo/texinfo.txi(,3297) @dots{}
../texinfo/texinfo.txi(,3298) @@page
../texinfo/texinfo.txi(,3299) @@vskip 0pt plus 1filll
../texinfo/texinfo.txi(,3300) @@insertcopying
../texinfo/texinfo.txi(,3301) 
../texinfo/texinfo.txi(,3302) Published by @dots{}
../texinfo/texinfo.txi(,3303) 
../texinfo/texinfo.txi(,3304) Cover art by @dots{}
../texinfo/texinfo.txi(,3305) @@end titlepage
../texinfo/texinfo.txi(,3306) @end example
../texinfo/texinfo.txi(,3307) 
../texinfo/texinfo.txi(,3308) 
../texinfo/texinfo.txi(,3309) @node end titlepage
../texinfo/texinfo.txi(,3310) @subsection Heading Generation
../texinfo/texinfo.txi(,3311) @findex end titlepage
../texinfo/texinfo.txi(,3312) @cindex Headings, page, begin to appear
../texinfo/texinfo.txi(,3313) @cindex Titlepage end starts headings
../texinfo/texinfo.txi(,3314) @cindex End titlepage starts headings
../texinfo/texinfo.txi(,3315) 
../texinfo/texinfo.txi(,3316) The @code{@@end titlepage} command must be written on a line by itself.
../texinfo/texinfo.txi(,3317) It not only marks the end of the title and copyright pages, but also
../texinfo/texinfo.txi(,3318) causes @TeX{} to start generating page headings and page numbers.
../texinfo/texinfo.txi(,3319) 
../texinfo/texinfo.txi(,3320) To repeat what is said elsewhere,  Texinfo has two standard page heading
../texinfo/texinfo.txi(,3321) formats, one for documents which are printed on one side of each sheet of paper
../texinfo/texinfo.txi(,3322) (single-sided printing), and the other for documents which are printed on both
../texinfo/texinfo.txi(,3323) sides of each sheet (double-sided printing).
../texinfo/texinfo.txi(,3324) You can specify these formats in different ways:
../texinfo/texinfo.txi(,3325) 
../texinfo/texinfo.txi(,3326) @itemize @bullet
../texinfo/texinfo.txi(,3327) @item
../texinfo/texinfo.txi(,3328) The conventional way is to write an @code{@@setchapternewpage} command
../texinfo/texinfo.txi(,3329) before the title page commands, and then have the @code{@@end
../texinfo/texinfo.txi(,3330) titlepage} command start generating page headings in the manner desired.
../texinfo/texinfo.txi(,3331) (@xref{setchapternewpage}.)
../texinfo/texinfo.txi(,3332) 
../texinfo/texinfo.txi(,3333) @item
../texinfo/texinfo.txi(,3334) Alternatively, you can use the @code{@@headings} command to prevent page
../texinfo/texinfo.txi(,3335) headings from being generated or to start them for either single or
../texinfo/texinfo.txi(,3336) double-sided printing.  (Write an @code{@@headings} command immediately
../texinfo/texinfo.txi(,3337) after the @code{@@end titlepage} command.  @xref{headings on off, , The
../texinfo/texinfo.txi(,3338) @code{@@headings} Command}, for more information.)@refill
../texinfo/texinfo.txi(,3339) 
../texinfo/texinfo.txi(,3340) @item
../texinfo/texinfo.txi(,3341) Or, you may specify your own page heading and footing format.
../texinfo/texinfo.txi(,3342) @xref{Headings, , Page Headings}, for detailed
../texinfo/texinfo.txi(,3343) information about page headings and footings.
../texinfo/texinfo.txi(,3344) @end itemize
../texinfo/texinfo.txi(,3345) 
../texinfo/texinfo.txi(,3346) Most documents are formatted with the standard single-sided or
../texinfo/texinfo.txi(,3347) double-sided format, using @code{@@setchapternewpage odd} for
../texinfo/texinfo.txi(,3348) double-sided printing and no @code{@@setchapternewpage} command for
../texinfo/texinfo.txi(,3349) single-sided printing.
../texinfo/texinfo.txi(,3350) 
../texinfo/texinfo.txi(,3351) 
../texinfo/texinfo.txi(,3352) @node headings on off
../texinfo/texinfo.txi(,3353) @subsection The @code{@@headings} Command
../texinfo/texinfo.txi(,3354) @findex headings
../texinfo/texinfo.txi(,3355) 
../texinfo/texinfo.txi(,3356) The @code{@@headings} command is rarely used.  It specifies what kind of
../texinfo/texinfo.txi(,3357) page headings and footings to print on each page.  Usually, this is
../texinfo/texinfo.txi(,3358) controlled by the @code{@@setchapternewpage} command.  You need the
../texinfo/texinfo.txi(,3359) @code{@@headings} command only if the @code{@@setchapternewpage} command
../texinfo/texinfo.txi(,3360) does not do what you want, or if you want to turn off pre-defined page
../texinfo/texinfo.txi(,3361) headings prior to defining your own.  Write an @code{@@headings} command
../texinfo/texinfo.txi(,3362) immediately after the @code{@@end titlepage} command.@refill
../texinfo/texinfo.txi(,3363) 
../texinfo/texinfo.txi(,3364) You can use @code{@@headings} as follows:@refill
../texinfo/texinfo.txi(,3365) 
../texinfo/texinfo.txi(,3366) @table @code
../texinfo/texinfo.txi(,3367) @item @@headings off
../texinfo/texinfo.txi(,3368) Turn off printing of page headings.@refill
../texinfo/texinfo.txi(,3369) 
../texinfo/texinfo.txi(,3370) @item @@headings single
../texinfo/texinfo.txi(,3371) Turn on page headings appropriate for single-sided printing.
../texinfo/texinfo.txi(,3372) @refill
../texinfo/texinfo.txi(,3373) 
../texinfo/texinfo.txi(,3374) @item @@headings double
../texinfo/texinfo.txi(,3375) @itemx @@headings on
../texinfo/texinfo.txi(,3376) Turn on page headings appropriate for double-sided printing.  The two
../texinfo/texinfo.txi(,3377) commands, @code{@@headings on} and @code{@@headings double}, are
../texinfo/texinfo.txi(,3378) synonymous.@refill
../texinfo/texinfo.txi(,3379) 
../texinfo/texinfo.txi(,3380) @item @@headings singleafter
../texinfo/texinfo.txi(,3381) @itemx @@headings doubleafter
../texinfo/texinfo.txi(,3382) Turn on @code{single} or @code{double} headings, respectively, after the
../texinfo/texinfo.txi(,3383) current page is output.
../texinfo/texinfo.txi(,3384) 
../texinfo/texinfo.txi(,3385) @item @@headings on
../texinfo/texinfo.txi(,3386) Turn on page headings: @code{single} if @samp{@@setchapternewpage
../texinfo/texinfo.txi(,3387) on}, @code{double} otherwise.
../texinfo/texinfo.txi(,3388) @end table
../texinfo/texinfo.txi(,3389) 
../texinfo/texinfo.txi(,3390) For example, suppose you write @code{@@setchapternewpage off} before the
../texinfo/texinfo.txi(,3391) @code{@@titlepage} command to tell @TeX{} to start a new chapter on the
../texinfo/texinfo.txi(,3392) same page as the end of the last chapter.  This command also causes
../texinfo/texinfo.txi(,3393) @TeX{} to typeset page headers for single-sided printing.  To cause
../texinfo/texinfo.txi(,3394) @TeX{} to typeset for double sided printing, write @code{@@headings
../texinfo/texinfo.txi(,3395) double} after the @code{@@end titlepage} command.
../texinfo/texinfo.txi(,3396) 
../texinfo/texinfo.txi(,3397) You can stop @TeX{} from generating any page headings at all by
../texinfo/texinfo.txi(,3398) writing @code{@@headings off} on a line of its own immediately after the
../texinfo/texinfo.txi(,3399) line containing the @code{@@end titlepage} command, like this:@refill
../texinfo/texinfo.txi(,3400) 
../texinfo/texinfo.txi(,3401) @example
../texinfo/texinfo.txi(,3402) @@end titlepage
../texinfo/texinfo.txi(,3403) @@headings off
../texinfo/texinfo.txi(,3404) @end example
../texinfo/texinfo.txi(,3405) 
../texinfo/texinfo.txi(,3406) @noindent
../texinfo/texinfo.txi(,3407) The @code{@@headings off} command overrides the @code{@@end titlepage}
../texinfo/texinfo.txi(,3408) command, which would otherwise cause @TeX{} to print page
../texinfo/texinfo.txi(,3409) headings.@refill
../texinfo/texinfo.txi(,3410) 
../texinfo/texinfo.txi(,3411) You can also specify your own style of page heading and footing.
../texinfo/texinfo.txi(,3412) @xref{Headings, , Page Headings}, for more information.@refill
../texinfo/texinfo.txi(,3413) 
../texinfo/texinfo.txi(,3414) 
../texinfo/texinfo.txi(,3415) @node The Top Node
../texinfo/texinfo.txi(,3416) @section The `Top' Node and Master Menu
../texinfo/texinfo.txi(,3417) @cindex Top node
../texinfo/texinfo.txi(,3418) @cindex Node, `Top'
../texinfo/texinfo.txi(,3419) 
../texinfo/texinfo.txi(,3420) The `Top' node is the node in which a reader enters an Info manual.  As
../texinfo/texinfo.txi(,3421) such, it should begin with the @code{@@insertcopying} command
../texinfo/texinfo.txi(,3422) (@pxref{Document Permissions}) to provide a brief description of the
../texinfo/texinfo.txi(,3423) manual (including the version number) and copying permissions, and end
../texinfo/texinfo.txi(,3424) with a master menu for the whole manual.  Of course you should include
../texinfo/texinfo.txi(,3425) any other general information you feel a reader would find helpful.
../texinfo/texinfo.txi(,3426) 
../texinfo/texinfo.txi(,3427) @findex top
../texinfo/texinfo.txi(,3428) It is also conventional to write an @code{@@top} sectioning command line
../texinfo/texinfo.txi(,3429) containing the title of the document immediately after the @code{@@node
../texinfo/texinfo.txi(,3430) Top} line (@pxref{makeinfo top command, , The @code{@@top} Sectioning
../texinfo/texinfo.txi(,3431) Command}).
../texinfo/texinfo.txi(,3432) 
../texinfo/texinfo.txi(,3433) The contents of the `Top' node should appear only in the online output;
../texinfo/texinfo.txi(,3434) none of it should appear in printed output, so enclose it between
../texinfo/texinfo.txi(,3435) @code{@@ifnottex} and @code{@@end ifnottex} commands.  (@TeX{} does not
../texinfo/texinfo.txi(,3436) print either an @code{@@node} line or a menu; they appear only in Info;
../texinfo/texinfo.txi(,3437) strictly speaking, you are not required to enclose these parts between
../texinfo/texinfo.txi(,3438) @code{@@ifnottex} and @code{@@end ifnottext}, but it is simplest to do
../texinfo/texinfo.txi(,3439) so.  @xref{Conditionals, , Conditionally Visible Text}.)
../texinfo/texinfo.txi(,3440) 
../texinfo/texinfo.txi(,3441) @menu
../texinfo/texinfo.txi(,3442) * Top Node Example::            
../texinfo/texinfo.txi(,3443) * Master Menu Parts::           
../texinfo/texinfo.txi(,3444) @end menu
../texinfo/texinfo.txi(,3445) 
../texinfo/texinfo.txi(,3446) 
../texinfo/texinfo.txi(,3447) @node Top Node Example
../texinfo/texinfo.txi(,3448) @subsection Top Node Example
../texinfo/texinfo.txi(,3449) 
../texinfo/texinfo.txi(,3450) @cindex Top node example
../texinfo/texinfo.txi(,3451) 
../texinfo/texinfo.txi(,3452) Here is an example of a Top node.
../texinfo/texinfo.txi(,3453) 
../texinfo/texinfo.txi(,3454) @example
../texinfo/texinfo.txi(,3455) @group
../texinfo/texinfo.txi(,3456) @@ifnottex
../texinfo/texinfo.txi(,3457) @@node Top
../texinfo/texinfo.txi(,3458) @@top Sample Title
../texinfo/texinfo.txi(,3459) 
../texinfo/texinfo.txi(,3460) @@insertcopying
../texinfo/texinfo.txi(,3461) @end group
../texinfo/texinfo.txi(,3462) 
../texinfo/texinfo.txi(,3463) Additional general information.
../texinfo/texinfo.txi(,3464) 
../texinfo/texinfo.txi(,3465) @group
../texinfo/texinfo.txi(,3466) @@menu
../texinfo/texinfo.txi(,3467) * First Chapter::
../texinfo/texinfo.txi(,3468) * Second Chapter::
../texinfo/texinfo.txi(,3469) @dots{}
../texinfo/texinfo.txi(,3470) * Index::
../texinfo/texinfo.txi(,3471) @end group
../texinfo/texinfo.txi(,3472) @@end menu
../texinfo/texinfo.txi(,3473) @end example
../texinfo/texinfo.txi(,3474) 
../texinfo/texinfo.txi(,3475) 
../texinfo/texinfo.txi(,3476) @node Master Menu Parts
../texinfo/texinfo.txi(,3477) @subsection Parts of a Master Menu
../texinfo/texinfo.txi(,3478) @cindex Master menu
../texinfo/texinfo.txi(,3479) @cindex Menu, master
../texinfo/texinfo.txi(,3480) @cindex Parts of a master menu
../texinfo/texinfo.txi(,3481) 
../texinfo/texinfo.txi(,3482) A @dfn{master menu} is a detailed main menu listing all the nodes in a
../texinfo/texinfo.txi(,3483) file.
../texinfo/texinfo.txi(,3484) 
../texinfo/texinfo.txi(,3485) A master menu is enclosed in @code{@@menu} and @code{@@end menu}
../texinfo/texinfo.txi(,3486) commands and does not appear in the printed document.
../texinfo/texinfo.txi(,3487) 
../texinfo/texinfo.txi(,3488) Generally, a master menu is divided into parts.
../texinfo/texinfo.txi(,3489) 
../texinfo/texinfo.txi(,3490) @itemize @bullet
../texinfo/texinfo.txi(,3491) @item
../texinfo/texinfo.txi(,3492) The first part contains the major nodes in the Texinfo file: the nodes
../texinfo/texinfo.txi(,3493) for the chapters, chapter-like sections, and the appendices.
../texinfo/texinfo.txi(,3494) 
../texinfo/texinfo.txi(,3495) @item
../texinfo/texinfo.txi(,3496) The second part contains nodes for the indices.
../texinfo/texinfo.txi(,3497) 
../texinfo/texinfo.txi(,3498) @item
../texinfo/texinfo.txi(,3499) The third and subsequent parts contain a listing of the other, lower
../texinfo/texinfo.txi(,3500) level nodes, often ordered by chapter.  This way, rather than go
../texinfo/texinfo.txi(,3501) through an intermediary menu, an inquirer can go directly to a
../texinfo/texinfo.txi(,3502) particular node when searching for specific information.  These menu
../texinfo/texinfo.txi(,3503) items are not required; add them if you think they are a
../texinfo/texinfo.txi(,3504) convenience.  If you do use them, put @code{@@detailmenu} before the
../texinfo/texinfo.txi(,3505) first one, and @code{@@end detailmenu} after the last; otherwise,
../texinfo/texinfo.txi(,3506) @code{makeinfo} will get confused.
../texinfo/texinfo.txi(,3507) @end itemize
../texinfo/texinfo.txi(,3508) 
../texinfo/texinfo.txi(,3509) Each section in the menu can be introduced by a descriptive line.  So
../texinfo/texinfo.txi(,3510) long as the line does not begin with an asterisk, it will not be
../texinfo/texinfo.txi(,3511) treated as a menu entry.  (@xref{Writing a Menu}, for more
../texinfo/texinfo.txi(,3512) information.)
../texinfo/texinfo.txi(,3513) 
../texinfo/texinfo.txi(,3514) For example, the master menu for this manual looks like the following
../texinfo/texinfo.txi(,3515) (but has many more entries):
../texinfo/texinfo.txi(,3516) 
../texinfo/texinfo.txi(,3517) @example
../texinfo/texinfo.txi(,3518) @group
../texinfo/texinfo.txi(,3519) @@menu
../texinfo/texinfo.txi(,3520) * Copying Conditions::  Your rights.
../texinfo/texinfo.txi(,3521) * Overview::            Texinfo in brief.
../texinfo/texinfo.txi(,3522) @dots{}
../texinfo/texinfo.txi(,3523) @end group
../texinfo/texinfo.txi(,3524) @group
../texinfo/texinfo.txi(,3525) * Command and Variable Index::
../texinfo/texinfo.txi(,3526) * Concept Index::       
../texinfo/texinfo.txi(,3527) @end group
../texinfo/texinfo.txi(,3528) 
../texinfo/texinfo.txi(,3529) @group
../texinfo/texinfo.txi(,3530) @@detailmenu
../texinfo/texinfo.txi(,3531)  --- The Detailed Node Listing ---
../texinfo/texinfo.txi(,3532) 
../texinfo/texinfo.txi(,3533) Overview of Texinfo
../texinfo/texinfo.txi(,3534) 
../texinfo/texinfo.txi(,3535) * Reporting Bugs:: @dots{}
../texinfo/texinfo.txi(,3536) @dots{}
../texinfo/texinfo.txi(,3537) @end group
../texinfo/texinfo.txi(,3538) 
../texinfo/texinfo.txi(,3539) @group
../texinfo/texinfo.txi(,3540) Beginning a Texinfo File
../texinfo/texinfo.txi(,3541) 
../texinfo/texinfo.txi(,3542) * Sample Beginning:: @dots{}
../texinfo/texinfo.txi(,3543) @dots{}
../texinfo/texinfo.txi(,3544) @@end detailmenu
../texinfo/texinfo.txi(,3545) @@end menu
../texinfo/texinfo.txi(,3546) @end group
../texinfo/texinfo.txi(,3547) @end example
../texinfo/texinfo.txi(,3548) 
../texinfo/texinfo.txi(,3549) 
../texinfo/texinfo.txi(,3550) @node Global Document Commands
../texinfo/texinfo.txi(,3551) @section Global Document Commands
../texinfo/texinfo.txi(,3552) @cindex Global Document Commands
../texinfo/texinfo.txi(,3553) 
../texinfo/texinfo.txi(,3554) Besides the basic commands mentioned in the previous sections, here are
../texinfo/texinfo.txi(,3555) additional commands which affect the document as a whole.  They are
../texinfo/texinfo.txi(,3556) generally all given before the Top node, if they are given at all.
../texinfo/texinfo.txi(,3557) 
../texinfo/texinfo.txi(,3558) @menu
../texinfo/texinfo.txi(,3559) * documentdescription::         Document summary for the HTML output.
../texinfo/texinfo.txi(,3560) * setchapternewpage::           Start chapters on right-hand pages.
../texinfo/texinfo.txi(,3561) * paragraphindent::             Specify paragraph indentation.
../texinfo/texinfo.txi(,3562) * exampleindent::               Specify environment indentation.
../texinfo/texinfo.txi(,3563) @end menu
../texinfo/texinfo.txi(,3564) 
../texinfo/texinfo.txi(,3565) 
../texinfo/texinfo.txi(,3566) @node documentdescription
../texinfo/texinfo.txi(,3567) @subsection @code{@@documentdescription}: Summary text
../texinfo/texinfo.txi(,3568) @cindex Document description
../texinfo/texinfo.txi(,3569) @cindex Description of document
../texinfo/texinfo.txi(,3570) @cindex Summary of document
../texinfo/texinfo.txi(,3571) @cindex Abstract of document
../texinfo/texinfo.txi(,3572) @cindex <meta> HTML tag, and document description
../texinfo/texinfo.txi(,3573) @findex documentdescription
../texinfo/texinfo.txi(,3574) 
../texinfo/texinfo.txi(,3575) When producing HTML output for a document, @command{makeinfo} writes a
../texinfo/texinfo.txi(,3576) @samp{<meta>} element in the @samp{<head>} to give some idea of the
../texinfo/texinfo.txi(,3577) content of the document.  By default, this @dfn{description} is the title
../texinfo/texinfo.txi(,3578) of the document, taken from the @code{@@settitle} command
../texinfo/texinfo.txi(,3579) (@pxref{settitle}).  To change this, use the @code{@@documentdescription}
../texinfo/texinfo.txi(,3580) environment, as in:
../texinfo/texinfo.txi(,3581) 
../texinfo/texinfo.txi(,3582) @example
../texinfo/texinfo.txi(,3583) @@documentdescription
../texinfo/texinfo.txi(,3584) descriptive text.
../texinfo/texinfo.txi(,3585) @@end documentdescription
../texinfo/texinfo.txi(,3586) @end example
../texinfo/texinfo.txi(,3587) 
../texinfo/texinfo.txi(,3588) @noindent
../texinfo/texinfo.txi(,3589) This will produce the following output in the @samp{<head>} of the HTML:
../texinfo/texinfo.txi(,3590) 
../texinfo/texinfo.txi(,3591) @example
../texinfo/texinfo.txi(,3592) <meta name=description content="descriptive text.">
../texinfo/texinfo.txi(,3593) @end example
../texinfo/texinfo.txi(,3594) 
../texinfo/texinfo.txi(,3595) @code{@@documentdescription} must be specified before the first node of
../texinfo/texinfo.txi(,3596) the document.
../texinfo/texinfo.txi(,3597) 
../texinfo/texinfo.txi(,3598) 
../texinfo/texinfo.txi(,3599) @node setchapternewpage
../texinfo/texinfo.txi(,3600) @subsection @code{@@setchapternewpage}: 
../texinfo/texinfo.txi(,3601) @cindex Starting chapters
../texinfo/texinfo.txi(,3602) @cindex Pages, starting odd
../texinfo/texinfo.txi(,3603) @findex setchapternewpage
../texinfo/texinfo.txi(,3604) 
../texinfo/texinfo.txi(,3605) In an officially bound book, text is usually printed on both sides of
../texinfo/texinfo.txi(,3606) the paper, chapters start on right-hand pages, and right-hand pages have
../texinfo/texinfo.txi(,3607) odd numbers.  But in short reports, text often is printed only on one
../texinfo/texinfo.txi(,3608) side of the paper.  Also in short reports, chapters sometimes do not
../texinfo/texinfo.txi(,3609) start on new pages, but are printed on the same page as the end of the
../texinfo/texinfo.txi(,3610) preceding chapter, after a small amount of vertical whitespace.
../texinfo/texinfo.txi(,3611) 
../texinfo/texinfo.txi(,3612) You can use the @code{@@setchapternewpage} command with various
../texinfo/texinfo.txi(,3613) arguments to specify how @TeX{} should start chapters and whether it
../texinfo/texinfo.txi(,3614) should format headers for printing on one or both sides of the paper
../texinfo/texinfo.txi(,3615) (single-sided or double-sided printing).
../texinfo/texinfo.txi(,3616) 
../texinfo/texinfo.txi(,3617) Write the @code{@@setchapternewpage} command at the beginning of a
../texinfo/texinfo.txi(,3618) line followed by its argument.
../texinfo/texinfo.txi(,3619) 
../texinfo/texinfo.txi(,3620) For example, you would write the following to cause each chapter to
../texinfo/texinfo.txi(,3621) start on a fresh odd-numbered page:
../texinfo/texinfo.txi(,3622) 
../texinfo/texinfo.txi(,3623) @example
../texinfo/texinfo.txi(,3624) @@setchapternewpage odd
../texinfo/texinfo.txi(,3625) @end example
../texinfo/texinfo.txi(,3626) 
../texinfo/texinfo.txi(,3627) You can specify one of three alternatives with the
../texinfo/texinfo.txi(,3628) @code{@@setchapternewpage} command:
../texinfo/texinfo.txi(,3629) 
../texinfo/texinfo.txi(,3630) @table @asis
../texinfo/texinfo.txi(,3631) 
../texinfo/texinfo.txi(,3632) @item @code{@@setchapternewpage off}
../texinfo/texinfo.txi(,3633) Cause @TeX{} to typeset a new chapter on the same page as the last
../texinfo/texinfo.txi(,3634) chapter, after skipping some vertical whitespace.  Also, cause @TeX{} to
../texinfo/texinfo.txi(,3635) format page headers for single-sided printing.
../texinfo/texinfo.txi(,3636) 
../texinfo/texinfo.txi(,3637) @item @code{@@setchapternewpage on}
../texinfo/texinfo.txi(,3638) Cause @TeX{} to start new chapters on new pages and to format page
../texinfo/texinfo.txi(,3639) headers for single-sided printing.  This is the form most often used for
../texinfo/texinfo.txi(,3640) short reports or personal printing. This is the default.
../texinfo/texinfo.txi(,3641) 
../texinfo/texinfo.txi(,3642) @item @code{@@setchapternewpage odd}
../texinfo/texinfo.txi(,3643) Cause @TeX{} to start new chapters on new, odd-numbered pages
../texinfo/texinfo.txi(,3644) (right-handed pages) and to typeset for double-sided printing.  This is
../texinfo/texinfo.txi(,3645) the form most often used for books and manuals.
../texinfo/texinfo.txi(,3646) @end table
../texinfo/texinfo.txi(,3647) 
../texinfo/texinfo.txi(,3648) Texinfo does not have an @code{@@setchapternewpage even} command,
../texinfo/texinfo.txi(,3649) because there is no printing tradition of starting chapters or books on
../texinfo/texinfo.txi(,3650) an even-numbered page.
../texinfo/texinfo.txi(,3651) 
../texinfo/texinfo.txi(,3652) If you don't like the default headers that @code{@@setchapternewpage}
../texinfo/texinfo.txi(,3653) sets, you can explicit control them with the @code{@@headings} command.
../texinfo/texinfo.txi(,3654) @xref{headings on off, , The @code{@@headings} Command}.
../texinfo/texinfo.txi(,3655) 
../texinfo/texinfo.txi(,3656) At the beginning of a manual or book, pages are not numbered---for
../texinfo/texinfo.txi(,3657) example, the title and copyright pages of a book are not numbered.  By
../texinfo/texinfo.txi(,3658) convention, table of contents and frontmatter pages are numbered with
../texinfo/texinfo.txi(,3659) roman numerals and not in sequence with the rest of the document.
../texinfo/texinfo.txi(,3660) 
../texinfo/texinfo.txi(,3661) Since an Info file does not have pages, the @code{@@setchapternewpage}
../texinfo/texinfo.txi(,3662) command has no effect on it.
../texinfo/texinfo.txi(,3663) 
../texinfo/texinfo.txi(,3664) We recommend not including any @code{@@setchapternewpage} command in
../texinfo/texinfo.txi(,3665) your manual sources at all, since the desired output is not intrinsic to
../texinfo/texinfo.txi(,3666) the document.  For a particular hard copy run, if you don't want the
../texinfo/texinfo.txi(,3667) default option (no blank pages, same headers on all pages) use the
../texinfo/texinfo.txi(,3668) @option{--texinfo} option to @command{texi2dvi} to specify the output
../texinfo/texinfo.txi(,3669) you want.
../texinfo/texinfo.txi(,3670) 
../texinfo/texinfo.txi(,3671) 
../texinfo/texinfo.txi(,3672) @node paragraphindent
../texinfo/texinfo.txi(,3673) @subsection Paragraph Indenting
../texinfo/texinfo.txi(,3674) @cindex Indenting paragraphs, control of
../texinfo/texinfo.txi(,3675) @cindex Paragraph indentation control
../texinfo/texinfo.txi(,3676) @findex paragraphindent
../texinfo/texinfo.txi(,3677) 
../texinfo/texinfo.txi(,3678) The Texinfo processors may insert whitespace at the beginning of the
../texinfo/texinfo.txi(,3679) first line of each paragraph, thereby indenting that paragraph.  You can
../texinfo/texinfo.txi(,3680) use the @code{@@paragraphindent} command to specify this indentation.
../texinfo/texinfo.txi(,3681) Write an @code{@@paragraphindent} command at the beginning of a line
../texinfo/texinfo.txi(,3682) followed by either @samp{asis} or a number:
../texinfo/texinfo.txi(,3683) 
../texinfo/texinfo.txi(,3684) @example
../texinfo/texinfo.txi(,3685) @@paragraphindent @var{indent}
../texinfo/texinfo.txi(,3686) @end example
../texinfo/texinfo.txi(,3687) 
../texinfo/texinfo.txi(,3688) The indentation is according to the value of @var{indent}:
../texinfo/texinfo.txi(,3689) 
../texinfo/texinfo.txi(,3690) @table @asis
../texinfo/texinfo.txi(,3691) @item @code{asis}
../texinfo/texinfo.txi(,3692) Do not change the existing indentation (not implemented in @TeX{}).
../texinfo/texinfo.txi(,3693) 
../texinfo/texinfo.txi(,3694) @item @code{none}
../texinfo/texinfo.txi(,3695) @itemx 0
../texinfo/texinfo.txi(,3696) Omit all indentation.
../texinfo/texinfo.txi(,3697) 
../texinfo/texinfo.txi(,3698) @item @var{n}
../texinfo/texinfo.txi(,3699) Indent by @var{n} space characters in Info output, by @var{n} ems in
../texinfo/texinfo.txi(,3700) @TeX{}.
../texinfo/texinfo.txi(,3701) 
../texinfo/texinfo.txi(,3702) @end table
../texinfo/texinfo.txi(,3703) 
../texinfo/texinfo.txi(,3704) The default value of @var{indent} is 3.  @code{@@paragraphindent} is
../texinfo/texinfo.txi(,3705) ignored for HTML output.
../texinfo/texinfo.txi(,3706) 
../texinfo/texinfo.txi(,3707) It is best to write the @code{@@paragraphindent} command before the
../texinfo/texinfo.txi(,3708) end-of-header line at the beginning of a Texinfo file, so the region
../texinfo/texinfo.txi(,3709) formatting commands indent paragraphs as specified.  @xref{Start of
../texinfo/texinfo.txi(,3710) Header}.
../texinfo/texinfo.txi(,3711) 
../texinfo/texinfo.txi(,3712) A peculiarity of the @code{texinfo-format-buffer} and
../texinfo/texinfo.txi(,3713) @code{texinfo-format-region} commands is that they do not indent (nor
../texinfo/texinfo.txi(,3714) fill) paragraphs that contain @code{@@w} or @code{@@*} commands.
../texinfo/texinfo.txi(,3715) @xref{Refilling Paragraphs}, for further information.
../texinfo/texinfo.txi(,3716) 
../texinfo/texinfo.txi(,3717) 
../texinfo/texinfo.txi(,3718) @node exampleindent
../texinfo/texinfo.txi(,3719) @subsection @code{@@exampleindent}: Environment Indenting
../texinfo/texinfo.txi(,3720) @cindex Indenting environments
../texinfo/texinfo.txi(,3721) @cindex Environment indentation
../texinfo/texinfo.txi(,3722) @cindex Example indentation
../texinfo/texinfo.txi(,3723) @findex exampleindent
../texinfo/texinfo.txi(,3724) 
../texinfo/texinfo.txi(,3725) The Texinfo processors indent each line of @code{@@example} and similar
../texinfo/texinfo.txi(,3726) environments.  You can use the @code{@@exampleindent} command to specify
../texinfo/texinfo.txi(,3727) this indentation.  Write an @code{@@exampleindent} command at the
../texinfo/texinfo.txi(,3728) beginning of a line followed by either @samp{asis} or a number:
../texinfo/texinfo.txi(,3729) 
../texinfo/texinfo.txi(,3730) @example
../texinfo/texinfo.txi(,3731) @@exampleindent @var{indent}
../texinfo/texinfo.txi(,3732) @end example
../texinfo/texinfo.txi(,3733) 
../texinfo/texinfo.txi(,3734) The indentation is according to the value of @var{indent}:
../texinfo/texinfo.txi(,3735) 
../texinfo/texinfo.txi(,3736) @table @asis
../texinfo/texinfo.txi(,3737) @item @code{asis}
../texinfo/texinfo.txi(,3738) Do not change the existing indentation (not implemented in @TeX{}).
../texinfo/texinfo.txi(,3739) 
../texinfo/texinfo.txi(,3740) @item 0
../texinfo/texinfo.txi(,3741) Omit all indentation.
../texinfo/texinfo.txi(,3742) 
../texinfo/texinfo.txi(,3743) @item @var{n}
../texinfo/texinfo.txi(,3744) Indent environments by @var{n} space characters in Info output, by
../texinfo/texinfo.txi(,3745) @var{n} ems in @TeX{}.
../texinfo/texinfo.txi(,3746) 
../texinfo/texinfo.txi(,3747) @end table
../texinfo/texinfo.txi(,3748) 
../texinfo/texinfo.txi(,3749) The default value of @var{indent} is 5.  @code{@@exampleindent} is
../texinfo/texinfo.txi(,3750) ignored for HTML output.
../texinfo/texinfo.txi(,3751) 
../texinfo/texinfo.txi(,3752) It is best to write the @code{@@exampleindent} command before the
../texinfo/texinfo.txi(,3753) end-of-header line at the beginning of a Texinfo file, so the region
../texinfo/texinfo.txi(,3754) formatting commands indent paragraphs as specified.  @xref{Start of
../texinfo/texinfo.txi(,3755) Header}.
../texinfo/texinfo.txi(,3756) 
../texinfo/texinfo.txi(,3757) 
../texinfo/texinfo.txi(,3758) @node Software Copying Permissions
../texinfo/texinfo.txi(,3759) @section Software Copying Permissions
../texinfo/texinfo.txi(,3760) @cindex Software copying permissions
../texinfo/texinfo.txi(,3761) @cindex Copying software
../texinfo/texinfo.txi(,3762) @cindex Distribution
../texinfo/texinfo.txi(,3763) @cindex License agreement
../texinfo/texinfo.txi(,3764) 
../texinfo/texinfo.txi(,3765) If the Texinfo file has a section containing the ``General Public
../texinfo/texinfo.txi(,3766) License'' and the distribution information and a warranty disclaimer for
../texinfo/texinfo.txi(,3767) the software that is documented, we recommend placing this right after
../texinfo/texinfo.txi(,3768) the `Top' node.  The General Public License is very important to Project
../texinfo/texinfo.txi(,3769) GNU software.  It ensures that you and others will continue to have a
../texinfo/texinfo.txi(,3770) right to use and share the software.
../texinfo/texinfo.txi(,3771) 
../texinfo/texinfo.txi(,3772) The copying and distribution information and the disclaimer are followed
../texinfo/texinfo.txi(,3773) by an introduction or else by the first chapter of the manual.
../texinfo/texinfo.txi(,3774) 
../texinfo/texinfo.txi(,3775) @cindex Introduction, as part of file
../texinfo/texinfo.txi(,3776) Although an introduction is not a required part of a Texinfo file, it
../texinfo/texinfo.txi(,3777) is very helpful.  Ideally, it should state clearly and concisely what
../texinfo/texinfo.txi(,3778) the file is about and who would be interested in reading it.  In
../texinfo/texinfo.txi(,3779) general, an introduction would follow the licensing and distribution
../texinfo/texinfo.txi(,3780) information, although sometimes people put it earlier in the document.
../texinfo/texinfo.txi(,3781) 
../texinfo/texinfo.txi(,3782) 
../texinfo/texinfo.txi(,3783) @node Ending a File
../texinfo/texinfo.txi(,3784) @chapter Ending a Texinfo File
../texinfo/texinfo.txi(,3785) @cindex Ending a Texinfo file
../texinfo/texinfo.txi(,3786) @cindex Texinfo file ending
../texinfo/texinfo.txi(,3787) @cindex File ending
../texinfo/texinfo.txi(,3788) @findex bye
../texinfo/texinfo.txi(,3789) 
../texinfo/texinfo.txi(,3790) The end of a Texinfo file should include commands to create indices and
../texinfo/texinfo.txi(,3791) (perhaps) to generate both the full and summary tables of contents.
../texinfo/texinfo.txi(,3792) Finally, it must include the @code{@@bye} command that marks the last
../texinfo/texinfo.txi(,3793) line to be processed.
../texinfo/texinfo.txi(,3794) 
../texinfo/texinfo.txi(,3795) @need 700
../texinfo/texinfo.txi(,3796) For example:
../texinfo/texinfo.txi(,3797) 
../texinfo/texinfo.txi(,3798) @example
../texinfo/texinfo.txi(,3799) @@node Index
../texinfo/texinfo.txi(,3800) @@unnumbered Index
../texinfo/texinfo.txi(,3801) 
../texinfo/texinfo.txi(,3802) @@printindex cp
../texinfo/texinfo.txi(,3803) 
../texinfo/texinfo.txi(,3804) @@shortcontents
../texinfo/texinfo.txi(,3805) @@contents
../texinfo/texinfo.txi(,3806) 
../texinfo/texinfo.txi(,3807) @@bye
../texinfo/texinfo.txi(,3808) @end example
../texinfo/texinfo.txi(,3809) 
../texinfo/texinfo.txi(,3810) @menu
../texinfo/texinfo.txi(,3811) * Printing Indices & Menus::    How to print an index in hardcopy and
../texinfo/texinfo.txi(,3812)                                   generate index menus in Info.
../texinfo/texinfo.txi(,3813) * Contents::                    How to create a table of contents.
../texinfo/texinfo.txi(,3814) * File End::                    How to mark the end of a file.
../texinfo/texinfo.txi(,3815) @end menu
../texinfo/texinfo.txi(,3816) 
../texinfo/texinfo.txi(,3817) 
../texinfo/texinfo.txi(,3818) @node Printing Indices & Menus
../texinfo/texinfo.txi(,3819) @section Printing Indices and Menus
../texinfo/texinfo.txi(,3820) @findex printindex
../texinfo/texinfo.txi(,3821) @cindex Printing an index
../texinfo/texinfo.txi(,3822) @cindex Indices, printing and menus
../texinfo/texinfo.txi(,3823) @cindex Generating menus with indices
../texinfo/texinfo.txi(,3824) @cindex Menus generated with indices
../texinfo/texinfo.txi(,3825) 
../texinfo/texinfo.txi(,3826) To print an index means to include it as part of a manual or Info file.
../texinfo/texinfo.txi(,3827) This does not happen automatically just because you use @code{@@cindex}
../texinfo/texinfo.txi(,3828) or other index-entry generating commands in the Texinfo file; those just
../texinfo/texinfo.txi(,3829) cause the raw data for the index to be accumulated.  To generate an
../texinfo/texinfo.txi(,3830) index, you must include the @code{@@printindex} command at the place in
../texinfo/texinfo.txi(,3831) the document where you want the index to appear.  Also, as part of the
../texinfo/texinfo.txi(,3832) process of creating a printed manual, you must run a program called
../texinfo/texinfo.txi(,3833) @code{texindex} (@pxref{Hardcopy}) to sort the raw data to produce a
../texinfo/texinfo.txi(,3834) sorted index file.  The sorted index file is what is actually used to
../texinfo/texinfo.txi(,3835) print the index.
../texinfo/texinfo.txi(,3836) 
../texinfo/texinfo.txi(,3837) Texinfo offers six separate types of predefined index, each with a
../texinfo/texinfo.txi(,3838) two-letter abbreviation, as illustrated in the following table.
../texinfo/texinfo.txi(,3839) However, you may merge indices (@pxref{Combining Indices}) or define
../texinfo/texinfo.txi(,3840) your own indices (@pxref{New Indices}).
../texinfo/texinfo.txi(,3841) 
../texinfo/texinfo.txi(,3842) Here are the predefined indices, their abbreviations, and the
../texinfo/texinfo.txi(,3843) corresponding index entry commands:
../texinfo/texinfo.txi(,3844) 
../texinfo/texinfo.txi(,3845) @table @samp
../texinfo/texinfo.txi(,3846) @item cp
../texinfo/texinfo.txi(,3847) concept index (@code{@@cindex})
../texinfo/texinfo.txi(,3848) @item fn
../texinfo/texinfo.txi(,3849) function index (@code{@@findex})
../texinfo/texinfo.txi(,3850) @item vr
../texinfo/texinfo.txi(,3851) variable index (@code{@@index})
../texinfo/texinfo.txi(,3852) @item ky
../texinfo/texinfo.txi(,3853) key index (@code{@@kindex})
../texinfo/texinfo.txi(,3854) @item pg
../texinfo/texinfo.txi(,3855) program index (@code{@@pindex})
../texinfo/texinfo.txi(,3856) @item tp
../texinfo/texinfo.txi(,3857) data type index (@code{@@tindex})
../texinfo/texinfo.txi(,3858) @end table
../texinfo/texinfo.txi(,3859) 
../texinfo/texinfo.txi(,3860) The @code{@@printindex} command takes a two-letter index abbreviation,
../texinfo/texinfo.txi(,3861) reads the corresponding sorted index file and formats it appropriately
../texinfo/texinfo.txi(,3862) into an index.
../texinfo/texinfo.txi(,3863) 
../texinfo/texinfo.txi(,3864) The @code{@@printindex} command does not generate a chapter heading for
../texinfo/texinfo.txi(,3865) the index.  Consequently, you should precede the @code{@@printindex}
../texinfo/texinfo.txi(,3866) command with a suitable section or chapter command (usually
../texinfo/texinfo.txi(,3867) @code{@@appendix} or @code{@@unnumbered}) to supply the chapter heading
../texinfo/texinfo.txi(,3868) and put the index into the table of contents.  Precede the
../texinfo/texinfo.txi(,3869) @code{@@unnumbered} command with an @code{@@node} line.
../texinfo/texinfo.txi(,3870) 
../texinfo/texinfo.txi(,3871) For example:
../texinfo/texinfo.txi(,3872) 
../texinfo/texinfo.txi(,3873) @smallexample
../texinfo/texinfo.txi(,3874) @group
../texinfo/texinfo.txi(,3875) @@node Variable Index
../texinfo/texinfo.txi(,3876) @@unnumbered Variable Index
../texinfo/texinfo.txi(,3877) 
../texinfo/texinfo.txi(,3878) @@printindex vr
../texinfo/texinfo.txi(,3879) @end group
../texinfo/texinfo.txi(,3880) 
../texinfo/texinfo.txi(,3881) @group
../texinfo/texinfo.txi(,3882) @@node Concept Index
../texinfo/texinfo.txi(,3883) @@unnumbered Concept Index
../texinfo/texinfo.txi(,3884) 
../texinfo/texinfo.txi(,3885) @@printindex cp
../texinfo/texinfo.txi(,3886) @end group
../texinfo/texinfo.txi(,3887) @end smallexample
../texinfo/texinfo.txi(,3888) 
../texinfo/texinfo.txi(,3889) @noindent
../texinfo/texinfo.txi(,3890) 
../texinfo/texinfo.txi(,3891) We recommend placing the concept index last, since that makes it easiest
../texinfo/texinfo.txi(,3892) to find.  We also recommend having a single index whenever possible,
../texinfo/texinfo.txi(,3893) since then readers have only one place to look (@pxref{Combining Indices}).
../texinfo/texinfo.txi(,3894) 
../texinfo/texinfo.txi(,3895) 
../texinfo/texinfo.txi(,3896) @node Contents
../texinfo/texinfo.txi(,3897) @section Generating a Table of Contents
../texinfo/texinfo.txi(,3898) @cindex Table of contents
../texinfo/texinfo.txi(,3899) @cindex Contents, Table of
../texinfo/texinfo.txi(,3900) @cindex Short table of contents
../texinfo/texinfo.txi(,3901) @findex contents
../texinfo/texinfo.txi(,3902) @findex summarycontents
../texinfo/texinfo.txi(,3903) @findex shortcontents
../texinfo/texinfo.txi(,3904) 
../texinfo/texinfo.txi(,3905) The @code{@@chapter}, @code{@@section}, and other structuring commands
../texinfo/texinfo.txi(,3906) supply the information to make up a table of contents, but they do not
../texinfo/texinfo.txi(,3907) cause an actual table to appear in the manual.  To do this, you must use
../texinfo/texinfo.txi(,3908) the @code{@@contents} and/or @code{@@summarycontents} command(s).
../texinfo/texinfo.txi(,3909) 
../texinfo/texinfo.txi(,3910) @table @code
../texinfo/texinfo.txi(,3911) @item @@contents
../texinfo/texinfo.txi(,3912) Generate a table of contents in a printed manual, including all
../texinfo/texinfo.txi(,3913) chapters, sections, subsections, etc., as well as appendices and
../texinfo/texinfo.txi(,3914) unnumbered chapters.  Headings generated by the @code{@@heading}
../texinfo/texinfo.txi(,3915) series of commands do not appear in the table of contents.
../texinfo/texinfo.txi(,3916) 
../texinfo/texinfo.txi(,3917) @item @@shortcontents
../texinfo/texinfo.txi(,3918) @itemx @@summarycontents
../texinfo/texinfo.txi(,3919) (@code{@@summarycontents} is a synonym for @code{@@shortcontents}.)
../texinfo/texinfo.txi(,3920) 
../texinfo/texinfo.txi(,3921) Generate a short or summary table of contents that lists only the
../texinfo/texinfo.txi(,3922) chapters, appendices, and unnumbered chapters.  Sections, subsections
../texinfo/texinfo.txi(,3923) and subsubsections are omitted.  Only a long manual needs a short table
../texinfo/texinfo.txi(,3924) of contents in addition to the full table of contents.
../texinfo/texinfo.txi(,3925) 
../texinfo/texinfo.txi(,3926) @end table
../texinfo/texinfo.txi(,3927) 
../texinfo/texinfo.txi(,3928) Both contents commands should be written on a line by themselves.
../texinfo/texinfo.txi(,3929) The contents commands automatically generate a chapter-like heading at
../texinfo/texinfo.txi(,3930) the top of the first table of contents page, so don't include any
../texinfo/texinfo.txi(,3931) sectioning command such as @code{@@unnumbered} before them.
../texinfo/texinfo.txi(,3932) 
../texinfo/texinfo.txi(,3933) Since an Info file uses menus instead of tables of contents, the Info
../texinfo/texinfo.txi(,3934) formatting commands ignore the contents commands.  But the contents are
../texinfo/texinfo.txi(,3935) included in plain text output (generated by @code{makeinfo
../texinfo/texinfo.txi(,3936) --no-headers}), unless @code{makeinfo} is writing its output to standard
../texinfo/texinfo.txi(,3937) output.
../texinfo/texinfo.txi(,3938) 
../texinfo/texinfo.txi(,3939) When @code{makeinfo} writes a short table of contents while producing
../texinfo/texinfo.txi(,3940) html output, the links in the short table of contents point to
../texinfo/texinfo.txi(,3941) corresponding entries in the full table of contents rather than the text
../texinfo/texinfo.txi(,3942) of the document. The links in the full table of contents point to the
../texinfo/texinfo.txi(,3943) main text of the document.
../texinfo/texinfo.txi(,3944) 
../texinfo/texinfo.txi(,3945) The contents commands can be placed either at the very end of the file,
../texinfo/texinfo.txi(,3946) after any indices (see the previous section) and just before the
../texinfo/texinfo.txi(,3947) @code{@@bye} (see the next section), or near the beginning of the file,
../texinfo/texinfo.txi(,3948) after the @code{@@end titlepage} (@pxref{titlepage}).  The advantage to
../texinfo/texinfo.txi(,3949) the former is that then the contents output is always up to date,
../texinfo/texinfo.txi(,3950) because it reflects the processing just done.  The advantage to the
../texinfo/texinfo.txi(,3951) latter is that the contents are printed in the proper place, thus you do
../texinfo/texinfo.txi(,3952) not need to rearrange the DVI file with @command{dviselect} or shuffle
../texinfo/texinfo.txi(,3953) paper.
../texinfo/texinfo.txi(,3954) 
../texinfo/texinfo.txi(,3955) @findex setcontentsaftertitlepage
../texinfo/texinfo.txi(,3956) @findex setshortcontentsaftertitlepage
../texinfo/texinfo.txi(,3957) @cindex Contents, after title page
../texinfo/texinfo.txi(,3958) @cindex Table of contents, after title page
../texinfo/texinfo.txi(,3959) As an author, you can put the contents commands wherever you prefer.
../texinfo/texinfo.txi(,3960) But if you are a user simply printing a manual, you may wish to print
../texinfo/texinfo.txi(,3961) the contents after the title page even if the author put the contents
../texinfo/texinfo.txi(,3962) commands at the end of the document (as is the case in most existing
../texinfo/texinfo.txi(,3963) Texinfo documents, at this writing).  You can do this by specifying
../texinfo/texinfo.txi(,3964) @code{@@setcontentsaftertitlepage} and/or
../texinfo/texinfo.txi(,3965) @code{@@setshortcontentsaftertitlepage}.  The first prints only the main
../texinfo/texinfo.txi(,3966) contents after the @code{@@end titlepage}; the second prints both the
../texinfo/texinfo.txi(,3967) short contents and the main contents.  In either case, any subsequent
../texinfo/texinfo.txi(,3968) @code{@@contents} or @code{@@shortcontents} is ignored (unless no
../texinfo/texinfo.txi(,3969) @code{@@end titlepage} is ever encountered).
../texinfo/texinfo.txi(,3970) 
../texinfo/texinfo.txi(,3971) You need to include the @code{@@set@dots{}contentsaftertitlepage}
../texinfo/texinfo.txi(,3972) commands early in the document (just after @code{@@setfilename}, for
../texinfo/texinfo.txi(,3973) example).  We recommend using @command{texi2dvi} (@pxref{Format with
../texinfo/texinfo.txi(,3974) texi2dvi}) to specify this without altering the source file at all.  For
../texinfo/texinfo.txi(,3975) example:
../texinfo/texinfo.txi(,3976) @example
../texinfo/texinfo.txi(,3977) texi2dvi --texinfo=@@setcontentsaftertitlepage foo.texi
../texinfo/texinfo.txi(,3978) @end example
../texinfo/texinfo.txi(,3979) 
../texinfo/texinfo.txi(,3980) 
../texinfo/texinfo.txi(,3981) @node File End
../texinfo/texinfo.txi(,3982) @section @code{@@bye} File Ending
../texinfo/texinfo.txi(,3983) @findex bye
../texinfo/texinfo.txi(,3984) 
../texinfo/texinfo.txi(,3985) An @code{@@bye} command terminates @TeX{} or Info formatting.  None of
../texinfo/texinfo.txi(,3986) the formatting commands reading anything following @code{@@bye}.  The
../texinfo/texinfo.txi(,3987) @code{@@bye} command should be on a line by itself.
../texinfo/texinfo.txi(,3988) 
../texinfo/texinfo.txi(,3989) If you wish, you may follow the @code{@@bye} line with notes. These
../texinfo/texinfo.txi(,3990) notes will not be formatted and will not appear in either Info or a
../texinfo/texinfo.txi(,3991) printed manual; it is as if text after @code{@@bye} were within
../texinfo/texinfo.txi(,3992) @code{@@ignore} @dots{} @code{@@end ignore}.  Also, you may follow the
../texinfo/texinfo.txi(,3993) @code{@@bye} line with a local variables list for Emacs.
../texinfo/texinfo.txi(,3994) @xref{Compile-Command, , Using Local Variables and the Compile Command},
../texinfo/texinfo.txi(,3995) for more information.
../texinfo/texinfo.txi(,3996) 
../texinfo/texinfo.txi(,3997) 
../texinfo/texinfo.txi(,3998) @node Structuring
../texinfo/texinfo.txi(,3999) @chapter Chapter Structuring
../texinfo/texinfo.txi(,4000) @cindex Chapter structuring
../texinfo/texinfo.txi(,4001) @cindex Structuring of chapters
../texinfo/texinfo.txi(,4002) 
../texinfo/texinfo.txi(,4003) The @dfn{chapter structuring} commands divide a document into a hierarchy of
../texinfo/texinfo.txi(,4004) chapters, sections, subsections, and subsubsections.  These commands
../texinfo/texinfo.txi(,4005) generate large headings; they also provide information for the table
../texinfo/texinfo.txi(,4006) of contents of a printed manual (@pxref{Contents, , Generating a Table
../texinfo/texinfo.txi(,4007) of Contents}).@refill
../texinfo/texinfo.txi(,4008) 
../texinfo/texinfo.txi(,4009) The chapter structuring commands do not create an Info node structure,
../texinfo/texinfo.txi(,4010) so normally you should put an @code{@@node} command immediately before
../texinfo/texinfo.txi(,4011) each chapter structuring command (@pxref{Nodes}).  The only time you
../texinfo/texinfo.txi(,4012) are likely to use the chapter structuring commands without using the
../texinfo/texinfo.txi(,4013) node structuring commands is if you are writing a document that
../texinfo/texinfo.txi(,4014) contains no cross references and will never be transformed into Info
../texinfo/texinfo.txi(,4015) format.@refill
../texinfo/texinfo.txi(,4016) 
../texinfo/texinfo.txi(,4017) It is unlikely that you will ever write a Texinfo file that is
../texinfo/texinfo.txi(,4018) intended only as an Info file and not as a printable document.  If you
../texinfo/texinfo.txi(,4019) do, you might still use chapter structuring commands to create a
../texinfo/texinfo.txi(,4020) heading at the top of each node---but you don't need to.@refill
../texinfo/texinfo.txi(,4021) 
../texinfo/texinfo.txi(,4022) @menu
../texinfo/texinfo.txi(,4023) * Tree Structuring::            A manual is like an upside down tree @dots{}
../texinfo/texinfo.txi(,4024) * Structuring Command Types::   How to divide a manual into parts.
../texinfo/texinfo.txi(,4025) * makeinfo top::                The @code{@@top} command, part of the `Top' node.
../texinfo/texinfo.txi(,4026) * chapter::                     
../texinfo/texinfo.txi(,4027) * unnumbered & appendix::       
../texinfo/texinfo.txi(,4028) * majorheading & chapheading::  
../texinfo/texinfo.txi(,4029) * section::                     
../texinfo/texinfo.txi(,4030) * unnumberedsec appendixsec heading::  
../texinfo/texinfo.txi(,4031) * subsection::                  
../texinfo/texinfo.txi(,4032) * unnumberedsubsec appendixsubsec subheading::  
../texinfo/texinfo.txi(,4033) * subsubsection::               Commands for the lowest level sections.
../texinfo/texinfo.txi(,4034) * Raise/lower sections::        How to change commands' hierarchical level.
../texinfo/texinfo.txi(,4035) @end menu
../texinfo/texinfo.txi(,4036) 
../texinfo/texinfo.txi(,4037) 
../texinfo/texinfo.txi(,4038) @node Tree Structuring
../texinfo/texinfo.txi(,4039) @section Tree Structure of Sections
../texinfo/texinfo.txi(,4040) @cindex Tree structuring
../texinfo/texinfo.txi(,4041) 
../texinfo/texinfo.txi(,4042) A Texinfo file is usually structured like a book with chapters,
../texinfo/texinfo.txi(,4043) sections, subsections, and the like.  This structure can be visualized
../texinfo/texinfo.txi(,4044) as a tree (or rather as an upside-down tree) with the root at the top
../texinfo/texinfo.txi(,4045) and the levels corresponding to chapters, sections, subsection, and
../texinfo/texinfo.txi(,4046) subsubsections.@refill
../texinfo/texinfo.txi(,4047) 
../texinfo/texinfo.txi(,4048) Here is a diagram that shows a Texinfo file with three chapters,
../texinfo/texinfo.txi(,4049) each of which has two sections.@refill
../texinfo/texinfo.txi(,4050) 
../texinfo/texinfo.txi(,4051) @example
../texinfo/texinfo.txi(,4052) @group
../texinfo/texinfo.txi(,4053)                           Top
../texinfo/texinfo.txi(,4054)                            |
../texinfo/texinfo.txi(,4055)          -------------------------------------
../texinfo/texinfo.txi(,4056)         |                  |                  |
../texinfo/texinfo.txi(,4057)      Chapter 1          Chapter 2          Chapter 3
../texinfo/texinfo.txi(,4058)         |                  |                  |
../texinfo/texinfo.txi(,4059)      --------           --------           --------
../texinfo/texinfo.txi(,4060)     |        |         |        |         |        |
../texinfo/texinfo.txi(,4061)  Section  Section   Section  Section   Section  Section
../texinfo/texinfo.txi(,4062)    1.1      1.2       2.1      2.2       3.1      3.2
../texinfo/texinfo.txi(,4063) 
../texinfo/texinfo.txi(,4064) @end group
../texinfo/texinfo.txi(,4065) @end example
../texinfo/texinfo.txi(,4066) 
../texinfo/texinfo.txi(,4067) In a Texinfo file that has this structure, the beginning of Chapter 2
../texinfo/texinfo.txi(,4068) looks like this:@refill
../texinfo/texinfo.txi(,4069) 
../texinfo/texinfo.txi(,4070) @example
../texinfo/texinfo.txi(,4071) @group
../texinfo/texinfo.txi(,4072) @@node    Chapter 2,  Chapter 3, Chapter 1, top
../texinfo/texinfo.txi(,4073) @@chapter Chapter 2
../texinfo/texinfo.txi(,4074) @end group
../texinfo/texinfo.txi(,4075) @end example
../texinfo/texinfo.txi(,4076) 
../texinfo/texinfo.txi(,4077) The chapter structuring commands are described in the sections that
../texinfo/texinfo.txi(,4078) follow; the @code{@@node} and @code{@@menu} commands are described in
../texinfo/texinfo.txi(,4079) following chapters. (@xref{Nodes}, and see @ref{Menus}.)@refill
../texinfo/texinfo.txi(,4080) 
../texinfo/texinfo.txi(,4081) 
../texinfo/texinfo.txi(,4082) @node Structuring Command Types
../texinfo/texinfo.txi(,4083) @section Structuring Command Types
../texinfo/texinfo.txi(,4084) 
../texinfo/texinfo.txi(,4085) The chapter structuring commands fall into four groups or series, each
../texinfo/texinfo.txi(,4086) of which contains structuring commands corresponding to the
../texinfo/texinfo.txi(,4087) hierarchical levels of chapters, sections, subsections, and
../texinfo/texinfo.txi(,4088) subsubsections.@refill
../texinfo/texinfo.txi(,4089) 
../texinfo/texinfo.txi(,4090) The four groups are the @code{@@chapter} series, the
../texinfo/texinfo.txi(,4091) @code{@@unnumbered} series, the @code{@@appendix} series, and the
../texinfo/texinfo.txi(,4092) @code{@@heading} series.@refill
../texinfo/texinfo.txi(,4093) 
../texinfo/texinfo.txi(,4094) Each command produces titles that have a different appearance on the
../texinfo/texinfo.txi(,4095) printed page or Info file; only some of the commands produce
../texinfo/texinfo.txi(,4096) titles that are listed in the table of contents of a printed book or
../texinfo/texinfo.txi(,4097) manual.@refill
../texinfo/texinfo.txi(,4098) 
../texinfo/texinfo.txi(,4099) @itemize @bullet
../texinfo/texinfo.txi(,4100) @item
../texinfo/texinfo.txi(,4101) The @code{@@chapter} and @code{@@appendix} series of commands produce
../texinfo/texinfo.txi(,4102) numbered or lettered entries both in the body of a printed work and in
../texinfo/texinfo.txi(,4103) its table of contents.@refill
../texinfo/texinfo.txi(,4104) 
../texinfo/texinfo.txi(,4105) @item
../texinfo/texinfo.txi(,4106) The @code{@@unnumbered} series of commands produce unnumbered entries
../texinfo/texinfo.txi(,4107) both in the body of a printed work and in its table of contents.  The
../texinfo/texinfo.txi(,4108) @code{@@top} command, which has a special use, is a member of this
../texinfo/texinfo.txi(,4109) series (@pxref{makeinfo top, , @code{@@top}}).@refill
../texinfo/texinfo.txi(,4110) 
../texinfo/texinfo.txi(,4111) @item
../texinfo/texinfo.txi(,4112) The @code{@@heading} series of commands produce unnumbered headings
../texinfo/texinfo.txi(,4113) that do not appear in a table of contents.  The heading commands never
../texinfo/texinfo.txi(,4114) start a new page.@refill
../texinfo/texinfo.txi(,4115) 
../texinfo/texinfo.txi(,4116) @item
../texinfo/texinfo.txi(,4117) The @code{@@majorheading} command produces results similar to using
../texinfo/texinfo.txi(,4118) the @code{@@chapheading} command but generates a larger vertical
../texinfo/texinfo.txi(,4119) whitespace before the heading.@refill
../texinfo/texinfo.txi(,4120) 
../texinfo/texinfo.txi(,4121) @item
../texinfo/texinfo.txi(,4122) When an @code{@@setchapternewpage} command says to do so, the
../texinfo/texinfo.txi(,4123) @code{@@chapter}, @code{@@unnumbered}, and @code{@@appendix} commands
../texinfo/texinfo.txi(,4124) start new pages in the printed manual; the @code{@@heading} commands
../texinfo/texinfo.txi(,4125) do not.@refill
../texinfo/texinfo.txi(,4126) @end itemize
../texinfo/texinfo.txi(,4127) 
../texinfo/texinfo.txi(,4128) Here are the four groups of chapter structuring commands:
../texinfo/texinfo.txi(,4129) 
../texinfo/texinfo.txi(,4133) 
../texinfo/texinfo.txi(,4134) @multitable @columnfractions .19 .30 .29 .22
../texinfo/texinfo.txi(,4135) @item                        @tab                              @tab                       @tab No new page
../texinfo/texinfo.txi(,4136) @item @i{Numbered}           @tab @i{Unnumbered}               @tab @i{Lettered/numbered} @tab @i{Unnumbered}
../texinfo/texinfo.txi(,4137) @item In contents            @tab In contents                  @tab In contents           @tab Omitted from@*contents
../texinfo/texinfo.txi(,4138) @item                        @tab @code{@@top}                 @tab                       @tab @code{@@majorheading}
../texinfo/texinfo.txi(,4139) @item @code{@@chapter}       @tab @code{@@unnumbered}          @tab @code{@@appendix} @tab @code{@@chapheading}
../texinfo/texinfo.txi(,4140) @item @code{@@section}       @tab @code{@@unnumberedsec}       @tab @code{@@appendixsec} @tab @code{@@heading}
../texinfo/texinfo.txi(,4141) @item @code{@@subsection}    @tab @code{@@unnumberedsubsec}    @tab @code{@@appendixsubsec} @tab @code{@@subheading}
../texinfo/texinfo.txi(,4142) @item @code{@@subsubsection} @tab @code{@@unnumberedsubsubsec} @tab @code{@@appendixsubsubsec} @tab @code{@@subsubheading}
../texinfo/texinfo.txi(,4143) @end multitable
../texinfo/texinfo.txi(,4147) 
../texinfo/texinfo.txi(,4148) 
../texinfo/texinfo.txi(,4149) @node makeinfo top
../texinfo/texinfo.txi(,4150) @section @code{@@top}
../texinfo/texinfo.txi(,4151) 
../texinfo/texinfo.txi(,4152) The @code{@@top} command is a special sectioning command that you use
../texinfo/texinfo.txi(,4153) only after an @samp{@@node Top} line at the beginning of a Texinfo file.
../texinfo/texinfo.txi(,4154) The @code{@@top} command tells the @code{makeinfo} formatter which node
../texinfo/texinfo.txi(,4155) is the `Top' node, so it can use it as the root of the node tree if your
../texinfo/texinfo.txi(,4156) manual uses implicit pointers.  It has the same typesetting effect as
../texinfo/texinfo.txi(,4157) @code{@@unnumbered} (@pxref{unnumbered & appendix, , @code{@@unnumbered}
../texinfo/texinfo.txi(,4158) and @code{@@appendix}}).  For detailed information, see @ref{makeinfo
../texinfo/texinfo.txi(,4159) top command, , The @code{@@top} Command}.
../texinfo/texinfo.txi(,4160) 
../texinfo/texinfo.txi(,4161) The @code{@@top} node and its menu (if any) is conventionally wrapped in
../texinfo/texinfo.txi(,4162) an @code{@@ifnottex} conditional so that it will appear only in Info and
../texinfo/texinfo.txi(,4163) HTML output, not @TeX{}.
../texinfo/texinfo.txi(,4164) 
../texinfo/texinfo.txi(,4165) 
../texinfo/texinfo.txi(,4166) @node chapter, unnumbered & appendix, makeinfo top, Structuring
../texinfo/texinfo.txi(,4167) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4168) @section @code{@@chapter}
../texinfo/texinfo.txi(,4169) @findex chapter
../texinfo/texinfo.txi(,4170) 
../texinfo/texinfo.txi(,4171) @code{@@chapter} identifies a chapter in the document.  Write the
../texinfo/texinfo.txi(,4172) command at the beginning of a line and follow it on the same line by
../texinfo/texinfo.txi(,4173) the title of the chapter.@refill
../texinfo/texinfo.txi(,4174) 
../texinfo/texinfo.txi(,4175) For example, this chapter in this manual is entitled ``Chapter
../texinfo/texinfo.txi(,4176) Structuring''; the @code{@@chapter} line looks like this:@refill
../texinfo/texinfo.txi(,4177) 
../texinfo/texinfo.txi(,4178) @example
../texinfo/texinfo.txi(,4179) @@chapter Chapter Structuring
../texinfo/texinfo.txi(,4180) @end example
../texinfo/texinfo.txi(,4181) 
../texinfo/texinfo.txi(,4182) In @TeX{}, the @code{@@chapter} command creates a chapter in the
../texinfo/texinfo.txi(,4183) document, specifying the chapter title.  The chapter is numbered
../texinfo/texinfo.txi(,4184) automatically.@refill
../texinfo/texinfo.txi(,4185) 
../texinfo/texinfo.txi(,4186) In Info, the @code{@@chapter} command causes the title to appear on a
../texinfo/texinfo.txi(,4187) line by itself, with a line of asterisks inserted underneath.  Thus,
../texinfo/texinfo.txi(,4188) in Info, the above example produces the following output:@refill
../texinfo/texinfo.txi(,4189) 
../texinfo/texinfo.txi(,4190) @example
../texinfo/texinfo.txi(,4191) Chapter Structuring
../texinfo/texinfo.txi(,4192) *******************
../texinfo/texinfo.txi(,4193) @end example
../texinfo/texinfo.txi(,4194) 
../texinfo/texinfo.txi(,4195) @findex centerchap
../texinfo/texinfo.txi(,4196) Texinfo also provides a command @code{@@centerchap}, which is analogous
../texinfo/texinfo.txi(,4197) to @code{@@unnumbered}, but centers its argument in the printed output.
../texinfo/texinfo.txi(,4198) This kind of stylistic choice is not usually offered by Texinfo.
../texinfo/texinfo.txi(,4199) @c but the Hacker's Dictionary wanted it ...
../texinfo/texinfo.txi(,4200) 
../texinfo/texinfo.txi(,4201) 
../texinfo/texinfo.txi(,4202) @node unnumbered & appendix
../texinfo/texinfo.txi(,4203) @section @code{@@unnumbered} and @code{@@appendix}
../texinfo/texinfo.txi(,4204) @findex unnumbered
../texinfo/texinfo.txi(,4205) @findex appendix
../texinfo/texinfo.txi(,4206) 
../texinfo/texinfo.txi(,4207) Use the @code{@@unnumbered} command to create a chapter that appears
../texinfo/texinfo.txi(,4208) in a printed manual without chapter numbers of any kind.  Use the
../texinfo/texinfo.txi(,4209) @code{@@appendix} command to create an appendix in a printed manual
../texinfo/texinfo.txi(,4210) that is labelled by letter instead of by number.@refill
../texinfo/texinfo.txi(,4211) 
../texinfo/texinfo.txi(,4212) For Info file output, the @code{@@unnumbered} and @code{@@appendix}
../texinfo/texinfo.txi(,4213) commands are equivalent to @code{@@chapter}: the title is printed on a
../texinfo/texinfo.txi(,4214) line by itself with a line of asterisks underneath.  (@xref{chapter, ,
../texinfo/texinfo.txi(,4215) @code{@@chapter}}.)@refill
../texinfo/texinfo.txi(,4216) 
../texinfo/texinfo.txi(,4217) To create an appendix or an unnumbered chapter, write an
../texinfo/texinfo.txi(,4218) @code{@@appendix} or @code{@@unnumbered} command at the beginning of a
../texinfo/texinfo.txi(,4219) line and follow it on the same line by the title, as you would if you
../texinfo/texinfo.txi(,4220) were creating a chapter.@refill
../texinfo/texinfo.txi(,4221) 
../texinfo/texinfo.txi(,4222) 
../texinfo/texinfo.txi(,4223) @node majorheading & chapheading, section, unnumbered & appendix, Structuring
../texinfo/texinfo.txi(,4224) @section @code{@@majorheading}, @code{@@chapheading}
../texinfo/texinfo.txi(,4225) @findex majorheading
../texinfo/texinfo.txi(,4226) @findex chapheading
../texinfo/texinfo.txi(,4227) 
../texinfo/texinfo.txi(,4228) The @code{@@majorheading} and @code{@@chapheading} commands put
../texinfo/texinfo.txi(,4229) chapter-like headings in the body of a document.@refill
../texinfo/texinfo.txi(,4230) 
../texinfo/texinfo.txi(,4231) However, neither command causes @TeX{} to produce a numbered heading
../texinfo/texinfo.txi(,4232) or an entry in the table of contents; and neither command causes
../texinfo/texinfo.txi(,4233) @TeX{} to start a new page in a printed manual.@refill
../texinfo/texinfo.txi(,4234) 
../texinfo/texinfo.txi(,4235) In @TeX{}, an @code{@@majorheading} command generates a larger vertical
../texinfo/texinfo.txi(,4236) whitespace before the heading than an @code{@@chapheading} command but
../texinfo/texinfo.txi(,4237) is otherwise the same.@refill
../texinfo/texinfo.txi(,4238) 
../texinfo/texinfo.txi(,4239) In Info,
../texinfo/texinfo.txi(,4240) the @code{@@majorheading} and
../texinfo/texinfo.txi(,4241) @code{@@chapheading} commands are equivalent to
../texinfo/texinfo.txi(,4242) @code{@@chapter}: the title is printed on a line by itself with a line
../texinfo/texinfo.txi(,4243) of asterisks underneath.  (@xref{chapter, , @code{@@chapter}}.)@refill
../texinfo/texinfo.txi(,4244) 
../texinfo/texinfo.txi(,4245) @node section, unnumberedsec appendixsec heading, majorheading & chapheading, Structuring
../texinfo/texinfo.txi(,4246) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4247) @section @code{@@section}
../texinfo/texinfo.txi(,4248) @findex section
../texinfo/texinfo.txi(,4249) 
../texinfo/texinfo.txi(,4250) In a printed manual, an @code{@@section} command identifies a
../texinfo/texinfo.txi(,4251) numbered section within a chapter.  The section title appears in the
../texinfo/texinfo.txi(,4252) table of contents.  In Info, an @code{@@section} command provides a
../texinfo/texinfo.txi(,4253) title for a segment of text, underlined with @samp{=}.@refill
../texinfo/texinfo.txi(,4254) 
../texinfo/texinfo.txi(,4255) This section is headed with an @code{@@section} command and looks like
../texinfo/texinfo.txi(,4256) this in the Texinfo file:@refill
../texinfo/texinfo.txi(,4257) 
../texinfo/texinfo.txi(,4258) @example
../texinfo/texinfo.txi(,4259) @@section @@code@{@@@@section@}
../texinfo/texinfo.txi(,4260) @end example
../texinfo/texinfo.txi(,4261) 
../texinfo/texinfo.txi(,4262) To create a section, write the @code{@@section} command at the
../texinfo/texinfo.txi(,4263) beginning of a line and follow it on the same line by the section
../texinfo/texinfo.txi(,4264) title.@refill
../texinfo/texinfo.txi(,4265) 
../texinfo/texinfo.txi(,4266) Thus,
../texinfo/texinfo.txi(,4267) 
../texinfo/texinfo.txi(,4268) @example
../texinfo/texinfo.txi(,4269) @@section This is a section
../texinfo/texinfo.txi(,4270) @end example
../texinfo/texinfo.txi(,4271) 
../texinfo/texinfo.txi(,4272) @noindent
../texinfo/texinfo.txi(,4273) produces
../texinfo/texinfo.txi(,4274) 
../texinfo/texinfo.txi(,4275) @example
../texinfo/texinfo.txi(,4276) @group
../texinfo/texinfo.txi(,4277) This is a section
../texinfo/texinfo.txi(,4278) =================
../texinfo/texinfo.txi(,4279) @end group
../texinfo/texinfo.txi(,4280) @end example
../texinfo/texinfo.txi(,4281) 
../texinfo/texinfo.txi(,4282) @noindent
../texinfo/texinfo.txi(,4283) in Info.
../texinfo/texinfo.txi(,4284) 
../texinfo/texinfo.txi(,4285) @node unnumberedsec appendixsec heading, subsection, section, Structuring
../texinfo/texinfo.txi(,4286) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4287) @section @code{@@unnumberedsec}, @code{@@appendixsec}, @code{@@heading}
../texinfo/texinfo.txi(,4288) @findex unnumberedsec
../texinfo/texinfo.txi(,4289) @findex appendixsec
../texinfo/texinfo.txi(,4290) @findex heading
../texinfo/texinfo.txi(,4291) 
../texinfo/texinfo.txi(,4292) The @code{@@unnumberedsec}, @code{@@appendixsec}, and @code{@@heading}
../texinfo/texinfo.txi(,4293) commands are, respectively, the unnumbered, appendix-like, and
../texinfo/texinfo.txi(,4294) heading-like equivalents of the @code{@@section} command.
../texinfo/texinfo.txi(,4295) (@xref{section, , @code{@@section}}.)@refill
../texinfo/texinfo.txi(,4296) 
../texinfo/texinfo.txi(,4297) @table @code
../texinfo/texinfo.txi(,4298) @item @@unnumberedsec
../texinfo/texinfo.txi(,4299) The @code{@@unnumberedsec} command may be used within an
../texinfo/texinfo.txi(,4300) unnumbered chapter or within a regular chapter or appendix to
../texinfo/texinfo.txi(,4301) provide an unnumbered section.@refill
../texinfo/texinfo.txi(,4302) 
../texinfo/texinfo.txi(,4303) @item @@appendixsec
../texinfo/texinfo.txi(,4304) @itemx @@appendixsection
../texinfo/texinfo.txi(,4305) @code{@@appendixsection} is a longer spelling of the
../texinfo/texinfo.txi(,4306) @code{@@appendixsec} command; the two are synonymous.@refill
../texinfo/texinfo.txi(,4307) @findex appendixsection
../texinfo/texinfo.txi(,4308) 
../texinfo/texinfo.txi(,4309) Conventionally, the @code{@@appendixsec} or @code{@@appendixsection}
../texinfo/texinfo.txi(,4310) command is used only within appendices.@refill
../texinfo/texinfo.txi(,4311) 
../texinfo/texinfo.txi(,4312) @item @@heading
../texinfo/texinfo.txi(,4313) You may use the @code{@@heading} command anywhere you wish for a
../texinfo/texinfo.txi(,4314) section-style heading that will not appear in the table of contents.@refill
../texinfo/texinfo.txi(,4315) @end table
../texinfo/texinfo.txi(,4316) 
../texinfo/texinfo.txi(,4317) @node subsection, unnumberedsubsec appendixsubsec subheading, unnumberedsec appendixsec heading, Structuring
../texinfo/texinfo.txi(,4318) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4319) @section The @code{@@subsection} Command
../texinfo/texinfo.txi(,4320) @findex subsection
../texinfo/texinfo.txi(,4321) 
../texinfo/texinfo.txi(,4322) Subsections are to sections as sections are to chapters.
../texinfo/texinfo.txi(,4323) (@xref{section, , @code{@@section}}.)  In Info, subsection titles are
../texinfo/texinfo.txi(,4324) underlined with @samp{-}.  For example,@refill
../texinfo/texinfo.txi(,4325) 
../texinfo/texinfo.txi(,4326) @example
../texinfo/texinfo.txi(,4327) @@subsection This is a subsection
../texinfo/texinfo.txi(,4328) @end example
../texinfo/texinfo.txi(,4329) 
../texinfo/texinfo.txi(,4330) @noindent
../texinfo/texinfo.txi(,4331) produces
../texinfo/texinfo.txi(,4332) 
../texinfo/texinfo.txi(,4333) @example
../texinfo/texinfo.txi(,4334) @group
../texinfo/texinfo.txi(,4335) This is a subsection
../texinfo/texinfo.txi(,4336) --------------------
../texinfo/texinfo.txi(,4337) @end group
../texinfo/texinfo.txi(,4338) @end example
../texinfo/texinfo.txi(,4339) 
../texinfo/texinfo.txi(,4340) In a printed manual, subsections are listed in the table of contents
../texinfo/texinfo.txi(,4341) and are numbered three levels deep.@refill
../texinfo/texinfo.txi(,4342) 
../texinfo/texinfo.txi(,4343) @node unnumberedsubsec appendixsubsec subheading, subsubsection, subsection, Structuring
../texinfo/texinfo.txi(,4344) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4345) @section The @code{@@subsection}-like Commands
../texinfo/texinfo.txi(,4346) @cindex Subsection-like commands
../texinfo/texinfo.txi(,4347) @findex unnumberedsubsec
../texinfo/texinfo.txi(,4348) @findex appendixsubsec
../texinfo/texinfo.txi(,4349) @findex subheading
../texinfo/texinfo.txi(,4350) 
../texinfo/texinfo.txi(,4351) The @code{@@unnumberedsubsec}, @code{@@appendixsubsec}, and
../texinfo/texinfo.txi(,4352) @code{@@subheading} commands are, respectively, the unnumbered,
../texinfo/texinfo.txi(,4353) appendix-like, and heading-like equivalents of the @code{@@subsection}
../texinfo/texinfo.txi(,4354) command.  (@xref{subsection, , @code{@@subsection}}.)@refill
../texinfo/texinfo.txi(,4355) 
../texinfo/texinfo.txi(,4356) In Info, the @code{@@subsection}-like commands generate a title
../texinfo/texinfo.txi(,4357) underlined with hyphens.  In a printed manual, an @code{@@subheading}
../texinfo/texinfo.txi(,4358) command produces a heading like that of a subsection except that it is
../texinfo/texinfo.txi(,4359) not numbered and does not appear in the table of contents.  Similarly,
../texinfo/texinfo.txi(,4360) an @code{@@unnumberedsubsec} command produces an unnumbered heading like
../texinfo/texinfo.txi(,4361) that of a subsection and an @code{@@appendixsubsec} command produces a
../texinfo/texinfo.txi(,4362) subsection-like heading labelled with a letter and numbers; both of
../texinfo/texinfo.txi(,4363) these commands produce headings that appear in the table of
../texinfo/texinfo.txi(,4364) contents.@refill
../texinfo/texinfo.txi(,4365) 
../texinfo/texinfo.txi(,4366) @node subsubsection, Raise/lower sections, unnumberedsubsec appendixsubsec subheading, Structuring
../texinfo/texinfo.txi(,4367) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4368) @section The `subsub' Commands
../texinfo/texinfo.txi(,4369) @cindex Subsub commands
../texinfo/texinfo.txi(,4370) @findex subsubsection
../texinfo/texinfo.txi(,4371) @findex unnumberedsubsubsec
../texinfo/texinfo.txi(,4372) @findex appendixsubsubsec
../texinfo/texinfo.txi(,4373) @findex subsubheading
../texinfo/texinfo.txi(,4374) 
../texinfo/texinfo.txi(,4375) The fourth and lowest level sectioning commands in Texinfo are the
../texinfo/texinfo.txi(,4376) `subsub' commands.  They are:@refill
../texinfo/texinfo.txi(,4377) 
../texinfo/texinfo.txi(,4378) @table @code
../texinfo/texinfo.txi(,4379) @item @@subsubsection
../texinfo/texinfo.txi(,4380) Subsubsections are to subsections as subsections are to sections.
../texinfo/texinfo.txi(,4381) (@xref{subsection, , @code{@@subsection}}.)  In a printed manual,
../texinfo/texinfo.txi(,4382) subsubsection titles appear in the table of contents and are numbered
../texinfo/texinfo.txi(,4383) four levels deep.@refill
../texinfo/texinfo.txi(,4384) 
../texinfo/texinfo.txi(,4385) @item @@unnumberedsubsubsec
../texinfo/texinfo.txi(,4386) Unnumbered subsubsection titles appear in the table of contents of a
../texinfo/texinfo.txi(,4387) printed manual, but lack numbers.  Otherwise, unnumbered
../texinfo/texinfo.txi(,4388) subsubsections are the same as subsubsections.  In Info, unnumbered
../texinfo/texinfo.txi(,4389) subsubsections look exactly like ordinary subsubsections.@refill
../texinfo/texinfo.txi(,4390) 
../texinfo/texinfo.txi(,4391) @item @@appendixsubsubsec
../texinfo/texinfo.txi(,4392) Conventionally, appendix commands are used only for appendices and are
../texinfo/texinfo.txi(,4393) lettered and numbered appropriately in a printed manual.  They also
../texinfo/texinfo.txi(,4394) appear in the table of contents.  In Info, appendix subsubsections look
../texinfo/texinfo.txi(,4395) exactly like ordinary subsubsections.@refill
../texinfo/texinfo.txi(,4396) 
../texinfo/texinfo.txi(,4397) @item @@subsubheading
../texinfo/texinfo.txi(,4398) The @code{@@subsubheading} command may be used anywhere that you need
../texinfo/texinfo.txi(,4399) a small heading that will not appear in the table of contents.  In
../texinfo/texinfo.txi(,4400) Info, subsubheadings look exactly like ordinary subsubsection
../texinfo/texinfo.txi(,4401) headings.@refill
../texinfo/texinfo.txi(,4402) @end table
../texinfo/texinfo.txi(,4403) 
../texinfo/texinfo.txi(,4404) In Info,  `subsub' titles are underlined with periods.
../texinfo/texinfo.txi(,4405) For example,@refill
../texinfo/texinfo.txi(,4406) 
../texinfo/texinfo.txi(,4407) @example
../texinfo/texinfo.txi(,4408) @@subsubsection This is a subsubsection
../texinfo/texinfo.txi(,4409) @end example
../texinfo/texinfo.txi(,4410) 
../texinfo/texinfo.txi(,4411) @noindent
../texinfo/texinfo.txi(,4412) produces
../texinfo/texinfo.txi(,4413) 
../texinfo/texinfo.txi(,4414) @example
../texinfo/texinfo.txi(,4415) @group
../texinfo/texinfo.txi(,4416) This is a subsubsection
../texinfo/texinfo.txi(,4417) .......................
../texinfo/texinfo.txi(,4418) @end group
../texinfo/texinfo.txi(,4419) @end example
../texinfo/texinfo.txi(,4420) 
../texinfo/texinfo.txi(,4421) @node Raise/lower sections,  , subsubsection, Structuring
../texinfo/texinfo.txi(,4422) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4423) @section @code{@@raisesections} and @code{@@lowersections}
../texinfo/texinfo.txi(,4424) @findex raisesections
../texinfo/texinfo.txi(,4425) @findex lowersections
../texinfo/texinfo.txi(,4426) @cindex Raising and lowering sections
../texinfo/texinfo.txi(,4427) @cindex Sections, raising and lowering
../texinfo/texinfo.txi(,4428) 
../texinfo/texinfo.txi(,4429) The @code{@@raisesections} and @code{@@lowersections} commands raise and
../texinfo/texinfo.txi(,4430) lower the hierarchical level of chapters, sections, subsections and the
../texinfo/texinfo.txi(,4431) like.  The @code{@@raisesections} command changes sections to chapters,
../texinfo/texinfo.txi(,4432) subsections to sections, and so on.  The @code{@@lowersections} command
../texinfo/texinfo.txi(,4433) changes chapters to sections, sections to subsections, and so on.
../texinfo/texinfo.txi(,4434) 
../texinfo/texinfo.txi(,4435) @cindex Include files, and section levels
../texinfo/texinfo.txi(,4436) An @code{@@lowersections} command is useful if you wish to include text
../texinfo/texinfo.txi(,4437) that is written as an outer or standalone Texinfo file in another
../texinfo/texinfo.txi(,4438) Texinfo file as an inner, included file.  If you write the command at
../texinfo/texinfo.txi(,4439) the beginning of the file, all your @code{@@chapter} commands are
../texinfo/texinfo.txi(,4440) formatted as if they were @code{@@section} commands, all your
../texinfo/texinfo.txi(,4441) @code{@@section} command are formatted as if they were
../texinfo/texinfo.txi(,4442) @code{@@subsection} commands, and so on.
../texinfo/texinfo.txi(,4443) 
../texinfo/texinfo.txi(,4444) @need 1000
../texinfo/texinfo.txi(,4445) @code{@@raisesections} raises a command one level in the chapter
../texinfo/texinfo.txi(,4446) structuring hierarchy:@refill
../texinfo/texinfo.txi(,4447) 
../texinfo/texinfo.txi(,4448) @example
../texinfo/texinfo.txi(,4449) @group
../texinfo/texinfo.txi(,4450)   @r{Change}           @r{To}
../texinfo/texinfo.txi(,4451) 
../texinfo/texinfo.txi(,4452) @@subsection     @@section,
../texinfo/texinfo.txi(,4453) @@section        @@chapter,
../texinfo/texinfo.txi(,4454) @@heading        @@chapheading,
../texinfo/texinfo.txi(,4455)           @r{etc.}
../texinfo/texinfo.txi(,4456) @end group
../texinfo/texinfo.txi(,4457) @end example
../texinfo/texinfo.txi(,4458) 
../texinfo/texinfo.txi(,4459) @need 1000
../texinfo/texinfo.txi(,4460) @code{@@lowersections} lowers a command one level in the chapter
../texinfo/texinfo.txi(,4461) structuring hierarchy:@refill
../texinfo/texinfo.txi(,4462) 
../texinfo/texinfo.txi(,4463) @example
../texinfo/texinfo.txi(,4464) @group
../texinfo/texinfo.txi(,4465)   @r{Change}           @r{To}
../texinfo/texinfo.txi(,4466) 
../texinfo/texinfo.txi(,4467) @@chapter        @@section,
../texinfo/texinfo.txi(,4468) @@subsection     @@subsubsection,
../texinfo/texinfo.txi(,4469) @@heading        @@subheading,
../texinfo/texinfo.txi(,4470)           @r{etc.}
../texinfo/texinfo.txi(,4471) @end group
../texinfo/texinfo.txi(,4472) @end example
../texinfo/texinfo.txi(,4473) 
../texinfo/texinfo.txi(,4474) An @code{@@raisesections} or @code{@@lowersections} command changes only
../texinfo/texinfo.txi(,4475) those structuring commands that follow the command in the Texinfo file.
../texinfo/texinfo.txi(,4476) Write an @code{@@raisesections} or @code{@@lowersections} command on a
../texinfo/texinfo.txi(,4477) line of its own.
../texinfo/texinfo.txi(,4478) 
../texinfo/texinfo.txi(,4479) An @code{@@lowersections} command cancels an @code{@@raisesections}
../texinfo/texinfo.txi(,4480) command, and vice versa.  Typically, the commands are used like this:
../texinfo/texinfo.txi(,4481) 
../texinfo/texinfo.txi(,4482) @example
../texinfo/texinfo.txi(,4483) @@lowersections
../texinfo/texinfo.txi(,4484) @@include somefile.texi
../texinfo/texinfo.txi(,4485) @@raisesections
../texinfo/texinfo.txi(,4486) @end example
../texinfo/texinfo.txi(,4487) 
../texinfo/texinfo.txi(,4488) Without the @code{@@raisesections}, all the subsequent sections in your
../texinfo/texinfo.txi(,4489) document will be lowered.
../texinfo/texinfo.txi(,4490) 
../texinfo/texinfo.txi(,4491) Repeated use of the commands continue to raise or lower the hierarchical
../texinfo/texinfo.txi(,4492) level a step at a time.
../texinfo/texinfo.txi(,4493) 
../texinfo/texinfo.txi(,4494) An attempt to raise above `chapters' reproduces chapter commands; an
../texinfo/texinfo.txi(,4495) attempt to lower below `subsubsections' reproduces subsubsection
../texinfo/texinfo.txi(,4496) commands.
../texinfo/texinfo.txi(,4497) 
../texinfo/texinfo.txi(,4498) @node Nodes
../texinfo/texinfo.txi(,4499) @chapter Nodes
../texinfo/texinfo.txi(,4500) 
../texinfo/texinfo.txi(,4501) @dfn{Nodes} are the primary segments of a Texinfo file.  They do not
../texinfo/texinfo.txi(,4502) themselves impose a hierarchical or any other kind of structure on a file.
../texinfo/texinfo.txi(,4503) Nodes contain @dfn{node pointers} that name other nodes, and can contain
../texinfo/texinfo.txi(,4504) @dfn{menus} which are lists of nodes.  In Info, the movement commands
../texinfo/texinfo.txi(,4505) can carry you to a pointed-to node or to a node listed in a menu.  Node
../texinfo/texinfo.txi(,4506) pointers and menus provide structure for Info files just as chapters,
../texinfo/texinfo.txi(,4507) sections, subsections, and the like, provide structure for printed
../texinfo/texinfo.txi(,4508) books.@refill
../texinfo/texinfo.txi(,4509) 
../texinfo/texinfo.txi(,4510) @menu
../texinfo/texinfo.txi(,4511) * Two Paths::                   Different commands to structure
../texinfo/texinfo.txi(,4512)                                   Info output and printed output.
../texinfo/texinfo.txi(,4513) * Node Menu Illustration::      A diagram, and sample nodes and menus.
../texinfo/texinfo.txi(,4514) * node::                        Creating nodes, in detail.
../texinfo/texinfo.txi(,4515) * makeinfo Pointer Creation::   Letting makeinfo determine node pointers.
../texinfo/texinfo.txi(,4516) * anchor::                      Defining arbitrary cross-reference targets.
../texinfo/texinfo.txi(,4517) @end menu
../texinfo/texinfo.txi(,4518) 
../texinfo/texinfo.txi(,4519) 
../texinfo/texinfo.txi(,4520) @node Two Paths
../texinfo/texinfo.txi(,4521) @section Two Paths
../texinfo/texinfo.txi(,4522) 
../texinfo/texinfo.txi(,4523) The node and menu commands and the chapter structuring commands are
../texinfo/texinfo.txi(,4524) technically independent of each other:
../texinfo/texinfo.txi(,4525) 
../texinfo/texinfo.txi(,4526) @itemize @bullet
../texinfo/texinfo.txi(,4527) @item
../texinfo/texinfo.txi(,4528) In Info, node and menu commands provide structure.  The chapter
../texinfo/texinfo.txi(,4529) structuring commands generate headings with different kinds of
../texinfo/texinfo.txi(,4530) underlining---asterisks for chapters, hyphens for sections, and so on;
../texinfo/texinfo.txi(,4531) they do nothing else.@refill
../texinfo/texinfo.txi(,4532) 
../texinfo/texinfo.txi(,4533) @item
../texinfo/texinfo.txi(,4534) In @TeX{}, the chapter structuring commands generate chapter and section
../texinfo/texinfo.txi(,4535) numbers and tables of contents.  The node and menu commands provide
../texinfo/texinfo.txi(,4536) information for cross references; they do nothing else.@refill
../texinfo/texinfo.txi(,4537) @end itemize
../texinfo/texinfo.txi(,4538) 
../texinfo/texinfo.txi(,4539) You can use node pointers and menus to structure an Info file any way
../texinfo/texinfo.txi(,4540) you want; and you can write a Texinfo file so that its Info output has a
../texinfo/texinfo.txi(,4541) different structure than its printed output.  However, virtually all
../texinfo/texinfo.txi(,4542) Texinfo files are written such that the structure for the Info output
../texinfo/texinfo.txi(,4543) corresponds to the structure for the printed output.  It is neither
../texinfo/texinfo.txi(,4544) convenient nor understandable to the reader to do otherwise.@refill
../texinfo/texinfo.txi(,4545) 
../texinfo/texinfo.txi(,4546) Generally, printed output is structured in a tree-like hierarchy in
../texinfo/texinfo.txi(,4547) which the chapters are the major limbs from which the sections branch
../texinfo/texinfo.txi(,4548) out.  Similarly, node pointers and menus are organized to create a
../texinfo/texinfo.txi(,4549) matching structure in the Info output.@refill
../texinfo/texinfo.txi(,4550) 
../texinfo/texinfo.txi(,4551) 
../texinfo/texinfo.txi(,4552) @node Node Menu Illustration
../texinfo/texinfo.txi(,4553) @section Node and Menu Illustration
../texinfo/texinfo.txi(,4554) 
../texinfo/texinfo.txi(,4555) Here is a copy of the diagram shown earlier that illustrates a Texinfo
../texinfo/texinfo.txi(,4556) file with three chapters, each of which contains two sections.@refill
../texinfo/texinfo.txi(,4557) 
../texinfo/texinfo.txi(,4558) The ``root'' is at the top of the diagram and the ``leaves'' are at the
../texinfo/texinfo.txi(,4559) bottom.  This is how such a diagram is drawn conventionally; it
../texinfo/texinfo.txi(,4560) illustrates an upside-down tree.  For this reason, the root node is
../texinfo/texinfo.txi(,4561) called the `Top' node, and `Up' node pointers carry you closer to the
../texinfo/texinfo.txi(,4562) root.@refill
../texinfo/texinfo.txi(,4563) 
../texinfo/texinfo.txi(,4564) @example
../texinfo/texinfo.txi(,4565) @group
../texinfo/texinfo.txi(,4566)                           Top
../texinfo/texinfo.txi(,4567)                            |
../texinfo/texinfo.txi(,4568)          -------------------------------------
../texinfo/texinfo.txi(,4569)         |                  |                  |
../texinfo/texinfo.txi(,4570)      Chapter 1          Chapter 2          Chapter 3
../texinfo/texinfo.txi(,4571)         |                  |                  |
../texinfo/texinfo.txi(,4572)      --------           --------           --------
../texinfo/texinfo.txi(,4573)     |        |         |        |         |        |
../texinfo/texinfo.txi(,4574)  Section  Section   Section  Section   Section  Section
../texinfo/texinfo.txi(,4575)    1.1      1.2       2.1      2.2       3.1      3.2
../texinfo/texinfo.txi(,4576) @end group
../texinfo/texinfo.txi(,4577) @end example
../texinfo/texinfo.txi(,4578) 
../texinfo/texinfo.txi(,4579) The fully-written command to start Chapter 2 would be this:
../texinfo/texinfo.txi(,4580) 
../texinfo/texinfo.txi(,4581) @example
../texinfo/texinfo.txi(,4582) @group
../texinfo/texinfo.txi(,4583) @@node     Chapter 2,  Chapter 3, Chapter 1, Top
../texinfo/texinfo.txi(,4584) @@comment  node-name,  next,      previous,  up
../texinfo/texinfo.txi(,4585) @end group
../texinfo/texinfo.txi(,4586) @end example
../texinfo/texinfo.txi(,4587) 
../texinfo/texinfo.txi(,4588) @noindent
../texinfo/texinfo.txi(,4589) This @code{@@node} line says that the name of this node is ``Chapter
../texinfo/texinfo.txi(,4590) 2'', the name of the `Next' node is ``Chapter 3'', the name of the
../texinfo/texinfo.txi(,4591) `Previous' node is ``Chapter 1'', and the name of the `Up' node is
../texinfo/texinfo.txi(,4592) ``Top''.  You can omit writing out these node names if your document is
../texinfo/texinfo.txi(,4593) hierarchically organized (@pxref{makeinfo Pointer Creation}), but the
../texinfo/texinfo.txi(,4594) pointer relationships still obtain.
../texinfo/texinfo.txi(,4595) 
../texinfo/texinfo.txi(,4596) @quotation
../texinfo/texinfo.txi(,4597) @strong{Please Note:} `Next' refers to the next node at the same
../texinfo/texinfo.txi(,4598) hierarchical level in the manual, not necessarily to the next node
../texinfo/texinfo.txi(,4599) within the Texinfo file.  In the Texinfo file, the subsequent node may
../texinfo/texinfo.txi(,4600) be at a lower level---a section-level node most often follows a
../texinfo/texinfo.txi(,4601) chapter-level node, for example.  `Next' and `Previous' refer to nodes
../texinfo/texinfo.txi(,4602) at the @emph{same} hierarchical level.  (The `Top' node contains the
../texinfo/texinfo.txi(,4603) exception to this rule.  Since the `Top' node is the only node at that
../texinfo/texinfo.txi(,4604) level, `Next' refers to the first following node, which is almost always
../texinfo/texinfo.txi(,4605) a chapter or chapter-level node.)@refill
../texinfo/texinfo.txi(,4606) @end quotation
../texinfo/texinfo.txi(,4607) 
../texinfo/texinfo.txi(,4608) To go to Sections 2.1 and 2.2 using Info, you need a menu inside Chapter
../texinfo/texinfo.txi(,4609) 2.  (@xref{Menus}.)  You would write the menu just
../texinfo/texinfo.txi(,4610) before the beginning of Section 2.1, like this:@refill
../texinfo/texinfo.txi(,4611) 
../texinfo/texinfo.txi(,4612) @example
../texinfo/texinfo.txi(,4613) @group
../texinfo/texinfo.txi(,4614)     @@menu
../texinfo/texinfo.txi(,4615)     * Sect. 2.1::    Description of this section.
../texinfo/texinfo.txi(,4616)     * Sect. 2.2::
../texinfo/texinfo.txi(,4617)     @@end menu
../texinfo/texinfo.txi(,4618) @end group
../texinfo/texinfo.txi(,4619) @end example
../texinfo/texinfo.txi(,4620) 
../texinfo/texinfo.txi(,4621) Write the node for Sect. 2.1 like this:@refill
../texinfo/texinfo.txi(,4622) 
../texinfo/texinfo.txi(,4623) @example
../texinfo/texinfo.txi(,4624) @group
../texinfo/texinfo.txi(,4625)     @@node     Sect. 2.1, Sect. 2.2, Chapter 2, Chapter 2
../texinfo/texinfo.txi(,4626)     @@comment  node-name, next,      previous,  up
../texinfo/texinfo.txi(,4627) @end group
../texinfo/texinfo.txi(,4628) @end example
../texinfo/texinfo.txi(,4629) 
../texinfo/texinfo.txi(,4630) In Info format, the `Next' and `Previous' pointers of a node usually
../texinfo/texinfo.txi(,4631) lead to other nodes at the same level---from chapter to chapter or from
../texinfo/texinfo.txi(,4632) section to section (sometimes, as shown, the `Previous' pointer points
../texinfo/texinfo.txi(,4633) up); an `Up' pointer usually leads to a node at the level above (closer
../texinfo/texinfo.txi(,4634) to the `Top' node); and a `Menu' leads to nodes at a level below (closer
../texinfo/texinfo.txi(,4635) to `leaves').  (A cross reference can point to a node at any level;
../texinfo/texinfo.txi(,4636) see @ref{Cross References}.)@refill
../texinfo/texinfo.txi(,4637) 
../texinfo/texinfo.txi(,4638) Usually, an @code{@@node} command and a chapter structuring command are
../texinfo/texinfo.txi(,4639) used in sequence, along with indexing commands.  (You may follow the
../texinfo/texinfo.txi(,4640) @code{@@node} line with a comment line that reminds you which pointer is
../texinfo/texinfo.txi(,4641) which.)@refill
../texinfo/texinfo.txi(,4642) 
../texinfo/texinfo.txi(,4643) Here is the beginning of the chapter in this manual called ``Ending a
../texinfo/texinfo.txi(,4644) Texinfo File''.  This shows an @code{@@node} line followed by a comment
../texinfo/texinfo.txi(,4645) line, an @code{@@chapter} line, and then by indexing lines.@refill
../texinfo/texinfo.txi(,4646) 
../texinfo/texinfo.txi(,4647) @example
../texinfo/texinfo.txi(,4648) @group
../texinfo/texinfo.txi(,4649) @@node    Ending a File, Structuring, Beginning a File, Top
../texinfo/texinfo.txi(,4650) @@comment node-name,     next,        previous,         up
../texinfo/texinfo.txi(,4651) @@chapter Ending a Texinfo File
../texinfo/texinfo.txi(,4652) @@cindex Ending a Texinfo file
../texinfo/texinfo.txi(,4653) @@cindex Texinfo file ending
../texinfo/texinfo.txi(,4654) @@cindex File ending
../texinfo/texinfo.txi(,4655) @end group
../texinfo/texinfo.txi(,4656) @end example
../texinfo/texinfo.txi(,4657) 
../texinfo/texinfo.txi(,4658) 
../texinfo/texinfo.txi(,4659) @node node
../texinfo/texinfo.txi(,4660) @section The @code{@@node} Command
../texinfo/texinfo.txi(,4661) 
../texinfo/texinfo.txi(,4662) @cindex Node, defined
../texinfo/texinfo.txi(,4663) @findex node
../texinfo/texinfo.txi(,4664) 
../texinfo/texinfo.txi(,4665) A @dfn{node} is a segment of text that begins at an @code{@@node}
../texinfo/texinfo.txi(,4666) command and continues until the next @code{@@node} command.  The
../texinfo/texinfo.txi(,4667) definition of node is different from that for chapter or section.  A
../texinfo/texinfo.txi(,4668) chapter may contain sections and a section may contain subsections;
../texinfo/texinfo.txi(,4669) but a node cannot contain subnodes; the text of a node continues only
../texinfo/texinfo.txi(,4670) until the next @code{@@node} command in the file.  A node usually
../texinfo/texinfo.txi(,4671) contains only one chapter structuring command, the one that follows
../texinfo/texinfo.txi(,4672) the @code{@@node} line.  On the other hand, in printed output nodes
../texinfo/texinfo.txi(,4673) are used only for cross references, so a chapter or section may
../texinfo/texinfo.txi(,4674) contain any number of nodes.  Indeed, a chapter usually contains
../texinfo/texinfo.txi(,4675) several nodes, one for each section, subsection, and
../texinfo/texinfo.txi(,4676) subsubsection.@refill
../texinfo/texinfo.txi(,4677) 
../texinfo/texinfo.txi(,4678) To create a node, write an @code{@@node} command at the beginning of a
../texinfo/texinfo.txi(,4679) line, and follow it with up to four arguments, separated by commas, on
../texinfo/texinfo.txi(,4680) the rest of the same line.  The first argument is required; it is the
../texinfo/texinfo.txi(,4681) name of this node.  The subsequent arguments are the names of the
../texinfo/texinfo.txi(,4682) `Next', `Previous', and `Up' pointers, in that order, and may be omitted
../texinfo/texinfo.txi(,4683) if your Texinfo document is hierarchically organized (@pxref{makeinfo
../texinfo/texinfo.txi(,4684) Pointer Creation}).
../texinfo/texinfo.txi(,4685) 
../texinfo/texinfo.txi(,4686) You may insert spaces before each name if you wish; the spaces are
../texinfo/texinfo.txi(,4687) ignored.  You must write the name of the node and the names of the
../texinfo/texinfo.txi(,4688) `Next', `Previous', and `Up' pointers all on the same line.  Otherwise,
../texinfo/texinfo.txi(,4689) the formatters fail.  (@inforef{Top, info, info}, for more information
../texinfo/texinfo.txi(,4690) about nodes in Info.)
../texinfo/texinfo.txi(,4691) 
../texinfo/texinfo.txi(,4692) Usually, you write one of the chapter-structuring command lines
../texinfo/texinfo.txi(,4693) immediately after an @code{@@node} line---for example, an
../texinfo/texinfo.txi(,4694) @code{@@section} or @code{@@subsection} line.  (@xref{Structuring
../texinfo/texinfo.txi(,4695) Command Types}.)
../texinfo/texinfo.txi(,4696) 
../texinfo/texinfo.txi(,4697) @quotation
../texinfo/texinfo.txi(,4698) @strong{Please note:} The GNU Emacs Texinfo mode updating commands work
../texinfo/texinfo.txi(,4699) only with Texinfo files in which @code{@@node} lines are followed by chapter
../texinfo/texinfo.txi(,4700) structuring lines.  @xref{Updating Requirements}.@refill
../texinfo/texinfo.txi(,4701) @end quotation
../texinfo/texinfo.txi(,4702) 
../texinfo/texinfo.txi(,4703) @TeX{} uses @code{@@node} lines to identify the names to use for cross
../texinfo/texinfo.txi(,4704) references.  For this reason, you must write @code{@@node} lines in a
../texinfo/texinfo.txi(,4705) Texinfo file that you intend to format for printing, even if you do not
../texinfo/texinfo.txi(,4706) intend to format it for Info.  (Cross references, such as the one at the
../texinfo/texinfo.txi(,4707) end of this sentence, are made with @code{@@xref} and related commands;
../texinfo/texinfo.txi(,4708) see @ref{Cross References}.)@refill
../texinfo/texinfo.txi(,4709) 
../texinfo/texinfo.txi(,4710) @menu
../texinfo/texinfo.txi(,4711) * Node Names::                  How to choose node and pointer names.
../texinfo/texinfo.txi(,4712) * Writing a Node::              How to write an @code{@@node} line.
../texinfo/texinfo.txi(,4713) * Node Line Tips::              Keep names short.
../texinfo/texinfo.txi(,4714) * Node Line Requirements::      Keep names unique, without @@-commands.
../texinfo/texinfo.txi(,4715) * First Node::                  How to write a `Top' node.
../texinfo/texinfo.txi(,4716) * makeinfo top command::        How to use the @code{@@top} command.
../texinfo/texinfo.txi(,4717) @end menu
../texinfo/texinfo.txi(,4718) 
../texinfo/texinfo.txi(,4719) 
../texinfo/texinfo.txi(,4720) @node Node Names
../texinfo/texinfo.txi(,4721) @subsection Choosing Node and Pointer Names
../texinfo/texinfo.txi(,4722) 
../texinfo/texinfo.txi(,4723) @cindex Node names, choosing
../texinfo/texinfo.txi(,4724) The name of a node identifies the node.  The pointers enable
../texinfo/texinfo.txi(,4725) you to reach other nodes and consist of the names of those nodes.@refill
../texinfo/texinfo.txi(,4726) 
../texinfo/texinfo.txi(,4727) Normally, a node's `Up' pointer contains the name of the node whose menu
../texinfo/texinfo.txi(,4728) mentions that node.  The node's `Next' pointer contains the name of the
../texinfo/texinfo.txi(,4729) node that follows that node in that menu and its `Previous' pointer
../texinfo/texinfo.txi(,4730) contains the name of the node that precedes it in that menu.  When a
../texinfo/texinfo.txi(,4731) node's `Previous' node is the same as its `Up' node, both node pointers
../texinfo/texinfo.txi(,4732) name the same node.@refill
../texinfo/texinfo.txi(,4733) 
../texinfo/texinfo.txi(,4734) Usually, the first node of a Texinfo file is the `Top' node, and its
../texinfo/texinfo.txi(,4735) `Up' and `Previous' pointers point to the @file{dir} file, which
../texinfo/texinfo.txi(,4736) contains the main menu for all of Info.@refill
../texinfo/texinfo.txi(,4737) 
../texinfo/texinfo.txi(,4738) The `Top' node itself contains the main or master menu for the manual.
../texinfo/texinfo.txi(,4739) Also, it is helpful to include a brief description of the manual in the
../texinfo/texinfo.txi(,4740) `Top' node.  @xref{First Node}, for information on how to write the
../texinfo/texinfo.txi(,4741) first node of a Texinfo file.@refill
../texinfo/texinfo.txi(,4742) 
../texinfo/texinfo.txi(,4743) Even when you explicitly specify all pointers, that does not mean you
../texinfo/texinfo.txi(,4744) can write the nodes in the Texinfo source file in an arbitrary order!
../texinfo/texinfo.txi(,4745) Because @TeX{} processes the file sequentially, irrespective of node
../texinfo/texinfo.txi(,4746) pointers, you must write the nodes in the order you wish them to appear
../texinfo/texinfo.txi(,4747) in the printed output.
../texinfo/texinfo.txi(,4748) 
../texinfo/texinfo.txi(,4749) 
../texinfo/texinfo.txi(,4750) @node Writing a Node
../texinfo/texinfo.txi(,4751) @subsection How to Write an @code{@@node} Line
../texinfo/texinfo.txi(,4752) @cindex Writing an @code{@@node} line
../texinfo/texinfo.txi(,4753) @cindex @code{@@node} line writing
../texinfo/texinfo.txi(,4754) @cindex Node line writing
../texinfo/texinfo.txi(,4755) 
../texinfo/texinfo.txi(,4756) The easiest way to write an @code{@@node} line is to write @code{@@node}
../texinfo/texinfo.txi(,4757) at the beginning of a line and then the name of the node, like
../texinfo/texinfo.txi(,4758) this:@refill
../texinfo/texinfo.txi(,4759) 
../texinfo/texinfo.txi(,4760) @example
../texinfo/texinfo.txi(,4761) @@node @var{node-name}
../texinfo/texinfo.txi(,4762) @end example
../texinfo/texinfo.txi(,4763) 
../texinfo/texinfo.txi(,4764) If you are using GNU Emacs, you can use the update node commands
../texinfo/texinfo.txi(,4765) provided by Texinfo mode to insert the names of the pointers; or you
../texinfo/texinfo.txi(,4766) can leave the pointers out of the Texinfo file and let @code{makeinfo}
../texinfo/texinfo.txi(,4767) insert node pointers into the Info file it creates.  (@xref{Texinfo
../texinfo/texinfo.txi(,4768) Mode}, and @ref{makeinfo Pointer Creation}.)@refill
../texinfo/texinfo.txi(,4769) 
../texinfo/texinfo.txi(,4770) Alternatively, you can insert the `Next', `Previous', and `Up'
../texinfo/texinfo.txi(,4771) pointers yourself.  If you do this, you may find it helpful to use the
../texinfo/texinfo.txi(,4772) Texinfo mode keyboard command @kbd{C-c C-c n}.  This command inserts
../texinfo/texinfo.txi(,4773) @samp{@@node} and a comment line listing the names of the pointers in
../texinfo/texinfo.txi(,4774) their proper order.  The comment line helps you keep track of which
../texinfo/texinfo.txi(,4775) arguments are for which pointers.  This comment line is especially useful
../texinfo/texinfo.txi(,4776) if you are not familiar with Texinfo.@refill
../texinfo/texinfo.txi(,4777) 
../texinfo/texinfo.txi(,4778) The template for a fully-written-out node line with `Next', `Previous',
../texinfo/texinfo.txi(,4779) and `Up' pointers looks like this:@refill
../texinfo/texinfo.txi(,4780) 
../texinfo/texinfo.txi(,4781) @example
../texinfo/texinfo.txi(,4782) @@node @var{node-name}, @var{next}, @var{previous}, @var{up}
../texinfo/texinfo.txi(,4783) @end example
../texinfo/texinfo.txi(,4784) 
../texinfo/texinfo.txi(,4785) If you wish, you can ignore @code{@@node} lines altogether in your first
../texinfo/texinfo.txi(,4786) draft and then use the @code{texinfo-insert-node-lines} command to
../texinfo/texinfo.txi(,4787) create @code{@@node} lines for you.  However, we do not recommend this
../texinfo/texinfo.txi(,4788) practice.  It is better to name the node itself at the same time that
../texinfo/texinfo.txi(,4789) you write a segment so you can easily make cross references.  A large
../texinfo/texinfo.txi(,4790) number of cross references are an especially important feature of a good
../texinfo/texinfo.txi(,4791) Info file.
../texinfo/texinfo.txi(,4792) 
../texinfo/texinfo.txi(,4793) After you have inserted an @code{@@node} line, you should immediately
../texinfo/texinfo.txi(,4794) write an @@-command for the chapter or section and insert its name.
../texinfo/texinfo.txi(,4795) Next (and this is important!), put in several index entries.  Usually,
../texinfo/texinfo.txi(,4796) you will find at least two and often as many as four or five ways of
../texinfo/texinfo.txi(,4797) referring to the node in the index.  Use them all.  This will make it
../texinfo/texinfo.txi(,4798) much easier for people to find the node.
../texinfo/texinfo.txi(,4799) 
../texinfo/texinfo.txi(,4800) 
../texinfo/texinfo.txi(,4801) @node Node Line Tips
../texinfo/texinfo.txi(,4802) @subsection @code{@@node} Line Tips
../texinfo/texinfo.txi(,4803) 
../texinfo/texinfo.txi(,4804) Here are three suggestions:
../texinfo/texinfo.txi(,4805) 
../texinfo/texinfo.txi(,4806) @itemize @bullet
../texinfo/texinfo.txi(,4807) @item
../texinfo/texinfo.txi(,4808) Try to pick node names that are informative but short.@refill
../texinfo/texinfo.txi(,4809) 
../texinfo/texinfo.txi(,4810) In the Info file, the file name, node name, and pointer names are all
../texinfo/texinfo.txi(,4811) inserted on one line, which may run into the right edge of the window.
../texinfo/texinfo.txi(,4812) (This does not cause a problem with Info, but is ugly.)@refill
../texinfo/texinfo.txi(,4813) 
../texinfo/texinfo.txi(,4814) @item
../texinfo/texinfo.txi(,4815) Try to pick node names that differ from each other near the beginnings
../texinfo/texinfo.txi(,4816) of their names.  This way, it is easy to use automatic name completion in
../texinfo/texinfo.txi(,4817) Info.@refill
../texinfo/texinfo.txi(,4818) 
../texinfo/texinfo.txi(,4819) @item
../texinfo/texinfo.txi(,4820) By convention, node names are capitalized just as they would be for
../texinfo/texinfo.txi(,4821) section or chapter titles---initial and significant words are
../texinfo/texinfo.txi(,4822) capitalized; others are not.@refill
../texinfo/texinfo.txi(,4823) @end itemize
../texinfo/texinfo.txi(,4824) 
../texinfo/texinfo.txi(,4825) 
../texinfo/texinfo.txi(,4826) @node Node Line Requirements, First Node, Node Line Tips, node
../texinfo/texinfo.txi(,4827) @subsection @code{@@node} Line Requirements
../texinfo/texinfo.txi(,4828) 
../texinfo/texinfo.txi(,4829) @cindex Node line requirements
../texinfo/texinfo.txi(,4830) @cindex Restrictions on node names
../texinfo/texinfo.txi(,4831) Here are several requirements for @code{@@node} lines:
../texinfo/texinfo.txi(,4832) 
../texinfo/texinfo.txi(,4833) @itemize @bullet
../texinfo/texinfo.txi(,4834) @cindex Unique nodename requirement
../texinfo/texinfo.txi(,4835) @cindex Node name must be unique
../texinfo/texinfo.txi(,4836) @item
../texinfo/texinfo.txi(,4837) All the node names for a single Info file must be unique.@refill
../texinfo/texinfo.txi(,4838) 
../texinfo/texinfo.txi(,4839) Duplicates confuse the Info movement commands.  This means, for
../texinfo/texinfo.txi(,4840) example, that if you end every chapter with a summary, you must name
../texinfo/texinfo.txi(,4841) each summary node differently.  You cannot just call each one
../texinfo/texinfo.txi(,4842) ``Summary''.  You may, however, duplicate the titles of chapters, sections,
../texinfo/texinfo.txi(,4843) and the like.  Thus you can end each chapter in a book with a section
../texinfo/texinfo.txi(,4844) called ``Summary'', so long as the node names for those sections are all
../texinfo/texinfo.txi(,4845) different.@refill
../texinfo/texinfo.txi(,4846) 
../texinfo/texinfo.txi(,4847) @item
../texinfo/texinfo.txi(,4848) A pointer name must be the name of a node.@refill
../texinfo/texinfo.txi(,4849) 
../texinfo/texinfo.txi(,4850) The node to which a pointer points may come before or after the
../texinfo/texinfo.txi(,4851) node containing the pointer.
../texinfo/texinfo.txi(,4852) 
../texinfo/texinfo.txi(,4853) @cindex @@-commands in nodename
../texinfo/texinfo.txi(,4854) @cindex Node name, should not contain @@-commands
../texinfo/texinfo.txi(,4855) @item
../texinfo/texinfo.txi(,4856) @w{@@-commands} used in node names generally confuse Info, so you
../texinfo/texinfo.txi(,4857) should avoid them.  This includes punctuation characters that are
../texinfo/texinfo.txi(,4858) escaped with a @samp{@@}, such as @code{@@} and @code{@{}.  For a few
../texinfo/texinfo.txi(,4859) rare cases when this is useful, Texinfo has limited support for using
../texinfo/texinfo.txi(,4860) @w{@@-commands} in node names; see @ref{Pointer Validation}.
../texinfo/texinfo.txi(,4861) 
../texinfo/texinfo.txi(,4862) @need 750
../texinfo/texinfo.txi(,4863) Thus, the beginning of the section called @code{@@chapter} looks like
../texinfo/texinfo.txi(,4864) this:@refill
../texinfo/texinfo.txi(,4865) 
../texinfo/texinfo.txi(,4866) @smallexample
../texinfo/texinfo.txi(,4867) @group
../texinfo/texinfo.txi(,4868) @@node  chapter, unnumbered & appendix, makeinfo top, Structuring
../texinfo/texinfo.txi(,4869) @@comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,4870) @@section @@code@{@@@@chapter@}
../texinfo/texinfo.txi(,4871) @@findex chapter
../texinfo/texinfo.txi(,4872) @end group
../texinfo/texinfo.txi(,4873) @end smallexample
../texinfo/texinfo.txi(,4874) 
../texinfo/texinfo.txi(,4875) @item
../texinfo/texinfo.txi(,4876) @cindex Parentheses in nodename
../texinfo/texinfo.txi(,4877) You cannot use parentheses in node names, because a node name such as
../texinfo/texinfo.txi(,4878) @samp{(foo)bar} is interpreted by the Info readers as a node
../texinfo/texinfo.txi(,4879) @samp{bar} in an Info file @file{foo}.
../texinfo/texinfo.txi(,4880) 
../texinfo/texinfo.txi(,4881) @item
../texinfo/texinfo.txi(,4882) @cindex Apostrophe in nodename
../texinfo/texinfo.txi(,4883) @cindex Colon in nodename
../texinfo/texinfo.txi(,4884) @cindex Comma in nodename
../texinfo/texinfo.txi(,4885) @cindex Period in nodename
../texinfo/texinfo.txi(,4886) @cindex Characters, invalid in node name
../texinfo/texinfo.txi(,4887) @cindex Invalid characters in node names
../texinfo/texinfo.txi(,4888) Unfortunately, you cannot use periods, commas, colons or apostrophes
../texinfo/texinfo.txi(,4889) within a node name; these confuse @TeX{} or the Info formatters.
../texinfo/texinfo.txi(,4890) 
../texinfo/texinfo.txi(,4891) @need 700
../texinfo/texinfo.txi(,4892) For example, the following is a section title:
../texinfo/texinfo.txi(,4893) 
../texinfo/texinfo.txi(,4894) @smallexample
../texinfo/texinfo.txi(,4895) @@code@{@@@@unnumberedsec@}, @@code@{@@@@appendixsec@}, @@code@{@@@@heading@}
../texinfo/texinfo.txi(,4896) @end smallexample
../texinfo/texinfo.txi(,4897) 
../texinfo/texinfo.txi(,4898) @noindent
../texinfo/texinfo.txi(,4899) The corresponding node name is:
../texinfo/texinfo.txi(,4900) 
../texinfo/texinfo.txi(,4901) @smallexample
../texinfo/texinfo.txi(,4902) unnumberedsec appendixsec heading
../texinfo/texinfo.txi(,4903) @end smallexample
../texinfo/texinfo.txi(,4904) 
../texinfo/texinfo.txi(,4905) @cindex Case in node name
../texinfo/texinfo.txi(,4906) @item
../texinfo/texinfo.txi(,4907) Case is significant.
../texinfo/texinfo.txi(,4908) @end itemize
../texinfo/texinfo.txi(,4909) 
../texinfo/texinfo.txi(,4910) 
../texinfo/texinfo.txi(,4911) @node First Node
../texinfo/texinfo.txi(,4912) @subsection The First Node
../texinfo/texinfo.txi(,4913) @cindex Top node is first
../texinfo/texinfo.txi(,4914) @cindex First node
../texinfo/texinfo.txi(,4915) 
../texinfo/texinfo.txi(,4916) The first node of a Texinfo file is the @dfn{Top} node, except in an
../texinfo/texinfo.txi(,4917) included file (@pxref{Include Files}).  The Top node should contain a
../texinfo/texinfo.txi(,4918) short summary, copying permissions, and a master menu.  @xref{The Top
../texinfo/texinfo.txi(,4919) Node}, for more information on the Top node contents and examples.
../texinfo/texinfo.txi(,4920) 
../texinfo/texinfo.txi(,4921) Here is a description of the node pointers to be used in the Top node:
../texinfo/texinfo.txi(,4922) 
../texinfo/texinfo.txi(,4923) @itemize @bullet
../texinfo/texinfo.txi(,4924) 
../texinfo/texinfo.txi(,4925) @item
../texinfo/texinfo.txi(,4926) @cindex Up node of Top node
../texinfo/texinfo.txi(,4927) @cindex (dir) as Up node of Top node
../texinfo/texinfo.txi(,4928) The Top node (which must be named @samp{top} or @samp{Top}) should have
../texinfo/texinfo.txi(,4929) as its `Up' node the name of a node in another file, where there is a
../texinfo/texinfo.txi(,4930) menu that leads to this file.  Specify the file name in parentheses.
../texinfo/texinfo.txi(,4931) 
../texinfo/texinfo.txi(,4932) Usually, all Info files are installed in the same Info directory tree;
../texinfo/texinfo.txi(,4933) in this case, use @samp{(dir)} as the parent of the Top node; this is
../texinfo/texinfo.txi(,4934) short for @samp{(dir)top}, and specifies the Top node in the @file{dir}
../texinfo/texinfo.txi(,4935) file, which contains the main menu for the Info system as a whole. 
../texinfo/texinfo.txi(,4936) 
../texinfo/texinfo.txi(,4937) @item
../texinfo/texinfo.txi(,4938) @cindex Previous node of Top node
../texinfo/texinfo.txi(,4939) On the other hand, do not define the `Previous' node of the Top node to
../texinfo/texinfo.txi(,4940) be @samp{(dir)}, as it causes confusing behavior for users: if you are
../texinfo/texinfo.txi(,4941) in the Top node and hits @key{DEL} to go backwards, you wind up in the
../texinfo/texinfo.txi(,4942) middle of the some other entry in the @file{dir} file, which has nothing
../texinfo/texinfo.txi(,4943) to do with what you were reading.
../texinfo/texinfo.txi(,4944) 
../texinfo/texinfo.txi(,4945) @item
../texinfo/texinfo.txi(,4946) @cindex Next node of Top node
../texinfo/texinfo.txi(,4947) The `Next' node of the Top node should be the first chapter in your
../texinfo/texinfo.txi(,4948) document.
../texinfo/texinfo.txi(,4949) 
../texinfo/texinfo.txi(,4950) @end itemize
../texinfo/texinfo.txi(,4951) 
../texinfo/texinfo.txi(,4952) @xref{Installing an Info File}, for more information about installing
../texinfo/texinfo.txi(,4953) an Info file in the @file{info} directory.
../texinfo/texinfo.txi(,4954) 
../texinfo/texinfo.txi(,4955) For concreteness, here is an example with explicit pointers (which you
../texinfo/texinfo.txi(,4956) can maintain automatically with the texinfo mode commands):
../texinfo/texinfo.txi(,4957) 
../texinfo/texinfo.txi(,4958) Or you can leave the pointers off entirely and let the tools implicitly
../texinfo/texinfo.txi(,4959) define them.  This is recommended.  Thus:
../texinfo/texinfo.txi(,4960) 
../texinfo/texinfo.txi(,4961) @example
../texinfo/texinfo.txi(,4962) @@node Top
../texinfo/texinfo.txi(,4963) @end example
../texinfo/texinfo.txi(,4964) 
../texinfo/texinfo.txi(,4965) 
../texinfo/texinfo.txi(,4966) @node makeinfo top command
../texinfo/texinfo.txi(,4967) @subsection The @code{@@top} Sectioning Command
../texinfo/texinfo.txi(,4968) @findex top @r{(@@-command)}
../texinfo/texinfo.txi(,4969) 
../texinfo/texinfo.txi(,4970) A special sectioning command, @code{@@top} should be used with the
../texinfo/texinfo.txi(,4971) @code{@@node Top} line.  The @code{@@top} sectioning command tells
../texinfo/texinfo.txi(,4972) @code{makeinfo} that it marks the `Top' node in the file.  It provides
../texinfo/texinfo.txi(,4973) the information that @code{makeinfo} needs to insert node pointers
../texinfo/texinfo.txi(,4974) automatically.  Write the @code{@@top} command at the beginning of the
../texinfo/texinfo.txi(,4975) line immediately following the @code{@@node Top} line.  Write the title
../texinfo/texinfo.txi(,4976) on the remaining part of the same line as the @code{@@top} command.
../texinfo/texinfo.txi(,4977) 
../texinfo/texinfo.txi(,4978) In Info, the @code{@@top} sectioning command causes the title to appear
../texinfo/texinfo.txi(,4979) on a line by itself, with a line of asterisks inserted underneath, as
../texinfo/texinfo.txi(,4980) other sectioning commands do.
../texinfo/texinfo.txi(,4981) 
../texinfo/texinfo.txi(,4982) In @TeX{} and @code{texinfo-format-buffer}, the @code{@@top}
../texinfo/texinfo.txi(,4983) sectioning command is merely a synonym for @code{@@unnumbered}.
../texinfo/texinfo.txi(,4984) Neither of these formatters require an @code{@@top} command, and do
../texinfo/texinfo.txi(,4985) nothing special with it.  You can use @code{@@chapter} or
../texinfo/texinfo.txi(,4986) @code{@@unnumbered} after the @code{@@node Top} line when you use
../texinfo/texinfo.txi(,4987) these formatters.  Also, you can use @code{@@chapter} or
../texinfo/texinfo.txi(,4988) @code{@@unnumbered} when you use the Texinfo updating commands to
../texinfo/texinfo.txi(,4989) create or update pointers and menus.
../texinfo/texinfo.txi(,4990) 
../texinfo/texinfo.txi(,4991) Thus, in practice, a Top node starts like this:
../texinfo/texinfo.txi(,4992) 
../texinfo/texinfo.txi(,4993) @example
../texinfo/texinfo.txi(,4994) @@node Top
../texinfo/texinfo.txi(,4995) @@top Your Manual Title
../texinfo/texinfo.txi(,4996) @end example
../texinfo/texinfo.txi(,4997) 
../texinfo/texinfo.txi(,4998) 
../texinfo/texinfo.txi(,4999) @node makeinfo Pointer Creation
../texinfo/texinfo.txi(,5000) @section Creating Pointers with @code{makeinfo}
../texinfo/texinfo.txi(,5001) @cindex Creating pointers with @code{makeinfo}
../texinfo/texinfo.txi(,5002) @cindex Pointer creation with @code{makeinfo}
../texinfo/texinfo.txi(,5003) @cindex Automatic pointer creation with @code{makeinfo}
../texinfo/texinfo.txi(,5004) 
../texinfo/texinfo.txi(,5005) The @code{makeinfo} program has a feature for automatically defining
../texinfo/texinfo.txi(,5006) node pointers for a hierarchically organized file.
../texinfo/texinfo.txi(,5007) 
../texinfo/texinfo.txi(,5008) When you take advantage of this feature, you do not need to write the
../texinfo/texinfo.txi(,5009) `Next', `Previous', and `Up' pointers after the name of a node.
../texinfo/texinfo.txi(,5010) However, you must write a sectioning command, such as @code{@@chapter}
../texinfo/texinfo.txi(,5011) or @code{@@section}, on the line immediately following each truncated
../texinfo/texinfo.txi(,5012) @code{@@node} line (except that comment lines may intervene).
../texinfo/texinfo.txi(,5013) 
../texinfo/texinfo.txi(,5014) In addition, you must follow the `Top' @code{@@node} line with a line
../texinfo/texinfo.txi(,5015) beginning with @code{@@top} to mark the `Top' node in the
../texinfo/texinfo.txi(,5016) file.  @xref{makeinfo top, , @code{@@top}}.
../texinfo/texinfo.txi(,5017) 
../texinfo/texinfo.txi(,5018) Finally, you must write the name of each node (except for the `Top'
../texinfo/texinfo.txi(,5019) node) in a menu that is one or more hierarchical levels above the
../texinfo/texinfo.txi(,5020) node's hierarchical level.
../texinfo/texinfo.txi(,5021) 
../texinfo/texinfo.txi(,5022) This node pointer insertion feature in @code{makeinfo} relieves you from
../texinfo/texinfo.txi(,5023) the need to update menus and pointers manually or with Texinfo mode
../texinfo/texinfo.txi(,5024) commands.  (@xref{Updating Nodes and Menus}.)
../texinfo/texinfo.txi(,5025) 
../texinfo/texinfo.txi(,5026) In most cases, you will want to take advantage of this feature and not
../texinfo/texinfo.txi(,5027) redundantly specify node pointers.  However, Texinfo documents are not
../texinfo/texinfo.txi(,5028) required to be organized hierarchically or in fact contain sectioning
../texinfo/texinfo.txi(,5029) commands at all.  For example, if you never intend the document to be
../texinfo/texinfo.txi(,5030) printed.  In those cases, you will need to explicitly specify the pointers.
../texinfo/texinfo.txi(,5031) 
../texinfo/texinfo.txi(,5032) 
../texinfo/texinfo.txi(,5033) @node anchor
../texinfo/texinfo.txi(,5034) @section @code{@@anchor}: Defining Arbitrary Cross-reference Targets
../texinfo/texinfo.txi(,5035) 
../texinfo/texinfo.txi(,5036) @findex anchor
../texinfo/texinfo.txi(,5037) @cindex Anchors
../texinfo/texinfo.txi(,5038) @cindex Cross-reference targets, arbitrary
../texinfo/texinfo.txi(,5039) @cindex Targets for cross-references, arbitrary
../texinfo/texinfo.txi(,5040) 
../texinfo/texinfo.txi(,5041) An @dfn{anchor} is a position in your document, labeled so that
../texinfo/texinfo.txi(,5042) cross-references can refer to it, just as they can to nodes.  You create
../texinfo/texinfo.txi(,5043) an anchor with the @code{@@anchor} command, and give the label as a
../texinfo/texinfo.txi(,5044) normal brace-delimited argument.  For example:
../texinfo/texinfo.txi(,5045) 
../texinfo/texinfo.txi(,5046) @example
../texinfo/texinfo.txi(,5047) This marks the @@anchor@{x-spot@}spot.
../texinfo/texinfo.txi(,5048) @dots{}
../texinfo/texinfo.txi(,5049) @@xref@{x-spot,,the spot@}.
../texinfo/texinfo.txi(,5050) @end example
../texinfo/texinfo.txi(,5051) 
../texinfo/texinfo.txi(,5052) @noindent produces:
../texinfo/texinfo.txi(,5053) 
../texinfo/texinfo.txi(,5054) @example
../texinfo/texinfo.txi(,5055) This marks the spot.
../texinfo/texinfo.txi(,5056) @dots{}
../texinfo/texinfo.txi(,5057) See [the spot], page 1.
../texinfo/texinfo.txi(,5058) @end example
../texinfo/texinfo.txi(,5059) 
../texinfo/texinfo.txi(,5060) As you can see, the @code{@@anchor} command itself produces no output.
../texinfo/texinfo.txi(,5061) This example defines an anchor `x-spot' just before the word `spot'.
../texinfo/texinfo.txi(,5062) You can refer to it later with an @code{@@xref} or other cross-reference
../texinfo/texinfo.txi(,5063) command, as shown.  @xref{Cross References}, for details on the
../texinfo/texinfo.txi(,5064) cross-reference commands.
../texinfo/texinfo.txi(,5065) 
../texinfo/texinfo.txi(,5066) It is best to put @code{@@anchor} commands just before the position you
../texinfo/texinfo.txi(,5067) wish to refer to; that way, the reader's eye is led on to the correct
../texinfo/texinfo.txi(,5068) text when they jump to the anchor.  You can put the @code{@@anchor}
../texinfo/texinfo.txi(,5069) command on a line by itself if that helps readability of the source.
../texinfo/texinfo.txi(,5070) Spaces are always ignored after @code{@@anchor}.
../texinfo/texinfo.txi(,5071) 
../texinfo/texinfo.txi(,5072) Anchor names and node names may not conflict.  Anchors and nodes are
../texinfo/texinfo.txi(,5073) given similar treatment in some ways; for example, the @code{goto-node}
../texinfo/texinfo.txi(,5074) command in standalone Info takes either an anchor name or a node name as
../texinfo/texinfo.txi(,5075) an argument.  (@xref{goto-node,,,info-stnd,GNU Info}.)
../texinfo/texinfo.txi(,5076) 
../texinfo/texinfo.txi(,5077) 
../texinfo/texinfo.txi(,5078) @node Menus
../texinfo/texinfo.txi(,5079) @chapter Menus
../texinfo/texinfo.txi(,5080) @cindex Menus
../texinfo/texinfo.txi(,5081) @findex menu
../texinfo/texinfo.txi(,5082) 
../texinfo/texinfo.txi(,5083) @dfn{Menus} contain pointers to subordinate nodes.@footnote{Menus can
../texinfo/texinfo.txi(,5084) carry you to any node, regardless of the hierarchical structure; even to
../texinfo/texinfo.txi(,5085) nodes in a different Info file.  However, the GNU Emacs Texinfo mode
../texinfo/texinfo.txi(,5086) updating commands work only to create menus of subordinate nodes.
../texinfo/texinfo.txi(,5087) Conventionally, cross references are used to refer to other nodes.} In
../texinfo/texinfo.txi(,5088) Info, you use menus to go to such nodes.  Menus have no effect in
../texinfo/texinfo.txi(,5089) printed manuals and do not appear in them.
../texinfo/texinfo.txi(,5090) 
../texinfo/texinfo.txi(,5091) By convention, a menu is put at the end of a node since a reader who
../texinfo/texinfo.txi(,5092) uses the menu may not see text that follows it.  Furthermore, a node
../texinfo/texinfo.txi(,5093) that has a menu should not contain much text. If you have a lot of text
../texinfo/texinfo.txi(,5094) and a menu, move most of the text into a new subnode---all but a few
../texinfo/texinfo.txi(,5095) lines.  Otherwise, a reader with a terminal that displays only a few
../texinfo/texinfo.txi(,5096) lines may miss the menu and its associated text.  As a practical matter,
../texinfo/texinfo.txi(,5097) you should locate a menu within 20 lines of the beginning of the
../texinfo/texinfo.txi(,5098) node.
../texinfo/texinfo.txi(,5099) 
../texinfo/texinfo.txi(,5100) @menu
../texinfo/texinfo.txi(,5101) * Menu Location::               Put a menu in a short node.
../texinfo/texinfo.txi(,5102) * Writing a Menu::              What is a menu?
../texinfo/texinfo.txi(,5103) * Menu Parts::                  A menu entry has three parts.
../texinfo/texinfo.txi(,5104) * Less Cluttered Menu Entry::   Two part menu entry.
../texinfo/texinfo.txi(,5105) * Menu Example::                Two and three part menu entries.
../texinfo/texinfo.txi(,5106) * Other Info Files::            How to refer to a different Info file.
../texinfo/texinfo.txi(,5107) @end menu
../texinfo/texinfo.txi(,5108) 
../texinfo/texinfo.txi(,5109) 
../texinfo/texinfo.txi(,5110) @node Menu Location, Writing a Menu, Menus, Menus
../texinfo/texinfo.txi(,5112) @heading Menus Need Short Nodes
../texinfo/texinfo.txi(,5114) @cindex Menu location
../texinfo/texinfo.txi(,5115) @cindex Location of menus
../texinfo/texinfo.txi(,5116) @cindex Nodes for menus are short
../texinfo/texinfo.txi(,5117) @cindex Short nodes for menus
../texinfo/texinfo.txi(,5118) 
../texinfo/texinfo.txi(,5119) The short text before a menu may look awkward in a printed manual.  To
../texinfo/texinfo.txi(,5120) avoid this, you can write a menu near the beginning of its node and
../texinfo/texinfo.txi(,5121) follow the menu by an @code{@@node} line, and then an @code{@@heading}
../texinfo/texinfo.txi(,5122) line located within @code{@@ifinfo} and @code{@@end ifinfo}.  This way,
../texinfo/texinfo.txi(,5123) the menu, @code{@@node} line, and title appear only in the Info file,
../texinfo/texinfo.txi(,5124) not the printed document.
../texinfo/texinfo.txi(,5125) 
../texinfo/texinfo.txi(,5126) For example, the preceding two paragraphs follow an Info-only menu,
../texinfo/texinfo.txi(,5127) @code{@@node} line, and heading, and look like this:
../texinfo/texinfo.txi(,5128) 
../texinfo/texinfo.txi(,5129) @example
../texinfo/texinfo.txi(,5130) @group
../texinfo/texinfo.txi(,5131) @@menu
../texinfo/texinfo.txi(,5132) * Menu Location::             Put a menu in a short node.
../texinfo/texinfo.txi(,5133) * Writing a Menu::            What is a menu?
../texinfo/texinfo.txi(,5134) * Menu Parts::                A menu entry has three parts.
../texinfo/texinfo.txi(,5135) * Less Cluttered Menu Entry:: Two part menu entry.
../texinfo/texinfo.txi(,5136) * Menu Example::              Two and three part entries.
../texinfo/texinfo.txi(,5137) * Other Info Files::          How to refer to a different
../texinfo/texinfo.txi(,5138)                                 Info file.
../texinfo/texinfo.txi(,5139) @@end menu
../texinfo/texinfo.txi(,5140) 
../texinfo/texinfo.txi(,5141) @@node Menu Location, Writing a Menu, , Menus
../texinfo/texinfo.txi(,5142) @@ifinfo
../texinfo/texinfo.txi(,5143) @@heading Menus Need Short Nodes
../texinfo/texinfo.txi(,5144) @@end ifinfo
../texinfo/texinfo.txi(,5145) @end group
../texinfo/texinfo.txi(,5146) @end example
../texinfo/texinfo.txi(,5147) 
../texinfo/texinfo.txi(,5148) The Texinfo file for this document contains a number of
../texinfo/texinfo.txi(,5149) examples of this procedure; one is at the beginning of this chapter.
../texinfo/texinfo.txi(,5150) 
../texinfo/texinfo.txi(,5151) 
../texinfo/texinfo.txi(,5152) @node Writing a Menu, Menu Parts, Menu Location, Menus
../texinfo/texinfo.txi(,5153) @section Writing a Menu
../texinfo/texinfo.txi(,5154) @cindex Writing a menu
../texinfo/texinfo.txi(,5155) @cindex Menu writing
../texinfo/texinfo.txi(,5156) 
../texinfo/texinfo.txi(,5157) A menu consists of an @code{@@menu} command on a line by
../texinfo/texinfo.txi(,5158) itself followed by menu entry lines or menu comment lines
../texinfo/texinfo.txi(,5159) and then by an @code{@@end menu} command on a line by
../texinfo/texinfo.txi(,5160) itself.@refill
../texinfo/texinfo.txi(,5161) 
../texinfo/texinfo.txi(,5162) A menu looks like this:@refill
../texinfo/texinfo.txi(,5163) 
../texinfo/texinfo.txi(,5164) @example
../texinfo/texinfo.txi(,5165) @group
../texinfo/texinfo.txi(,5166) @@menu
../texinfo/texinfo.txi(,5167) Larger Units of Text
../texinfo/texinfo.txi(,5168) 
../texinfo/texinfo.txi(,5169) * Files::                       All about handling files.
../texinfo/texinfo.txi(,5170) * Multiples: Buffers.           Multiple buffers; editing
../texinfo/texinfo.txi(,5171)                                   several files at once.
../texinfo/texinfo.txi(,5172) @@end menu
../texinfo/texinfo.txi(,5173) @end group
../texinfo/texinfo.txi(,5174) @end example
../texinfo/texinfo.txi(,5175) 
../texinfo/texinfo.txi(,5176) In a menu, every line that begins with an @w{@samp{* }} is a @dfn{menu
../texinfo/texinfo.txi(,5177) entry}.  (Note the space after the asterisk.)  A line that does not
../texinfo/texinfo.txi(,5178) start with an @w{@samp{* }} may also appear in a menu.  Such a line is
../texinfo/texinfo.txi(,5179) not a menu entry but is a menu comment line that appears in the Info
../texinfo/texinfo.txi(,5180) file.  In the example above, the line @samp{Larger Units of Text} is a
../texinfo/texinfo.txi(,5181) menu comment line; the two lines starting with @w{@samp{* }} are menu
../texinfo/texinfo.txi(,5182) @cindex Spaces, in menus
../texinfo/texinfo.txi(,5183) entries.  Space characters in a menu are preserved as-is; this allows
../texinfo/texinfo.txi(,5184) you to format the menu as you wish.
../texinfo/texinfo.txi(,5185) 
../texinfo/texinfo.txi(,5186) 
../texinfo/texinfo.txi(,5187) @node Menu Parts, Less Cluttered Menu Entry, Writing a Menu, Menus
../texinfo/texinfo.txi(,5188) @section The Parts of a Menu
../texinfo/texinfo.txi(,5189) @cindex Parts of a menu
../texinfo/texinfo.txi(,5190) @cindex Menu parts
../texinfo/texinfo.txi(,5191) @cindex @code{@@menu} parts
../texinfo/texinfo.txi(,5192) 
../texinfo/texinfo.txi(,5193) A menu entry has three parts, only the second of which is required:
../texinfo/texinfo.txi(,5194) 
../texinfo/texinfo.txi(,5195) @enumerate
../texinfo/texinfo.txi(,5196) @item
../texinfo/texinfo.txi(,5197) The menu entry name (optional).
../texinfo/texinfo.txi(,5198) 
../texinfo/texinfo.txi(,5199) @item
../texinfo/texinfo.txi(,5200) The name of the node (required).
../texinfo/texinfo.txi(,5201) 
../texinfo/texinfo.txi(,5202) @item
../texinfo/texinfo.txi(,5203) A description of the item (optional).
../texinfo/texinfo.txi(,5204) @end enumerate
../texinfo/texinfo.txi(,5205) 
../texinfo/texinfo.txi(,5206) The template for a menu entry looks like this:@refill
../texinfo/texinfo.txi(,5207) 
../texinfo/texinfo.txi(,5208) @example
../texinfo/texinfo.txi(,5209) * @var{menu-entry-name}: @var{node-name}.   @var{description}
../texinfo/texinfo.txi(,5210) @end example
../texinfo/texinfo.txi(,5211) 
../texinfo/texinfo.txi(,5212) Follow the menu entry name with a single colon and follow the node name
../texinfo/texinfo.txi(,5213) with tab, comma, period, or newline.@refill
../texinfo/texinfo.txi(,5214) 
../texinfo/texinfo.txi(,5215) In Info, a user selects a node with the @kbd{m} (@code{Info-menu})
../texinfo/texinfo.txi(,5216) command.  The menu entry name is what the user types after the @kbd{m}
../texinfo/texinfo.txi(,5217) command.@refill
../texinfo/texinfo.txi(,5218) 
../texinfo/texinfo.txi(,5219) The third part of a menu entry is a descriptive phrase or sentence.
../texinfo/texinfo.txi(,5220) Menu entry names and node names are often short; the description
../texinfo/texinfo.txi(,5221) explains to the reader what the node is about.  A useful description
../texinfo/texinfo.txi(,5222) complements the node name rather than repeats it.  The description,
../texinfo/texinfo.txi(,5223) which is optional, can spread over two or more lines; if it does, some
../texinfo/texinfo.txi(,5224) authors prefer to indent the second line while others prefer to align it
../texinfo/texinfo.txi(,5225) with the first (and all others).  It's up to you.
../texinfo/texinfo.txi(,5226) 
../texinfo/texinfo.txi(,5227) 
../texinfo/texinfo.txi(,5228) @node Less Cluttered Menu Entry, Menu Example, Menu Parts, Menus
../texinfo/texinfo.txi(,5229) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,5230) @section Less Cluttered Menu Entry
../texinfo/texinfo.txi(,5231) @cindex Two part menu entry
../texinfo/texinfo.txi(,5232) @cindex Double-colon menu entries
../texinfo/texinfo.txi(,5233) @cindex Menu entries with two colons
../texinfo/texinfo.txi(,5234) @cindex Less cluttered menu entry
../texinfo/texinfo.txi(,5235) @cindex Uncluttered menu entry
../texinfo/texinfo.txi(,5236) 
../texinfo/texinfo.txi(,5237) When the menu entry name and node name are the same, you can write
../texinfo/texinfo.txi(,5238) the name immediately after the asterisk and space at the beginning of
../texinfo/texinfo.txi(,5239) the line and follow the name with two colons.@refill
../texinfo/texinfo.txi(,5240) 
../texinfo/texinfo.txi(,5241) @need 800
../texinfo/texinfo.txi(,5242) For example, write
../texinfo/texinfo.txi(,5243) 
../texinfo/texinfo.txi(,5244) @example
../texinfo/texinfo.txi(,5245) * Name::                                    @var{description}
../texinfo/texinfo.txi(,5246) @end example
../texinfo/texinfo.txi(,5247) 
../texinfo/texinfo.txi(,5248) @need 800
../texinfo/texinfo.txi(,5249) @noindent
../texinfo/texinfo.txi(,5250) instead of
../texinfo/texinfo.txi(,5251) 
../texinfo/texinfo.txi(,5252) @example
../texinfo/texinfo.txi(,5253) * Name: Name.                               @var{description}
../texinfo/texinfo.txi(,5254) @end example
../texinfo/texinfo.txi(,5255) 
../texinfo/texinfo.txi(,5256) You should use the node name for the menu entry name whenever possible,
../texinfo/texinfo.txi(,5257) since it reduces visual clutter in the menu.@refill
../texinfo/texinfo.txi(,5258) 
../texinfo/texinfo.txi(,5259) @node Menu Example, Other Info Files, Less Cluttered Menu Entry, Menus
../texinfo/texinfo.txi(,5260) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,5261) @section A Menu Example
../texinfo/texinfo.txi(,5262) @cindex Menu example
../texinfo/texinfo.txi(,5263) @cindex Example menu
../texinfo/texinfo.txi(,5264) 
../texinfo/texinfo.txi(,5265) A menu looks like this in Texinfo:@refill
../texinfo/texinfo.txi(,5266) 
../texinfo/texinfo.txi(,5267) @example
../texinfo/texinfo.txi(,5268) @group
../texinfo/texinfo.txi(,5269) @@menu
../texinfo/texinfo.txi(,5270) * menu entry name: Node name.   A short description.
../texinfo/texinfo.txi(,5271) * Node name::                   This form is preferred.
../texinfo/texinfo.txi(,5272) @@end menu
../texinfo/texinfo.txi(,5273) @end group
../texinfo/texinfo.txi(,5274) @end example
../texinfo/texinfo.txi(,5275) 
../texinfo/texinfo.txi(,5276) @need 800
../texinfo/texinfo.txi(,5277) @noindent
../texinfo/texinfo.txi(,5278) This produces:
../texinfo/texinfo.txi(,5279) 
../texinfo/texinfo.txi(,5280) @example
../texinfo/texinfo.txi(,5281) @group
../texinfo/texinfo.txi(,5282) * menu:
../texinfo/texinfo.txi(,5283) 
../texinfo/texinfo.txi(,5284) * menu entry name: Node name.   A short description.
../texinfo/texinfo.txi(,5285) * Node name::                   This form is preferred.
../texinfo/texinfo.txi(,5286) @end group
../texinfo/texinfo.txi(,5287) @end example
../texinfo/texinfo.txi(,5288) 
../texinfo/texinfo.txi(,5289) @need 700
../texinfo/texinfo.txi(,5290) Here is an example as you might see it in a Texinfo file:@refill
../texinfo/texinfo.txi(,5291) 
../texinfo/texinfo.txi(,5292) @example
../texinfo/texinfo.txi(,5293) @group
../texinfo/texinfo.txi(,5294) @@menu
../texinfo/texinfo.txi(,5295) Larger Units of Text
../texinfo/texinfo.txi(,5296) 
../texinfo/texinfo.txi(,5297) * Files::                       All about handling files.
../texinfo/texinfo.txi(,5298) * Multiples: Buffers.           Multiple buffers; editing
../texinfo/texinfo.txi(,5299)                                   several files at once.
../texinfo/texinfo.txi(,5300) @@end menu
../texinfo/texinfo.txi(,5301) @end group
../texinfo/texinfo.txi(,5302) @end example
../texinfo/texinfo.txi(,5303) 
../texinfo/texinfo.txi(,5304) @need 800
../texinfo/texinfo.txi(,5305) @noindent
../texinfo/texinfo.txi(,5306) This produces:
../texinfo/texinfo.txi(,5307) 
../texinfo/texinfo.txi(,5308) @example
../texinfo/texinfo.txi(,5309) @group
../texinfo/texinfo.txi(,5310) * menu:
../texinfo/texinfo.txi(,5311) Larger Units of Text
../texinfo/texinfo.txi(,5312) 
../texinfo/texinfo.txi(,5313) * Files::                       All about handling files.
../texinfo/texinfo.txi(,5314) * Multiples: Buffers.           Multiple buffers; editing
../texinfo/texinfo.txi(,5315)                                   several files at once.
../texinfo/texinfo.txi(,5316) @end group
../texinfo/texinfo.txi(,5317) @end example
../texinfo/texinfo.txi(,5318) 
../texinfo/texinfo.txi(,5319) In this example, the menu has two entries.  @samp{Files} is both a menu
../texinfo/texinfo.txi(,5320) entry name and the name of the node referred to by that name.
../texinfo/texinfo.txi(,5321) @samp{Multiples} is the menu entry name; it refers to the node named
../texinfo/texinfo.txi(,5322) @samp{Buffers}. The line @samp{Larger Units of Text} is a comment; it
../texinfo/texinfo.txi(,5323) appears in the menu, but is not an entry.@refill
../texinfo/texinfo.txi(,5324) 
../texinfo/texinfo.txi(,5325) Since no file name is specified with either @samp{Files} or
../texinfo/texinfo.txi(,5326) @samp{Buffers}, they must be the names of nodes in the same Info file
../texinfo/texinfo.txi(,5327) (@pxref{Other Info Files, , Referring to Other Info Files}).@refill
../texinfo/texinfo.txi(,5328) 
../texinfo/texinfo.txi(,5329) @node Other Info Files,  , Menu Example, Menus
../texinfo/texinfo.txi(,5330) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,5331) @section Referring to Other Info Files
../texinfo/texinfo.txi(,5332) @cindex Referring to other Info files
../texinfo/texinfo.txi(,5333) @cindex Nodes in other Info files
../texinfo/texinfo.txi(,5334) @cindex Other Info files' nodes
../texinfo/texinfo.txi(,5335) @cindex Going to other Info files' nodes
../texinfo/texinfo.txi(,5336) @cindex Info; other files' nodes
../texinfo/texinfo.txi(,5337) 
../texinfo/texinfo.txi(,5338) You can create a menu entry that enables a reader in Info to go to a
../texinfo/texinfo.txi(,5339) node in another Info file by writing the file name in parentheses just
../texinfo/texinfo.txi(,5340) before the node name.  In this case, you should use the three-part menu
../texinfo/texinfo.txi(,5341) entry format, which saves the reader from having to type the file
../texinfo/texinfo.txi(,5342) name.@refill
../texinfo/texinfo.txi(,5343) 
../texinfo/texinfo.txi(,5344) @need 800
../texinfo/texinfo.txi(,5345) The format looks like this:@refill
../texinfo/texinfo.txi(,5346) 
../texinfo/texinfo.txi(,5347) @example
../texinfo/texinfo.txi(,5348) @group
../texinfo/texinfo.txi(,5349) @@menu
../texinfo/texinfo.txi(,5350) * @var{first-entry-name}:(@var{filename})@var{nodename}.     @var{description}
../texinfo/texinfo.txi(,5351) * @var{second-entry-name}:(@var{filename})@var{second-node}. @var{description}
../texinfo/texinfo.txi(,5352) @@end menu
../texinfo/texinfo.txi(,5353) @end group
../texinfo/texinfo.txi(,5354) @end example
../texinfo/texinfo.txi(,5355) 
../texinfo/texinfo.txi(,5356) For example, to refer directly to the @samp{Outlining} and
../texinfo/texinfo.txi(,5357) @samp{Rebinding} nodes in the @cite{Emacs Manual}, you would write a
../texinfo/texinfo.txi(,5358) menu like this:@refill
../texinfo/texinfo.txi(,5359) 
../texinfo/texinfo.txi(,5360) @example
../texinfo/texinfo.txi(,5361) @group
../texinfo/texinfo.txi(,5362) @@menu
../texinfo/texinfo.txi(,5363) * Outlining: (emacs)Outline Mode. The major mode for
../texinfo/texinfo.txi(,5364)                                   editing outlines.
../texinfo/texinfo.txi(,5365) * Rebinding: (emacs)Rebinding.    How to redefine the
../texinfo/texinfo.txi(,5366)                                   meaning of a key.
../texinfo/texinfo.txi(,5367) @@end menu
../texinfo/texinfo.txi(,5368) @end group
../texinfo/texinfo.txi(,5369) @end example
../texinfo/texinfo.txi(,5370) 
../texinfo/texinfo.txi(,5371) If you do not list the node name, but only name the file, then Info
../texinfo/texinfo.txi(,5372) presumes that you are referring to the `Top' node.@refill
../texinfo/texinfo.txi(,5373) 
../texinfo/texinfo.txi(,5374) The @file{dir} file that contains the main menu for Info has menu
../texinfo/texinfo.txi(,5375) entries that list only file names.  These take you directly to the `Top'
../texinfo/texinfo.txi(,5376) nodes of each Info document.  (@xref{Installing an Info File}.)
../texinfo/texinfo.txi(,5377) 
../texinfo/texinfo.txi(,5378) @need 700
../texinfo/texinfo.txi(,5379) For example:
../texinfo/texinfo.txi(,5380) 
../texinfo/texinfo.txi(,5381) @example
../texinfo/texinfo.txi(,5382) @group
../texinfo/texinfo.txi(,5383) * Info: (info).         Documentation browsing system.
../texinfo/texinfo.txi(,5384) * Emacs: (emacs).       The extensible, self-documenting
../texinfo/texinfo.txi(,5385)                         text editor.
../texinfo/texinfo.txi(,5386) @end group
../texinfo/texinfo.txi(,5387) @end example
../texinfo/texinfo.txi(,5388) 
../texinfo/texinfo.txi(,5389) @noindent
../texinfo/texinfo.txi(,5390) (The @file{dir} top level directory for the Info system is an Info file,
../texinfo/texinfo.txi(,5391) not a Texinfo file, but a menu entry looks the same in both types of
../texinfo/texinfo.txi(,5392) file.)@refill
../texinfo/texinfo.txi(,5393) 
../texinfo/texinfo.txi(,5394) The GNU Emacs Texinfo mode menu updating commands only work with nodes
../texinfo/texinfo.txi(,5395) within the current buffer, so you cannot use them to create menus that
../texinfo/texinfo.txi(,5396) refer to other files.  You must write such menus by hand.
../texinfo/texinfo.txi(,5397) 
../texinfo/texinfo.txi(,5398) 
../texinfo/texinfo.txi(,5399) @node Cross References
../texinfo/texinfo.txi(,5400) @chapter Cross References
../texinfo/texinfo.txi(,5401) @cindex Making cross references
../texinfo/texinfo.txi(,5402) @cindex Cross references
../texinfo/texinfo.txi(,5403) @cindex References
../texinfo/texinfo.txi(,5404) 
../texinfo/texinfo.txi(,5405) @dfn{Cross references} are used to refer the reader to other parts of the
../texinfo/texinfo.txi(,5406) same or different Texinfo files.  In Texinfo, nodes and anchors are the
../texinfo/texinfo.txi(,5407) places to which cross references can refer.
../texinfo/texinfo.txi(,5408) 
../texinfo/texinfo.txi(,5409) @menu
../texinfo/texinfo.txi(,5410) * References::                  What cross references are for.
../texinfo/texinfo.txi(,5411) * Cross Reference Commands::    A summary of the different commands.
../texinfo/texinfo.txi(,5412) * Cross Reference Parts::       A cross reference has several parts.
../texinfo/texinfo.txi(,5413) * xref::                        Begin a reference with `See' @dots{}
../texinfo/texinfo.txi(,5414) * Top Node Naming::             How to refer to the beginning of another file.
../texinfo/texinfo.txi(,5415) * ref::                         A reference for the last part of a sentence.
../texinfo/texinfo.txi(,5416) * pxref::                       How to write a parenthetical cross reference.
../texinfo/texinfo.txi(,5417) * inforef::                     How to refer to an Info-only file.
../texinfo/texinfo.txi(,5418) * uref::                        How to refer to a uniform resource locator.
../texinfo/texinfo.txi(,5419) @end menu
../texinfo/texinfo.txi(,5420) 
../texinfo/texinfo.txi(,5421) @node References, Cross Reference Commands, Cross References, Cross References
../texinfo/texinfo.txi(,5423) @heading What References Are For
../texinfo/texinfo.txi(,5425) 
../texinfo/texinfo.txi(,5426) Often, but not always, a printed document should be designed so that
../texinfo/texinfo.txi(,5427) it can be read sequentially.  People tire of flipping back and forth
../texinfo/texinfo.txi(,5428) to find information that should be presented to them as they need
../texinfo/texinfo.txi(,5429) it.@refill
../texinfo/texinfo.txi(,5430) 
../texinfo/texinfo.txi(,5431) However, in any document, some information will be too detailed for
../texinfo/texinfo.txi(,5432) the current context, or incidental to it; use cross references to
../texinfo/texinfo.txi(,5433) provide access to such information.  Also, an online help system or a
../texinfo/texinfo.txi(,5434) reference manual is not like a novel; few read such documents in
../texinfo/texinfo.txi(,5435) sequence from beginning to end.  Instead, people look up what they
../texinfo/texinfo.txi(,5436) need.  For this reason, such creations should contain many cross
../texinfo/texinfo.txi(,5437) references to help readers find other information that they may not
../texinfo/texinfo.txi(,5438) have read.@refill
../texinfo/texinfo.txi(,5439) 
../texinfo/texinfo.txi(,5440) In a printed manual, a cross reference results in a page reference,
../texinfo/texinfo.txi(,5441) unless it is to another manual altogether, in which case the cross
../texinfo/texinfo.txi(,5442) reference names that manual.@refill
../texinfo/texinfo.txi(,5443) 
../texinfo/texinfo.txi(,5444) In Info, a cross reference results in an entry that you can follow using
../texinfo/texinfo.txi(,5445) the Info @samp{f} command.  (@inforef{Help-Adv, Some advanced Info
../texinfo/texinfo.txi(,5446) commands, info}.)@refill
../texinfo/texinfo.txi(,5447) 
../texinfo/texinfo.txi(,5448) The various cross reference commands use nodes (or anchors,
../texinfo/texinfo.txi(,5449) @pxref{anchor,,@code{@@anchor}}) to define cross reference locations.
../texinfo/texinfo.txi(,5450) This is evident in Info, in which a cross reference takes you to the
../texinfo/texinfo.txi(,5451) specified location.  @TeX{} also uses nodes to define cross reference
../texinfo/texinfo.txi(,5452) locations, but the action is less obvious.  When @TeX{} generates a DVI
../texinfo/texinfo.txi(,5453) file, it records each node's page number and uses the page numbers in making
../texinfo/texinfo.txi(,5454) references.  Thus, if you are writing a manual that will only be
../texinfo/texinfo.txi(,5455) printed, and will not be used online, you must nonetheless write
../texinfo/texinfo.txi(,5456) @code{@@node} lines to name the places to which you make cross
../texinfo/texinfo.txi(,5457) references.@refill
../texinfo/texinfo.txi(,5458) 
../texinfo/texinfo.txi(,5459) @need 800
../texinfo/texinfo.txi(,5460) @node Cross Reference Commands, Cross Reference Parts, References, Cross References
../texinfo/texinfo.txi(,5461) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,5462) @section Different Cross Reference Commands
../texinfo/texinfo.txi(,5463) @cindex Different cross reference commands
../texinfo/texinfo.txi(,5464) 
../texinfo/texinfo.txi(,5465) There are four different cross reference commands:@refill
../texinfo/texinfo.txi(,5466) 
../texinfo/texinfo.txi(,5467) @table @code
../texinfo/texinfo.txi(,5468) @item @@xref
../texinfo/texinfo.txi(,5469) Used to start a sentence in the printed manual saying @w{`See @dots{}'}
../texinfo/texinfo.txi(,5470) or an Info cross-reference saying @samp{*Note @var{name}: @var{node}.}.
../texinfo/texinfo.txi(,5471) 
../texinfo/texinfo.txi(,5472) @item @@ref
../texinfo/texinfo.txi(,5473) Used within or, more often, at the end of a sentence; same as
../texinfo/texinfo.txi(,5474) @code{@@xref} for Info; produces just the reference in the printed
../texinfo/texinfo.txi(,5475) manual without a preceding `See'.@refill
../texinfo/texinfo.txi(,5476) 
../texinfo/texinfo.txi(,5477) @item @@pxref
../texinfo/texinfo.txi(,5478) Used within parentheses to make a reference that suits both an Info
../texinfo/texinfo.txi(,5479) file and a printed book.  Starts with a lower case `see' within the
../texinfo/texinfo.txi(,5480) printed manual. (@samp{p} is for `parenthesis'.)@refill
../texinfo/texinfo.txi(,5481) 
../texinfo/texinfo.txi(,5482) @item @@inforef
../texinfo/texinfo.txi(,5483) Used to make a reference to an Info file for which there is no printed
../texinfo/texinfo.txi(,5484) manual.@refill
../texinfo/texinfo.txi(,5485) @end table
../texinfo/texinfo.txi(,5486) 
../texinfo/texinfo.txi(,5487) @noindent
../texinfo/texinfo.txi(,5488) (The @code{@@cite} command is used to make references to books and
../texinfo/texinfo.txi(,5489) manuals for which there is no corresponding Info file and, therefore,
../texinfo/texinfo.txi(,5490) no node to which to point.   @xref{cite, , @code{@@cite}}.)@refill
../texinfo/texinfo.txi(,5491) 
../texinfo/texinfo.txi(,5492) @node Cross Reference Parts, xref, Cross Reference Commands, Cross References
../texinfo/texinfo.txi(,5493) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,5494) @section Parts of a Cross Reference
../texinfo/texinfo.txi(,5495) @cindex Cross reference parts
../texinfo/texinfo.txi(,5496) @cindex Parts of a cross reference
../texinfo/texinfo.txi(,5497) 
../texinfo/texinfo.txi(,5498) A cross reference command requires only one argument, which is the
../texinfo/texinfo.txi(,5499) name of the node to which it refers.  But a cross reference command
../texinfo/texinfo.txi(,5500) may contain up to four additional arguments.  By using these
../texinfo/texinfo.txi(,5501) arguments, you can provide a cross reference name for Info, a topic
../texinfo/texinfo.txi(,5502) description or section title for the printed output, the name of a
../texinfo/texinfo.txi(,5503) different Info file, and the name of a different printed
../texinfo/texinfo.txi(,5504) manual.@refill
../texinfo/texinfo.txi(,5505) 
../texinfo/texinfo.txi(,5506) Here is a simple cross reference example:@refill
../texinfo/texinfo.txi(,5507) 
../texinfo/texinfo.txi(,5508) @example
../texinfo/texinfo.txi(,5509) @@xref@{Node name@}.
../texinfo/texinfo.txi(,5510) @end example
../texinfo/texinfo.txi(,5511) 
../texinfo/texinfo.txi(,5512) @noindent
../texinfo/texinfo.txi(,5513) which produces
../texinfo/texinfo.txi(,5514) 
../texinfo/texinfo.txi(,5515) @example
../texinfo/texinfo.txi(,5516) *Note Node name::.
../texinfo/texinfo.txi(,5517) @end example
../texinfo/texinfo.txi(,5518) 
../texinfo/texinfo.txi(,5519) @noindent
../texinfo/texinfo.txi(,5520) and
../texinfo/texinfo.txi(,5521) 
../texinfo/texinfo.txi(,5522) @quotation
../texinfo/texinfo.txi(,5523) See Section @var{nnn} [Node name], page @var{ppp}.
../texinfo/texinfo.txi(,5524) @end quotation
../texinfo/texinfo.txi(,5525) 
../texinfo/texinfo.txi(,5526) @need 700
../texinfo/texinfo.txi(,5527) Here is an example of a full five-part cross reference:@refill
../texinfo/texinfo.txi(,5528) 
../texinfo/texinfo.txi(,5529) @example
../texinfo/texinfo.txi(,5530) @group
../texinfo/texinfo.txi(,5531) @@xref@{Node name, Cross Reference Name, Particular Topic,
../texinfo/texinfo.txi(,5532) info-file-name, A Printed Manual@}, for details.
../texinfo/texinfo.txi(,5533) @end group
../texinfo/texinfo.txi(,5534) @end example
../texinfo/texinfo.txi(,5535) 
../texinfo/texinfo.txi(,5536) @noindent
../texinfo/texinfo.txi(,5537) which produces
../texinfo/texinfo.txi(,5538) 
../texinfo/texinfo.txi(,5539) @example
../texinfo/texinfo.txi(,5540) *Note Cross Reference Name: (info-file-name)Node name,
../texinfo/texinfo.txi(,5541) for details.
../texinfo/texinfo.txi(,5542) @end example
../texinfo/texinfo.txi(,5543) 
../texinfo/texinfo.txi(,5544) @noindent
../texinfo/texinfo.txi(,5545) in Info and
../texinfo/texinfo.txi(,5546) 
../texinfo/texinfo.txi(,5547) @quotation
../texinfo/texinfo.txi(,5548) See section ``Particular Topic'' in @i{A Printed Manual}, for details.
../texinfo/texinfo.txi(,5549) @end quotation
../texinfo/texinfo.txi(,5550) 
../texinfo/texinfo.txi(,5551) @noindent
../texinfo/texinfo.txi(,5552) in a printed book.
../texinfo/texinfo.txi(,5553) 
../texinfo/texinfo.txi(,5554) The five possible arguments for a cross reference are:@refill
../texinfo/texinfo.txi(,5555) 
../texinfo/texinfo.txi(,5556) @enumerate
../texinfo/texinfo.txi(,5557) @item
../texinfo/texinfo.txi(,5558) The node or anchor name (required).  This is the location to which the
../texinfo/texinfo.txi(,5559) cross reference takes you.  In a printed document, the location of the
../texinfo/texinfo.txi(,5560) node provides the page reference only for references within the same
../texinfo/texinfo.txi(,5561) document.@refill
../texinfo/texinfo.txi(,5562) 
../texinfo/texinfo.txi(,5563) @item
../texinfo/texinfo.txi(,5564) The cross reference name for the Info reference, if it is to be different
../texinfo/texinfo.txi(,5565) from the node name.  If you include this argument, it becomes
../texinfo/texinfo.txi(,5566) the first part of the cross reference.  It is usually omitted.@refill
../texinfo/texinfo.txi(,5567) 
../texinfo/texinfo.txi(,5568) @item
../texinfo/texinfo.txi(,5569) A topic description or section name.  Often, this is the title of the
../texinfo/texinfo.txi(,5570) section.  This is used as the name of the reference in the printed
../texinfo/texinfo.txi(,5571) manual.  If omitted, the node name is used.@refill
../texinfo/texinfo.txi(,5572) 
../texinfo/texinfo.txi(,5573) @item
../texinfo/texinfo.txi(,5574) The name of the Info file in which the reference is located, if it is
../texinfo/texinfo.txi(,5575) different from the current file.  You need not include any @samp{.info}
../texinfo/texinfo.txi(,5576) suffix on the file name, since Info readers try appending it
../texinfo/texinfo.txi(,5577) automatically.
../texinfo/texinfo.txi(,5578) 
../texinfo/texinfo.txi(,5579) @item
../texinfo/texinfo.txi(,5580) The name of a printed manual from a different Texinfo file.@refill
../texinfo/texinfo.txi(,5581) @end enumerate
../texinfo/texinfo.txi(,5582) 
../texinfo/texinfo.txi(,5583) The template for a full five argument cross reference looks like
../texinfo/texinfo.txi(,5584) this:@refill
../texinfo/texinfo.txi(,5585) 
../texinfo/texinfo.txi(,5586) @example
../texinfo/texinfo.txi(,5587) @group
../texinfo/texinfo.txi(,5588) @@xref@{@var{node-name}, @var{cross-reference-name}, @var{title-or-topic},
../texinfo/texinfo.txi(,5589) @var{info-file-name}, @var{printed-manual-title}@}.
../texinfo/texinfo.txi(,5590) @end group
../texinfo/texinfo.txi(,5591) @end example
../texinfo/texinfo.txi(,5592) 
../texinfo/texinfo.txi(,5593) Cross references with one, two, three, four, and five arguments are
../texinfo/texinfo.txi(,5594) described separately following the description of @code{@@xref}.@refill
../texinfo/texinfo.txi(,5595) 
../texinfo/texinfo.txi(,5596) Write a node name in a cross reference in exactly the same way as in
../texinfo/texinfo.txi(,5597) the @code{@@node} line, including the same capitalization; otherwise, the
../texinfo/texinfo.txi(,5598) formatters may not find the reference.@refill
../texinfo/texinfo.txi(,5599) 
../texinfo/texinfo.txi(,5600) You can write cross reference commands within a paragraph, but note
../texinfo/texinfo.txi(,5601) how Info and @TeX{} format the output of each of the various commands:
../texinfo/texinfo.txi(,5602) write @code{@@xref} at the beginning of a sentence; write
../texinfo/texinfo.txi(,5603) @code{@@pxref} only within parentheses, and so on.@refill
../texinfo/texinfo.txi(,5604) 
../texinfo/texinfo.txi(,5605) @node xref, Top Node Naming, Cross Reference Parts, Cross References
../texinfo/texinfo.txi(,5606) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,5607) @section @code{@@xref}
../texinfo/texinfo.txi(,5608) @findex xref
../texinfo/texinfo.txi(,5609) @cindex Cross references using @code{@@xref}
../texinfo/texinfo.txi(,5610) @cindex References using @code{@@xref}
../texinfo/texinfo.txi(,5611) 
../texinfo/texinfo.txi(,5612) The @code{@@xref} command generates a cross reference for the
../texinfo/texinfo.txi(,5613) beginning of a sentence.  The Info formatting commands convert it into
../texinfo/texinfo.txi(,5614) an Info cross reference, which the Info @samp{f} command can use to
../texinfo/texinfo.txi(,5615) bring you directly to another node.  The @TeX{} typesetting commands
../texinfo/texinfo.txi(,5616) convert it into a page reference, or a reference to another book or
../texinfo/texinfo.txi(,5617) manual.@refill
../texinfo/texinfo.txi(,5618) 
../texinfo/texinfo.txi(,5619) @menu
../texinfo/texinfo.txi(,5620) * Reference Syntax::            What a reference looks like and requires.
../texinfo/texinfo.txi(,5621) * One Argument::                @code{@@xref} with one argument.
../texinfo/texinfo.txi(,5622) * Two Arguments::               @code{@@xref} with two arguments.
../texinfo/texinfo.txi(,5623) * Three Arguments::             @code{@@xref} with three arguments.
../texinfo/texinfo.txi(,5624) * Four and Five Arguments::     @code{@@xref} with four and five arguments.
../texinfo/texinfo.txi(,5625) @end menu
../texinfo/texinfo.txi(,5626) 
../texinfo/texinfo.txi(,5627) @node Reference Syntax, One Argument, xref, xref
../texinfo/texinfo.txi(,5629) @subheading What a Reference Looks Like and Requires
../texinfo/texinfo.txi(,5631) 
../texinfo/texinfo.txi(,5632) Most often, an Info cross reference looks like this:@refill
../texinfo/texinfo.txi(,5633) 
../texinfo/texinfo.txi(,5634) @example
../texinfo/texinfo.txi(,5635) *Note @var{node-name}::.
../texinfo/texinfo.txi(,5636) @end example
../texinfo/texinfo.txi(,5637) 
../texinfo/texinfo.txi(,5638) @noindent
../texinfo/texinfo.txi(,5639) or like this
../texinfo/texinfo.txi(,5640) 
../texinfo/texinfo.txi(,5641) @example
../texinfo/texinfo.txi(,5642) *Note @var{cross-reference-name}: @var{node-name}.
../texinfo/texinfo.txi(,5643) @end example
../texinfo/texinfo.txi(,5644) 
../texinfo/texinfo.txi(,5645) @noindent
../texinfo/texinfo.txi(,5646) In @TeX{}, a cross reference looks like this:
../texinfo/texinfo.txi(,5647) 
../texinfo/texinfo.txi(,5648) @quotation
../texinfo/texinfo.txi(,5649) See Section @var{section-number} [@var{node-name}], page @var{page}.
../texinfo/texinfo.txi(,5650) @end quotation
../texinfo/texinfo.txi(,5651) 
../texinfo/texinfo.txi(,5652) @noindent
../texinfo/texinfo.txi(,5653) or like this
../texinfo/texinfo.txi(,5654) 
../texinfo/texinfo.txi(,5655) @quotation
../texinfo/texinfo.txi(,5656) See Section @var{section-number} [@var{title-or-topic}], page @var{page}.
../texinfo/texinfo.txi(,5657) @end quotation
../texinfo/texinfo.txi(,5658) 
../texinfo/texinfo.txi(,5659) The @code{@@xref} command does not generate a period or comma to end
../texinfo/texinfo.txi(,5660) the cross reference in either the Info file or the printed output.
../texinfo/texinfo.txi(,5661) You must write that period or comma yourself; otherwise, Info will not
../texinfo/texinfo.txi(,5662) recognize the end of the reference.  (The @code{@@pxref} command works
../texinfo/texinfo.txi(,5663) differently.  @xref{pxref, , @code{@@pxref}}.)@refill
../texinfo/texinfo.txi(,5664) 
../texinfo/texinfo.txi(,5665) @quotation
../texinfo/texinfo.txi(,5666) @strong{Please note:} A period or comma @strong{must} follow the closing
../texinfo/texinfo.txi(,5667) brace of an @code{@@xref}.  It is required to terminate the cross
../texinfo/texinfo.txi(,5668) reference.  This period or comma will appear in the output, both in
../texinfo/texinfo.txi(,5669) the Info file and in the printed manual.@refill
../texinfo/texinfo.txi(,5670) @end quotation
../texinfo/texinfo.txi(,5671) 
../texinfo/texinfo.txi(,5672) @code{@@xref} must refer to an Info node by name.  Use @code{@@node}
../texinfo/texinfo.txi(,5673) to define the node (@pxref{Writing a Node}).@refill
../texinfo/texinfo.txi(,5674) 
../texinfo/texinfo.txi(,5675) @code{@@xref} is followed by several arguments inside braces, separated by
../texinfo/texinfo.txi(,5676) commas.  Whitespace before and after these commas is ignored.@refill
../texinfo/texinfo.txi(,5677) 
../texinfo/texinfo.txi(,5678) A cross reference requires only the name of a node; but it may contain
../texinfo/texinfo.txi(,5679) up to four additional arguments.  Each of these variations produces a
../texinfo/texinfo.txi(,5680) cross reference that looks somewhat different.@refill
../texinfo/texinfo.txi(,5681) 
../texinfo/texinfo.txi(,5682) @quotation
../texinfo/texinfo.txi(,5683) @strong{Please note:} Commas separate arguments in a cross reference;
../texinfo/texinfo.txi(,5684) avoid including them in the title or other part lest the formatters
../texinfo/texinfo.txi(,5685) mistake them for separators.@refill
../texinfo/texinfo.txi(,5686) @end quotation
../texinfo/texinfo.txi(,5687) 
../texinfo/texinfo.txi(,5688) @node One Argument, Two Arguments, Reference Syntax, xref
../texinfo/texinfo.txi(,5689) @subsection @code{@@xref} with One Argument
../texinfo/texinfo.txi(,5690) 
../texinfo/texinfo.txi(,5691) The simplest form of @code{@@xref} takes one argument, the name of
../texinfo/texinfo.txi(,5692) another node in the same Info file.    The Info formatters produce
../texinfo/texinfo.txi(,5693) output that the Info readers can use to jump to the reference; @TeX{}
../texinfo/texinfo.txi(,5694) produces output that specifies the page and section number for you.@refill
../texinfo/texinfo.txi(,5695) 
../texinfo/texinfo.txi(,5696) @need 700
../texinfo/texinfo.txi(,5697) @noindent
../texinfo/texinfo.txi(,5698) For example,
../texinfo/texinfo.txi(,5699) 
../texinfo/texinfo.txi(,5700) @example
../texinfo/texinfo.txi(,5701) @@xref@{Tropical Storms@}.
../texinfo/texinfo.txi(,5702) @end example
../texinfo/texinfo.txi(,5703) 
../texinfo/texinfo.txi(,5704) @noindent
../texinfo/texinfo.txi(,5705) produces
../texinfo/texinfo.txi(,5706) 
../texinfo/texinfo.txi(,5707) @example
../texinfo/texinfo.txi(,5708) *Note Tropical Storms::.
../texinfo/texinfo.txi(,5709) @end example
../texinfo/texinfo.txi(,5710) 
../texinfo/texinfo.txi(,5711) @noindent
../texinfo/texinfo.txi(,5712) and
../texinfo/texinfo.txi(,5713) 
../texinfo/texinfo.txi(,5714) @quotation
../texinfo/texinfo.txi(,5715) See Section 3.1 [Tropical Storms], page 24.
../texinfo/texinfo.txi(,5716) @end quotation
../texinfo/texinfo.txi(,5717) 
../texinfo/texinfo.txi(,5718) @noindent
../texinfo/texinfo.txi(,5719) (Note that in the preceding example the closing brace is followed by a
../texinfo/texinfo.txi(,5720) period.)@refill
../texinfo/texinfo.txi(,5721) 
../texinfo/texinfo.txi(,5722) You can write a clause after the cross reference, like this:@refill
../texinfo/texinfo.txi(,5723) 
../texinfo/texinfo.txi(,5724) @example
../texinfo/texinfo.txi(,5725) @@xref@{Tropical Storms@}, for more info.
../texinfo/texinfo.txi(,5726) @end example
../texinfo/texinfo.txi(,5727) 
../texinfo/texinfo.txi(,5728) @noindent
../texinfo/texinfo.txi(,5729) which produces
../texinfo/texinfo.txi(,5730) 
../texinfo/texinfo.txi(,5731) @example
../texinfo/texinfo.txi(,5732) *Note Tropical Storms::, for more info.
../texinfo/texinfo.txi(,5733) @end example
../texinfo/texinfo.txi(,5734) 
../texinfo/texinfo.txi(,5735) @noindent
../texinfo/texinfo.txi(,5736) and
../texinfo/texinfo.txi(,5737) 
../texinfo/texinfo.txi(,5738) @quotation
../texinfo/texinfo.txi(,5739) See Section 3.1 [Tropical Storms], page 24, for more info.
../texinfo/texinfo.txi(,5740) @end quotation
../texinfo/texinfo.txi(,5741) 
../texinfo/texinfo.txi(,5742) @noindent
../texinfo/texinfo.txi(,5743) (Note that in the preceding example the closing brace is followed by a
../texinfo/texinfo.txi(,5744) comma, and then by the clause, which is followed by a period.)@refill
../texinfo/texinfo.txi(,5745) 
../texinfo/texinfo.txi(,5746) @node Two Arguments, Three Arguments, One Argument, xref
../texinfo/texinfo.txi(,5747) @subsection @code{@@xref} with Two Arguments
../texinfo/texinfo.txi(,5748) 
../texinfo/texinfo.txi(,5749) With two arguments, the second is used as the name of the Info cross
../texinfo/texinfo.txi(,5750) reference, while the first is still the name of the node to which the
../texinfo/texinfo.txi(,5751) cross reference points.@refill
../texinfo/texinfo.txi(,5752) 
../texinfo/texinfo.txi(,5753) @need 750
../texinfo/texinfo.txi(,5754) @noindent
../texinfo/texinfo.txi(,5755) The template is like this:
../texinfo/texinfo.txi(,5756) 
../texinfo/texinfo.txi(,5757) @example
../texinfo/texinfo.txi(,5758) @@xref@{@var{node-name}, @var{cross-reference-name}@}.
../texinfo/texinfo.txi(,5759) @end example
../texinfo/texinfo.txi(,5760) 
../texinfo/texinfo.txi(,5761) @need 700
../texinfo/texinfo.txi(,5762) @noindent
../texinfo/texinfo.txi(,5763) For example,
../texinfo/texinfo.txi(,5764) 
../texinfo/texinfo.txi(,5765) @example
../texinfo/texinfo.txi(,5766) @@xref@{Electrical Effects, Lightning@}.
../texinfo/texinfo.txi(,5767) @end example
../texinfo/texinfo.txi(,5768) 
../texinfo/texinfo.txi(,5769) @noindent
../texinfo/texinfo.txi(,5770) produces:
../texinfo/texinfo.txi(,5771) 
../texinfo/texinfo.txi(,5772) @example
../texinfo/texinfo.txi(,5773) *Note Lightning: Electrical Effects.
../texinfo/texinfo.txi(,5774) @end example
../texinfo/texinfo.txi(,5775) 
../texinfo/texinfo.txi(,5776) @noindent
../texinfo/texinfo.txi(,5777) and
../texinfo/texinfo.txi(,5778) 
../texinfo/texinfo.txi(,5779) @quotation
../texinfo/texinfo.txi(,5780) See Section 5.2 [Electrical Effects], page 57.
../texinfo/texinfo.txi(,5781) @end quotation
../texinfo/texinfo.txi(,5782) 
../texinfo/texinfo.txi(,5783) @noindent
../texinfo/texinfo.txi(,5784) (Note that in the preceding example the closing brace is followed by a
../texinfo/texinfo.txi(,5785) period; and that the node name is printed, not the cross reference name.)
../texinfo/texinfo.txi(,5786) 
../texinfo/texinfo.txi(,5787) You can write a clause after the cross reference, like this:@refill
../texinfo/texinfo.txi(,5788) 
../texinfo/texinfo.txi(,5789) @example
../texinfo/texinfo.txi(,5790) @@xref@{Electrical Effects, Lightning@}, for more info.
../texinfo/texinfo.txi(,5791) @end example
../texinfo/texinfo.txi(,5792) 
../texinfo/texinfo.txi(,5793) @noindent
../texinfo/texinfo.txi(,5794) which produces
../texinfo/texinfo.txi(,5795) @example
../texinfo/texinfo.txi(,5796) *Note Lightning: Electrical Effects, for more info.
../texinfo/texinfo.txi(,5797) @end example
../texinfo/texinfo.txi(,5798) 
../texinfo/texinfo.txi(,5799) @noindent
../texinfo/texinfo.txi(,5800) and
../texinfo/texinfo.txi(,5801) 
../texinfo/texinfo.txi(,5802) @quotation
../texinfo/texinfo.txi(,5803) See Section 5.2 [Electrical Effects], page 57, for more info.
../texinfo/texinfo.txi(,5804) @end quotation
../texinfo/texinfo.txi(,5805) 
../texinfo/texinfo.txi(,5806) @noindent
../texinfo/texinfo.txi(,5807) (Note that in the preceding example the closing brace is followed by a
../texinfo/texinfo.txi(,5808) comma, and then by the clause, which is followed by a period.)@refill
../texinfo/texinfo.txi(,5809) 
../texinfo/texinfo.txi(,5810) @node Three Arguments, Four and Five Arguments, Two Arguments, xref
../texinfo/texinfo.txi(,5811) @subsection @code{@@xref} with Three Arguments
../texinfo/texinfo.txi(,5812) 
../texinfo/texinfo.txi(,5813) A third argument replaces the node name in the @TeX{} output.  The third
../texinfo/texinfo.txi(,5814) argument should be the name of the section in the printed output, or
../texinfo/texinfo.txi(,5815) else state the topic discussed by that section.  Often, you will want to
../texinfo/texinfo.txi(,5816) use initial upper case letters so it will be easier to read when the
../texinfo/texinfo.txi(,5817) reference is printed.  Use a third argument when the node name is
../texinfo/texinfo.txi(,5818) unsuitable because of syntax or meaning.@refill
../texinfo/texinfo.txi(,5819) 
../texinfo/texinfo.txi(,5820) Remember to avoid placing a comma within the title or topic section of
../texinfo/texinfo.txi(,5821) a cross reference, or within any other section.  The formatters divide
../texinfo/texinfo.txi(,5822) cross references into arguments according to the commas; a comma
../texinfo/texinfo.txi(,5823) within a title or other section will divide it into two arguments.  In
../texinfo/texinfo.txi(,5824) a reference, you need to write a title such as ``Clouds, Mist, and
../texinfo/texinfo.txi(,5825) Fog'' without the commas.@refill
../texinfo/texinfo.txi(,5826) 
../texinfo/texinfo.txi(,5827) Also, remember to write a comma or period after the closing brace of an
../texinfo/texinfo.txi(,5828) @code{@@xref} to terminate the cross reference.  In the following
../texinfo/texinfo.txi(,5829) examples, a clause follows a terminating comma.@refill
../texinfo/texinfo.txi(,5830) 
../texinfo/texinfo.txi(,5831) 
../texinfo/texinfo.txi(,5832) @need 750
../texinfo/texinfo.txi(,5833) @noindent
../texinfo/texinfo.txi(,5834) The template is like this:
../texinfo/texinfo.txi(,5835) 
../texinfo/texinfo.txi(,5836) @example
../texinfo/texinfo.txi(,5837) @group
../texinfo/texinfo.txi(,5838) @@xref@{@var{node-name}, @var{cross-reference-name}, @var{title-or-topic}@}.
../texinfo/texinfo.txi(,5839) @end group
../texinfo/texinfo.txi(,5840) @end example
../texinfo/texinfo.txi(,5841) 
../texinfo/texinfo.txi(,5842) @need 700
../texinfo/texinfo.txi(,5843) @noindent
../texinfo/texinfo.txi(,5844) For example,
../texinfo/texinfo.txi(,5845) 
../texinfo/texinfo.txi(,5846) @example
../texinfo/texinfo.txi(,5847) @group
../texinfo/texinfo.txi(,5848) @@xref@{Electrical Effects, Lightning, Thunder and Lightning@},
../texinfo/texinfo.txi(,5849) for details.
../texinfo/texinfo.txi(,5850) @end group
../texinfo/texinfo.txi(,5851) @end example
../texinfo/texinfo.txi(,5852) 
../texinfo/texinfo.txi(,5853) @noindent
../texinfo/texinfo.txi(,5854) produces
../texinfo/texinfo.txi(,5855) 
../texinfo/texinfo.txi(,5856) @example
../texinfo/texinfo.txi(,5857) *Note Lightning: Electrical Effects, for details.
../texinfo/texinfo.txi(,5858) @end example
../texinfo/texinfo.txi(,5859) 
../texinfo/texinfo.txi(,5860) @noindent
../texinfo/texinfo.txi(,5861) and
../texinfo/texinfo.txi(,5862) 
../texinfo/texinfo.txi(,5863) @quotation
../texinfo/texinfo.txi(,5864) See Section 5.2 [Thunder and Lightning], page 57, for details.
../texinfo/texinfo.txi(,5865) @end quotation
../texinfo/texinfo.txi(,5866) 
../texinfo/texinfo.txi(,5867) If a third argument is given and the second one is empty, then the
../texinfo/texinfo.txi(,5868) third argument serves both.  (Note how two commas, side by side, mark
../texinfo/texinfo.txi(,5869) the empty second argument.)@refill
../texinfo/texinfo.txi(,5870) 
../texinfo/texinfo.txi(,5871) @example
../texinfo/texinfo.txi(,5872) @group
../texinfo/texinfo.txi(,5873) @@xref@{Electrical Effects, , Thunder and Lightning@},
../texinfo/texinfo.txi(,5874) for details.
../texinfo/texinfo.txi(,5875) @end group
../texinfo/texinfo.txi(,5876) @end example
../texinfo/texinfo.txi(,5877) 
../texinfo/texinfo.txi(,5878) @noindent
../texinfo/texinfo.txi(,5879) produces
../texinfo/texinfo.txi(,5880) 
../texinfo/texinfo.txi(,5881) @example
../texinfo/texinfo.txi(,5882) *Note Thunder and Lightning: Electrical Effects, for details.
../texinfo/texinfo.txi(,5883) @end example
../texinfo/texinfo.txi(,5884) 
../texinfo/texinfo.txi(,5885) @noindent
../texinfo/texinfo.txi(,5886) and
../texinfo/texinfo.txi(,5887) 
../texinfo/texinfo.txi(,5888) @quotation
../texinfo/texinfo.txi(,5889) See Section 5.2 [Thunder and Lightning], page 57, for details.
../texinfo/texinfo.txi(,5890) @end quotation
../texinfo/texinfo.txi(,5891) 
../texinfo/texinfo.txi(,5892) As a practical matter, it is often best to write cross references with
../texinfo/texinfo.txi(,5893) just the first argument if the node name and the section title are the
../texinfo/texinfo.txi(,5894) same, and with the first and third arguments if the node name and title
../texinfo/texinfo.txi(,5895) are different.@refill
../texinfo/texinfo.txi(,5896) 
../texinfo/texinfo.txi(,5897) Here are several examples from @cite{The GNU Awk User's Guide}:@refill
../texinfo/texinfo.txi(,5898) 
../texinfo/texinfo.txi(,5899) @smallexample
../texinfo/texinfo.txi(,5900) @@xref@{Sample Program@}.
../texinfo/texinfo.txi(,5901) @@xref@{Glossary@}.
../texinfo/texinfo.txi(,5902) @@xref@{Case-sensitivity, ,Case-sensitivity in Matching@}.
../texinfo/texinfo.txi(,5903) @@xref@{Close Output, , Closing Output Files and Pipes@},
../texinfo/texinfo.txi(,5904)    for more information.
../texinfo/texinfo.txi(,5905) @@xref@{Regexp, , Regular Expressions as Patterns@}.
../texinfo/texinfo.txi(,5906) @end smallexample
../texinfo/texinfo.txi(,5907) 
../texinfo/texinfo.txi(,5908) @node Four and Five Arguments,  , Three Arguments, xref
../texinfo/texinfo.txi(,5909) @subsection @code{@@xref} with Four and Five Arguments
../texinfo/texinfo.txi(,5910) 
../texinfo/texinfo.txi(,5911) In a cross reference, a fourth argument specifies the name of another
../texinfo/texinfo.txi(,5912) Info file, different from the file in which the reference appears, and
../texinfo/texinfo.txi(,5913) a fifth argument specifies its title as a printed manual.@refill
../texinfo/texinfo.txi(,5914) 
../texinfo/texinfo.txi(,5915) Remember that a comma or period must follow the closing brace of an
../texinfo/texinfo.txi(,5916) @code{@@xref} command to terminate the cross reference.  In the
../texinfo/texinfo.txi(,5917) following examples, a clause follows a terminating comma.@refill
../texinfo/texinfo.txi(,5918) 
../texinfo/texinfo.txi(,5919) @need 800
../texinfo/texinfo.txi(,5920) @noindent
../texinfo/texinfo.txi(,5921) The template is:
../texinfo/texinfo.txi(,5922) 
../texinfo/texinfo.txi(,5923) @example
../texinfo/texinfo.txi(,5924) @group
../texinfo/texinfo.txi(,5925) @@xref@{@var{node-name}, @var{cross-reference-name}, @var{title-or-topic},
../texinfo/texinfo.txi(,5926) @var{info-file-name}, @var{printed-manual-title}@}.
../texinfo/texinfo.txi(,5927) @end group
../texinfo/texinfo.txi(,5928) @end example
../texinfo/texinfo.txi(,5929) 
../texinfo/texinfo.txi(,5930) @need 700
../texinfo/texinfo.txi(,5931) @noindent
../texinfo/texinfo.txi(,5932) For example,
../texinfo/texinfo.txi(,5933) 
../texinfo/texinfo.txi(,5934) @example
../texinfo/texinfo.txi(,5935) @@xref@{Electrical Effects, Lightning, Thunder and Lightning,
../texinfo/texinfo.txi(,5936) weather, An Introduction to Meteorology@}, for details.
../texinfo/texinfo.txi(,5937) @end example
../texinfo/texinfo.txi(,5938) 
../texinfo/texinfo.txi(,5939) @noindent
../texinfo/texinfo.txi(,5940) produces
../texinfo/texinfo.txi(,5941) 
../texinfo/texinfo.txi(,5942) @example
../texinfo/texinfo.txi(,5943) *Note Lightning: (weather)Electrical Effects, for details.
../texinfo/texinfo.txi(,5944) @end example
../texinfo/texinfo.txi(,5945) 
../texinfo/texinfo.txi(,5946) @noindent
../texinfo/texinfo.txi(,5947) The name of the Info file is enclosed in parentheses and precedes
../texinfo/texinfo.txi(,5948) the name of the node.
../texinfo/texinfo.txi(,5949) 
../texinfo/texinfo.txi(,5950) @noindent
../texinfo/texinfo.txi(,5951) In a printed manual, the reference looks like this:@refill
../texinfo/texinfo.txi(,5952) 
../texinfo/texinfo.txi(,5953) @quotation
../texinfo/texinfo.txi(,5954) See section ``Thunder and Lightning'' in @i{An Introduction to
../texinfo/texinfo.txi(,5955) Meteorology}, for details.
../texinfo/texinfo.txi(,5956) @end quotation
../texinfo/texinfo.txi(,5957) 
../texinfo/texinfo.txi(,5958) @noindent
../texinfo/texinfo.txi(,5959) The title of the printed manual is typeset in italics; and the
../texinfo/texinfo.txi(,5960) reference lacks a page number since @TeX{} cannot know to which page a
../texinfo/texinfo.txi(,5961) reference refers when that reference is to another manual.@refill
../texinfo/texinfo.txi(,5962) 
../texinfo/texinfo.txi(,5963) Often, you will leave out the second argument when you use the long
../texinfo/texinfo.txi(,5964) version of @code{@@xref}.  In this case, the third argument, the topic
../texinfo/texinfo.txi(,5965) description, will be used as the cross reference name in Info.@refill
../texinfo/texinfo.txi(,5966) 
../texinfo/texinfo.txi(,5967) @noindent
../texinfo/texinfo.txi(,5968) The template looks like this:
../texinfo/texinfo.txi(,5969) 
../texinfo/texinfo.txi(,5970) @example
../texinfo/texinfo.txi(,5971) @@xref@{@var{node-name}, , @var{title-or-topic}, @var{info-file-name},
../texinfo/texinfo.txi(,5972) @var{printed-manual-title}@}, for details.
../texinfo/texinfo.txi(,5973) @end example
../texinfo/texinfo.txi(,5974) 
../texinfo/texinfo.txi(,5975) @noindent
../texinfo/texinfo.txi(,5976) which produces
../texinfo/texinfo.txi(,5977) 
../texinfo/texinfo.txi(,5978) @example
../texinfo/texinfo.txi(,5979) *Note @var{title-or-topic}: (@var{info-file-name})@var{node-name}, for details.
../texinfo/texinfo.txi(,5980) @end example
../texinfo/texinfo.txi(,5981) 
../texinfo/texinfo.txi(,5982) @noindent
../texinfo/texinfo.txi(,5983) and
../texinfo/texinfo.txi(,5984) 
../texinfo/texinfo.txi(,5985) @quotation
../texinfo/texinfo.txi(,5986) See section @var{title-or-topic} in @var{printed-manual-title}, for details.
../texinfo/texinfo.txi(,5987) @end quotation
../texinfo/texinfo.txi(,5988) 
../texinfo/texinfo.txi(,5989) @need 700
../texinfo/texinfo.txi(,5990) @noindent
../texinfo/texinfo.txi(,5991) For example,
../texinfo/texinfo.txi(,5992) 
../texinfo/texinfo.txi(,5993) @example
../texinfo/texinfo.txi(,5994) @@xref@{Electrical Effects, , Thunder and Lightning,
../texinfo/texinfo.txi(,5995) weather, An Introduction to Meteorology@}, for details.
../texinfo/texinfo.txi(,5996) @end example
../texinfo/texinfo.txi(,5997) 
../texinfo/texinfo.txi(,5998) @noindent
../texinfo/texinfo.txi(,5999) produces
../texinfo/texinfo.txi(,6000) 
../texinfo/texinfo.txi(,6001) @example
../texinfo/texinfo.txi(,6002) @group
../texinfo/texinfo.txi(,6003) *Note Thunder and Lightning: (weather)Electrical Effects,
../texinfo/texinfo.txi(,6004) for details.
../texinfo/texinfo.txi(,6005) @end group
../texinfo/texinfo.txi(,6006) @end example
../texinfo/texinfo.txi(,6007) 
../texinfo/texinfo.txi(,6008) @noindent
../texinfo/texinfo.txi(,6009) and
../texinfo/texinfo.txi(,6010) 
../texinfo/texinfo.txi(,6011) @quotation
../texinfo/texinfo.txi(,6012) See section ``Thunder and Lightning'' in @i{An Introduction to
../texinfo/texinfo.txi(,6013) Meteorology}, for details.
../texinfo/texinfo.txi(,6014) @end quotation
../texinfo/texinfo.txi(,6015) 
../texinfo/texinfo.txi(,6016) On rare occasions, you may want to refer to another Info file that
../texinfo/texinfo.txi(,6017) is within a single printed manual---when multiple Texinfo files are
../texinfo/texinfo.txi(,6018) incorporated into the same @TeX{} run but make separate Info files.
../texinfo/texinfo.txi(,6019) In this case, you need to specify only the fourth argument, and not
../texinfo/texinfo.txi(,6020) the fifth.@refill
../texinfo/texinfo.txi(,6021) 
../texinfo/texinfo.txi(,6022) @node Top Node Naming, ref, xref, Cross References
../texinfo/texinfo.txi(,6023) @section Naming a `Top' Node
../texinfo/texinfo.txi(,6024) @cindex Naming a `Top' Node in references
../texinfo/texinfo.txi(,6025) @cindex @samp{@r{Top}} node naming for references
../texinfo/texinfo.txi(,6026) 
../texinfo/texinfo.txi(,6027) In a cross reference, you must always name a node.  This means that in
../texinfo/texinfo.txi(,6028) order to refer to a whole manual, you must identify the `Top' node by
../texinfo/texinfo.txi(,6029) writing it as the first argument to the @code{@@xref} command.  (This
../texinfo/texinfo.txi(,6030) is different from the way you write a menu entry; see @ref{Other Info
../texinfo/texinfo.txi(,6031) Files, , Referring to Other Info Files}.)  At the same time, to
../texinfo/texinfo.txi(,6032) provide a meaningful section topic or title in the printed cross
../texinfo/texinfo.txi(,6033) reference (instead of the word `Top'), you must write an appropriate
../texinfo/texinfo.txi(,6034) entry for the third argument to the @code{@@xref} command.
../texinfo/texinfo.txi(,6035) @refill
../texinfo/texinfo.txi(,6036) 
../texinfo/texinfo.txi(,6037) @noindent
../texinfo/texinfo.txi(,6038) Thus, to make a cross reference to @cite{The GNU Make Manual},
../texinfo/texinfo.txi(,6039) write:@refill
../texinfo/texinfo.txi(,6040) 
../texinfo/texinfo.txi(,6041) @example
../texinfo/texinfo.txi(,6042) @@xref@{Top, , Overview, make, The GNU Make Manual@}.
../texinfo/texinfo.txi(,6043) @end example
../texinfo/texinfo.txi(,6044) 
../texinfo/texinfo.txi(,6045) @noindent
../texinfo/texinfo.txi(,6046) which produces
../texinfo/texinfo.txi(,6047) 
../texinfo/texinfo.txi(,6048) @example
../texinfo/texinfo.txi(,6049) *Note Overview: (make)Top.
../texinfo/texinfo.txi(,6050) @end example
../texinfo/texinfo.txi(,6051) 
../texinfo/texinfo.txi(,6052) @noindent
../texinfo/texinfo.txi(,6053) and
../texinfo/texinfo.txi(,6054) 
../texinfo/texinfo.txi(,6055) @quotation
../texinfo/texinfo.txi(,6056) See section ``Overview'' in @i{The GNU Make Manual}.
../texinfo/texinfo.txi(,6057) @end quotation
../texinfo/texinfo.txi(,6058) 
../texinfo/texinfo.txi(,6059) @noindent
../texinfo/texinfo.txi(,6060) In this example, @samp{Top} is the name of the first node, and
../texinfo/texinfo.txi(,6061) @samp{Overview} is the name of the first section of the manual.@refill
../texinfo/texinfo.txi(,6062) @node ref, pxref, Top Node Naming, Cross References
../texinfo/texinfo.txi(,6063) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,6064) @section @code{@@ref}
../texinfo/texinfo.txi(,6065) @cindex Cross references using @code{@@ref}
../texinfo/texinfo.txi(,6066) @cindex References using @code{@@ref}
../texinfo/texinfo.txi(,6067) @findex ref
../texinfo/texinfo.txi(,6068) 
../texinfo/texinfo.txi(,6069) @code{@@ref} is nearly the same as @code{@@xref} except that it does
../texinfo/texinfo.txi(,6070) not generate a `See' in the printed output, just the reference itself.
../texinfo/texinfo.txi(,6071) This makes it useful as the last part of a sentence.@refill
../texinfo/texinfo.txi(,6072) 
../texinfo/texinfo.txi(,6073) @need 700
../texinfo/texinfo.txi(,6074) @noindent
../texinfo/texinfo.txi(,6075) For example,
../texinfo/texinfo.txi(,6076) 
../texinfo/texinfo.txi(,6077) @cindex Hurricanes
../texinfo/texinfo.txi(,6078) @example
../texinfo/texinfo.txi(,6079) For more information, see @@ref@{Hurricanes@}.
../texinfo/texinfo.txi(,6080) @end example
../texinfo/texinfo.txi(,6081) 
../texinfo/texinfo.txi(,6082) @noindent
../texinfo/texinfo.txi(,6083) produces
../texinfo/texinfo.txi(,6084) 
../texinfo/texinfo.txi(,6085) @example
../texinfo/texinfo.txi(,6086) For more information, see *Note Hurricanes::.
../texinfo/texinfo.txi(,6087) @end example
../texinfo/texinfo.txi(,6088) 
../texinfo/texinfo.txi(,6089) @noindent
../texinfo/texinfo.txi(,6090) and
../texinfo/texinfo.txi(,6091) 
../texinfo/texinfo.txi(,6092) @quotation
../texinfo/texinfo.txi(,6093) For more information, see Section 8.2 [Hurricanes], page 123.
../texinfo/texinfo.txi(,6094) @end quotation
../texinfo/texinfo.txi(,6095) 
../texinfo/texinfo.txi(,6096) The @code{@@ref} command sometimes leads writers to express themselves
../texinfo/texinfo.txi(,6097) in a manner that is suitable for a printed manual but looks awkward
../texinfo/texinfo.txi(,6098) in the Info format.  Bear in mind that your audience will be using
../texinfo/texinfo.txi(,6099) both the printed and the Info format.@refill
../texinfo/texinfo.txi(,6100) 
../texinfo/texinfo.txi(,6101) @need 800
../texinfo/texinfo.txi(,6102) @noindent
../texinfo/texinfo.txi(,6103) For example,
../texinfo/texinfo.txi(,6104) 
../texinfo/texinfo.txi(,6105) @cindex Sea surges
../texinfo/texinfo.txi(,6106) @example
../texinfo/texinfo.txi(,6107) @group
../texinfo/texinfo.txi(,6108) Sea surges are described in @@ref@{Hurricanes@}.
../texinfo/texinfo.txi(,6109) @end group
../texinfo/texinfo.txi(,6110) @end example
../texinfo/texinfo.txi(,6111) 
../texinfo/texinfo.txi(,6112) @need 800
../texinfo/texinfo.txi(,6113) @noindent
../texinfo/texinfo.txi(,6114) produces
../texinfo/texinfo.txi(,6115) 
../texinfo/texinfo.txi(,6116) @quotation
../texinfo/texinfo.txi(,6117) Sea surges are described in Section 6.7 [Hurricanes], page 72.
../texinfo/texinfo.txi(,6118) @end quotation
../texinfo/texinfo.txi(,6119) 
../texinfo/texinfo.txi(,6120) @need 800
../texinfo/texinfo.txi(,6121) @noindent
../texinfo/texinfo.txi(,6122) in a printed document, and the following in Info:
../texinfo/texinfo.txi(,6123) 
../texinfo/texinfo.txi(,6124) @example
../texinfo/texinfo.txi(,6125) Sea surges are described in *Note Hurricanes::.
../texinfo/texinfo.txi(,6126) @end example
../texinfo/texinfo.txi(,6127) 
../texinfo/texinfo.txi(,6128) @quotation
../texinfo/texinfo.txi(,6129) @strong{Caution:} You @emph{must} write a period, comma, or right
../texinfo/texinfo.txi(,6130) parenthesis immediately after an @code{@@ref} command with two or more
../texinfo/texinfo.txi(,6131) arguments.  Otherwise, Info will not find the end of the cross reference
../texinfo/texinfo.txi(,6132) entry and its attempt to follow the cross reference will fail.  As a
../texinfo/texinfo.txi(,6133) general rule, you should write a period or comma after every
../texinfo/texinfo.txi(,6134) @code{@@ref} command.  This looks best in both the printed and the Info
../texinfo/texinfo.txi(,6135) output.@refill
../texinfo/texinfo.txi(,6136) @end quotation
../texinfo/texinfo.txi(,6137) 
../texinfo/texinfo.txi(,6138) @node pxref, inforef, ref, Cross References
../texinfo/texinfo.txi(,6139) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,6140) @section @code{@@pxref}
../texinfo/texinfo.txi(,6141) @cindex Cross references using @code{@@pxref}
../texinfo/texinfo.txi(,6142) @cindex References using @code{@@pxref}
../texinfo/texinfo.txi(,6143) @findex pxref
../texinfo/texinfo.txi(,6144) 
../texinfo/texinfo.txi(,6145) The parenthetical reference command, @code{@@pxref}, is nearly the
../texinfo/texinfo.txi(,6146) same as @code{@@xref}, but you use it @emph{only} inside parentheses
../texinfo/texinfo.txi(,6147) and you do @emph{not} type a comma or period after the command's
../texinfo/texinfo.txi(,6148) closing brace.  The command differs from @code{@@xref} in two
../texinfo/texinfo.txi(,6149) ways:@refill
../texinfo/texinfo.txi(,6150) 
../texinfo/texinfo.txi(,6151) @enumerate
../texinfo/texinfo.txi(,6152) @item
../texinfo/texinfo.txi(,6153) @TeX{} typesets the reference for the printed manual with a lower case
../texinfo/texinfo.txi(,6154) `see' rather than an upper case `See'.@refill
../texinfo/texinfo.txi(,6155) 
../texinfo/texinfo.txi(,6156) @item
../texinfo/texinfo.txi(,6157) The Info formatting commands automatically end the reference with a
../texinfo/texinfo.txi(,6158) closing colon or period.@refill
../texinfo/texinfo.txi(,6159) @end enumerate
../texinfo/texinfo.txi(,6160) 
../texinfo/texinfo.txi(,6161) Because one type of formatting automatically inserts closing
../texinfo/texinfo.txi(,6162) punctuation and the other does not, you should use @code{@@pxref}
../texinfo/texinfo.txi(,6163) @emph{only} inside parentheses as part of another sentence.  Also, you
../texinfo/texinfo.txi(,6164) yourself should not insert punctuation after the reference, as you do
../texinfo/texinfo.txi(,6165) with @code{@@xref}.@refill
../texinfo/texinfo.txi(,6166) 
../texinfo/texinfo.txi(,6167) @code{@@pxref} is designed so that the output looks right and works
../texinfo/texinfo.txi(,6168) right between parentheses both in printed output and in an Info file.
../texinfo/texinfo.txi(,6169) In a printed manual, a closing comma or period should not follow a
../texinfo/texinfo.txi(,6170) cross reference within parentheses; such punctuation is wrong.  But in
../texinfo/texinfo.txi(,6171) an Info file, suitable closing punctuation must follow the cross
../texinfo/texinfo.txi(,6172) reference so Info can recognize its end.  @code{@@pxref} spares you
../texinfo/texinfo.txi(,6173) the need to use complicated methods to put a terminator into one form
../texinfo/texinfo.txi(,6174) of the output and not the other.@refill
../texinfo/texinfo.txi(,6175) 
../texinfo/texinfo.txi(,6176) @noindent
../texinfo/texinfo.txi(,6177) With one argument, a parenthetical cross reference looks like
../texinfo/texinfo.txi(,6178) this:@refill
../texinfo/texinfo.txi(,6179) 
../texinfo/texinfo.txi(,6180) @cindex Flooding
../texinfo/texinfo.txi(,6181) @example
../texinfo/texinfo.txi(,6182) @dots{} storms cause flooding (@@pxref@{Hurricanes@}) @dots{}
../texinfo/texinfo.txi(,6183) @end example
../texinfo/texinfo.txi(,6184) 
../texinfo/texinfo.txi(,6185) @need 800
../texinfo/texinfo.txi(,6186) @noindent
../texinfo/texinfo.txi(,6187) which produces
../texinfo/texinfo.txi(,6188) 
../texinfo/texinfo.txi(,6189) @example
../texinfo/texinfo.txi(,6190) @group
../texinfo/texinfo.txi(,6191) @dots{} storms cause flooding (*Note Hurricanes::) @dots{}
../texinfo/texinfo.txi(,6192) @end group
../texinfo/texinfo.txi(,6193) @end example
../texinfo/texinfo.txi(,6194) 
../texinfo/texinfo.txi(,6195) @noindent
../texinfo/texinfo.txi(,6196) and
../texinfo/texinfo.txi(,6197) 
../texinfo/texinfo.txi(,6198) @quotation
../texinfo/texinfo.txi(,6199) @dots{} storms cause flooding (see Section 6.7 [Hurricanes], page 72) @dots{}
../texinfo/texinfo.txi(,6200) @end quotation
../texinfo/texinfo.txi(,6201) 
../texinfo/texinfo.txi(,6202) With two arguments, a parenthetical cross reference has this
../texinfo/texinfo.txi(,6203) template:@refill
../texinfo/texinfo.txi(,6204) 
../texinfo/texinfo.txi(,6205) @example
../texinfo/texinfo.txi(,6206) @dots{} (@@pxref@{@var{node-name}, @var{cross-reference-name}@}) @dots{}
../texinfo/texinfo.txi(,6207) @end example
../texinfo/texinfo.txi(,6208) 
../texinfo/texinfo.txi(,6209) @noindent
../texinfo/texinfo.txi(,6210) which produces
../texinfo/texinfo.txi(,6211) 
../texinfo/texinfo.txi(,6212) @example
../texinfo/texinfo.txi(,6213) @dots{} (*Note @var{cross-reference-name}: @var{node-name}.) @dots{}
../texinfo/texinfo.txi(,6214) @end example
../texinfo/texinfo.txi(,6215) 
../texinfo/texinfo.txi(,6216) @noindent
../texinfo/texinfo.txi(,6217) and
../texinfo/texinfo.txi(,6218) 
../texinfo/texinfo.txi(,6219) @need 1500
../texinfo/texinfo.txi(,6220) @quotation
../texinfo/texinfo.txi(,6221) @dots{} (see Section @var{nnn} [@var{node-name}], page @var{ppp}) @dots{}
../texinfo/texinfo.txi(,6222) @end quotation
../texinfo/texinfo.txi(,6223) 
../texinfo/texinfo.txi(,6224) @code{@@pxref} can be used with up to five arguments just like
../texinfo/texinfo.txi(,6225) @code{@@xref} (@pxref{xref, , @code{@@xref}}).@refill
../texinfo/texinfo.txi(,6226) 
../texinfo/texinfo.txi(,6227) @quotation
../texinfo/texinfo.txi(,6228) @strong{Please note:} Use @code{@@pxref} only as a parenthetical
../texinfo/texinfo.txi(,6229) reference.  Do not try to use @code{@@pxref} as a clause in a sentence.
../texinfo/texinfo.txi(,6230) It will look bad in either the Info file, the printed output, or
../texinfo/texinfo.txi(,6231) both.@refill
../texinfo/texinfo.txi(,6232) 
../texinfo/texinfo.txi(,6233) Also, parenthetical cross references look best at the ends of sentences.
../texinfo/texinfo.txi(,6234) Although you may write them in the middle of a sentence, that location
../texinfo/texinfo.txi(,6235) breaks up the flow of text.@refill
../texinfo/texinfo.txi(,6236) @end quotation
../texinfo/texinfo.txi(,6237) 
../texinfo/texinfo.txi(,6238) @node inforef, uref, pxref, Cross References
../texinfo/texinfo.txi(,6239) @section @code{@@inforef}
../texinfo/texinfo.txi(,6240) @cindex Cross references using @code{@@inforef}
../texinfo/texinfo.txi(,6241) @cindex References using @code{@@inforef}
../texinfo/texinfo.txi(,6242) @findex inforef
../texinfo/texinfo.txi(,6243) 
../texinfo/texinfo.txi(,6244) @code{@@inforef} is used for cross references to Info files for which
../texinfo/texinfo.txi(,6245) there are no printed manuals.  Even in a printed manual,
../texinfo/texinfo.txi(,6246) @code{@@inforef} generates a reference directing the user to look in
../texinfo/texinfo.txi(,6247) an Info file.@refill
../texinfo/texinfo.txi(,6248) 
../texinfo/texinfo.txi(,6249) The command takes either two or three arguments, in the following
../texinfo/texinfo.txi(,6250) order:@refill
../texinfo/texinfo.txi(,6251) 
../texinfo/texinfo.txi(,6252) @enumerate
../texinfo/texinfo.txi(,6253) @item
../texinfo/texinfo.txi(,6254) The node name.
../texinfo/texinfo.txi(,6255) 
../texinfo/texinfo.txi(,6256) @item
../texinfo/texinfo.txi(,6257) The cross reference name (optional).
../texinfo/texinfo.txi(,6258) 
../texinfo/texinfo.txi(,6259) @item
../texinfo/texinfo.txi(,6260) The Info file name.
../texinfo/texinfo.txi(,6261) @end enumerate
../texinfo/texinfo.txi(,6262) 
../texinfo/texinfo.txi(,6263) @noindent
../texinfo/texinfo.txi(,6264) Separate the arguments with commas, as with @code{@@xref}.  Also, you
../texinfo/texinfo.txi(,6265) must terminate the reference with a comma or period after the
../texinfo/texinfo.txi(,6266) @samp{@}}, as you do with @code{@@xref}.@refill
../texinfo/texinfo.txi(,6267) 
../texinfo/texinfo.txi(,6268) @noindent
../texinfo/texinfo.txi(,6269) The template is:
../texinfo/texinfo.txi(,6270) 
../texinfo/texinfo.txi(,6271) @example
../texinfo/texinfo.txi(,6272) @@inforef@{@var{node-name}, @var{cross-reference-name}, @var{info-file-name}@},
../texinfo/texinfo.txi(,6273) @end example
../texinfo/texinfo.txi(,6274) 
../texinfo/texinfo.txi(,6275) @need 800
../texinfo/texinfo.txi(,6276) @noindent
../texinfo/texinfo.txi(,6277) Thus,
../texinfo/texinfo.txi(,6278) 
../texinfo/texinfo.txi(,6279) @example
../texinfo/texinfo.txi(,6280) @group
../texinfo/texinfo.txi(,6281) @@inforef@{Expert, Advanced Info commands, info@},
../texinfo/texinfo.txi(,6282) for more information.
../texinfo/texinfo.txi(,6283) @end group
../texinfo/texinfo.txi(,6284) @end example
../texinfo/texinfo.txi(,6285) 
../texinfo/texinfo.txi(,6286) @need 800
../texinfo/texinfo.txi(,6287) @noindent
../texinfo/texinfo.txi(,6288) produces
../texinfo/texinfo.txi(,6289) 
../texinfo/texinfo.txi(,6290) @example
../texinfo/texinfo.txi(,6291) @group
../texinfo/texinfo.txi(,6292) *Note Advanced Info commands: (info)Expert,
../texinfo/texinfo.txi(,6293) for more information.
../texinfo/texinfo.txi(,6294) @end group
../texinfo/texinfo.txi(,6295) @end example
../texinfo/texinfo.txi(,6296) 
../texinfo/texinfo.txi(,6297) @need 800
../texinfo/texinfo.txi(,6298) @noindent
../texinfo/texinfo.txi(,6299) and
../texinfo/texinfo.txi(,6300) 
../texinfo/texinfo.txi(,6301) @quotation
../texinfo/texinfo.txi(,6302) See Info file @file{info}, node @samp{Expert}, for more information.
../texinfo/texinfo.txi(,6303) @end quotation
../texinfo/texinfo.txi(,6304) 
../texinfo/texinfo.txi(,6305) @need 800
../texinfo/texinfo.txi(,6306) @noindent
../texinfo/texinfo.txi(,6307) Similarly,
../texinfo/texinfo.txi(,6308) 
../texinfo/texinfo.txi(,6309) @example
../texinfo/texinfo.txi(,6310) @group
../texinfo/texinfo.txi(,6311) @@inforef@{Expert, , info@}, for more information.
../texinfo/texinfo.txi(,6312) @end group
../texinfo/texinfo.txi(,6313) @end example
../texinfo/texinfo.txi(,6314) 
../texinfo/texinfo.txi(,6315) @need 800
../texinfo/texinfo.txi(,6316) @noindent
../texinfo/texinfo.txi(,6317) produces
../texinfo/texinfo.txi(,6318) 
../texinfo/texinfo.txi(,6319) @example
../texinfo/texinfo.txi(,6320) *Note (info)Expert::, for more information.
../texinfo/texinfo.txi(,6321) @end example
../texinfo/texinfo.txi(,6322) 
../texinfo/texinfo.txi(,6323) @need 800
../texinfo/texinfo.txi(,6324) @noindent
../texinfo/texinfo.txi(,6325) and
../texinfo/texinfo.txi(,6326) 
../texinfo/texinfo.txi(,6327) @quotation
../texinfo/texinfo.txi(,6328) See Info file @file{info}, node @samp{Expert}, for more information.
../texinfo/texinfo.txi(,6329) @end quotation
../texinfo/texinfo.txi(,6330) 
../texinfo/texinfo.txi(,6331) The converse of @code{@@inforef} is @code{@@cite}, which is used to
../texinfo/texinfo.txi(,6332) refer to printed works for which no Info form exists.  @xref{cite, ,
../texinfo/texinfo.txi(,6333) @code{@@cite}}.@refill
../texinfo/texinfo.txi(,6334) 
../texinfo/texinfo.txi(,6335) 
../texinfo/texinfo.txi(,6336) @node uref
../texinfo/texinfo.txi(,6337) @section @code{@@uref@{@var{url}[, @var{text}][, @var{replacement}]@}}
../texinfo/texinfo.txi(,6338) @findex uref
../texinfo/texinfo.txi(,6339) @cindex Uniform resource locator, referring to
../texinfo/texinfo.txi(,6340) @cindex URL, referring to
../texinfo/texinfo.txi(,6341) 
../texinfo/texinfo.txi(,6342) @cindex @code{href}, producing HTML
../texinfo/texinfo.txi(,6343) @code{@@uref} produces a reference to a uniform resource locator (url).
../texinfo/texinfo.txi(,6344) It takes one mandatory argument, the url, and two optional arguments
../texinfo/texinfo.txi(,6345) which control the text that is displayed.  In HTML output, @code{@@uref}
../texinfo/texinfo.txi(,6346) produces a link you can follow.
../texinfo/texinfo.txi(,6347) 
../texinfo/texinfo.txi(,6348) The second argument, if specified, is the text to display (the default
../texinfo/texinfo.txi(,6349) is the url itself); in Info and DVI output, but not in HTML output, the
../texinfo/texinfo.txi(,6350) url is also output.
../texinfo/texinfo.txi(,6351) 
../texinfo/texinfo.txi(,6352) @cindex Man page, reference to
../texinfo/texinfo.txi(,6353) The third argument, on the other hand, if specified is also the text to
../texinfo/texinfo.txi(,6354) display, but the url is @emph{not} output in any format.  This is useful
../texinfo/texinfo.txi(,6355) when the text is already sufficiently referential, as in a man page.  If
../texinfo/texinfo.txi(,6356) the third argument is given, the second argument is ignored.
../texinfo/texinfo.txi(,6357) 
../texinfo/texinfo.txi(,6358) The simple one argument form, where the url is both the target and the
../texinfo/texinfo.txi(,6359) text of the link:
../texinfo/texinfo.txi(,6360) 
../texinfo/texinfo.txi(,6361) @example
../texinfo/texinfo.txi(,6362) The official GNU ftp site is @@uref@{ftp://ftp.gnu.org/gnu@}.
../texinfo/texinfo.txi(,6363) @end example
../texinfo/texinfo.txi(,6364) 
../texinfo/texinfo.txi(,6365) @noindent produces:
../texinfo/texinfo.txi(,6366) @display
../texinfo/texinfo.txi(,6367) The official GNU ftp site is @uref{ftp://ftp.gnu.org/gnu}.
../texinfo/texinfo.txi(,6368) @end display
../texinfo/texinfo.txi(,6369) 
../texinfo/texinfo.txi(,6370) 
../texinfo/texinfo.txi(,6371) An example of the two-argument form:
../texinfo/texinfo.txi(,6372) @example
../texinfo/texinfo.txi(,6373) The official @@uref@{ftp://ftp.gnu.org/gnu, GNU ftp site@}
../texinfo/texinfo.txi(,6374) holds programs and texts.
../texinfo/texinfo.txi(,6375) @end example
../texinfo/texinfo.txi(,6376) 
../texinfo/texinfo.txi(,6377) @noindent produces:
../texinfo/texinfo.txi(,6378) @display
../texinfo/texinfo.txi(,6379) The official @uref{ftp://ftp.gnu.org/gnu, GNU ftp site}
../texinfo/texinfo.txi(,6380) holds programs and texts.
../texinfo/texinfo.txi(,6381) @end display
../texinfo/texinfo.txi(,6382) 
../texinfo/texinfo.txi(,6383) @noindent that is, the Info output is this:
../texinfo/texinfo.txi(,6384) @example
../texinfo/texinfo.txi(,6385) The official GNU ftp site (ftp://ftp.gnu.org/gnu)
../texinfo/texinfo.txi(,6386) holds programs and texts.
../texinfo/texinfo.txi(,6387) @end example
../texinfo/texinfo.txi(,6388) 
../texinfo/texinfo.txi(,6389) @noindent and the HTML output is this:
../texinfo/texinfo.txi(,6390) @example
../texinfo/texinfo.txi(,6391) The official <a href="ftp://ftp.gnu.org/gnu">GNU ftp site</a>
../texinfo/texinfo.txi(,6392) holds programs and texts.
../texinfo/texinfo.txi(,6393) @end example
../texinfo/texinfo.txi(,6394) 
../texinfo/texinfo.txi(,6395) 
../texinfo/texinfo.txi(,6396) An example of the three-argument form:
../texinfo/texinfo.txi(,6397) @example
../texinfo/texinfo.txi(,6398) The @@uref@{/man.cgi/1/ls,,ls(1)@} program @dots{}
../texinfo/texinfo.txi(,6399) @end example
../texinfo/texinfo.txi(,6400) 
../texinfo/texinfo.txi(,6401) @noindent produces:
../texinfo/texinfo.txi(,6402) @display
../texinfo/texinfo.txi(,6403) The @uref{/man.cgi/1/ls,,ls(1)} program @dots{}
../texinfo/texinfo.txi(,6404) @end display
../texinfo/texinfo.txi(,6405) 
../texinfo/texinfo.txi(,6406) @noindent but with HTML:
../texinfo/texinfo.txi(,6407) @example
../texinfo/texinfo.txi(,6408) The <a href="/man.cgi/1/ls">ls(1)</a> program @dots{}
../texinfo/texinfo.txi(,6409) @end example
../texinfo/texinfo.txi(,6410) 
../texinfo/texinfo.txi(,6411) To merely indicate a url without creating a link people can follow, use
../texinfo/texinfo.txi(,6412) @code{@@url} (@pxref{url, @code{@@url}}).
../texinfo/texinfo.txi(,6413) 
../texinfo/texinfo.txi(,6414) Some people prefer to display url's in the unambiguous format:
../texinfo/texinfo.txi(,6415) 
../texinfo/texinfo.txi(,6416) @display
../texinfo/texinfo.txi(,6417) <URL:http://@var{host}/@var{path}>
../texinfo/texinfo.txi(,6418) @end display
../texinfo/texinfo.txi(,6419) 
../texinfo/texinfo.txi(,6420) @noindent
../texinfo/texinfo.txi(,6421) @cindex <URL convention, not used
../texinfo/texinfo.txi(,6422) You can use this form in the input file if you wish.  We feel it's not
../texinfo/texinfo.txi(,6423) necessary to clutter up the output with the extra @samp{<URL:} and
../texinfo/texinfo.txi(,6424) @samp{>}, since any software that tries to detect url's in text already
../texinfo/texinfo.txi(,6425) has to detect them without the @samp{<URL:} to be useful.
../texinfo/texinfo.txi(,6426) 
../texinfo/texinfo.txi(,6427) 
../texinfo/texinfo.txi(,6428) @node Marking Text
../texinfo/texinfo.txi(,6429) @chapter Marking Words and Phrases
../texinfo/texinfo.txi(,6430) @cindex Paragraph, marking text within
../texinfo/texinfo.txi(,6431) @cindex Marking words and phrases
../texinfo/texinfo.txi(,6432) @cindex Words and phrases, marking them
../texinfo/texinfo.txi(,6433) @cindex Marking text within a paragraph
../texinfo/texinfo.txi(,6434) @cindex Text, marking up
../texinfo/texinfo.txi(,6435) 
../texinfo/texinfo.txi(,6436) In Texinfo, you can mark words and phrases in a variety of ways.
../texinfo/texinfo.txi(,6437) The Texinfo formatters use this information to determine how to
../texinfo/texinfo.txi(,6438) highlight the text.
../texinfo/texinfo.txi(,6439) You can specify, for example, whether a word or phrase is a
../texinfo/texinfo.txi(,6440) defining occurrence, a metasyntactic variable, or a symbol used in a
../texinfo/texinfo.txi(,6441) program.  Also, you can emphasize text, in several different ways.
../texinfo/texinfo.txi(,6442) 
../texinfo/texinfo.txi(,6443) @menu
../texinfo/texinfo.txi(,6444) * Indicating::                  How to indicate definitions, files, etc.
../texinfo/texinfo.txi(,6445) * Emphasis::                    How to emphasize text.
../texinfo/texinfo.txi(,6446) @end menu
../texinfo/texinfo.txi(,6447) 
../texinfo/texinfo.txi(,6448) 
../texinfo/texinfo.txi(,6449) @node Indicating, Emphasis, Marking Text, Marking Text
../texinfo/texinfo.txi(,6450) @section Indicating Definitions, Commands, etc.
../texinfo/texinfo.txi(,6451) @cindex Highlighting text
../texinfo/texinfo.txi(,6452) @cindex Indicating commands, definitions, etc.
../texinfo/texinfo.txi(,6453) 
../texinfo/texinfo.txi(,6454) Texinfo has commands for indicating just what kind of object a piece of
../texinfo/texinfo.txi(,6455) text refers to.  For example, metasyntactic variables are marked by
../texinfo/texinfo.txi(,6456) @code{@@var}, and code by @code{@@code}.  Since the pieces of text are
../texinfo/texinfo.txi(,6457) labelled by commands that tell what kind of object they are, it is easy
../texinfo/texinfo.txi(,6458) to change the way the Texinfo formatters prepare such text.  (Texinfo is
../texinfo/texinfo.txi(,6459) an @emph{intentional} formatting language rather than a @emph{typesetting}
../texinfo/texinfo.txi(,6460) formatting language.)@refill
../texinfo/texinfo.txi(,6461) 
../texinfo/texinfo.txi(,6462) For example, in a printed manual,
../texinfo/texinfo.txi(,6463) code is usually illustrated in a typewriter font;
../texinfo/texinfo.txi(,6464) @code{@@code} tells @TeX{} to typeset this text in this font.  But it
../texinfo/texinfo.txi(,6465) would be easy to change the way @TeX{} highlights code to use another
../texinfo/texinfo.txi(,6466) font, and this change would not affect how keystroke examples are
../texinfo/texinfo.txi(,6467) highlighted.  If straight typesetting commands were used in the body
../texinfo/texinfo.txi(,6468) of the file and you wanted to make a change, you would need to check
../texinfo/texinfo.txi(,6469) every single occurrence to make sure that you were changing code and
../texinfo/texinfo.txi(,6470) not something else that should not be changed.@refill
../texinfo/texinfo.txi(,6471) 
../texinfo/texinfo.txi(,6472) @menu
../texinfo/texinfo.txi(,6473) * Useful Highlighting::         Highlighting provides useful information.
../texinfo/texinfo.txi(,6474) * code::                        Indicating program code.
../texinfo/texinfo.txi(,6475) * kbd::                         Showing keyboard input.
../texinfo/texinfo.txi(,6476) * key::                         Specifying keys.
../texinfo/texinfo.txi(,6477) * samp::                        A literal sequence of characters.
../texinfo/texinfo.txi(,6478) * verb::                        A verbatim sequence of characters.
../texinfo/texinfo.txi(,6479) * var::                         Indicating metasyntactic variables.
../texinfo/texinfo.txi(,6480) * env::                         Indicating environment variables.
../texinfo/texinfo.txi(,6481) * file::                        Indicating file names.
../texinfo/texinfo.txi(,6482) * command::                     Indicating command names.
../texinfo/texinfo.txi(,6483) * option::                      Indicating option names.
../texinfo/texinfo.txi(,6484) * dfn::                         Specifying definitions.
../texinfo/texinfo.txi(,6485) * cite::                        Referring to books not in the  Info system.
../texinfo/texinfo.txi(,6486) * acronym::                     Indicating acronyms.
../texinfo/texinfo.txi(,6487) * url::                         Indicating a World Wide Web reference.
../texinfo/texinfo.txi(,6488) * email::                       Indicating an electronic mail address.
../texinfo/texinfo.txi(,6489) @end menu
../texinfo/texinfo.txi(,6490) 
../texinfo/texinfo.txi(,6491) 
../texinfo/texinfo.txi(,6492) @node Useful Highlighting, code, Indicating, Indicating
../texinfo/texinfo.txi(,6494) @subheading Highlighting Commands are Useful
../texinfo/texinfo.txi(,6496) 
../texinfo/texinfo.txi(,6497) The highlighting commands can be used to extract useful information
../texinfo/texinfo.txi(,6498) from the file, such as lists of functions or file names.  It is
../texinfo/texinfo.txi(,6499) possible, for example, to write a program in Emacs Lisp (or a keyboard
../texinfo/texinfo.txi(,6500) macro) to insert an index entry after every paragraph that contains
../texinfo/texinfo.txi(,6501) words or phrases marked by a specified command.  You could do this to
../texinfo/texinfo.txi(,6502) construct an index of functions if you had not already made the
../texinfo/texinfo.txi(,6503) entries.@refill
../texinfo/texinfo.txi(,6504) 
../texinfo/texinfo.txi(,6505) The commands serve a variety of purposes:@refill
../texinfo/texinfo.txi(,6506) 
../texinfo/texinfo.txi(,6507) @table @code
../texinfo/texinfo.txi(,6508) @item @@code@{@var{sample-code}@}
../texinfo/texinfo.txi(,6509) Indicate text that is a literal example of a piece of a program.@refill
../texinfo/texinfo.txi(,6510) 
../texinfo/texinfo.txi(,6511) @item @@kbd@{@var{keyboard-characters}@}
../texinfo/texinfo.txi(,6512) Indicate keyboard input.@refill
../texinfo/texinfo.txi(,6513) 
../texinfo/texinfo.txi(,6514) @item @@key@{@var{key-name}@}
../texinfo/texinfo.txi(,6515) Indicate the conventional name for a key on a keyboard.@refill
../texinfo/texinfo.txi(,6516) 
../texinfo/texinfo.txi(,6517) @item @@samp@{@var{text}@}
../texinfo/texinfo.txi(,6518) Indicate text that is a literal example of a sequence of characters.@refill
../texinfo/texinfo.txi(,6519) 
../texinfo/texinfo.txi(,6520) @item @@var@{@var{metasyntactic-variable}@}
../texinfo/texinfo.txi(,6521) Indicate a metasyntactic variable.@refill
../texinfo/texinfo.txi(,6522) 
../texinfo/texinfo.txi(,6523) @item @@env@{@var{environment-variable}@}
../texinfo/texinfo.txi(,6524) Indicate an environment variable.@refill
../texinfo/texinfo.txi(,6525) 
../texinfo/texinfo.txi(,6526) @item @@file@{@var{file-name}@}
../texinfo/texinfo.txi(,6527) Indicate the name of a file.@refill
../texinfo/texinfo.txi(,6528) 
../texinfo/texinfo.txi(,6529) @item @@command@{@var{command-name}@}
../texinfo/texinfo.txi(,6530) Indicate the name of a command.@refill
../texinfo/texinfo.txi(,6531) 
../texinfo/texinfo.txi(,6532) @item @@option@{@var{option}@}
../texinfo/texinfo.txi(,6533) Indicate a command-line option.@refill
../texinfo/texinfo.txi(,6534) 
../texinfo/texinfo.txi(,6535) @item @@dfn@{@var{term}@}
../texinfo/texinfo.txi(,6536) Indicate the introductory or defining use of a term.@refill
../texinfo/texinfo.txi(,6537) 
../texinfo/texinfo.txi(,6538) @item @@cite@{@var{reference}@}
../texinfo/texinfo.txi(,6539) Indicate the name of a book.@refill
../texinfo/texinfo.txi(,6540) 
../texinfo/texinfo.txi(,6541) @item @@acronym@{@var{acronym}@}
../texinfo/texinfo.txi(,6542) Indicate an acronym.@refill
../texinfo/texinfo.txi(,6543) 
../texinfo/texinfo.txi(,6544) @item @@url@{@var{uniform-resource-locator}@}
../texinfo/texinfo.txi(,6545) Indicate a uniform resource locator for the World Wide Web.
../texinfo/texinfo.txi(,6546) 
../texinfo/texinfo.txi(,6547) @item @@email@{@var{email-address}[, @var{displayed-text}]@}
../texinfo/texinfo.txi(,6548) Indicate an electronic mail address.
../texinfo/texinfo.txi(,6549) 
../texinfo/texinfo.txi(,6554) @end table
../texinfo/texinfo.txi(,6555) 
../texinfo/texinfo.txi(,6556) 
../texinfo/texinfo.txi(,6557) @node code
../texinfo/texinfo.txi(,6558) @subsection @code{@@code}@{@var{sample-code}@}
../texinfo/texinfo.txi(,6559) @findex code
../texinfo/texinfo.txi(,6560) 
../texinfo/texinfo.txi(,6561) @cindex Syntactic tokens, indicating
../texinfo/texinfo.txi(,6562) Use the @code{@@code} command to indicate text that is a piece of a
../texinfo/texinfo.txi(,6563) program and which consists of entire syntactic tokens.  Enclose the
../texinfo/texinfo.txi(,6564) text in braces.
../texinfo/texinfo.txi(,6565) 
../texinfo/texinfo.txi(,6566) @cindex Expressions in a program, indicating
../texinfo/texinfo.txi(,6567) @cindex Keywords, indicating
../texinfo/texinfo.txi(,6568) @cindex Reserved words, indicating
../texinfo/texinfo.txi(,6569) Thus, you should use @code{@@code} for an expression in a program, for
../texinfo/texinfo.txi(,6570) the name of a variable or function used in a program, or for a
../texinfo/texinfo.txi(,6571) keyword in a programming language.
../texinfo/texinfo.txi(,6572) 
../texinfo/texinfo.txi(,6573) Use @code{@@code} for command names in languages that resemble
../texinfo/texinfo.txi(,6574) programming languages, such as Texinfo.  For example, @code{@@code} and
../texinfo/texinfo.txi(,6575) @code{@@samp} are produced by writing @samp{@@code@{@@@@code@}} and
../texinfo/texinfo.txi(,6576) @samp{@@code@{@@@@samp@}} in the Texinfo source, respectively.
../texinfo/texinfo.txi(,6577) 
../texinfo/texinfo.txi(,6578) @cindex Case, not altering in @code{@@code}
../texinfo/texinfo.txi(,6579) It is incorrect to alter the case of a word inside an @code{@@code}
../texinfo/texinfo.txi(,6580) command when it appears at the beginning of a sentence.  Most computer
../texinfo/texinfo.txi(,6581) languages are case sensitive.  In C, for example, @code{Printf} is
../texinfo/texinfo.txi(,6582) different from the identifier @code{printf}, and most likely is a
../texinfo/texinfo.txi(,6583) misspelling of it.  Even in languages which are not case sensitive, it
../texinfo/texinfo.txi(,6584) is confusing to a human reader to see identifiers spelled in different
../texinfo/texinfo.txi(,6585) ways.  Pick one spelling and always use that.  If you do not want to
../texinfo/texinfo.txi(,6586) start a sentence with a command name written all in lower case, you
../texinfo/texinfo.txi(,6587) should rearrange the sentence.
../texinfo/texinfo.txi(,6588) 
../texinfo/texinfo.txi(,6589) In the printed manual, @code{@@code} causes @TeX{} to typeset the
../texinfo/texinfo.txi(,6590) argument in a typewriter face.  In the Info file, it causes the Info
../texinfo/texinfo.txi(,6591) formatting commands to use single quotation marks around the text.
../texinfo/texinfo.txi(,6592) 
../texinfo/texinfo.txi(,6593) @need 700
../texinfo/texinfo.txi(,6594) For example,
../texinfo/texinfo.txi(,6595) 
../texinfo/texinfo.txi(,6596) @example
../texinfo/texinfo.txi(,6597) The function returns @@code@{nil@}.
../texinfo/texinfo.txi(,6598) @end example
../texinfo/texinfo.txi(,6599) 
../texinfo/texinfo.txi(,6600) @noindent
../texinfo/texinfo.txi(,6601) produces this in the printed manual:
../texinfo/texinfo.txi(,6602) 
../texinfo/texinfo.txi(,6603) @quotation
../texinfo/texinfo.txi(,6604) The function returns @code{nil}.
../texinfo/texinfo.txi(,6605) @end quotation
../texinfo/texinfo.txi(,6606) 
../texinfo/texinfo.txi(,6614) 
../texinfo/texinfo.txi(,6615) Here are some cases for which it is preferable not to use @code{@@code}:
../texinfo/texinfo.txi(,6616) 
../texinfo/texinfo.txi(,6617) @itemize @bullet
../texinfo/texinfo.txi(,6618) @item
../texinfo/texinfo.txi(,6619) For shell command names such as @command{ls} (use @code{@@command}).
../texinfo/texinfo.txi(,6620) 
../texinfo/texinfo.txi(,6621) @item
../texinfo/texinfo.txi(,6622) For shell options such as @samp{-c} when such options stand alone (use
../texinfo/texinfo.txi(,6623) @code{@@option}).
../texinfo/texinfo.txi(,6624) 
../texinfo/texinfo.txi(,6625) @item
../texinfo/texinfo.txi(,6626) Also, an entire shell command often looks better if written using
../texinfo/texinfo.txi(,6627) @code{@@samp} rather than @code{@@code}.  In this case, the rule is to
../texinfo/texinfo.txi(,6628) choose the more pleasing format.
../texinfo/texinfo.txi(,6629) 
../texinfo/texinfo.txi(,6630) @item
../texinfo/texinfo.txi(,6631) For environment variable such as @env{TEXINPUTS} (use @code{@@env}).
../texinfo/texinfo.txi(,6632) 
../texinfo/texinfo.txi(,6633) @item
../texinfo/texinfo.txi(,6634) For a string of characters shorter than a syntactic token.  For example,
../texinfo/texinfo.txi(,6635) if you are writing about @samp{goto-ch}, which is just a part of the
../texinfo/texinfo.txi(,6636) name for the @code{goto-char} Emacs Lisp function, you should use
../texinfo/texinfo.txi(,6637) @code{@@samp}.
../texinfo/texinfo.txi(,6638) 
../texinfo/texinfo.txi(,6639) @item
../texinfo/texinfo.txi(,6640) In general, when writing about the characters used in a token; for
../texinfo/texinfo.txi(,6641) example, do not use @code{@@code} when you are explaining what letters
../texinfo/texinfo.txi(,6642) or printable symbols can be used in the names of functions.  (Use
../texinfo/texinfo.txi(,6643) @code{@@samp}.)  Also, you should not use @code{@@code} to mark text
../texinfo/texinfo.txi(,6644) that is considered input to programs unless the input is written in a
../texinfo/texinfo.txi(,6645) language that is like a programming language.  For example, you should
../texinfo/texinfo.txi(,6646) not use @code{@@code} for the keystroke commands of GNU Emacs (use
../texinfo/texinfo.txi(,6647) @code{@@kbd} instead) although you may use @code{@@code} for the names
../texinfo/texinfo.txi(,6648) of the Emacs Lisp functions that the keystroke commands invoke.
../texinfo/texinfo.txi(,6649) 
../texinfo/texinfo.txi(,6650) @end itemize
../texinfo/texinfo.txi(,6651) 
../texinfo/texinfo.txi(,6652) Since @code{@@command}, @code{@@option}, and @code{@@env} were
../texinfo/texinfo.txi(,6653) introduced relatively recently, it is acceptable to use @code{@@code} or
../texinfo/texinfo.txi(,6654) @code{@@samp} for command names, options, and environment variables.
../texinfo/texinfo.txi(,6655) The new commands allow you to express the markup more precisely, but
../texinfo/texinfo.txi(,6656) there is no real harm in using the older commands, and of course the
../texinfo/texinfo.txi(,6657) long-standing manuals do so.
../texinfo/texinfo.txi(,6658) 
../texinfo/texinfo.txi(,6659) 
../texinfo/texinfo.txi(,6660) @node kbd
../texinfo/texinfo.txi(,6661) @subsection @code{@@kbd}@{@var{keyboard-characters}@}
../texinfo/texinfo.txi(,6662) @findex kbd
../texinfo/texinfo.txi(,6663) @cindex Keyboard input
../texinfo/texinfo.txi(,6664) 
../texinfo/texinfo.txi(,6665) Use the @code{@@kbd} command for characters of input to be typed by
../texinfo/texinfo.txi(,6666) users.  For example, to refer to the characters @kbd{M-a},
../texinfo/texinfo.txi(,6667) write@refill
../texinfo/texinfo.txi(,6668) 
../texinfo/texinfo.txi(,6669) @example
../texinfo/texinfo.txi(,6670) @@kbd@{M-a@}
../texinfo/texinfo.txi(,6671) @end example
../texinfo/texinfo.txi(,6672) 
../texinfo/texinfo.txi(,6673) @noindent
../texinfo/texinfo.txi(,6674) and to refer to the characters @kbd{M-x shell}, write@refill
../texinfo/texinfo.txi(,6675) 
../texinfo/texinfo.txi(,6676) @example
../texinfo/texinfo.txi(,6677) @@kbd@{M-x shell@}
../texinfo/texinfo.txi(,6678) @end example
../texinfo/texinfo.txi(,6679) 
../texinfo/texinfo.txi(,6680) @cindex user input
../texinfo/texinfo.txi(,6681) @cindex slanted typewriter font, for @code{@@kbd}
../texinfo/texinfo.txi(,6682) The @code{@@kbd} command has the same effect as @code{@@code} in Info,
../texinfo/texinfo.txi(,6683) but by default produces a different font (slanted typewriter instead of
../texinfo/texinfo.txi(,6684) normal typewriter) in the printed manual, so users can distinguish the
../texinfo/texinfo.txi(,6685) characters they are supposed to type from those the computer outputs.
../texinfo/texinfo.txi(,6686) 
../texinfo/texinfo.txi(,6687) @findex kbdinputstyle
../texinfo/texinfo.txi(,6688) Since the usage of @code{@@kbd} varies from manual to manual, you can
../texinfo/texinfo.txi(,6689) control the font switching with the @code{@@kbdinputstyle} command.
../texinfo/texinfo.txi(,6690) This command has no effect on Info output.  Write this command at the
../texinfo/texinfo.txi(,6691) beginning of a line with a single word as an argument, one of the
../texinfo/texinfo.txi(,6692) following:
../texinfo/texinfo.txi(,6693) @vindex distinct@r{, arg to @@kbdinputstyle}
../texinfo/texinfo.txi(,6694) @vindex example@r{, arg to @@kbdinputstyle}
../texinfo/texinfo.txi(,6695) @vindex code@r{, arg to @@kbdinputstyle}
../texinfo/texinfo.txi(,6696) @table @samp
../texinfo/texinfo.txi(,6697) @item code
../texinfo/texinfo.txi(,6698) Always use the same font for @code{@@kbd} as @code{@@code}.
../texinfo/texinfo.txi(,6699) @item example
../texinfo/texinfo.txi(,6700) Use the distinguishing font for @code{@@kbd} only in @code{@@example}
../texinfo/texinfo.txi(,6701) and similar environments.
../texinfo/texinfo.txi(,6702) @item distinct
../texinfo/texinfo.txi(,6703) (the default) Always use the distinguishing font for @code{@@kbd}.
../texinfo/texinfo.txi(,6704) @end table
../texinfo/texinfo.txi(,6705) 
../texinfo/texinfo.txi(,6706) You can embed another @@-command inside the braces of an @code{@@kbd}
../texinfo/texinfo.txi(,6707) command.  Here, for example, is the way to describe a command that
../texinfo/texinfo.txi(,6708) would be described more verbosely as ``press an @samp{r} and then
../texinfo/texinfo.txi(,6709) press the @key{RET} key'':@refill
../texinfo/texinfo.txi(,6710) 
../texinfo/texinfo.txi(,6711) @example
../texinfo/texinfo.txi(,6712) @@kbd@{r @@key@{RET@}@}
../texinfo/texinfo.txi(,6713) @end example
../texinfo/texinfo.txi(,6714) 
../texinfo/texinfo.txi(,6715) @noindent
../texinfo/texinfo.txi(,6716) This produces: @kbd{r @key{RET}}
../texinfo/texinfo.txi(,6717) 
../texinfo/texinfo.txi(,6718) You also use the @code{@@kbd} command if you are spelling out the letters
../texinfo/texinfo.txi(,6719) you type; for example:@refill
../texinfo/texinfo.txi(,6720) 
../texinfo/texinfo.txi(,6721) @example
../texinfo/texinfo.txi(,6722) To give the @@code@{logout@} command,
../texinfo/texinfo.txi(,6723) type the characters @@kbd@{l o g o u t @@key@{RET@}@}.
../texinfo/texinfo.txi(,6724) @end example
../texinfo/texinfo.txi(,6725) 
../texinfo/texinfo.txi(,6726) @noindent
../texinfo/texinfo.txi(,6727) This produces:
../texinfo/texinfo.txi(,6728) 
../texinfo/texinfo.txi(,6729) @quotation
../texinfo/texinfo.txi(,6730) To give the @code{logout} command,
../texinfo/texinfo.txi(,6731) type the characters @kbd{l o g o u t @key{RET}}.
../texinfo/texinfo.txi(,6732) @end quotation
../texinfo/texinfo.txi(,6733) 
../texinfo/texinfo.txi(,6734) (Also, this example shows that you can add spaces for clarity.  If you
../texinfo/texinfo.txi(,6735) really want to mention a space character as one of the characters of
../texinfo/texinfo.txi(,6736) input, write @kbd{@@key@{SPC@}} for it.)@refill
../texinfo/texinfo.txi(,6737) 
../texinfo/texinfo.txi(,6738) 
../texinfo/texinfo.txi(,6739) @node key, samp, kbd, Indicating
../texinfo/texinfo.txi(,6740) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,6741) @subsection @code{@@key}@{@var{key-name}@}
../texinfo/texinfo.txi(,6742) @findex key
../texinfo/texinfo.txi(,6743) 
../texinfo/texinfo.txi(,6744) Use the @code{@@key} command for the conventional name for a key on a
../texinfo/texinfo.txi(,6745) keyboard, as in:@refill
../texinfo/texinfo.txi(,6746) 
../texinfo/texinfo.txi(,6747) @example
../texinfo/texinfo.txi(,6748) @@key@{RET@}
../texinfo/texinfo.txi(,6749) @end example
../texinfo/texinfo.txi(,6750) 
../texinfo/texinfo.txi(,6751) You can use the @code{@@key} command within the argument of an
../texinfo/texinfo.txi(,6752) @code{@@kbd} command when the sequence of characters to be typed
../texinfo/texinfo.txi(,6753) includes one or more keys that are described by name.@refill
../texinfo/texinfo.txi(,6754) 
../texinfo/texinfo.txi(,6755) @need 700
../texinfo/texinfo.txi(,6756) For example, to produce @kbd{C-x @key{ESC}} you would type:@refill
../texinfo/texinfo.txi(,6757) 
../texinfo/texinfo.txi(,6758) @example
../texinfo/texinfo.txi(,6759) @@kbd@{C-x @@key@{ESC@}@}
../texinfo/texinfo.txi(,6760) @end example
../texinfo/texinfo.txi(,6761) 
../texinfo/texinfo.txi(,6762) Here is a list of the recommended names for keys:
../texinfo/texinfo.txi(,6763) @cindex Recommended names for keys
../texinfo/texinfo.txi(,6764) @cindex Keys, recommended names
../texinfo/texinfo.txi(,6765) @cindex Names recommended for keys
../texinfo/texinfo.txi(,6766) @cindex Abbreviations for keys
../texinfo/texinfo.txi(,6767) 
../texinfo/texinfo.txi(,6768) @quotation
../texinfo/texinfo.txi(,6769) @table @t
../texinfo/texinfo.txi(,6770) @item SPC
../texinfo/texinfo.txi(,6771) Space
../texinfo/texinfo.txi(,6772) @item RET
../texinfo/texinfo.txi(,6773) Return
../texinfo/texinfo.txi(,6774) @item LFD
../texinfo/texinfo.txi(,6775) Linefeed (however, since most keyboards nowadays do not have a Linefeed key,
../texinfo/texinfo.txi(,6776) it might be better to call this character @kbd{C-j}.
../texinfo/texinfo.txi(,6777) @item TAB
../texinfo/texinfo.txi(,6778) Tab
../texinfo/texinfo.txi(,6779) @item BS
../texinfo/texinfo.txi(,6780) Backspace
../texinfo/texinfo.txi(,6781) @item ESC
../texinfo/texinfo.txi(,6782) Escape
../texinfo/texinfo.txi(,6783) @item DEL
../texinfo/texinfo.txi(,6784) Delete
../texinfo/texinfo.txi(,6785) @item SHIFT
../texinfo/texinfo.txi(,6786) Shift
../texinfo/texinfo.txi(,6787) @item CTRL
../texinfo/texinfo.txi(,6788) Control
../texinfo/texinfo.txi(,6789) @item META
../texinfo/texinfo.txi(,6790) Meta
../texinfo/texinfo.txi(,6791) @end table
../texinfo/texinfo.txi(,6792) @end quotation
../texinfo/texinfo.txi(,6793) 
../texinfo/texinfo.txi(,6794) @cindex META key
../texinfo/texinfo.txi(,6795) There are subtleties to handling words like `meta' or `ctrl' that are
../texinfo/texinfo.txi(,6796) names of modifier keys.  When mentioning a character in which the
../texinfo/texinfo.txi(,6797) modifier key is used, such as @kbd{Meta-a}, use the @code{@@kbd} command
../texinfo/texinfo.txi(,6798) alone; do not use the @code{@@key} command; but when you are referring
../texinfo/texinfo.txi(,6799) to the modifier key in isolation, use the @code{@@key} command.  For
../texinfo/texinfo.txi(,6800) example, write @samp{@@kbd@{Meta-a@}} to produce @kbd{Meta-a} and
../texinfo/texinfo.txi(,6801) @samp{@@key@{META@}} to produce @key{META}.
../texinfo/texinfo.txi(,6802) 
../texinfo/texinfo.txi(,6803) @c I don't think this is a good explanation.
../texinfo/texinfo.txi(,6804) @c I think it will puzzle readers more than it clarifies matters.  -- rms.
../texinfo/texinfo.txi(,6805) @c In other words, use @code{@@kbd} for what you do, and use @code{@@key}
../texinfo/texinfo.txi(,6806) @c for what you talk about: ``Press @code{@@kbd@{M-a@}} to move point to
../texinfo/texinfo.txi(,6807) @c the beginning of the sentence.  The @code{@@key@{META@}} key is often in
../texinfo/texinfo.txi(,6808) @c the lower left of the keyboard.''@refill
../texinfo/texinfo.txi(,6809) 
../texinfo/texinfo.txi(,6810) @node samp
../texinfo/texinfo.txi(,6811) @subsection @code{@@samp}@{@var{text}@}
../texinfo/texinfo.txi(,6812) @findex samp
../texinfo/texinfo.txi(,6813) 
../texinfo/texinfo.txi(,6814) Use the @code{@@samp} command to indicate text that is a literal example
../texinfo/texinfo.txi(,6815) or `sample' of a sequence of characters in a file, string, pattern, etc.
../texinfo/texinfo.txi(,6816) Enclose the text in braces.  The argument appears within single
../texinfo/texinfo.txi(,6817) quotation marks in both the Info file and the printed manual; in
../texinfo/texinfo.txi(,6818) addition, it is printed in a fixed-width font.@refill
../texinfo/texinfo.txi(,6819) 
../texinfo/texinfo.txi(,6820) @example
../texinfo/texinfo.txi(,6821) To match @@samp@{foo@} at the end of the line,
../texinfo/texinfo.txi(,6822) use the regexp @@samp@{foo$@}.
../texinfo/texinfo.txi(,6823) @end example
../texinfo/texinfo.txi(,6824) 
../texinfo/texinfo.txi(,6825) @noindent
../texinfo/texinfo.txi(,6826) produces
../texinfo/texinfo.txi(,6827) 
../texinfo/texinfo.txi(,6828) @quotation
../texinfo/texinfo.txi(,6829) To match @samp{foo} at the end of the line, use the regexp
../texinfo/texinfo.txi(,6830) @samp{foo$}.@refill
../texinfo/texinfo.txi(,6831) @end quotation
../texinfo/texinfo.txi(,6832) 
../texinfo/texinfo.txi(,6833) Any time you are referring to single characters, you should use
../texinfo/texinfo.txi(,6834) @code{@@samp} unless @code{@@kbd} or @code{@@key} is more appropriate.
../texinfo/texinfo.txi(,6835) Also, you may use @code{@@samp} for entire statements in C and for entire
../texinfo/texinfo.txi(,6836) shell commands---in this case, @code{@@samp} often looks better than
../texinfo/texinfo.txi(,6837) @code{@@code}.  Basically, @code{@@samp} is a catchall for whatever is
../texinfo/texinfo.txi(,6838) not covered by @code{@@code}, @code{@@kbd}, or @code{@@key}.@refill
../texinfo/texinfo.txi(,6839) 
../texinfo/texinfo.txi(,6840) Only include punctuation marks within braces if they are part of the
../texinfo/texinfo.txi(,6841) string you are specifying.  Write punctuation marks outside the braces
../texinfo/texinfo.txi(,6842) if those punctuation marks are part of the English text that surrounds
../texinfo/texinfo.txi(,6843) the string.  In the following sentence, for example, the commas and
../texinfo/texinfo.txi(,6844) period are outside of the braces:@refill
../texinfo/texinfo.txi(,6845) 
../texinfo/texinfo.txi(,6846) @example
../texinfo/texinfo.txi(,6847) @group
../texinfo/texinfo.txi(,6848) In English, the vowels are @@samp@{a@}, @@samp@{e@},
../texinfo/texinfo.txi(,6849) @@samp@{i@}, @@samp@{o@}, @@samp@{u@}, and sometimes
../texinfo/texinfo.txi(,6850) @@samp@{y@}.
../texinfo/texinfo.txi(,6851) @end group
../texinfo/texinfo.txi(,6852) @end example
../texinfo/texinfo.txi(,6853) 
../texinfo/texinfo.txi(,6854) @noindent
../texinfo/texinfo.txi(,6855) This produces:
../texinfo/texinfo.txi(,6856) 
../texinfo/texinfo.txi(,6857) @quotation
../texinfo/texinfo.txi(,6858) In English, the vowels are @samp{a}, @samp{e},
../texinfo/texinfo.txi(,6859) @samp{i}, @samp{o}, @samp{u},  and sometimes
../texinfo/texinfo.txi(,6860) @samp{y}.
../texinfo/texinfo.txi(,6861) @end quotation
../texinfo/texinfo.txi(,6862) 
../texinfo/texinfo.txi(,6863) 
../texinfo/texinfo.txi(,6864) @node verb
../texinfo/texinfo.txi(,6865) @subsection @code{@@verb}@{<char>@var{text}<char>@}
../texinfo/texinfo.txi(,6866) @findex verb
../texinfo/texinfo.txi(,6867) @cindex Verbatim in-line text
../texinfo/texinfo.txi(,6868) 
../texinfo/texinfo.txi(,6869) @cindex Delimiter character, for verbatim 
../texinfo/texinfo.txi(,6870) Use the @code{@@verb} command to print a verbatim sequence of
../texinfo/texinfo.txi(,6871) characters.
../texinfo/texinfo.txi(,6872) 
../texinfo/texinfo.txi(,6873) Like La@TeX{}'s @code{\verb} command, the verbatim text can be quoted using
../texinfo/texinfo.txi(,6874) any unique delimiter character.  Enclose the verbatim text, including the
../texinfo/texinfo.txi(,6875) delimiters, in braces.  Text is printed in a fixed-width font:
../texinfo/texinfo.txi(,6876) 
../texinfo/texinfo.txi(,6877) @example
../texinfo/texinfo.txi(,6878) How many @@verb@{|@@|@}-escapes does one need to print this
../texinfo/texinfo.txi(,6879) @@verb@{.@@a @@b @@c.@} string or @@verb@{+@@'e@?`@!`@{@}\+@} this?
../texinfo/texinfo.txi(,6880) @end example
../texinfo/texinfo.txi(,6881) 
../texinfo/texinfo.txi(,6882) @noindent
../texinfo/texinfo.txi(,6883) produces
../texinfo/texinfo.txi(,6884) 
../texinfo/texinfo.txi(,6885) @example
../texinfo/texinfo.txi(,6886) How many @verb{|@ |}-escapes does one need to print this
../texinfo/texinfo.txi(,6887) @verb{.@a @b @c.} string or these @verb{+@'e?`{}!`\+} this?
../texinfo/texinfo.txi(,6888) @end example
../texinfo/texinfo.txi(,6889) 
../texinfo/texinfo.txi(,6890) This is in contrast to @code{@@samp} (see the previous
../texinfo/texinfo.txi(,6891) section), whose argument is normal Texinfo text, where the characters
../texinfo/texinfo.txi(,6892) @code{@@@{@}} are special; with @code{@@verb}, nothing is special except
../texinfo/texinfo.txi(,6893) the delimiter character you choose.
../texinfo/texinfo.txi(,6894) 
../texinfo/texinfo.txi(,6895) 
../texinfo/texinfo.txi(,6896) @node var
../texinfo/texinfo.txi(,6897) @subsection @code{@@var}@{@var{metasyntactic-variable}@}
../texinfo/texinfo.txi(,6898) @findex var
../texinfo/texinfo.txi(,6899) 
../texinfo/texinfo.txi(,6900) Use the @code{@@var} command to indicate metasyntactic variables.  A
../texinfo/texinfo.txi(,6901) @dfn{metasyntactic variable} is something that stands for another piece of
../texinfo/texinfo.txi(,6902) text.  For example, you should use a metasyntactic variable in the
../texinfo/texinfo.txi(,6903) documentation of a function to describe the arguments that are passed
../texinfo/texinfo.txi(,6904) to that function.@refill
../texinfo/texinfo.txi(,6905) 
../texinfo/texinfo.txi(,6906) Do not use @code{@@var} for the names of particular variables in
../texinfo/texinfo.txi(,6907) programming languages.  These are specific names from a program, so
../texinfo/texinfo.txi(,6908) @code{@@code} is correct for them (@pxref{code}).  For example, the
../texinfo/texinfo.txi(,6909) Emacs Lisp variable @code{texinfo-tex-command} is not a metasyntactic
../texinfo/texinfo.txi(,6910) variable; it is properly formatted using @code{@@code}.
../texinfo/texinfo.txi(,6911) 
../texinfo/texinfo.txi(,6912) Do not use @code{@@var} for environment variables either; @code{@@env}
../texinfo/texinfo.txi(,6913) is correct for them (see the next section).
../texinfo/texinfo.txi(,6914) 
../texinfo/texinfo.txi(,6915) The effect of @code{@@var} in the Info file is to change the case of the
../texinfo/texinfo.txi(,6916) argument to all upper case.  In the printed manual and HTML output, the
../texinfo/texinfo.txi(,6917) argument is printed in slanted type.  
../texinfo/texinfo.txi(,6918) 
../texinfo/texinfo.txi(,6919) @need 700
../texinfo/texinfo.txi(,6920) For example,
../texinfo/texinfo.txi(,6921) 
../texinfo/texinfo.txi(,6922) @example
../texinfo/texinfo.txi(,6923) To delete file @@var@{filename@},
../texinfo/texinfo.txi(,6924) type @@samp@{rm @@var@{filename@}@}.
../texinfo/texinfo.txi(,6925) @end example
../texinfo/texinfo.txi(,6926) 
../texinfo/texinfo.txi(,6927) @noindent
../texinfo/texinfo.txi(,6928) produces
../texinfo/texinfo.txi(,6929) 
../texinfo/texinfo.txi(,6930) @quotation
../texinfo/texinfo.txi(,6931) To delete file @var{filename}, type @samp{rm @var{filename}}.
../texinfo/texinfo.txi(,6932) @end quotation
../texinfo/texinfo.txi(,6933) 
../texinfo/texinfo.txi(,6934) @noindent
../texinfo/texinfo.txi(,6935) (Note that @code{@@var} may appear inside @code{@@code},
../texinfo/texinfo.txi(,6936) @code{@@samp}, @code{@@file}, etc.)@refill
../texinfo/texinfo.txi(,6937) 
../texinfo/texinfo.txi(,6938) Write a metasyntactic variable all in lower case without spaces, and
../texinfo/texinfo.txi(,6939) use hyphens to make it more readable.  Thus, the Texinfo source for
../texinfo/texinfo.txi(,6940) the illustration of how to begin a Texinfo manual looks like
../texinfo/texinfo.txi(,6941) this:@refill
../texinfo/texinfo.txi(,6942) 
../texinfo/texinfo.txi(,6943) @example
../texinfo/texinfo.txi(,6944) @group
../texinfo/texinfo.txi(,6945) \input texinfo
../texinfo/texinfo.txi(,6946) @@@@setfilename @@var@{info-file-name@}
../texinfo/texinfo.txi(,6947) @@@@settitle @@var@{name-of-manual@}
../texinfo/texinfo.txi(,6948) @end group
../texinfo/texinfo.txi(,6949) @end example
../texinfo/texinfo.txi(,6950) 
../texinfo/texinfo.txi(,6951) @noindent
../texinfo/texinfo.txi(,6952) This produces:
../texinfo/texinfo.txi(,6953) 
../texinfo/texinfo.txi(,6954) @example
../texinfo/texinfo.txi(,6955) @group
../texinfo/texinfo.txi(,6956) \input texinfo
../texinfo/texinfo.txi(,6957) @@setfilename @var{info-file-name}
../texinfo/texinfo.txi(,6958) @@settitle @var{name-of-manual}
../texinfo/texinfo.txi(,6959) @end group
../texinfo/texinfo.txi(,6960) @end example
../texinfo/texinfo.txi(,6961) 
../texinfo/texinfo.txi(,6962) In some documentation styles, metasyntactic variables are shown with
../texinfo/texinfo.txi(,6963) angle brackets, for example:@refill
../texinfo/texinfo.txi(,6964) 
../texinfo/texinfo.txi(,6965) @example
../texinfo/texinfo.txi(,6966) @dots{}, type rm <filename>
../texinfo/texinfo.txi(,6967) @end example
../texinfo/texinfo.txi(,6968) 
../texinfo/texinfo.txi(,6969) @noindent
../texinfo/texinfo.txi(,6970) However, that is not the style that Texinfo uses.  (You can, of
../texinfo/texinfo.txi(,6971) course, modify the sources to @file{texinfo.tex} and the Info formatting commands
../texinfo/texinfo.txi(,6972) to output the @code{<@dots{}>} format if you wish.)@refill
../texinfo/texinfo.txi(,6973) 
../texinfo/texinfo.txi(,6974) 
../texinfo/texinfo.txi(,6975) @node env
../texinfo/texinfo.txi(,6976) @subsection @code{@@env}@{@var{environment-variable}@}
../texinfo/texinfo.txi(,6977) @findex env
../texinfo/texinfo.txi(,6978) 
../texinfo/texinfo.txi(,6979) Use the @code{@@env} command to indicate environment variables, as used
../texinfo/texinfo.txi(,6980) by many operating systems, including GNU.  Do not use it for
../texinfo/texinfo.txi(,6981) metasyntactic variables; use @code{@@var} instead (see the previous
../texinfo/texinfo.txi(,6982) section).
../texinfo/texinfo.txi(,6983) 
../texinfo/texinfo.txi(,6984) @code{@@env} is equivalent to @code{@@code} in its effects.
../texinfo/texinfo.txi(,6985) For example:
../texinfo/texinfo.txi(,6986) 
../texinfo/texinfo.txi(,6987) @example
../texinfo/texinfo.txi(,6988) The @@env@{PATH@} environment variable @dots{}
../texinfo/texinfo.txi(,6989) @end example
../texinfo/texinfo.txi(,6990) @noindent produces
../texinfo/texinfo.txi(,6991) @quotation
../texinfo/texinfo.txi(,6992) The @env{PATH} environment variable @dots{}
../texinfo/texinfo.txi(,6993) @end quotation
../texinfo/texinfo.txi(,6994) 
../texinfo/texinfo.txi(,6995) 
../texinfo/texinfo.txi(,6996) @node file
../texinfo/texinfo.txi(,6997) @subsection @code{@@file}@{@var{file-name}@}
../texinfo/texinfo.txi(,6998) @findex file
../texinfo/texinfo.txi(,6999) 
../texinfo/texinfo.txi(,7000) Use the @code{@@file} command to indicate text that is the name of a
../texinfo/texinfo.txi(,7001) file, buffer, or directory, or is the name of a node in Info.  You can
../texinfo/texinfo.txi(,7002) also use the command for file name suffixes.  Do not use @code{@@file}
../texinfo/texinfo.txi(,7003) for symbols in a programming language; use @code{@@code}.
../texinfo/texinfo.txi(,7004) 
../texinfo/texinfo.txi(,7005) Currently, @code{@@file} is equivalent to @code{@@samp} in its effects.
../texinfo/texinfo.txi(,7006) For example,@refill
../texinfo/texinfo.txi(,7007) 
../texinfo/texinfo.txi(,7008) @example
../texinfo/texinfo.txi(,7009) The @@file@{.el@} files are in
../texinfo/texinfo.txi(,7010) the @@file@{/usr/local/emacs/lisp@} directory.
../texinfo/texinfo.txi(,7011) @end example
../texinfo/texinfo.txi(,7012) 
../texinfo/texinfo.txi(,7013) @noindent
../texinfo/texinfo.txi(,7014) produces
../texinfo/texinfo.txi(,7015) 
../texinfo/texinfo.txi(,7016) @quotation
../texinfo/texinfo.txi(,7017) The @file{.el} files are in
../texinfo/texinfo.txi(,7018) the @file{/usr/local/emacs/lisp} directory.
../texinfo/texinfo.txi(,7019) @end quotation
../texinfo/texinfo.txi(,7020) 
../texinfo/texinfo.txi(,7021) 
../texinfo/texinfo.txi(,7022) @node command
../texinfo/texinfo.txi(,7023) @subsection @code{@@command}@{@var{command-name}@}
../texinfo/texinfo.txi(,7024) @findex command
../texinfo/texinfo.txi(,7025) @cindex Command names, indicating
../texinfo/texinfo.txi(,7026) @cindex Program names, indicating
../texinfo/texinfo.txi(,7027) 
../texinfo/texinfo.txi(,7028) Use the @code{@@command} command to indicate command names, such as
../texinfo/texinfo.txi(,7029) @command{ls} or @command{cc}.
../texinfo/texinfo.txi(,7030) 
../texinfo/texinfo.txi(,7031) @code{@@command} is equivalent to @code{@@code} in its effects.
../texinfo/texinfo.txi(,7032) For example:
../texinfo/texinfo.txi(,7033) 
../texinfo/texinfo.txi(,7034) @example
../texinfo/texinfo.txi(,7035) The command @@command@{ls@} lists directory contents.
../texinfo/texinfo.txi(,7036) @end example
../texinfo/texinfo.txi(,7037) @noindent produces
../texinfo/texinfo.txi(,7038) @quotation
../texinfo/texinfo.txi(,7039) The command @command{ls} lists directory contents.
../texinfo/texinfo.txi(,7040) @end quotation
../texinfo/texinfo.txi(,7041) 
../texinfo/texinfo.txi(,7042) You should write the name of a program in the ordinary text font, rather
../texinfo/texinfo.txi(,7043) than using @code{@@command}, if you regard it as a new English word,
../texinfo/texinfo.txi(,7044) such as `Emacs' or `Bison'.
../texinfo/texinfo.txi(,7045) 
../texinfo/texinfo.txi(,7046) When writing an entire shell command invocation, as in @samp{ls -l},
../texinfo/texinfo.txi(,7047) you should use either @code{@@samp} or @code{@@code} at your discretion.
../texinfo/texinfo.txi(,7048) 
../texinfo/texinfo.txi(,7049) 
../texinfo/texinfo.txi(,7050) @node option
../texinfo/texinfo.txi(,7051) @subsection @code{@@option}@{@var{option-name}@}
../texinfo/texinfo.txi(,7052) @findex option
../texinfo/texinfo.txi(,7053) 
../texinfo/texinfo.txi(,7054) Use the @code{@@option} command to indicate a command-line option; for
../texinfo/texinfo.txi(,7055) example, @option{-l} or @option{--version} or
../texinfo/texinfo.txi(,7056) @option{--output=@var{filename}}.
../texinfo/texinfo.txi(,7057) 
../texinfo/texinfo.txi(,7058) @code{@@option} is equivalent to @code{@@samp} in its effects.
../texinfo/texinfo.txi(,7059) For example:
../texinfo/texinfo.txi(,7060) 
../texinfo/texinfo.txi(,7061) @example
../texinfo/texinfo.txi(,7062) The option @@option@{-l@} produces a long listing.
../texinfo/texinfo.txi(,7063) @end example
../texinfo/texinfo.txi(,7064) @noindent produces
../texinfo/texinfo.txi(,7065) @quotation
../texinfo/texinfo.txi(,7066) The option @option{-l} produces a long listing.
../texinfo/texinfo.txi(,7067) @end quotation
../texinfo/texinfo.txi(,7068) 
../texinfo/texinfo.txi(,7069) In tables, putting options inside @code{@@code} produces a
../texinfo/texinfo.txi(,7070) more pleasing effect.
../texinfo/texinfo.txi(,7071) 
../texinfo/texinfo.txi(,7072) @node dfn
../texinfo/texinfo.txi(,7073) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,7074) @subsection @code{@@dfn}@{@var{term}@}
../texinfo/texinfo.txi(,7075) @findex dfn
../texinfo/texinfo.txi(,7076) 
../texinfo/texinfo.txi(,7077) Use the @code{@@dfn} command to identify the introductory or defining
../texinfo/texinfo.txi(,7078) use of a technical term.  Use the command only in passages whose
../texinfo/texinfo.txi(,7079) purpose is to introduce a term which will be used again or which the
../texinfo/texinfo.txi(,7080) reader ought to know.  Mere passing mention of a term for the first
../texinfo/texinfo.txi(,7081) time does not deserve @code{@@dfn}.  The command generates italics in
../texinfo/texinfo.txi(,7082) the printed manual, and double quotation marks in the Info file.  For
../texinfo/texinfo.txi(,7083) example:@refill
../texinfo/texinfo.txi(,7084) 
../texinfo/texinfo.txi(,7085) @example
../texinfo/texinfo.txi(,7086) Getting rid of a file is called @@dfn@{deleting@} it.
../texinfo/texinfo.txi(,7087) @end example
../texinfo/texinfo.txi(,7088) 
../texinfo/texinfo.txi(,7089) @noindent
../texinfo/texinfo.txi(,7090) produces
../texinfo/texinfo.txi(,7091) 
../texinfo/texinfo.txi(,7092) @quotation
../texinfo/texinfo.txi(,7093) Getting rid of a file is called @dfn{deleting} it.
../texinfo/texinfo.txi(,7094) @end quotation
../texinfo/texinfo.txi(,7095) 
../texinfo/texinfo.txi(,7096) As a general rule, a sentence containing the defining occurrence of a
../texinfo/texinfo.txi(,7097) term should be a definition of the term.  The sentence does not need
../texinfo/texinfo.txi(,7098) to say explicitly that it is a definition, but it should contain the
../texinfo/texinfo.txi(,7099) information of a definition---it should make the meaning clear.
../texinfo/texinfo.txi(,7100) 
../texinfo/texinfo.txi(,7101) @node cite
../texinfo/texinfo.txi(,7102) @subsection @code{@@cite}@{@var{reference}@}
../texinfo/texinfo.txi(,7103) @findex cite
../texinfo/texinfo.txi(,7104) 
../texinfo/texinfo.txi(,7105) Use the @code{@@cite} command for the name of a book that lacks a
../texinfo/texinfo.txi(,7106) companion Info file.  The command produces italics in the printed
../texinfo/texinfo.txi(,7107) manual, and quotation marks in the Info file.
../texinfo/texinfo.txi(,7108) 
../texinfo/texinfo.txi(,7109) If a book is written in Texinfo, it is better to use a cross reference
../texinfo/texinfo.txi(,7110) command since a reader can easily follow such a reference in Info.
../texinfo/texinfo.txi(,7111) @xref{xref, , @code{@@xref}}.
../texinfo/texinfo.txi(,7112) 
../texinfo/texinfo.txi(,7113) 
../texinfo/texinfo.txi(,7162) 
../texinfo/texinfo.txi(,7163) 
../texinfo/texinfo.txi(,7164) @node acronym
../texinfo/texinfo.txi(,7165) @subsection @code{@@acronym}@{@var{acronym}@}
../texinfo/texinfo.txi(,7166) @findex acronym
../texinfo/texinfo.txi(,7167) 
../texinfo/texinfo.txi(,7168) @cindex NASA, as acronym
../texinfo/texinfo.txi(,7169) @cindex F.B.I., as acronym
../texinfo/texinfo.txi(,7170) @cindex Abbreviations, tagging
../texinfo/texinfo.txi(,7171) @cindex Acronyms, tagging
../texinfo/texinfo.txi(,7172) Use the @code{@@acronym} command for abbreviations written in all
../texinfo/texinfo.txi(,7173) capital letters, such as `@acronym{NASA}'.  The abbreviation is given as
../texinfo/texinfo.txi(,7174) the single argument in braces, as in @samp{@@acronym@{NASA@}}.  As
../texinfo/texinfo.txi(,7175) a matter of style, or for particular abbreviations, you may prefer to
../texinfo/texinfo.txi(,7176) use periods, as in @samp{@@acronym@{F.B.I.@}}.
../texinfo/texinfo.txi(,7177) 
../texinfo/texinfo.txi(,7178) In @TeX{} and HTML, the argument is printed in a slightly smaller font
../texinfo/texinfo.txi(,7179) size.  In Info or plain text output, this command changes nothing.
../texinfo/texinfo.txi(,7180) 
../texinfo/texinfo.txi(,7181) 
../texinfo/texinfo.txi(,7182) @node url
../texinfo/texinfo.txi(,7183) @subsection @code{@@url}@{@var{uniform-resource-locator}@}
../texinfo/texinfo.txi(,7184) @findex url
../texinfo/texinfo.txi(,7185) @cindex Uniform resource locator, indicating
../texinfo/texinfo.txi(,7186) @cindex URL, indicating
../texinfo/texinfo.txi(,7187) 
../texinfo/texinfo.txi(,7188) Use the @code{@@url} command to indicate a uniform resource locator on
../texinfo/texinfo.txi(,7189) the World Wide Web.  This is analogous to @code{@@file}, @code{@@var},
../texinfo/texinfo.txi(,7190) etc., and is purely for markup purposes.  It does not produce a link you
../texinfo/texinfo.txi(,7191) can follow in HTML output (use the @code{@@uref} command for that,
../texinfo/texinfo.txi(,7192) @pxref{uref,, @code{@@uref}}).  It is useful for url's which do
../texinfo/texinfo.txi(,7193) not actually exist.  For example:
../texinfo/texinfo.txi(,7194) 
../texinfo/texinfo.txi(,7195) @c Two lines because one is too long for smallbook format.
../texinfo/texinfo.txi(,7196) @example
../texinfo/texinfo.txi(,7197) For example, the url might be @@url@{http://example.org/path@}.
../texinfo/texinfo.txi(,7198) @end example
../texinfo/texinfo.txi(,7199) 
../texinfo/texinfo.txi(,7200) @noindent which produces:
../texinfo/texinfo.txi(,7201) 
../texinfo/texinfo.txi(,7202) @display
../texinfo/texinfo.txi(,7203) For example, the url might be @url{http://example.org/path}.
../texinfo/texinfo.txi(,7204) @end display
../texinfo/texinfo.txi(,7205) 
../texinfo/texinfo.txi(,7206) 
../texinfo/texinfo.txi(,7207) @node email
../texinfo/texinfo.txi(,7208) @subsection @code{@@email}@{@var{email-address}[, @var{displayed-text}]@}
../texinfo/texinfo.txi(,7209) @findex email
../texinfo/texinfo.txi(,7210) 
../texinfo/texinfo.txi(,7211) Use the @code{@@email} command to indicate an electronic mail address.
../texinfo/texinfo.txi(,7212) It takes one mandatory argument, the address, and one optional argument, the
../texinfo/texinfo.txi(,7213) text to display (the default is the address itself).
../texinfo/texinfo.txi(,7214) 
../texinfo/texinfo.txi(,7215) @cindex mailto link
../texinfo/texinfo.txi(,7216) In Info and @TeX{}, the address is shown in angle brackets, preceded by
../texinfo/texinfo.txi(,7217) the text to display if any.  In HTML output, @code{@@email} produces a
../texinfo/texinfo.txi(,7218) @samp{mailto} link that usually brings up a mail composition window.
../texinfo/texinfo.txi(,7219) For example:
../texinfo/texinfo.txi(,7220) 
../texinfo/texinfo.txi(,7221) @example
../texinfo/texinfo.txi(,7222) Send bug reports to @@email@{bug-texinfo@@@@gnu.org@},
../texinfo/texinfo.txi(,7223) suggestions to the @@email@{bug-texinfo@@@@gnu.org, same place@}.
../texinfo/texinfo.txi(,7224) @end example
../texinfo/texinfo.txi(,7225) @noindent produces
../texinfo/texinfo.txi(,7226) @display
../texinfo/texinfo.txi(,7227) Send bug reports to @email{bug-texinfo@@gnu.org},
../texinfo/texinfo.txi(,7228) suggestions to the @email{bug-texinfo@@gnu.org, same place}.
../texinfo/texinfo.txi(,7229) @end display
../texinfo/texinfo.txi(,7230) 
../texinfo/texinfo.txi(,7231) 
../texinfo/texinfo.txi(,7232) @node Emphasis
../texinfo/texinfo.txi(,7233) @comment node-name,  next,  previous,  up
../texinfo/texinfo.txi(,7234) @section Emphasizing Text
../texinfo/texinfo.txi(,7235) @cindex Emphasizing text
../texinfo/texinfo.txi(,7236) 
../texinfo/texinfo.txi(,7237) Usually, Texinfo changes the font to mark words in the text according to
../texinfo/texinfo.txi(,7238) what category the words belong to; an example is the @code{@@code} command.
../texinfo/texinfo.txi(,7239) Most often, this is the best way to mark words.
../texinfo/texinfo.txi(,7240) However, sometimes you will want to emphasize text without indicating a
../texinfo/texinfo.txi(,7241) category.  Texinfo has two commands to do this.  Also, Texinfo has
../texinfo/texinfo.txi(,7242) several commands that specify the font in which @TeX{} will typeset
../texinfo/texinfo.txi(,7243) text.  These commands have no effect on Info and only one of them,
../texinfo/texinfo.txi(,7244) the @code{@@r} command, has any regular use.@refill
../texinfo/texinfo.txi(,7245) 
../texinfo/texinfo.txi(,7246) @menu
../texinfo/texinfo.txi(,7247) * emph & strong::               How to emphasize text in Texinfo.
../texinfo/texinfo.txi(,7248) * Smallcaps::                   How to use the small caps font.
../texinfo/texinfo.txi(,7249) * Fonts::                       Various font commands for printed output.
../texinfo/texinfo.txi(,7250) @end menu
../texinfo/texinfo.txi(,7251) 
../texinfo/texinfo.txi(,7252) @node emph & strong
../texinfo/texinfo.txi(,7253) @subsection @code{@@emph}@{@var{text}@} and @code{@@strong}@{@var{text}@}
../texinfo/texinfo.txi(,7254) @cindex Emphasizing text, font for
../texinfo/texinfo.txi(,7255) @findex emph
../texinfo/texinfo.txi(,7256) @findex strong
../texinfo/texinfo.txi(,7257) 
../texinfo/texinfo.txi(,7258) The @code{@@emph} and @code{@@strong} commands are for emphasis;
../texinfo/texinfo.txi(,7259) @code{@@strong} is stronger.  In printed output, @code{@@emph} produces
../texinfo/texinfo.txi(,7260) @emph{italics} and @code{@@strong} produces @strong{bold}.
../texinfo/texinfo.txi(,7261) 
../texinfo/texinfo.txi(,7262) @need 800
../texinfo/texinfo.txi(,7263) For example,
../texinfo/texinfo.txi(,7264) 
../texinfo/texinfo.txi(,7265) @example
../texinfo/texinfo.txi(,7266) @group
../texinfo/texinfo.txi(,7267) @@quotation
../texinfo/texinfo.txi(,7268) @@strong@{Caution:@} @@samp@{rm * .[^.]*@} removes @@emph@{all@}
../texinfo/texinfo.txi(,7269) files in the directory.
../texinfo/texinfo.txi(,7270) @@end quotation
../texinfo/texinfo.txi(,7271) @end group
../texinfo/texinfo.txi(,7272) @end example
../texinfo/texinfo.txi(,7273) 
../texinfo/texinfo.txi(,7287) @noindent
../texinfo/texinfo.txi(,7288) produces:
../texinfo/texinfo.txi(,7290) 
../texinfo/texinfo.txi(,7291) @example
../texinfo/texinfo.txi(,7292)      *Caution*: `rm * .[^.]*' removes _all_
../texinfo/texinfo.txi(,7293)      files in the directory.
../texinfo/texinfo.txi(,7294) @end example
../texinfo/texinfo.txi(,7295) 
../texinfo/texinfo.txi(,7296) The @code{@@strong} command is seldom used except to mark what is, in
../texinfo/texinfo.txi(,7297) effect, a typographical element, such as the word `Caution' in the
../texinfo/texinfo.txi(,7298) preceding example.
../texinfo/texinfo.txi(,7299) 
../texinfo/texinfo.txi(,7300) In the Info output, @code{@@emph} surrounds the text with underscores
../texinfo/texinfo.txi(,7301) (@samp{_}), and @code{@@strong} puts asterisks around the text.
../texinfo/texinfo.txi(,7302) 
../texinfo/texinfo.txi(,7303) @quotation
../texinfo/texinfo.txi(,7304) @strong{Caution:} Do not use @code{@@strong} with the word @samp{Note};
../texinfo/texinfo.txi(,7305) Info will mistake the combination for a cross reference.  Use a phrase
../texinfo/texinfo.txi(,7306) such as @strong{Please note} or @strong{Caution} instead.
../texinfo/texinfo.txi(,7307) @end quotation
../texinfo/texinfo.txi(,7308) 
../texinfo/texinfo.txi(,7309) 
../texinfo/texinfo.txi(,7310) @node Smallcaps
../texinfo/texinfo.txi(,7311) @subsection @code{@@sc}@{@var{text}@}: The Small Caps Font
../texinfo/texinfo.txi(,7312) @cindex Small caps font
../texinfo/texinfo.txi(,7313) @findex sc @r{(small caps font)}
../texinfo/texinfo.txi(,7314) 
../texinfo/texinfo.txi(,7315) Use the @samp{@@sc} command to set text in the printed and the HTML
../texinfo/texinfo.txi(,7316) output in @sc{a small caps font} and set text in the Info file in upper
../texinfo/texinfo.txi(,7317) case letters.  Write the text you want to be in small caps (where
../texinfo/texinfo.txi(,7318) possible) between braces in lower case, like this:
../texinfo/texinfo.txi(,7319) 
../texinfo/texinfo.txi(,7320) @example
../texinfo/texinfo.txi(,7321) The @@sc@{acm@} and @@sc@{ieee@} are technical societies.
../texinfo/texinfo.txi(,7322) @end example
../texinfo/texinfo.txi(,7323) 
../texinfo/texinfo.txi(,7324) @noindent
../texinfo/texinfo.txi(,7325) This produces:
../texinfo/texinfo.txi(,7326) 
../texinfo/texinfo.txi(,7327) @display
../texinfo/texinfo.txi(,7328) The @sc{acm} and @sc{ieee} are technical societies.
../texinfo/texinfo.txi(,7329) @end display
../texinfo/texinfo.txi(,7330) 
../texinfo/texinfo.txi(,7331) @TeX{} typesets the small caps font in a manner that prevents the
../texinfo/texinfo.txi(,7332) letters from `jumping out at you on the page'.  This makes small caps
../texinfo/texinfo.txi(,7333) text easier to read than text in all upper case---but it's usually
../texinfo/texinfo.txi(,7334) better to use regular mixed case anyway.  The Info formatting commands
../texinfo/texinfo.txi(,7335) set all small caps text in upper case.  In HTML, the text is upper-cased
../texinfo/texinfo.txi(,7336) and a smaller font is used to render it.
../texinfo/texinfo.txi(,7337) 
../texinfo/texinfo.txi(,7338) If the text between the braces of an @code{@@sc} command is uppercase,
../texinfo/texinfo.txi(,7339) @TeX{} typesets in FULL-SIZE CAPITALS.  Use full-size capitals
../texinfo/texinfo.txi(,7340) sparingly, if ever, and since it's redundant to mark all-uppercase text
../texinfo/texinfo.txi(,7341) with @code{@@sc}, @command{makeinfo} warns about such usage.
../texinfo/texinfo.txi(,7342) 
../texinfo/texinfo.txi(,7343) You may also use the small caps font for a jargon word such as
../texinfo/texinfo.txi(,7344) @sc{ato} (a @sc{nasa} word meaning `abort to orbit').
../texinfo/texinfo.txi(,7345) 
../texinfo/texinfo.txi(,7346) There are subtleties to using the small caps font with a jargon word
../texinfo/texinfo.txi(,7347) such as @sc{cdr}, a word used in Lisp programming.  In this case, you
../texinfo/texinfo.txi(,7348) should use the small caps font when the word refers to the second and
../texinfo/texinfo.txi(,7349) subsequent elements of a list (the @sc{cdr} of the list), but you
../texinfo/texinfo.txi(,7350) should use @samp{@@code} when the word refers to the Lisp function of
../texinfo/texinfo.txi(,7351) the same spelling.
../texinfo/texinfo.txi(,7352) 
../texinfo/texinfo.txi(,7353) 
../texinfo/texinfo.txi(,7354) @node Fonts
../texinfo/texinfo.txi(,7355) @subsection Fonts for Printing, Not Info
../texinfo/texinfo.txi(,7356) @cindex Fonts for printing, not for Info
../texinfo/texinfo.txi(,7357) @findex i @r{(italic font)}
../texinfo/texinfo.txi(,7358) @findex b @r{(bold font)}
../texinfo/texinfo.txi(,7359) @findex t @r{(typewriter font)}
../texinfo/texinfo.txi(,7360) @findex r @r{(Roman font)}
../texinfo/texinfo.txi(,7361) 
../texinfo/texinfo.txi(,7362) Texinfo provides four font commands that specify font changes in the
../texinfo/texinfo.txi(,7363) printed manual but have no effect in the Info file.  @code{@@i}
../texinfo/texinfo.txi(,7364) requests @i{italic} font (in some versions of @TeX{}, a slanted font
../texinfo/texinfo.txi(,7365) is used), @code{@@b} requests @b{bold} face, @code{@@t} requests the
../texinfo/texinfo.txi(,7366) @t{fixed-width}, typewriter-style font used by @code{@@code}, and @code{@@r} requests a
../texinfo/texinfo.txi(,7367) @r{roman} font, which is the usual font in which text is printed.  All
../texinfo/texinfo.txi(,7368) four commands apply to an argument that follows, surrounded by
../texinfo/texinfo.txi(,7369) braces.@refill
../texinfo/texinfo.txi(,7370) 
../texinfo/texinfo.txi(,7371) Only the @code{@@r} command has much use: in example programs, you
../texinfo/texinfo.txi(,7372) can use the @code{@@r} command to convert code comments from the
../texinfo/texinfo.txi(,7373) fixed-width font to a roman font.  This looks better in printed
../texinfo/texinfo.txi(,7374) output.@refill
../texinfo/texinfo.txi(,7375) 
../texinfo/texinfo.txi(,7376) @need 700
../texinfo/texinfo.txi(,7377) For example,
../texinfo/texinfo.txi(,7378) 
../texinfo/texinfo.txi(,7379) @example
../texinfo/texinfo.txi(,7380) @group
../texinfo/texinfo.txi(,7381) @@lisp
../texinfo/texinfo.txi(,7382) (+ 2 2)    ; @@r@{Add two plus two.@}
../texinfo/texinfo.txi(,7383) @@end lisp
../texinfo/texinfo.txi(,7384) @end group
../texinfo/texinfo.txi(,7385) @end example
../texinfo/texinfo.txi(,7386) 
../texinfo/texinfo.txi(,7387) @noindent
../texinfo/texinfo.txi(,7388) produces
../texinfo/texinfo.txi(,7389) 
../texinfo/texinfo.txi(,7390) @lisp
../texinfo/texinfo.txi(,7391) (+ 2 2)    ; @r{Add two plus two.}
../texinfo/texinfo.txi(,7392) @end lisp
../texinfo/texinfo.txi(,7393) 
../texinfo/texinfo.txi(,7394) If possible, you should avoid using the other three font commands.  If
../texinfo/texinfo.txi(,7395) you need to use one, it probably indicates a gap in the Texinfo
../texinfo/texinfo.txi(,7396) language.
../texinfo/texinfo.txi(,7397) 
../texinfo/texinfo.txi(,7398) 
../texinfo/texinfo.txi(,7399) @node Quotations and Examples
../texinfo/texinfo.txi(,7400) @chapter Quotations and Examples
../texinfo/texinfo.txi(,7401) 
../texinfo/texinfo.txi(,7402) Quotations and examples are blocks of text consisting of one or more
../texinfo/texinfo.txi(,7403) whole paragraphs that are set off from the bulk of the text and
../texinfo/texinfo.txi(,7404) treated differently.  They are usually indented.@refill
../texinfo/texinfo.txi(,7405) 
../texinfo/texinfo.txi(,7406) In Texinfo, you always begin a quotation or example by writing an
../texinfo/texinfo.txi(,7407) @@-command at the beginning of a line by itself, and end it by writing
../texinfo/texinfo.txi(,7408) an @code{@@end} command that is also at the beginning of a line by
../texinfo/texinfo.txi(,7409) itself.  For instance, you begin an example by writing @code{@@example}
../texinfo/texinfo.txi(,7410) by itself at the beginning of a line and end the example by writing
../texinfo/texinfo.txi(,7411) @code{@@end example} on a line by itself, at the beginning of that
../texinfo/texinfo.txi(,7412) line.
../texinfo/texinfo.txi(,7413) @findex end
../texinfo/texinfo.txi(,7414) 
../texinfo/texinfo.txi(,7415) @menu
../texinfo/texinfo.txi(,7416) * Block Enclosing Commands::    Different constructs for different purposes.
../texinfo/texinfo.txi(,7417) * quotation::                   Writing a quotation.
../texinfo/texinfo.txi(,7418) * example::                     Writing an example in a fixed-width font.
../texinfo/texinfo.txi(,7419) * verbatim::                    Writing a verbatim example.
../texinfo/texinfo.txi(,7420) * verbatiminclude::             Including a file verbatim.
../texinfo/texinfo.txi(,7421) * lisp::                        Illustrating Lisp code.
../texinfo/texinfo.txi(,7422) * small::                       Forms for @code{@@smallbook}.
../texinfo/texinfo.txi(,7423) * display::                     Writing an example in the current font.
../texinfo/texinfo.txi(,7424) * format::                      Writing an example without narrowed margins.
../texinfo/texinfo.txi(,7425) * exdent::                      Undo indentation on a line.
../texinfo/texinfo.txi(,7426) * flushleft & flushright::      Pushing text flush left or flush right.
../texinfo/texinfo.txi(,7427) * noindent::                    Preventing paragraph indentation.
../texinfo/texinfo.txi(,7428) * cartouche::                   Drawing rounded rectangles around examples.
../texinfo/texinfo.txi(,7429) @end menu
../texinfo/texinfo.txi(,7430) 
../texinfo/texinfo.txi(,7431) 
../texinfo/texinfo.txi(,7432) @node Block Enclosing Commands
../texinfo/texinfo.txi(,7433) @section Block Enclosing Commands
../texinfo/texinfo.txi(,7434) 
../texinfo/texinfo.txi(,7435) Here are commands for quotations and examples, explained further in the
../texinfo/texinfo.txi(,7436) following sections:
../texinfo/texinfo.txi(,7437) 
../texinfo/texinfo.txi(,7438) @table @code
../texinfo/texinfo.txi(,7439) @item @@quotation
../texinfo/texinfo.txi(,7440) Indicate text that is quoted. The text is filled, indented, and
../texinfo/texinfo.txi(,7441) printed in a roman font by default.
../texinfo/texinfo.txi(,7442) 
../texinfo/texinfo.txi(,7443) @item @@example
../texinfo/texinfo.txi(,7444) Illustrate code, commands, and the like. The text is printed
../texinfo/texinfo.txi(,7445) in a fixed-width font, and indented but not filled.
../texinfo/texinfo.txi(,7446) 
../texinfo/texinfo.txi(,7447) @item @@verbatim
../texinfo/texinfo.txi(,7448) Mark a piece of text that is to be printed verbatim; no character 
../texinfo/texinfo.txi(,7449) substitutions are made and all commands are ignored, until the next
../texinfo/texinfo.txi(,7450) @code{@@end verbatim}.  The text is printed in a fixed-width font, 
../texinfo/texinfo.txi(,7451) and not indented or filled.  Extra spaces and blank lines are 
../texinfo/texinfo.txi(,7452) significant, and tabs are expanded.
../texinfo/texinfo.txi(,7453) 
../texinfo/texinfo.txi(,7454) @item @@smallexample
../texinfo/texinfo.txi(,7455) Same as @code{@@example}, except that in @TeX{} this command typesets
../texinfo/texinfo.txi(,7456) text in a smaller font.
../texinfo/texinfo.txi(,7457) 
../texinfo/texinfo.txi(,7458) @item @@lisp
../texinfo/texinfo.txi(,7459) Like @code{@@example}, but specifically for illustrating Lisp code. The
../texinfo/texinfo.txi(,7460) text is printed in a fixed-width font, and indented but not filled.
../texinfo/texinfo.txi(,7461) 
../texinfo/texinfo.txi(,7462) @item @@smalllisp
../texinfo/texinfo.txi(,7463) Is to @code{@@lisp} as @code{@@smallexample} is to @code{@@example}.
../texinfo/texinfo.txi(,7464) 
../texinfo/texinfo.txi(,7465) @item @@display
../texinfo/texinfo.txi(,7466) Display illustrative text.  The text is indented but not filled, and
../texinfo/texinfo.txi(,7467) no font is selected (so, by default, the font is roman).@refill
../texinfo/texinfo.txi(,7468) 
../texinfo/texinfo.txi(,7469) @item @@smalldisplay
../texinfo/texinfo.txi(,7470) Is to @code{@@display} as @code{@@smallexample} is to @code{@@example}.
../texinfo/texinfo.txi(,7471) 
../texinfo/texinfo.txi(,7472) @item @@format
../texinfo/texinfo.txi(,7473) Like @code{@@display} (the text is not filled and no font is selected),
../texinfo/texinfo.txi(,7474) but the text is not indented.
../texinfo/texinfo.txi(,7475) 
../texinfo/texinfo.txi(,7476) @item @@smallformat
../texinfo/texinfo.txi(,7477) Is to @code{@@format} as @code{@@smallexample} is to @code{@@example}.
../texinfo/texinfo.txi(,7478) @end table
../texinfo/texinfo.txi(,7479) 
../texinfo/texinfo.txi(,7480) The @code{@@exdent} command is used within the above constructs to
../texinfo/texinfo.txi(,7481) undo the indentation of a line.
../texinfo/texinfo.txi(,7482) 
../texinfo/texinfo.txi(,7483) The @code{@@flushleft} and @code{@@flushright} commands are used to line
../texinfo/texinfo.txi(,7484) up the left or right margins of unfilled text.@refill
../texinfo/texinfo.txi(,7485) 
../texinfo/texinfo.txi(,7486) The @code{@@noindent} command may be used after one of the above
../texinfo/texinfo.txi(,7487) constructs to prevent the following text from being indented as a new
../texinfo/texinfo.txi(,7488) paragraph.
../texinfo/texinfo.txi(,7489) 
../texinfo/texinfo.txi(,7490) You can use the @code{@@cartouche} command within one of the above
../texinfo/texinfo.txi(,7491) constructs to highlight the example or quotation by drawing a box with
../texinfo/texinfo.txi(,7492) rounded corners around it.  @xref{cartouche, , Drawing Cartouches Around
../texinfo/texinfo.txi(,7493) Examples}.
../texinfo/texinfo.txi(,7494) 
../texinfo/texinfo.txi(,7495) 
../texinfo/texinfo.txi(,7496) @node quotation
../texinfo/texinfo.txi(,7497) @section @code{@@quotation}
../texinfo/texinfo.txi(,7498) @cindex Quotations
../texinfo/texinfo.txi(,7499) @findex quotation
../texinfo/texinfo.txi(,7500) 
../texinfo/texinfo.txi(,7501) The text of a quotation is processed normally except that:
../texinfo/texinfo.txi(,7502) 
../texinfo/texinfo.txi(,7503) @itemize @bullet
../texinfo/texinfo.txi(,7504) @item
../texinfo/texinfo.txi(,7505) the margins are closer to the center of the page, so the whole of the
../texinfo/texinfo.txi(,7506) quotation is indented;@refill
../texinfo/texinfo.txi(,7507) 
../texinfo/texinfo.txi(,7508) @item
../texinfo/texinfo.txi(,7509) the first lines of paragraphs are indented no more than other
../texinfo/texinfo.txi(,7510) lines;@refill
../texinfo/texinfo.txi(,7511) 
../texinfo/texinfo.txi(,7512) @item
../texinfo/texinfo.txi(,7513) in the printed output, interparagraph spacing is reduced.@refill
../texinfo/texinfo.txi(,7514) @end itemize
../texinfo/texinfo.txi(,7515) 
../texinfo/texinfo.txi(,7516) @quotation
../texinfo/texinfo.txi(,7517) This is an example of text written between an @code{@@quotation}
../texinfo/texinfo.txi(,7518) command and an @code{@@end quotation} command.  An @code{@@quotation}
../texinfo/texinfo.txi(,7519) command is most often used to indicate text that is excerpted from
../texinfo/texinfo.txi(,7520) another (real or hypothetical) printed work.@refill
../texinfo/texinfo.txi(,7521) @end quotation
../texinfo/texinfo.txi(,7522) 
../texinfo/texinfo.txi(,7523) Write an @code{@@quotation} command as text on a line by itself.  This
../texinfo/texinfo.txi(,7524) line will disappear from the output.  Mark the end of the quotation
../texinfo/texinfo.txi(,7525) with a line beginning with and containing only @code{@@end quotation}.
../texinfo/texinfo.txi(,7526) The @code{@@end quotation} line will likewise disappear from the
../texinfo/texinfo.txi(,7527) output.  Thus, the following,@refill
../texinfo/texinfo.txi(,7528) 
../texinfo/texinfo.txi(,7529) @example
../texinfo/texinfo.txi(,7530) @@quotation
../texinfo/texinfo.txi(,7531) This is
../texinfo/texinfo.txi(,7532) a foo.
../texinfo/texinfo.txi(,7533) @@end quotation
../texinfo/texinfo.txi(,7534) @end example
../texinfo/texinfo.txi(,7535) 
../texinfo/texinfo.txi(,7536) @noindent
../texinfo/texinfo.txi(,7537) produces
../texinfo/texinfo.txi(,7538) 
../texinfo/texinfo.txi(,7539) @quotation
../texinfo/texinfo.txi(,7540) This is a foo.
../texinfo/texinfo.txi(,7541) @end quotation
../texinfo/texinfo.txi(,7542) 
../texinfo/texinfo.txi(,7543) 
../texinfo/texinfo.txi(,7544) @node example
../texinfo/texinfo.txi(,7545) @section @code{@@example}: Example Text
../texinfo/texinfo.txi(,7546) @cindex Examples, formatting them
../texinfo/texinfo.txi(,7547) @cindex Formatting examples
../texinfo/texinfo.txi(,7548) @findex example
../texinfo/texinfo.txi(,7549) 
../texinfo/texinfo.txi(,7550) The @code{@@example} command is used to indicate an example that is
../texinfo/texinfo.txi(,7551) not part of the running text, such as computer input or output.
../texinfo/texinfo.txi(,7552) 
../texinfo/texinfo.txi(,7553) @example
../texinfo/texinfo.txi(,7554) @group
../texinfo/texinfo.txi(,7555) This is an example of text written between an
../texinfo/texinfo.txi(,7556) @code{@@example} command
../texinfo/texinfo.txi(,7557) and an @code{@@end example} command.
../texinfo/texinfo.txi(,7558) The text is indented but not filled.
../texinfo/texinfo.txi(,7559) @end group
../texinfo/texinfo.txi(,7560) 
../texinfo/texinfo.txi(,7561) @group
../texinfo/texinfo.txi(,7562) In the printed manual, the text is typeset in a
../texinfo/texinfo.txi(,7563) fixed-width font, and extra spaces and blank lines are
../texinfo/texinfo.txi(,7564) significant.  In the Info file, an analogous result is
../texinfo/texinfo.txi(,7565) obtained by indenting each line with five spaces.
../texinfo/texinfo.txi(,7566) @end group
../texinfo/texinfo.txi(,7567) @end example
../texinfo/texinfo.txi(,7568) 
../texinfo/texinfo.txi(,7569) Write an @code{@@example} command at the beginning of a line by itself.
../texinfo/texinfo.txi(,7570) Mark the end of the example
../texinfo/texinfo.txi(,7571) with an @code{@@end example} command, also written at the beginning of a
../texinfo/texinfo.txi(,7572) line by itself.@refill
../texinfo/texinfo.txi(,7573) 
../texinfo/texinfo.txi(,7574) @need 700
../texinfo/texinfo.txi(,7575) For example,
../texinfo/texinfo.txi(,7576) 
../texinfo/texinfo.txi(,7577) @example
../texinfo/texinfo.txi(,7578) @@example
../texinfo/texinfo.txi(,7579) mv foo bar
../texinfo/texinfo.txi(,7580) @@end example
../texinfo/texinfo.txi(,7581) @end example
../texinfo/texinfo.txi(,7582) 
../texinfo/texinfo.txi(,7583) @noindent
../texinfo/texinfo.txi(,7584) produces
../texinfo/texinfo.txi(,7585) 
../texinfo/texinfo.txi(,7586) @example
../texinfo/texinfo.txi(,7587) mv foo bar
../texinfo/texinfo.txi(,7588) @end example
../texinfo/texinfo.txi(,7589) 
../texinfo/texinfo.txi(,7590) The lines containing @code{@@example} and @code{@@end example}
../texinfo/texinfo.txi(,7591) will disappear from the output.
../texinfo/texinfo.txi(,7592) To make the output look good,
../texinfo/texinfo.txi(,7593) you should put a blank line before the
../texinfo/texinfo.txi(,7594) @code{@@example} and another blank line after the @code{@@end example}.
../texinfo/texinfo.txi(,7595) Note that blank lines inside the beginning
../texinfo/texinfo.txi(,7596) @code{@@example} and the ending @code{@@end example} will appear in
../texinfo/texinfo.txi(,7597) the output.@refill
../texinfo/texinfo.txi(,7598) 
../texinfo/texinfo.txi(,7599) @quotation
../texinfo/texinfo.txi(,7600) @strong{Caution:} Do not use tabs in the lines of an example or anywhere
../texinfo/texinfo.txi(,7601) else in Texinfo (except in verbatim environments)!  The @TeX{}
../texinfo/texinfo.txi(,7602) implementation of Texinfo treats tabs as single spaces, and that is not
../texinfo/texinfo.txi(,7603) what they look like.  (If necessary, in Emacs, you can use @kbd{M-x
../texinfo/texinfo.txi(,7604) untabify} to convert tabs in a region to multiple spaces.)@refill
../texinfo/texinfo.txi(,7605) @end quotation
../texinfo/texinfo.txi(,7606) 
../texinfo/texinfo.txi(,7607) Examples are often, logically speaking, ``in the middle'' of a
../texinfo/texinfo.txi(,7608) paragraph, and the text that continues after an example should not be
../texinfo/texinfo.txi(,7609) indented.  The @code{@@noindent} command prevents a piece of text from
../texinfo/texinfo.txi(,7610) being indented as if it were a new paragraph.
../texinfo/texinfo.txi(,7612) (@xref{noindent}.)
../texinfo/texinfo.txi(,7614) 
../texinfo/texinfo.txi(,7615) (The @code{@@code} command is used for examples of code that are
../texinfo/texinfo.txi(,7616) embedded within sentences, not set off from preceding and following
../texinfo/texinfo.txi(,7617) text.  @xref{code, , @code{@@code}}.)
../texinfo/texinfo.txi(,7618) 
../texinfo/texinfo.txi(,7619) 
../texinfo/texinfo.txi(,7620) @node verbatim
../texinfo/texinfo.txi(,7621) @section @code{@@verbatim}: Literal Text
../texinfo/texinfo.txi(,7622) @findex verbatim
../texinfo/texinfo.txi(,7623) @cindex Verbatim environment
../texinfo/texinfo.txi(,7624) 
../texinfo/texinfo.txi(,7625) Use the @code{@@verbatim} environment for printing of text that may
../texinfo/texinfo.txi(,7626) contain special characters or commands that should not be interpreted,
../texinfo/texinfo.txi(,7627) such as computer input or output (@code{@@example} interprets its text
../texinfo/texinfo.txi(,7628) as regular Texinfo commands).  This is especially useful for including
../texinfo/texinfo.txi(,7629) automatically generated output in a Texinfo manual.  Here is an example;
../texinfo/texinfo.txi(,7630) the output you see is just the same as the input, with a line
../texinfo/texinfo.txi(,7631) @code{@@verbatim} before and a line @code{@@end verbatim} after.
../texinfo/texinfo.txi(,7632) 
../texinfo/texinfo.txi(,7633) @verbatim
../texinfo/texinfo.txi(,7634) This is an example of text written in a @verbatim
../texinfo/texinfo.txi(,7635) block.  No character substitutions are made.  All commands
../texinfo/texinfo.txi(,7636) are ignored, until `<at>end verbatim'.
../texinfo/texinfo.txi(,7637) 
../texinfo/texinfo.txi(,7638) In the printed manual, the text is typeset in a
../texinfo/texinfo.txi(,7639) fixed-width font, and not indented or filled.  All
../texinfo/texinfo.txi(,7640) spaces and blank lines are significant, including tabs.
../texinfo/texinfo.txi(,7641) @end verbatim
../texinfo/texinfo.txi(,7642) 
../texinfo/texinfo.txi(,7643) Write a @code{@@verbatim} command at the beginning of a line by itself.
../texinfo/texinfo.txi(,7644) This line will disappear from the output.  Mark the end of the verbatim
../texinfo/texinfo.txi(,7645) block with a @code{@@end verbatim} command, also written at the
../texinfo/texinfo.txi(,7646) beginning of a line by itself.  The @code{@@end verbatim} will also
../texinfo/texinfo.txi(,7647) disappear from the output.
../texinfo/texinfo.txi(,7648) 
../texinfo/texinfo.txi(,7649) For example:
../texinfo/texinfo.txi(,7650) @c oops, got to trick this a bit: can't use @end verbatim inside @verbatim
../texinfo/texinfo.txi(,7651) 
../texinfo/texinfo.txi(,7652) @example
../texinfo/texinfo.txi(,7653) @exdent @@verbatim
../texinfo/texinfo.txi(,7654) @exdent @{
../texinfo/texinfo.txi(,7655) @exdent <tab>@@command with strange characters: @@'e 
../texinfo/texinfo.txi(,7656) @exdent expand<tab>me
../texinfo/texinfo.txi(,7657) @exdent @}
../texinfo/texinfo.txi(,7658) @exdent @@end verbatim
../texinfo/texinfo.txi(,7659) @end example
../texinfo/texinfo.txi(,7660) 
../texinfo/texinfo.txi(,7661) @noindent
../texinfo/texinfo.txi(,7662) produces
../texinfo/texinfo.txi(,7663) 
../texinfo/texinfo.txi(,7664) @verbatim
../texinfo/texinfo.txi(,7665) {
../texinfo/texinfo.txi(,7666) 	@command with strange characters: @'e 
../texinfo/texinfo.txi(,7667) expand	me
../texinfo/texinfo.txi(,7668) }
../texinfo/texinfo.txi(,7669) @end verbatim
../texinfo/texinfo.txi(,7670) 
../texinfo/texinfo.txi(,7671) Since the lines containing @code{@@verbatim} and @code{@@end verbatim}
../texinfo/texinfo.txi(,7672) produce no output, tyically you should put a blank line before the
../texinfo/texinfo.txi(,7673) @code{@@verbatim} and another blank line after the @code{@@end
../texinfo/texinfo.txi(,7674) verbatim}.  Blank lines between the beginning @code{@@verbatim} and the
../texinfo/texinfo.txi(,7675) ending @code{@@end verbatim} will appear in the output.
../texinfo/texinfo.txi(,7676) 
../texinfo/texinfo.txi(,7677) 
../texinfo/texinfo.txi(,7678) @node verbatiminclude
../texinfo/texinfo.txi(,7679) @section @code{@@verbatiminclude} @var{file}: Include a File Verbatim
../texinfo/texinfo.txi(,7680) @cindex Verbatim, include file
../texinfo/texinfo.txi(,7681) @cindex Including a file verbatim
../texinfo/texinfo.txi(,7682) @findex verbatiminclude
../texinfo/texinfo.txi(,7683) 
../texinfo/texinfo.txi(,7684) You can include the exact contents of a file in the document with the
../texinfo/texinfo.txi(,7685) @code{@@verbatiminclude} command:
../texinfo/texinfo.txi(,7686) 
../texinfo/texinfo.txi(,7687) @example
../texinfo/texinfo.txi(,7688) @@verbatiminclude @var{filename}
../texinfo/texinfo.txi(,7689) @end example
../texinfo/texinfo.txi(,7690) 
../texinfo/texinfo.txi(,7691) The contents of @var{filename} is printed in a verbatim environment
../texinfo/texinfo.txi(,7692) (@pxref{verbatim,,@code{@@verbatim}}).  Generally, the file is printed
../texinfo/texinfo.txi(,7693) exactly as it is, with all special characters and white space retained.
../texinfo/texinfo.txi(,7694) 
../texinfo/texinfo.txi(,7695) 
../texinfo/texinfo.txi(,7696) @node lisp
../texinfo/texinfo.txi(,7697) @section @code{@@lisp}: Marking a Lisp Example
../texinfo/texinfo.txi(,7698) @findex lisp
../texinfo/texinfo.txi(,7699) @cindex Lisp example
../texinfo/texinfo.txi(,7700) 
../texinfo/texinfo.txi(,7701) The @code{@@lisp} command is used for Lisp code.  It is synonymous
../texinfo/texinfo.txi(,7702) with the @code{@@example} command.
../texinfo/texinfo.txi(,7703) 
../texinfo/texinfo.txi(,7704) @lisp
../texinfo/texinfo.txi(,7705) This is an example of text written between an
../texinfo/texinfo.txi(,7706) @code{@@lisp} command and an @code{@@end lisp} command.
../texinfo/texinfo.txi(,7707) @end lisp
../texinfo/texinfo.txi(,7708) 
../texinfo/texinfo.txi(,7709) Use @code{@@lisp} instead of @code{@@example} to preserve information
../texinfo/texinfo.txi(,7710) regarding the nature of the example.  This is useful, for example, if
../texinfo/texinfo.txi(,7711) you write a function that evaluates only and all the Lisp code in a
../texinfo/texinfo.txi(,7712) Texinfo file.  Then you can use the Texinfo file as a Lisp
../texinfo/texinfo.txi(,7713) library.@footnote{It would be straightforward to extend Texinfo to work
../texinfo/texinfo.txi(,7714) in a similar fashion for C, Fortran, or other languages.}
../texinfo/texinfo.txi(,7715) 
../texinfo/texinfo.txi(,7716) Mark the end of @code{@@lisp} with @code{@@end lisp} on a line by
../texinfo/texinfo.txi(,7717) itself.@refill
../texinfo/texinfo.txi(,7718) 
../texinfo/texinfo.txi(,7719) 
../texinfo/texinfo.txi(,7720) @node small
../texinfo/texinfo.txi(,7721) @section @code{@@small@dots{}} Block Commands
../texinfo/texinfo.txi(,7722) @cindex Small examples
../texinfo/texinfo.txi(,7723) @cindex Examples in smaller fonts
../texinfo/texinfo.txi(,7724) @cindex Lisp examples in smaller fonts
../texinfo/texinfo.txi(,7725) @findex smalldisplay
../texinfo/texinfo.txi(,7726) @findex smallexample
../texinfo/texinfo.txi(,7727) @findex smallformat
../texinfo/texinfo.txi(,7728) @findex smalllisp
../texinfo/texinfo.txi(,7729) 
../texinfo/texinfo.txi(,7730) In addition to the regular @code{@@example} and @code{@@lisp} commands,
../texinfo/texinfo.txi(,7731) Texinfo has ``small'' example-style commands.  These are
../texinfo/texinfo.txi(,7732) @code{@@smalldisplay}, @code{@@smallexample}, @code{@@smallformat}, and
../texinfo/texinfo.txi(,7733) @code{@@smalllisp}.
../texinfo/texinfo.txi(,7734) 
../texinfo/texinfo.txi(,7735) In @TeX{}, the @code{@@small@dots{}} commands typeset text in a smaller
../texinfo/texinfo.txi(,7736) font than the non-small example commands.  Consequently, many examples
../texinfo/texinfo.txi(,7737) containing long lines fit on a page without needing to be shortened.
../texinfo/texinfo.txi(,7738) 
../texinfo/texinfo.txi(,7739) In Info, the @code{@@small@dots{}} commands are equivalent to their
../texinfo/texinfo.txi(,7740) non-small companion commands.
../texinfo/texinfo.txi(,7741) 
../texinfo/texinfo.txi(,7742) Mark the end of an @code{@@small@dots{}} block with a corresponding
../texinfo/texinfo.txi(,7743) @code{@@end small@dots{}}.  For example, pair @code{@@smallexample} with
../texinfo/texinfo.txi(,7744) @code{@@end smallexample}.
../texinfo/texinfo.txi(,7745) 
../texinfo/texinfo.txi(,7776) @smallexample
../texinfo/texinfo.txi(,7777) This is an example of text written between @code{@@smallexample} and
../texinfo/texinfo.txi(,7778) @code{@@end smallexample}.  In Info this text appears in its normal size;
../texinfo/texinfo.txi(,7779) but in a 7 by 9.25 inch manual, this text appears in a smaller font.
../texinfo/texinfo.txi(,7780) @end smallexample
../texinfo/texinfo.txi(,7782) 
../texinfo/texinfo.txi(,7783) The @code{@@small@dots{}} commands make it easier to prepare manuals
../texinfo/texinfo.txi(,7784) without forcing you to edit examples by hand to fit them onto narrower
../texinfo/texinfo.txi(,7785) pages.
../texinfo/texinfo.txi(,7786) 
../texinfo/texinfo.txi(,7787) As a general rule, a printed document looks better if you use only one
../texinfo/texinfo.txi(,7788) of (for example) @code{@@example} or in @code{@@smallexample}
../texinfo/texinfo.txi(,7789) consistently within a chapter.  Only occasionally should you mix the two
../texinfo/texinfo.txi(,7790) formats.
../texinfo/texinfo.txi(,7791) 
../texinfo/texinfo.txi(,7792) @xref{smallbook, , Printing ``Small'' Books}, for more information
../texinfo/texinfo.txi(,7793) about the @code{@@smallbook} command.
../texinfo/texinfo.txi(,7794) 
../texinfo/texinfo.txi(,7795) 
../texinfo/texinfo.txi(,7796) @node display
../texinfo/texinfo.txi(,7797) @section @code{@@display} and @code{@@smalldisplay}
../texinfo/texinfo.txi(,7798) @cindex Display formatting
../texinfo/texinfo.txi(,7799) @findex display
../texinfo/texinfo.txi(,7800) 
../texinfo/texinfo.txi(,7801) The @code{@@display} command begins a kind of example.  It is like the
../texinfo/texinfo.txi(,7802) @code{@@example} command
../texinfo/texinfo.txi(,7803) except that, in
../texinfo/texinfo.txi(,7804) a printed manual, @code{@@display} does not select the fixed-width
../texinfo/texinfo.txi(,7805) font.  In fact, it does not specify the font at all, so that the text
../texinfo/texinfo.txi(,7806) appears in the same font it would have appeared in without the
../texinfo/texinfo.txi(,7807) @code{@@display} command.@refill
../texinfo/texinfo.txi(,7808) 
../texinfo/texinfo.txi(,7809) @display
../texinfo/texinfo.txi(,7810) This is an example of text written between an @code{@@display} command
../texinfo/texinfo.txi(,7811) and an @code{@@end display} command.  The @code{@@display} command
../texinfo/texinfo.txi(,7812) indents the text, but does not fill it.
../texinfo/texinfo.txi(,7813) @end display
../texinfo/texinfo.txi(,7814) 
../texinfo/texinfo.txi(,7815) @findex smalldisplay
../texinfo/texinfo.txi(,7816) Texinfo also provides a command @code{@@smalldisplay}, which is like
../texinfo/texinfo.txi(,7817) @code{@@display} but uses a smaller font in @code{@@smallbook} format.
../texinfo/texinfo.txi(,7818) @xref{small}.
../texinfo/texinfo.txi(,7819) 
../texinfo/texinfo.txi(,7820) 
../texinfo/texinfo.txi(,7821) @node format
../texinfo/texinfo.txi(,7822) @section @code{@@format} and @code{@@smallformat}
../texinfo/texinfo.txi(,7823) @findex format
../texinfo/texinfo.txi(,7824) 
../texinfo/texinfo.txi(,7825) The @code{@@format} command is similar to @code{@@example} except
../texinfo/texinfo.txi(,7826) that, in the printed manual, @code{@@format} does not select the
../texinfo/texinfo.txi(,7827) fixed-width font and does not narrow the margins.@refill
../texinfo/texinfo.txi(,7828) 
../texinfo/texinfo.txi(,7829) @format
../texinfo/texinfo.txi(,7830) This is an example of text written between an @code{@@format} command
../texinfo/texinfo.txi(,7831) and an @code{@@end format} command.  As you can see
../texinfo/texinfo.txi(,7832) from this example,
../texinfo/texinfo.txi(,7833) the @code{@@format} command does not fill the text.
../texinfo/texinfo.txi(,7834) @end format
../texinfo/texinfo.txi(,7835) 
../texinfo/texinfo.txi(,7836) @findex smallformat
../texinfo/texinfo.txi(,7837) Texinfo also provides a command @code{@@smallformat}, which is like
../texinfo/texinfo.txi(,7838) @code{@@format} but uses a smaller font in @code{@@smallbook} format.
../texinfo/texinfo.txi(,7839) @xref{small}.
../texinfo/texinfo.txi(,7840) 
../texinfo/texinfo.txi(,7841) 
../texinfo/texinfo.txi(,7842) 
../texinfo/texinfo.txi(,7843) @node exdent
../texinfo/texinfo.txi(,7844) @section @code{@@exdent}: Undoing a Line's Indentation
../texinfo/texinfo.txi(,7845) @cindex Indentation undoing
../texinfo/texinfo.txi(,7846) @findex exdent
../texinfo/texinfo.txi(,7847) 
../texinfo/texinfo.txi(,7848) The @code{@@exdent} command removes any indentation a line might have.
../texinfo/texinfo.txi(,7849) The command is written at the beginning of a line and applies only to
../texinfo/texinfo.txi(,7850) the text that follows the command that is on the same line.  Do not use
../texinfo/texinfo.txi(,7851) braces around the text.  In a printed manual, the text on an
../texinfo/texinfo.txi(,7852) @code{@@exdent} line is printed in the roman font.@refill
../texinfo/texinfo.txi(,7853) 
../texinfo/texinfo.txi(,7854) @code{@@exdent} is usually used within examples.  Thus,@refill
../texinfo/texinfo.txi(,7855) 
../texinfo/texinfo.txi(,7856) @example
../texinfo/texinfo.txi(,7857) @group
../texinfo/texinfo.txi(,7858) @@example
../texinfo/texinfo.txi(,7859) This line follows an @@@@example command.
../texinfo/texinfo.txi(,7860) @@exdent This line is exdented.
../texinfo/texinfo.txi(,7861) This line follows the exdented line.
../texinfo/texinfo.txi(,7862) The @@@@end example comes on the next line.
../texinfo/texinfo.txi(,7863) @@end group
../texinfo/texinfo.txi(,7864) @end group
../texinfo/texinfo.txi(,7865) @end example
../texinfo/texinfo.txi(,7866) 
../texinfo/texinfo.txi(,7867) @noindent
../texinfo/texinfo.txi(,7868) produces
../texinfo/texinfo.txi(,7869) 
../texinfo/texinfo.txi(,7870) @example
../texinfo/texinfo.txi(,7871) @group
../texinfo/texinfo.txi(,7872) This line follows an @@example command.
../texinfo/texinfo.txi(,7873) @exdent This line is exdented.
../texinfo/texinfo.txi(,7874) This line follows the exdented line.
../texinfo/texinfo.txi(,7875) The @@end example comes on the next line.
../texinfo/texinfo.txi(,7876) @end group
../texinfo/texinfo.txi(,7877) @end example
../texinfo/texinfo.txi(,7878) 
../texinfo/texinfo.txi(,7879) In practice, the @code{@@exdent} command is rarely used.
../texinfo/texinfo.txi(,7880) Usually, you un-indent text by ending the example and
../texinfo/texinfo.txi(,7881) returning the page to its normal width.@refill
../texinfo/texinfo.txi(,7882) 
../texinfo/texinfo.txi(,7883) 
../texinfo/texinfo.txi(,7884) @node flushleft & flushright
../texinfo/texinfo.txi(,7885) @section @code{@@flushleft} and @code{@@flushright}
../texinfo/texinfo.txi(,7886) @findex flushleft
../texinfo/texinfo.txi(,7887) @findex flushright
../texinfo/texinfo.txi(,7888) @cindex ragged right
../texinfo/texinfo.txi(,7889) @cindex ragged left
../texinfo/texinfo.txi(,7890) 
../texinfo/texinfo.txi(,7891) The @code{@@flushleft} and @code{@@flushright} commands line up the
../texinfo/texinfo.txi(,7892) ends of lines on the left and right margins of a page,
../texinfo/texinfo.txi(,7893) but do not fill the text.  The commands are written on lines of their
../texinfo/texinfo.txi(,7894) own, without braces.  The @code{@@flushleft} and @code{@@flushright}
../texinfo/texinfo.txi(,7895) commands are ended by @code{@@end flushleft} and @code{@@end
../texinfo/texinfo.txi(,7896) flushright} commands on lines of their own.@refill
../texinfo/texinfo.txi(,7897) 
../texinfo/texinfo.txi(,7898) @need 1500
../texinfo/texinfo.txi(,7899) For example,
../texinfo/texinfo.txi(,7900) 
../texinfo/texinfo.txi(,7901) @example
../texinfo/texinfo.txi(,7902) @group
../texinfo/texinfo.txi(,7903) @@flushleft
../texinfo/texinfo.txi(,7904) This text is
../texinfo/texinfo.txi(,7905) written flushleft.
../texinfo/texinfo.txi(,7906) @@end flushleft
../texinfo/texinfo.txi(,7907) @end group
../texinfo/texinfo.txi(,7908) @end example
../texinfo/texinfo.txi(,7909) 
../texinfo/texinfo.txi(,7910) @noindent
../texinfo/texinfo.txi(,7911) produces
../texinfo/texinfo.txi(,7912) 
../texinfo/texinfo.txi(,7913) @quotation
../texinfo/texinfo.txi(,7914) @flushleft
../texinfo/texinfo.txi(,7915) This text is
../texinfo/texinfo.txi(,7916) written flushleft.
../texinfo/texinfo.txi(,7917) @end flushleft
../texinfo/texinfo.txi(,7918) @end quotation
../texinfo/texinfo.txi(,7919) 
../texinfo/texinfo.txi(,7920) 
../texinfo/texinfo.txi(,7921) @code{@@flushright} produces the type of indentation often used in the
../texinfo/texinfo.txi(,7922) return address of letters.  For example,
../texinfo/texinfo.txi(,7923) 
../texinfo/texinfo.txi(,7924) @example
../texinfo/texinfo.txi(,7925) @group
../texinfo/texinfo.txi(,7926) @@flushright
../texinfo/texinfo.txi(,7927) Here is an example of text written
../texinfo/texinfo.txi(,7928) flushright.  The @@code@{@@flushright@} command
../texinfo/texinfo.txi(,7929) right justifies every line but leaves the
../texinfo/texinfo.txi(,7930) left end ragged.
../texinfo/texinfo.txi(,7931) @@end flushright
../texinfo/texinfo.txi(,7932) @end group
../texinfo/texinfo.txi(,7933) @end example
../texinfo/texinfo.txi(,7934) 
../texinfo/texinfo.txi(,7935) @noindent
../texinfo/texinfo.txi(,7936) produces
../texinfo/texinfo.txi(,7937) 
../texinfo/texinfo.txi(,7938) @flushright
../texinfo/texinfo.txi(,7939) Here is an example of text written
../texinfo/texinfo.txi(,7940) flushright.  The @code{@@flushright} command
../texinfo/texinfo.txi(,7941) right justifies every line but leaves the
../texinfo/texinfo.txi(,7942) left end ragged.
../texinfo/texinfo.txi(,7943) @end flushright
../texinfo/texinfo.txi(,7944) 
../texinfo/texinfo.txi(,7945) 
../texinfo/texinfo.txi(,7946) @node noindent
../texinfo/texinfo.txi(,7947) @section @code{@@noindent}: Omitting Indentation
../texinfo/texinfo.txi(,7948) @findex noindent
../texinfo/texinfo.txi(,7949) 
../texinfo/texinfo.txi(,7950) An example or other inclusion can break a paragraph into segments.
../texinfo/texinfo.txi(,7951) Ordinarily, the formatters indent text that follows an example as a new
../texinfo/texinfo.txi(,7952) paragraph.  However, you can prevent this by writing @code{@@noindent}
../texinfo/texinfo.txi(,7953) at the beginning of a line by itself preceding the continuation
../texinfo/texinfo.txi(,7954) text.@refill
../texinfo/texinfo.txi(,7955) 
../texinfo/texinfo.txi(,7956) @need 1500
../texinfo/texinfo.txi(,7957) For example:
../texinfo/texinfo.txi(,7958) 
../texinfo/texinfo.txi(,7959) @example
../texinfo/texinfo.txi(,7960) @group
../texinfo/texinfo.txi(,7961) @@example
../texinfo/texinfo.txi(,7962) This is an example
../texinfo/texinfo.txi(,7963) @@end example
../texinfo/texinfo.txi(,7964) 
../texinfo/texinfo.txi(,7965) @@noindent
../texinfo/texinfo.txi(,7966) This line is not indented.  As you can see, the
../texinfo/texinfo.txi(,7967) beginning of the line is fully flush left with the line
../texinfo/texinfo.txi(,7968) that follows after it.  (This whole example is between
../texinfo/texinfo.txi(,7969) @@code@{@@@@display@} and @@code@{@@@@end display@}.)
../texinfo/texinfo.txi(,7970) @end group
../texinfo/texinfo.txi(,7971) @end example
../texinfo/texinfo.txi(,7972) 
../texinfo/texinfo.txi(,7973) @noindent
../texinfo/texinfo.txi(,7974) produces
../texinfo/texinfo.txi(,7975) 
../texinfo/texinfo.txi(,7976) @display
../texinfo/texinfo.txi(,7977) @example
../texinfo/texinfo.txi(,7978) This is an example
../texinfo/texinfo.txi(,7979) @end example
../texinfo/texinfo.txi(,7984) 
../texinfo/texinfo.txi(,7985) @noindent
../texinfo/texinfo.txi(,7986) This line is not indented.  As you can see, the
../texinfo/texinfo.txi(,7987) beginning of the line is fully flush left with the line
../texinfo/texinfo.txi(,7988) that follows after it.  (This whole example is between
../texinfo/texinfo.txi(,7989) @code{@@display} and @code{@@end display}.)
../texinfo/texinfo.txi(,7990) @end display
../texinfo/texinfo.txi(,7991) 
../texinfo/texinfo.txi(,7992) To adjust the number of blank lines properly in the Info file output,
../texinfo/texinfo.txi(,7993) remember that the line containing @code{@@noindent} does not generate a
../texinfo/texinfo.txi(,7994) blank line, and neither does the @code{@@end example} line.@refill
../texinfo/texinfo.txi(,7995) 
../texinfo/texinfo.txi(,7996) In the Texinfo source file for this manual, each line that says
../texinfo/texinfo.txi(,7997) `produces' is preceded by a line containing @code{@@noindent}.@refill
../texinfo/texinfo.txi(,7998) 
../texinfo/texinfo.txi(,7999) Do not put braces after an @code{@@noindent} command; they are not
../texinfo/texinfo.txi(,8000) necessary, since @code{@@noindent} is a command used outside of
../texinfo/texinfo.txi(,8001) paragraphs (@pxref{Command Syntax}).@refill
../texinfo/texinfo.txi(,8002) 
../texinfo/texinfo.txi(,8003) 
../texinfo/texinfo.txi(,8004) @node cartouche
../texinfo/texinfo.txi(,8005) @section @code{@@cartouche}: Rounded Rectangles Around Examples
../texinfo/texinfo.txi(,8006) @findex cartouche
../texinfo/texinfo.txi(,8007) @cindex Box with rounded corners
../texinfo/texinfo.txi(,8008) @cindex Rounded rectangles, around examples
../texinfo/texinfo.txi(,8009) 
../texinfo/texinfo.txi(,8010) In a printed manual, the @code{@@cartouche} command draws a box with
../texinfo/texinfo.txi(,8011) rounded corners around its contents.  You can use this command to
../texinfo/texinfo.txi(,8012) further highlight an example or quotation.  For instance, you could
../texinfo/texinfo.txi(,8013) write a manual in which one type of example is surrounded by a cartouche
../texinfo/texinfo.txi(,8014) for emphasis.
../texinfo/texinfo.txi(,8015) 
../texinfo/texinfo.txi(,8016) @code{@@cartouche} affects only the printed manual; it has no effect in
../texinfo/texinfo.txi(,8017) other output files.
../texinfo/texinfo.txi(,8018) 
../texinfo/texinfo.txi(,8019) @need 1500
../texinfo/texinfo.txi(,8020) For example,
../texinfo/texinfo.txi(,8021) 
../texinfo/texinfo.txi(,8022) @example
../texinfo/texinfo.txi(,8023) @group
../texinfo/texinfo.txi(,8024) @@example
../texinfo/texinfo.txi(,8025) @@cartouche
../texinfo/texinfo.txi(,8026) % pwd
../texinfo/texinfo.txi(,8027) /usr/local/share/emacs
../texinfo/texinfo.txi(,8028) @@end cartouche
../texinfo/texinfo.txi(,8029) @@end example
../texinfo/texinfo.txi(,8030) @end group
../texinfo/texinfo.txi(,8031) @end example
../texinfo/texinfo.txi(,8032) 
../texinfo/texinfo.txi(,8033) @noindent
../texinfo/texinfo.txi(,8034) surrounds the two-line example with a box with rounded corners, in the
../texinfo/texinfo.txi(,8035) printed manual.
../texinfo/texinfo.txi(,8036) 
../texinfo/texinfo.txi(,8049) 
../texinfo/texinfo.txi(,8050) 
../texinfo/texinfo.txi(,8051) @node Lists and Tables
../texinfo/texinfo.txi(,8052) @chapter Lists and Tables
../texinfo/texinfo.txi(,8053) @cindex Making lists and tables
../texinfo/texinfo.txi(,8054) @cindex Lists and tables, making
../texinfo/texinfo.txi(,8055) @cindex Tables and lists, making
../texinfo/texinfo.txi(,8056) 
../texinfo/texinfo.txi(,8057) Texinfo has several ways of making lists and tables.  Lists can be
../texinfo/texinfo.txi(,8058) bulleted or numbered; two-column tables can highlight the items in
../texinfo/texinfo.txi(,8059) the first column; multi-column tables are also supported.
../texinfo/texinfo.txi(,8060) 
../texinfo/texinfo.txi(,8061) @menu
../texinfo/texinfo.txi(,8062) * Introducing Lists::           Texinfo formats lists for you.
../texinfo/texinfo.txi(,8063) * itemize::                     How to construct a simple list.
../texinfo/texinfo.txi(,8064) * enumerate::                   How to construct a numbered list.
../texinfo/texinfo.txi(,8065) * Two-column Tables::           How to construct a two-column table.
../texinfo/texinfo.txi(,8066) * Multi-column Tables::         How to construct generalized tables.
../texinfo/texinfo.txi(,8067) @end menu
../texinfo/texinfo.txi(,8068) 
../texinfo/texinfo.txi(,8069) @node Introducing Lists, itemize, Lists and Tables, Lists and Tables
../texinfo/texinfo.txi(,8071) @heading Introducing Lists
../texinfo/texinfo.txi(,8073) 
../texinfo/texinfo.txi(,8074) Texinfo automatically indents the text in lists or tables, and numbers
../texinfo/texinfo.txi(,8075) an enumerated list.  This last feature is useful if you modify the
../texinfo/texinfo.txi(,8076) list, since you do not need to renumber it yourself.@refill
../texinfo/texinfo.txi(,8077) 
../texinfo/texinfo.txi(,8078) Numbered lists and tables begin with the appropriate @@-command at the
../texinfo/texinfo.txi(,8079) beginning of a line, and end with the corresponding @code{@@end}
../texinfo/texinfo.txi(,8080) command on a line by itself.  The table and itemized-list commands
../texinfo/texinfo.txi(,8081) also require that you write formatting information on the same line as
../texinfo/texinfo.txi(,8082) the beginning @@-command.@refill
../texinfo/texinfo.txi(,8083) 
../texinfo/texinfo.txi(,8084) Begin an enumerated list, for example, with an @code{@@enumerate}
../texinfo/texinfo.txi(,8085) command and end the list with an @code{@@end enumerate} command.
../texinfo/texinfo.txi(,8086) Begin an itemized list with an @code{@@itemize} command, followed on
../texinfo/texinfo.txi(,8087) the same line by a formatting command such as @code{@@bullet}, and end
../texinfo/texinfo.txi(,8088) the list with an @code{@@end itemize} command.@refill
../texinfo/texinfo.txi(,8089) @findex end
../texinfo/texinfo.txi(,8090) 
../texinfo/texinfo.txi(,8091) Precede each element of a list with an @code{@@item} or @code{@@itemx}
../texinfo/texinfo.txi(,8092) command.@refill
../texinfo/texinfo.txi(,8093) 
../texinfo/texinfo.txi(,8094) @sp 1
../texinfo/texinfo.txi(,8095) @noindent
../texinfo/texinfo.txi(,8096) Here is an itemized list of the different kinds of table and lists:@refill
../texinfo/texinfo.txi(,8097) 
../texinfo/texinfo.txi(,8098) @itemize @bullet
../texinfo/texinfo.txi(,8099) @item
../texinfo/texinfo.txi(,8100) Itemized lists with and without bullets.
../texinfo/texinfo.txi(,8101) 
../texinfo/texinfo.txi(,8102) @item
../texinfo/texinfo.txi(,8103) Enumerated lists, using numbers or letters.
../texinfo/texinfo.txi(,8104) 
../texinfo/texinfo.txi(,8105) @item
../texinfo/texinfo.txi(,8106) Two-column tables with highlighting.
../texinfo/texinfo.txi(,8107) @end itemize
../texinfo/texinfo.txi(,8108) 
../texinfo/texinfo.txi(,8109) @sp 1
../texinfo/texinfo.txi(,8110) @noindent
../texinfo/texinfo.txi(,8111) Here is an enumerated list with the same items:@refill
../texinfo/texinfo.txi(,8112) 
../texinfo/texinfo.txi(,8113) @enumerate
../texinfo/texinfo.txi(,8114) @item
../texinfo/texinfo.txi(,8115) Itemized lists with and without bullets.
../texinfo/texinfo.txi(,8116) 
../texinfo/texinfo.txi(,8117) @item
../texinfo/texinfo.txi(,8118) Enumerated lists, using numbers or letters.
../texinfo/texinfo.txi(,8119) 
../texinfo/texinfo.txi(,8120) @item
../texinfo/texinfo.txi(,8121) Two-column tables with highlighting.
../texinfo/texinfo.txi(,8122) @end enumerate
../texinfo/texinfo.txi(,8123) 
../texinfo/texinfo.txi(,8124) @sp 1
../texinfo/texinfo.txi(,8125) @noindent
../texinfo/texinfo.txi(,8126) And here is a two-column table with the same items and their
../texinfo/texinfo.txi(,8127) @w{@@-commands}:@refill
../texinfo/texinfo.txi(,8128) 
../texinfo/texinfo.txi(,8129) @table @code
../texinfo/texinfo.txi(,8130) @item @@itemize
../texinfo/texinfo.txi(,8131) Itemized lists with and without bullets.
../texinfo/texinfo.txi(,8132) 
../texinfo/texinfo.txi(,8133) @item @@enumerate
../texinfo/texinfo.txi(,8134) Enumerated lists, using numbers or letters.
../texinfo/texinfo.txi(,8135) 
../texinfo/texinfo.txi(,8136) @item @@table
../texinfo/texinfo.txi(,8137) @itemx @@ftable
../texinfo/texinfo.txi(,8138) @itemx @@vtable
../texinfo/texinfo.txi(,8139) Two-column tables, optionally with indexing.
../texinfo/texinfo.txi(,8140) @end table
../texinfo/texinfo.txi(,8141) 
../texinfo/texinfo.txi(,8142) 
../texinfo/texinfo.txi(,8143) @node itemize
../texinfo/texinfo.txi(,8144) @section @code{@@itemize}: Making an Itemized List
../texinfo/texinfo.txi(,8145) @cindex Itemization
../texinfo/texinfo.txi(,8146) @findex itemize
../texinfo/texinfo.txi(,8147) 
../texinfo/texinfo.txi(,8148) The @code{@@itemize} command produces sequences of indented
../texinfo/texinfo.txi(,8149) paragraphs, with a bullet or other mark inside the left margin
../texinfo/texinfo.txi(,8150) at the beginning of each paragraph for which such a mark is desired.@refill
../texinfo/texinfo.txi(,8151) 
../texinfo/texinfo.txi(,8152) @cindex @code{@@w}, for blank items
../texinfo/texinfo.txi(,8153) Begin an itemized list by writing @code{@@itemize} at the beginning of
../texinfo/texinfo.txi(,8154) a line.  Follow the command, on the same line, with a character or a
../texinfo/texinfo.txi(,8155) Texinfo command that generates a mark.  Usually, you will write
../texinfo/texinfo.txi(,8156) @code{@@bullet} after @code{@@itemize}, but you can use
../texinfo/texinfo.txi(,8157) @code{@@minus}, or any command or character that results in a single
../texinfo/texinfo.txi(,8158) character in the Info file.  If you don't want any mark at all, use
../texinfo/texinfo.txi(,8159) @code{@@w}.  (When you write the mark command such as
../texinfo/texinfo.txi(,8160) @code{@@bullet} after an @code{@@itemize} command, you may omit the
../texinfo/texinfo.txi(,8161) @samp{@{@}}.)  If you don't specify a mark command, the default is
../texinfo/texinfo.txi(,8162) @code{@@bullet}.
../texinfo/texinfo.txi(,8163) 
../texinfo/texinfo.txi(,8164) Write the text of the indented paragraphs themselves after the
../texinfo/texinfo.txi(,8165) @code{@@itemize}, up to another line that says @code{@@end
../texinfo/texinfo.txi(,8166) itemize}.@refill
../texinfo/texinfo.txi(,8167) 
../texinfo/texinfo.txi(,8168) @findex item
../texinfo/texinfo.txi(,8169) Before each paragraph for which a mark in the margin is desired, write a
../texinfo/texinfo.txi(,8170) line that says just @code{@@item}.  It is ok to have text following the
../texinfo/texinfo.txi(,8171) @code{@@item}.
../texinfo/texinfo.txi(,8172) 
../texinfo/texinfo.txi(,8173) Usually, you should put a blank line before an @code{@@item}.  This
../texinfo/texinfo.txi(,8174) puts a blank line in the Info file. (@TeX{} inserts the proper
../texinfo/texinfo.txi(,8175) interline whitespace in either case.)  Except when the entries are
../texinfo/texinfo.txi(,8176) very brief, these blank lines make the list look better.@refill
../texinfo/texinfo.txi(,8177) 
../texinfo/texinfo.txi(,8178) Here is an example of the use of @code{@@itemize}, followed by the
../texinfo/texinfo.txi(,8179) output it produces.  @code{@@bullet} produces an @samp{*} in Info and a
../texinfo/texinfo.txi(,8180) round dot in @TeX{}.
../texinfo/texinfo.txi(,8181) 
../texinfo/texinfo.txi(,8182) @example
../texinfo/texinfo.txi(,8183) @group
../texinfo/texinfo.txi(,8184) @@itemize @@bullet
../texinfo/texinfo.txi(,8185) @@item
../texinfo/texinfo.txi(,8186) Some text for foo.
../texinfo/texinfo.txi(,8187) 
../texinfo/texinfo.txi(,8188) @@item
../texinfo/texinfo.txi(,8189) Some text
../texinfo/texinfo.txi(,8190) for bar.
../texinfo/texinfo.txi(,8191) @@end itemize
../texinfo/texinfo.txi(,8192) @end group
../texinfo/texinfo.txi(,8193) @end example
../texinfo/texinfo.txi(,8194) 
../texinfo/texinfo.txi(,8195) @noindent
../texinfo/texinfo.txi(,8196) This produces:
../texinfo/texinfo.txi(,8197) 
../texinfo/texinfo.txi(,8198) @quotation
../texinfo/texinfo.txi(,8199) @itemize @bullet
../texinfo/texinfo.txi(,8200) @item
../texinfo/texinfo.txi(,8201) Some text for foo.
../texinfo/texinfo.txi(,8202) 
../texinfo/texinfo.txi(,8203) @item
../texinfo/texinfo.txi(,8204) Some text
../texinfo/texinfo.txi(,8205) for bar.
../texinfo/texinfo.txi(,8206) @end itemize
../texinfo/texinfo.txi(,8207) @end quotation
../texinfo/texinfo.txi(,8208) 
../texinfo/texinfo.txi(,8209) Itemized lists may be embedded within other itemized lists.  Here is a
../texinfo/texinfo.txi(,8210) list marked with dashes embedded in a list marked with bullets:@refill
../texinfo/texinfo.txi(,8211) 
../texinfo/texinfo.txi(,8212) @example
../texinfo/texinfo.txi(,8213) @group
../texinfo/texinfo.txi(,8214) @@itemize @@bullet
../texinfo/texinfo.txi(,8215) @@item
../texinfo/texinfo.txi(,8216) First item.
../texinfo/texinfo.txi(,8217) 
../texinfo/texinfo.txi(,8218) @@itemize @@minus
../texinfo/texinfo.txi(,8219) @@item
../texinfo/texinfo.txi(,8220) Inner item.
../texinfo/texinfo.txi(,8221) 
../texinfo/texinfo.txi(,8222) @@item
../texinfo/texinfo.txi(,8223) Second inner item.
../texinfo/texinfo.txi(,8224) @@end itemize
../texinfo/texinfo.txi(,8225) 
../texinfo/texinfo.txi(,8226) @@item
../texinfo/texinfo.txi(,8227) Second outer item.
../texinfo/texinfo.txi(,8228) @@end itemize
../texinfo/texinfo.txi(,8229) @end group
../texinfo/texinfo.txi(,8230) @end example
../texinfo/texinfo.txi(,8231) 
../texinfo/texinfo.txi(,8232) @noindent
../texinfo/texinfo.txi(,8233) This produces:
../texinfo/texinfo.txi(,8234) 
../texinfo/texinfo.txi(,8235) @quotation
../texinfo/texinfo.txi(,8236) @itemize @bullet
../texinfo/texinfo.txi(,8237) @item
../texinfo/texinfo.txi(,8238) First item.
../texinfo/texinfo.txi(,8239) 
../texinfo/texinfo.txi(,8240) @itemize @minus
../texinfo/texinfo.txi(,8241) @item
../texinfo/texinfo.txi(,8242) Inner item.
../texinfo/texinfo.txi(,8243) 
../texinfo/texinfo.txi(,8244) @item
../texinfo/texinfo.txi(,8245) Second inner item.
../texinfo/texinfo.txi(,8246) @end itemize
../texinfo/texinfo.txi(,8247) 
../texinfo/texinfo.txi(,8248) @item
../texinfo/texinfo.txi(,8249) Second outer item.
../texinfo/texinfo.txi(,8250) @end itemize
../texinfo/texinfo.txi(,8251) @end quotation
../texinfo/texinfo.txi(,8252) 
../texinfo/texinfo.txi(,8253) 
../texinfo/texinfo.txi(,8254) @node enumerate
../texinfo/texinfo.txi(,8255) @section @code{@@enumerate}: Making a Numbered or Lettered List
../texinfo/texinfo.txi(,8256) @cindex Enumeration
../texinfo/texinfo.txi(,8257) @findex enumerate
../texinfo/texinfo.txi(,8258) 
../texinfo/texinfo.txi(,8259) @code{@@enumerate} is like @code{@@itemize} (@pxref{itemize,,
../texinfo/texinfo.txi(,8260) @code{@@itemize}}), except that the labels on the items are
../texinfo/texinfo.txi(,8261) successive integers or letters instead of bullets.
../texinfo/texinfo.txi(,8262) 
../texinfo/texinfo.txi(,8263) Write the @code{@@enumerate} command at the beginning of a line.  The
../texinfo/texinfo.txi(,8264) command does not require an argument, but accepts either a number or a
../texinfo/texinfo.txi(,8265) letter as an option.  Without an argument, @code{@@enumerate} starts the
../texinfo/texinfo.txi(,8266) list with the number @samp{1}.  With a numeric argument, such as
../texinfo/texinfo.txi(,8267) @samp{3}, the command starts the list with that number.  With an upper
../texinfo/texinfo.txi(,8268) or lower case letter, such as @samp{a} or @samp{A}, the command starts
../texinfo/texinfo.txi(,8269) the list with that letter.
../texinfo/texinfo.txi(,8270) 
../texinfo/texinfo.txi(,8271) Write the text of the enumerated list in the same way you write an
../texinfo/texinfo.txi(,8272) itemized list: put @code{@@item} on a line of its own before the start
../texinfo/texinfo.txi(,8273) of each paragraph that you want enumerated.  Do not write any other text
../texinfo/texinfo.txi(,8274) on the line beginning with @code{@@item}.
../texinfo/texinfo.txi(,8275) 
../texinfo/texinfo.txi(,8276) You should put a blank line between entries in the list.
../texinfo/texinfo.txi(,8277) This generally makes it easier to read the Info file.
../texinfo/texinfo.txi(,8278) 
../texinfo/texinfo.txi(,8279) @need 1500
../texinfo/texinfo.txi(,8280) Here is an example of @code{@@enumerate} without an argument:
../texinfo/texinfo.txi(,8281) 
../texinfo/texinfo.txi(,8282) @example
../texinfo/texinfo.txi(,8283) @group
../texinfo/texinfo.txi(,8284) @@enumerate
../texinfo/texinfo.txi(,8285) @@item
../texinfo/texinfo.txi(,8286) Underlying causes.
../texinfo/texinfo.txi(,8287) 
../texinfo/texinfo.txi(,8288) @@item
../texinfo/texinfo.txi(,8289) Proximate causes.
../texinfo/texinfo.txi(,8290) @@end enumerate
../texinfo/texinfo.txi(,8291) @end group
../texinfo/texinfo.txi(,8292) @end example
../texinfo/texinfo.txi(,8293) 
../texinfo/texinfo.txi(,8294) @noindent
../texinfo/texinfo.txi(,8295) This produces:
../texinfo/texinfo.txi(,8296) 
../texinfo/texinfo.txi(,8297) @enumerate
../texinfo/texinfo.txi(,8298) @item
../texinfo/texinfo.txi(,8299) Underlying causes.
../texinfo/texinfo.txi(,8300) 
../texinfo/texinfo.txi(,8301) @item
../texinfo/texinfo.txi(,8302) Proximate causes.
../texinfo/texinfo.txi(,8303) @end enumerate
../texinfo/texinfo.txi(,8304) @sp 1
../texinfo/texinfo.txi(,8305) Here is an example with an argument of @kbd{3}:@refill
../texinfo/texinfo.txi(,8306) @sp 1
../texinfo/texinfo.txi(,8307) @example
../texinfo/texinfo.txi(,8308) @group
../texinfo/texinfo.txi(,8309) @@enumerate 3
../texinfo/texinfo.txi(,8310) @@item
../texinfo/texinfo.txi(,8311) Predisposing causes.
../texinfo/texinfo.txi(,8312) 
../texinfo/texinfo.txi(,8313) @@item
../texinfo/texinfo.txi(,8314) Precipitating causes.
../texinfo/texinfo.txi(,8315) 
../texinfo/texinfo.txi(,8316) @@item
../texinfo/texinfo.txi(,8317) Perpetuating causes.
../texinfo/texinfo.txi(,8318) @@end enumerate
../texinfo/texinfo.txi(,8319) @end group
../texinfo/texinfo.txi(,8320) @end example
../texinfo/texinfo.txi(,8321) 
../texinfo/texinfo.txi(,8322) @noindent
../texinfo/texinfo.txi(,8323) This produces:
../texinfo/texinfo.txi(,8324) 
../texinfo/texinfo.txi(,8325) @enumerate 3
../texinfo/texinfo.txi(,8326) @item
../texinfo/texinfo.txi(,8327) Predisposing causes.
../texinfo/texinfo.txi(,8328) 
../texinfo/texinfo.txi(,8329) @item
../texinfo/texinfo.txi(,8330) Precipitating causes.
../texinfo/texinfo.txi(,8331) 
../texinfo/texinfo.txi(,8332) @item
../texinfo/texinfo.txi(,8333) Perpetuating causes.
../texinfo/texinfo.txi(,8334) @end enumerate
../texinfo/texinfo.txi(,8335) @sp 1
../texinfo/texinfo.txi(,8336) Here is a brief summary of the alternatives.  The summary is constructed
../texinfo/texinfo.txi(,8337) using @code{@@enumerate} with an argument of @kbd{a}.@refill
../texinfo/texinfo.txi(,8338) @sp 1
../texinfo/texinfo.txi(,8339) @enumerate a
../texinfo/texinfo.txi(,8340) @item
../texinfo/texinfo.txi(,8341) @code{@@enumerate}
../texinfo/texinfo.txi(,8342) 
../texinfo/texinfo.txi(,8343) Without an argument, produce a numbered list, starting with the number
../texinfo/texinfo.txi(,8344) 1.@refill
../texinfo/texinfo.txi(,8345) 
../texinfo/texinfo.txi(,8346) @item
../texinfo/texinfo.txi(,8347) @code{@@enumerate @var{positive-integer}}
../texinfo/texinfo.txi(,8348) 
../texinfo/texinfo.txi(,8349) With a (positive) numeric argument, start a numbered list with that
../texinfo/texinfo.txi(,8350) number.  You can use this to continue a list that you interrupted with
../texinfo/texinfo.txi(,8351) other text.@refill
../texinfo/texinfo.txi(,8352) 
../texinfo/texinfo.txi(,8353) @item
../texinfo/texinfo.txi(,8354) @code{@@enumerate @var{upper-case-letter}}
../texinfo/texinfo.txi(,8355) 
../texinfo/texinfo.txi(,8356) With an upper case letter as argument, start a list
../texinfo/texinfo.txi(,8357) in which each item is marked
../texinfo/texinfo.txi(,8358) by a letter, beginning with that upper case letter.@refill
../texinfo/texinfo.txi(,8359) 
../texinfo/texinfo.txi(,8360) @item
../texinfo/texinfo.txi(,8361) @code{@@enumerate @var{lower-case-letter}}
../texinfo/texinfo.txi(,8362) 
../texinfo/texinfo.txi(,8363) With a lower case letter as argument, start a list
../texinfo/texinfo.txi(,8364) in which each item is marked by
../texinfo/texinfo.txi(,8365) a letter, beginning with that lower case letter.@refill
../texinfo/texinfo.txi(,8366) @end enumerate
../texinfo/texinfo.txi(,8367) 
../texinfo/texinfo.txi(,8368) You can also nest enumerated lists, as in an outline.@refill
../texinfo/texinfo.txi(,8369) 
../texinfo/texinfo.txi(,8370) @node Two-column Tables, Multi-column Tables, enumerate, Lists and Tables
../texinfo/texinfo.txi(,8371) @section Making a Two-column Table
../texinfo/texinfo.txi(,8372) @cindex Tables, making two-column
../texinfo/texinfo.txi(,8373) @findex table
../texinfo/texinfo.txi(,8374) 
../texinfo/texinfo.txi(,8375) @code{@@table} is similar to @code{@@itemize} (@pxref{itemize,,
../texinfo/texinfo.txi(,8376) @code{@@itemize}}), but allows you to specify a name or heading line for
../texinfo/texinfo.txi(,8377) each item.  The @code{@@table} command is used to produce two-column
../texinfo/texinfo.txi(,8378) tables, and is especially useful for glossaries, explanatory
../texinfo/texinfo.txi(,8379) exhibits, and command-line option summaries.
../texinfo/texinfo.txi(,8380) 
../texinfo/texinfo.txi(,8381) @menu
../texinfo/texinfo.txi(,8382) * table::                       How to construct a two-column table.
../texinfo/texinfo.txi(,8383) * ftable vtable::               Automatic indexing for two-column tables.
../texinfo/texinfo.txi(,8384) * itemx::                       How to put more entries in the first column.
../texinfo/texinfo.txi(,8385) @end menu
../texinfo/texinfo.txi(,8386) 
../texinfo/texinfo.txi(,8387) @node table, ftable vtable, Two-column Tables, Two-column Tables
../texinfo/texinfo.txi(,8389) @subheading Using the @code{@@table} Command
../texinfo/texinfo.txi(,8390) 
../texinfo/texinfo.txi(,8391) Use the @code{@@table} command to produce two-column tables.@refill
../texinfo/texinfo.txi(,8393) 
../texinfo/texinfo.txi(,8394) Write the @code{@@table} command at the beginning of a line and follow
../texinfo/texinfo.txi(,8395) it on the same line with an argument that is a Texinfo ``indicating''
../texinfo/texinfo.txi(,8396) command such as @code{@@code}, @code{@@samp}, @code{@@var}, or
../texinfo/texinfo.txi(,8397) @code{@@kbd} (@pxref{Indicating}).  Although these commands are usually
../texinfo/texinfo.txi(,8398) followed by arguments in braces, in this case you use the command name
../texinfo/texinfo.txi(,8399) without an argument because @code{@@item} will supply the argument.
../texinfo/texinfo.txi(,8400) This command will be applied to the text that goes into the first column
../texinfo/texinfo.txi(,8401) of each item and determines how it will be highlighted.  For example,
../texinfo/texinfo.txi(,8402) @code{@@code} will cause the text in the first column to be highlighted
../texinfo/texinfo.txi(,8403) with an @code{@@code} command.  (We recommend @code{@@code} for
../texinfo/texinfo.txi(,8404) @code{@@table}'s of command-line options.)
../texinfo/texinfo.txi(,8405) 
../texinfo/texinfo.txi(,8406) @findex asis
../texinfo/texinfo.txi(,8407) You may also choose to use the @code{@@asis} command as an argument to
../texinfo/texinfo.txi(,8408) @code{@@table}.  @code{@@asis} is a command that does nothing; if you
../texinfo/texinfo.txi(,8409) use this command after @code{@@table}, @TeX{} and the Info formatting
../texinfo/texinfo.txi(,8410) commands output the first column entries without added highlighting
../texinfo/texinfo.txi(,8411) (``as is'').@refill
../texinfo/texinfo.txi(,8412) 
../texinfo/texinfo.txi(,8413) (The @code{@@table} command may work with other commands besides those
../texinfo/texinfo.txi(,8414) listed here.  However, you can only use commands that normally take
../texinfo/texinfo.txi(,8415) arguments in braces.)@refill
../texinfo/texinfo.txi(,8416) 
../texinfo/texinfo.txi(,8417) @findex item
../texinfo/texinfo.txi(,8418) Begin each table entry with an @code{@@item} command at the beginning
../texinfo/texinfo.txi(,8419) of a line.  Write the first column text on the same line as the
../texinfo/texinfo.txi(,8420) @code{@@item} command.  Write the second column text on the line
../texinfo/texinfo.txi(,8421) following the @code{@@item} line and on subsequent lines.  (You do not
../texinfo/texinfo.txi(,8422) need to type anything for an empty second column entry.)  You may
../texinfo/texinfo.txi(,8423) write as many lines of supporting text as you wish, even several
../texinfo/texinfo.txi(,8424) paragraphs.  But only text on the same line as the @code{@@item} will
../texinfo/texinfo.txi(,8425) be placed in the first column, including any footnote.
../texinfo/texinfo.txi(,8426) 
../texinfo/texinfo.txi(,8427) Normally, you should put a blank line before an @code{@@item} line.
../texinfo/texinfo.txi(,8428) This puts a blank like in the Info file.  Except when the entries are
../texinfo/texinfo.txi(,8429) very brief, a blank line looks better.@refill
../texinfo/texinfo.txi(,8430) 
../texinfo/texinfo.txi(,8431) @need 1500
../texinfo/texinfo.txi(,8432) The following table, for example, highlights the text in the first
../texinfo/texinfo.txi(,8433) column with an @code{@@samp} command:@refill
../texinfo/texinfo.txi(,8434) 
../texinfo/texinfo.txi(,8435) @example
../texinfo/texinfo.txi(,8436) @group
../texinfo/texinfo.txi(,8437) @@table @@samp
../texinfo/texinfo.txi(,8438) @@item foo
../texinfo/texinfo.txi(,8439) This is the text for
../texinfo/texinfo.txi(,8440) @@samp@{foo@}.
../texinfo/texinfo.txi(,8441) 
../texinfo/texinfo.txi(,8442) @@item bar
../texinfo/texinfo.txi(,8443) Text for @@samp@{bar@}.
../texinfo/texinfo.txi(,8444) @@end table
../texinfo/texinfo.txi(,8445) @end group
../texinfo/texinfo.txi(,8446) @end example
../texinfo/texinfo.txi(,8447) 
../texinfo/texinfo.txi(,8448) @noindent
../texinfo/texinfo.txi(,8449) This produces:
../texinfo/texinfo.txi(,8450) 
../texinfo/texinfo.txi(,8451) @table @samp
../texinfo/texinfo.txi(,8452) @item foo
../texinfo/texinfo.txi(,8453) This is the text for
../texinfo/texinfo.txi(,8454) @samp{foo}.
../texinfo/texinfo.txi(,8455) @item bar
../texinfo/texinfo.txi(,8456) Text for @samp{bar}.
../texinfo/texinfo.txi(,8457) @end table
../texinfo/texinfo.txi(,8458) 
../texinfo/texinfo.txi(,8459) If you want to list two or more named items with a single block of
../texinfo/texinfo.txi(,8460) text, use the @code{@@itemx} command.  (@xref{itemx, ,
../texinfo/texinfo.txi(,8461) @code{@@itemx}}.)@refill
../texinfo/texinfo.txi(,8462) 
../texinfo/texinfo.txi(,8463) 
../texinfo/texinfo.txi(,8464) @node ftable vtable
../texinfo/texinfo.txi(,8465) @subsection @code{@@ftable} and @code{@@vtable}
../texinfo/texinfo.txi(,8466) @cindex Tables with indexes
../texinfo/texinfo.txi(,8467) @cindex Indexing table entries automatically
../texinfo/texinfo.txi(,8468) @findex ftable
../texinfo/texinfo.txi(,8469) @findex vtable
../texinfo/texinfo.txi(,8470) 
../texinfo/texinfo.txi(,8471) The @code{@@ftable} and @code{@@vtable} commands are the same as the
../texinfo/texinfo.txi(,8472) @code{@@table} command except that @code{@@ftable} automatically enters
../texinfo/texinfo.txi(,8473) each of the items in the first column of the table into the index of
../texinfo/texinfo.txi(,8474) functions and @code{@@vtable} automatically enters each of the items in
../texinfo/texinfo.txi(,8475) the first column of the table into the index of variables.  This
../texinfo/texinfo.txi(,8476) simplifies the task of creating indices.  Only the items on the same
../texinfo/texinfo.txi(,8477) line as the @code{@@item} commands are indexed, and they are indexed in
../texinfo/texinfo.txi(,8478) exactly the form that they appear on that line.  @xref{Indices},
../texinfo/texinfo.txi(,8479) for more information about indices.@refill
../texinfo/texinfo.txi(,8480) 
../texinfo/texinfo.txi(,8481) Begin a two-column table using @code{@@ftable} or @code{@@vtable} by
../texinfo/texinfo.txi(,8482) writing the @@-command at the beginning of a line, followed on the same
../texinfo/texinfo.txi(,8483) line by an argument that is a Texinfo command such as @code{@@code},
../texinfo/texinfo.txi(,8484) exactly as you would for an @code{@@table} command; and end the table
../texinfo/texinfo.txi(,8485) with an @code{@@end ftable} or @code{@@end vtable} command on a line by
../texinfo/texinfo.txi(,8486) itself.
../texinfo/texinfo.txi(,8487) 
../texinfo/texinfo.txi(,8488) See the example for @code{@@table} in the previous section.
../texinfo/texinfo.txi(,8489) 
../texinfo/texinfo.txi(,8490) @node itemx
../texinfo/texinfo.txi(,8491) @subsection @code{@@itemx}
../texinfo/texinfo.txi(,8492) @cindex Two named items for @code{@@table}
../texinfo/texinfo.txi(,8493) @findex itemx
../texinfo/texinfo.txi(,8494) 
../texinfo/texinfo.txi(,8495) Use the @code{@@itemx} command inside a table when you have two or more
../texinfo/texinfo.txi(,8496) first column entries for the same item, each of which should appear on a
../texinfo/texinfo.txi(,8497) line of its own.  Use @code{@@itemx} for all but the first entry;
../texinfo/texinfo.txi(,8498) @code{@@itemx} should always follow an @code{@@item} command.  The
../texinfo/texinfo.txi(,8499) @code{@@itemx} command works exactly like @code{@@item} except that it
../texinfo/texinfo.txi(,8500) does not generate extra vertical space above the first column text.
../texinfo/texinfo.txi(,8501) 
../texinfo/texinfo.txi(,8502) For example,
../texinfo/texinfo.txi(,8503) 
../texinfo/texinfo.txi(,8504) @example
../texinfo/texinfo.txi(,8505) @group
../texinfo/texinfo.txi(,8506) @@table @@code
../texinfo/texinfo.txi(,8507) @@item upcase
../texinfo/texinfo.txi(,8508) @@itemx downcase
../texinfo/texinfo.txi(,8509) These two functions accept a character or a string as
../texinfo/texinfo.txi(,8510) argument, and return the corresponding upper case (lower
../texinfo/texinfo.txi(,8511) case) character or string.
../texinfo/texinfo.txi(,8512) @@end table
../texinfo/texinfo.txi(,8513) @end group
../texinfo/texinfo.txi(,8514) @end example
../texinfo/texinfo.txi(,8515) 
../texinfo/texinfo.txi(,8516) @noindent
../texinfo/texinfo.txi(,8517) This produces:
../texinfo/texinfo.txi(,8518) 
../texinfo/texinfo.txi(,8519) @table @code
../texinfo/texinfo.txi(,8520) @item upcase
../texinfo/texinfo.txi(,8521) @itemx downcase
../texinfo/texinfo.txi(,8522) These two functions accept a character or a string as
../texinfo/texinfo.txi(,8523) argument, and return the corresponding upper case (lower
../texinfo/texinfo.txi(,8524) case) character or string.@refill
../texinfo/texinfo.txi(,8525) @end table
../texinfo/texinfo.txi(,8526) 
../texinfo/texinfo.txi(,8527) @noindent
../texinfo/texinfo.txi(,8528) (Note also that this example illustrates multi-line supporting text in
../texinfo/texinfo.txi(,8529) a two-column table.)@refill
../texinfo/texinfo.txi(,8530) 
../texinfo/texinfo.txi(,8531) 
../texinfo/texinfo.txi(,8532) @node Multi-column Tables,  , Two-column Tables, Lists and Tables
../texinfo/texinfo.txi(,8533) @section Multi-column Tables
../texinfo/texinfo.txi(,8534) @cindex Tables, making multi-column
../texinfo/texinfo.txi(,8535) @findex multitable
../texinfo/texinfo.txi(,8536) 
../texinfo/texinfo.txi(,8537) @code{@@multitable} allows you to construct tables with any number of
../texinfo/texinfo.txi(,8538) columns, with each column having any width you like.
../texinfo/texinfo.txi(,8539) 
../texinfo/texinfo.txi(,8540) You define the column widths on the @code{@@multitable} line itself, and
../texinfo/texinfo.txi(,8541) write each row of the actual table following an @code{@@item} command,
../texinfo/texinfo.txi(,8542) with columns separated by an @code{@@tab} command.  Finally, @code{@@end
../texinfo/texinfo.txi(,8543) multitable} completes the table.  Details in the sections below.
../texinfo/texinfo.txi(,8544) 
../texinfo/texinfo.txi(,8545) @menu
../texinfo/texinfo.txi(,8546) * Multitable Column Widths::    Defining multitable column widths.
../texinfo/texinfo.txi(,8547) * Multitable Rows::             Defining multitable rows, with examples.
../texinfo/texinfo.txi(,8548) @end menu
../texinfo/texinfo.txi(,8549) 
../texinfo/texinfo.txi(,8550) @node Multitable Column Widths
../texinfo/texinfo.txi(,8551) @subsection Multitable Column Widths
../texinfo/texinfo.txi(,8552) @cindex Multitable column widths
../texinfo/texinfo.txi(,8553) @cindex Column widths, defining for multitables
../texinfo/texinfo.txi(,8554) @cindex Widths, defining multitable column
../texinfo/texinfo.txi(,8555) 
../texinfo/texinfo.txi(,8556) You can define the column widths for a multitable in two ways: as
../texinfo/texinfo.txi(,8557) fractions of the line length; or with a prototype row.  Mixing the two
../texinfo/texinfo.txi(,8558) methods is not supported.  In either case, the widths are defined
../texinfo/texinfo.txi(,8559) entirely on the same line as the @code{@@multitable} command.
../texinfo/texinfo.txi(,8560) 
../texinfo/texinfo.txi(,8561) @enumerate
../texinfo/texinfo.txi(,8562) @item
../texinfo/texinfo.txi(,8563) @findex columnfractions
../texinfo/texinfo.txi(,8564) @cindex Line length, column widths as fraction of
../texinfo/texinfo.txi(,8565) To specify column widths as fractions of the line length, write
../texinfo/texinfo.txi(,8566) @code{@@columnfractions} and the decimal numbers (presumably less than
../texinfo/texinfo.txi(,8567) 1) after the @code{@@multitable} command, as in:
../texinfo/texinfo.txi(,8568) 
../texinfo/texinfo.txi(,8569) @example
../texinfo/texinfo.txi(,8570) @@multitable @@columnfractions .33 .33 .33
../texinfo/texinfo.txi(,8571) @end example
../texinfo/texinfo.txi(,8572) 
../texinfo/texinfo.txi(,8573) @noindent The fractions need not add up exactly to 1.0, as these do
../texinfo/texinfo.txi(,8574) not.  This allows you to produce tables that do not need the full line
../texinfo/texinfo.txi(,8575) length.  You can use a leading zero if you wish.
../texinfo/texinfo.txi(,8576) 
../texinfo/texinfo.txi(,8577) @item
../texinfo/texinfo.txi(,8578) @cindex Prototype row, column widths defined by
../texinfo/texinfo.txi(,8579) To specify a prototype row, write the longest entry for each column
../texinfo/texinfo.txi(,8580) enclosed in braces after the @code{@@multitable} command.  For example:
../texinfo/texinfo.txi(,8581) 
../texinfo/texinfo.txi(,8582) @example
../texinfo/texinfo.txi(,8583) @@multitable @{some text for column one@} @{for column two@}
../texinfo/texinfo.txi(,8584) @end example
../texinfo/texinfo.txi(,8585) 
../texinfo/texinfo.txi(,8586) @noindent
../texinfo/texinfo.txi(,8587) The first column will then have the width of the typeset `some text for
../texinfo/texinfo.txi(,8588) column one', and the second column the width of `for column two'.
../texinfo/texinfo.txi(,8589) 
../texinfo/texinfo.txi(,8590) The prototype entries need not appear in the table itself.
../texinfo/texinfo.txi(,8591) 
../texinfo/texinfo.txi(,8592) Although we used simple text in this example, the prototype entries can
../texinfo/texinfo.txi(,8593) contain Texinfo commands; markup commands such as @code{@@code} are
../texinfo/texinfo.txi(,8594) particularly likely to be useful.
../texinfo/texinfo.txi(,8595) 
../texinfo/texinfo.txi(,8596) @end enumerate
../texinfo/texinfo.txi(,8597) 
../texinfo/texinfo.txi(,8598) 
../texinfo/texinfo.txi(,8599) @node Multitable Rows,  , Multitable Column Widths, Multi-column Tables
../texinfo/texinfo.txi(,8600) @subsection Multitable Rows
../texinfo/texinfo.txi(,8601) @cindex Multitable rows
../texinfo/texinfo.txi(,8602) @cindex Rows, of a multitable
../texinfo/texinfo.txi(,8603) 
../texinfo/texinfo.txi(,8604) @findex item
../texinfo/texinfo.txi(,8605) @findex tab
../texinfo/texinfo.txi(,8606) After the @code{@@multitable} command defining the column widths (see
../texinfo/texinfo.txi(,8607) the previous section), you begin each row in the body of a multitable
../texinfo/texinfo.txi(,8608) with @code{@@item}, and separate the column entries with @code{@@tab}.
../texinfo/texinfo.txi(,8609) Line breaks are not special within the table body, and you may break
../texinfo/texinfo.txi(,8610) input lines in your source file as necessary.
../texinfo/texinfo.txi(,8611) 
../texinfo/texinfo.txi(,8612) Here is a complete example of a multi-column table (the text is from
../texinfo/texinfo.txi(,8613) @cite{The GNU Emacs Manual}, @pxref{Split Window,, Splitting Windows,
../texinfo/texinfo.txi(,8614) emacs, The GNU Emacs Manual}):
../texinfo/texinfo.txi(,8615) 
../texinfo/texinfo.txi(,8616) @example
../texinfo/texinfo.txi(,8617) @@multitable @@columnfractions .15 .45 .4
../texinfo/texinfo.txi(,8618) @@item Key @@tab Command @@tab Description
../texinfo/texinfo.txi(,8619) @@item C-x 2
../texinfo/texinfo.txi(,8620) @@tab @@code@{split-window-vertically@}
../texinfo/texinfo.txi(,8621) @@tab Split the selected window into two windows,
../texinfo/texinfo.txi(,8622) with one above the other.
../texinfo/texinfo.txi(,8623) @@item C-x 3
../texinfo/texinfo.txi(,8624) @@tab @@code@{split-window-horizontally@}
../texinfo/texinfo.txi(,8625) @@tab Split the selected window into two windows
../texinfo/texinfo.txi(,8626) positioned side by side.
../texinfo/texinfo.txi(,8627) @@item C-Mouse-2
../texinfo/texinfo.txi(,8628) @@tab
../texinfo/texinfo.txi(,8629) @@tab In the mode line or scroll bar of a window,
../texinfo/texinfo.txi(,8630) split that window.
../texinfo/texinfo.txi(,8631) @@end multitable
../texinfo/texinfo.txi(,8632) @end example
../texinfo/texinfo.txi(,8633) 
../texinfo/texinfo.txi(,8634) @noindent produces:
../texinfo/texinfo.txi(,8635) 
../texinfo/texinfo.txi(,8636) @multitable @columnfractions .15 .45 .4
../texinfo/texinfo.txi(,8637) @item Key @tab Command @tab Description
../texinfo/texinfo.txi(,8638) @item C-x 2
../texinfo/texinfo.txi(,8639) @tab @code{split-window-vertically}
../texinfo/texinfo.txi(,8640) @tab Split the selected window into two windows,
../texinfo/texinfo.txi(,8641) with one above the other.
../texinfo/texinfo.txi(,8642) @item C-x 3
../texinfo/texinfo.txi(,8643) @tab @code{split-window-horizontally}
../texinfo/texinfo.txi(,8644) @tab Split the selected window into two windows
../texinfo/texinfo.txi(,8645) positioned side by side.
../texinfo/texinfo.txi(,8646) @item C-Mouse-2
../texinfo/texinfo.txi(,8647) @tab
../texinfo/texinfo.txi(,8648) @tab In the mode line or scroll bar of a window,
../texinfo/texinfo.txi(,8649) split that window.
../texinfo/texinfo.txi(,8650) @end multitable
../texinfo/texinfo.txi(,8651) 
../texinfo/texinfo.txi(,8652) 
../texinfo/texinfo.txi(,8653) @node Indices, Insertions, Lists and Tables, Top
../texinfo/texinfo.txi(,8654) @comment node-name,  next,  previous,  up
../texinfo/texinfo.txi(,8655) @chapter Indices
../texinfo/texinfo.txi(,8656) @cindex Indices
../texinfo/texinfo.txi(,8657) 
../texinfo/texinfo.txi(,8658) Using Texinfo, you can generate indices without having to sort and
../texinfo/texinfo.txi(,8659) collate entries manually.  In an index, the entries are listed in
../texinfo/texinfo.txi(,8660) alphabetical order, together with information on how to find the
../texinfo/texinfo.txi(,8661) discussion of each entry.  In a printed manual, this information
../texinfo/texinfo.txi(,8662) consists of page numbers.  In an Info file, this information is a menu
../texinfo/texinfo.txi(,8663) entry leading to the first node referenced.@refill
../texinfo/texinfo.txi(,8664) 
../texinfo/texinfo.txi(,8665) Texinfo provides several predefined kinds of index: an index
../texinfo/texinfo.txi(,8666) for functions, an index for variables, an index for concepts, and so
../texinfo/texinfo.txi(,8667) on.  You can combine indices or use them for other than their
../texinfo/texinfo.txi(,8668) canonical purpose.  If you wish, you can define your own indices.@refill
../texinfo/texinfo.txi(,8669) 
../texinfo/texinfo.txi(,8670) @menu
../texinfo/texinfo.txi(,8671) * Index Entries::               Choose different words for index entries.
../texinfo/texinfo.txi(,8672) * Predefined Indices::          Use different indices for different kinds
../texinfo/texinfo.txi(,8673)                                   of entry.
../texinfo/texinfo.txi(,8674) * Indexing Commands::           How to make an index entry.
../texinfo/texinfo.txi(,8675) * Combining Indices::           How to combine indices.
../texinfo/texinfo.txi(,8676) * New Indices::                 How to define your own indices.
../texinfo/texinfo.txi(,8677) @end menu
../texinfo/texinfo.txi(,8678) 
../texinfo/texinfo.txi(,8679) @node Index Entries, Predefined Indices, Indices, Indices
../texinfo/texinfo.txi(,8680) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,8681) @section Making Index Entries
../texinfo/texinfo.txi(,8682) @cindex Index entries, making
../texinfo/texinfo.txi(,8683) @cindex Entries, making index
../texinfo/texinfo.txi(,8684) 
../texinfo/texinfo.txi(,8685) When you are making index entries, it is good practice to think of the
../texinfo/texinfo.txi(,8686) different ways people may look for something.  Different people
../texinfo/texinfo.txi(,8687) @emph{do not} think of the same words when they look something up.  A
../texinfo/texinfo.txi(,8688) helpful index will have items indexed under all the different words
../texinfo/texinfo.txi(,8689) that people may use.  For example, one reader may think it obvious that
../texinfo/texinfo.txi(,8690) the two-letter names for indices should be listed under ``Indices,
../texinfo/texinfo.txi(,8691) two-letter names'', since the word ``Index'' is the general concept.
../texinfo/texinfo.txi(,8692) But another reader may remember the specific concept of two-letter
../texinfo/texinfo.txi(,8693) names and search for the entry listed as ``Two letter names for
../texinfo/texinfo.txi(,8694) indices''.  A good index will have both entries and will help both
../texinfo/texinfo.txi(,8695) readers.@refill
../texinfo/texinfo.txi(,8696) 
../texinfo/texinfo.txi(,8697) Like typesetting, the construction of an index is a highly skilled,
../texinfo/texinfo.txi(,8698) professional art, the subtleties of which are not appreciated until you
../texinfo/texinfo.txi(,8699) need to do it yourself.@refill
../texinfo/texinfo.txi(,8700) 
../texinfo/texinfo.txi(,8701) @xref{Printing Indices & Menus}, for information about printing an index
../texinfo/texinfo.txi(,8702) at the end of a book or creating an index menu in an Info file.@refill
../texinfo/texinfo.txi(,8703) 
../texinfo/texinfo.txi(,8704) @node Predefined Indices, Indexing Commands, Index Entries, Indices
../texinfo/texinfo.txi(,8705) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,8706) @section Predefined Indices
../texinfo/texinfo.txi(,8707) 
../texinfo/texinfo.txi(,8708) Texinfo provides six predefined indices:@refill
../texinfo/texinfo.txi(,8709) 
../texinfo/texinfo.txi(,8710) @itemize @bullet
../texinfo/texinfo.txi(,8711) @item
../texinfo/texinfo.txi(,8712) A @dfn{concept index} listing concepts that are discussed.@refill
../texinfo/texinfo.txi(,8713) 
../texinfo/texinfo.txi(,8714) @item
../texinfo/texinfo.txi(,8715) A @dfn{function index} listing functions (such as entry points of
../texinfo/texinfo.txi(,8716) libraries).@refill
../texinfo/texinfo.txi(,8717) 
../texinfo/texinfo.txi(,8718) @item
../texinfo/texinfo.txi(,8719) A @dfn{variables index} listing variables (such as global variables
../texinfo/texinfo.txi(,8720) of libraries).@refill
../texinfo/texinfo.txi(,8721) 
../texinfo/texinfo.txi(,8722) @item
../texinfo/texinfo.txi(,8723) A @dfn{keystroke index} listing keyboard commands.@refill
../texinfo/texinfo.txi(,8724) 
../texinfo/texinfo.txi(,8725) @item
../texinfo/texinfo.txi(,8726) A @dfn{program index} listing names of programs.@refill
../texinfo/texinfo.txi(,8727) 
../texinfo/texinfo.txi(,8728) @item
../texinfo/texinfo.txi(,8729) A @dfn{data type index} listing data types (such as structures defined in
../texinfo/texinfo.txi(,8730) header files).@refill
../texinfo/texinfo.txi(,8731) @end itemize
../texinfo/texinfo.txi(,8732) 
../texinfo/texinfo.txi(,8733) @noindent
../texinfo/texinfo.txi(,8734) Not every manual needs all of these, and most manuals use two or three
../texinfo/texinfo.txi(,8735) of them.  This manual has two indices: a
../texinfo/texinfo.txi(,8736) concept index and an @@-command index (that is actually the function
../texinfo/texinfo.txi(,8737) index but is called a command index in the chapter heading).  Two or
../texinfo/texinfo.txi(,8738) more indices can be combined into one using the @code{@@synindex} or
../texinfo/texinfo.txi(,8739) @code{@@syncodeindex} commands.  @xref{Combining Indices}.@refill
../texinfo/texinfo.txi(,8740) 
../texinfo/texinfo.txi(,8741) @node Indexing Commands, Combining Indices, Predefined Indices, Indices
../texinfo/texinfo.txi(,8742) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,8743) @section Defining the Entries of an Index
../texinfo/texinfo.txi(,8744) @cindex Defining indexing entries
../texinfo/texinfo.txi(,8745) @cindex Index entries
../texinfo/texinfo.txi(,8746) @cindex Entries for an index
../texinfo/texinfo.txi(,8747) @cindex Specifying index entries
../texinfo/texinfo.txi(,8748) @cindex Creating index entries
../texinfo/texinfo.txi(,8749) 
../texinfo/texinfo.txi(,8750) The data to make an index come from many individual indexing commands
../texinfo/texinfo.txi(,8751) scattered throughout the Texinfo source file.  Each command says to add
../texinfo/texinfo.txi(,8752) one entry to a particular index; after formatting, the index will give
../texinfo/texinfo.txi(,8753) the current page number or node name as the reference.@refill
../texinfo/texinfo.txi(,8754) 
../texinfo/texinfo.txi(,8755) An index entry consists of an indexing command at the beginning of a
../texinfo/texinfo.txi(,8756) line followed, on the rest of the line, by the entry.@refill
../texinfo/texinfo.txi(,8757) 
../texinfo/texinfo.txi(,8758) For example, this section begins with the following five entries for
../texinfo/texinfo.txi(,8759) the concept index:@refill
../texinfo/texinfo.txi(,8760) 
../texinfo/texinfo.txi(,8761) @example
../texinfo/texinfo.txi(,8762) @@cindex Defining indexing entries
../texinfo/texinfo.txi(,8763) @@cindex Index entries
../texinfo/texinfo.txi(,8764) @@cindex Entries for an index
../texinfo/texinfo.txi(,8765) @@cindex Specifying index entries
../texinfo/texinfo.txi(,8766) @@cindex Creating index entries
../texinfo/texinfo.txi(,8767) @end example
../texinfo/texinfo.txi(,8768) 
../texinfo/texinfo.txi(,8769) Each predefined index has its own indexing command---@code{@@cindex}
../texinfo/texinfo.txi(,8770) for the concept index, @code{@@findex} for the function index, and so
../texinfo/texinfo.txi(,8771) on.@refill
../texinfo/texinfo.txi(,8772) 
../texinfo/texinfo.txi(,8773) @cindex Writing index entries
../texinfo/texinfo.txi(,8774) @cindex Index entry writing
../texinfo/texinfo.txi(,8775) Concept index entries consist of text.  The best way to write an index
../texinfo/texinfo.txi(,8776) is to choose entries that are terse yet clear.  If you can do this,
../texinfo/texinfo.txi(,8777) the index often looks better if the entries are not capitalized, but
../texinfo/texinfo.txi(,8778) written just as they would appear in the middle of a sentence.
../texinfo/texinfo.txi(,8779) (Capitalize proper names and acronyms that always call for upper case
../texinfo/texinfo.txi(,8780) letters.)  This is the case convention we use in most GNU manuals'
../texinfo/texinfo.txi(,8781) indices.
../texinfo/texinfo.txi(,8782) 
../texinfo/texinfo.txi(,8783) If you don't see how to make an entry terse yet clear, make it longer
../texinfo/texinfo.txi(,8784) and clear---not terse and confusing.  If many of the entries are several
../texinfo/texinfo.txi(,8785) words long, the index may look better if you use a different convention:
../texinfo/texinfo.txi(,8786) to capitalize the first word of each entry.  But do not capitalize a
../texinfo/texinfo.txi(,8787) case-sensitive name such as a C or Lisp function name or a shell
../texinfo/texinfo.txi(,8788) command; that would be a spelling error.
../texinfo/texinfo.txi(,8789) 
../texinfo/texinfo.txi(,8790) Whichever case convention you use, please use it consistently!
../texinfo/texinfo.txi(,8791) 
../texinfo/texinfo.txi(,8792) Entries in indices other than the concept index are symbol names in
../texinfo/texinfo.txi(,8793) programming languages, or program names; these names are usually
../texinfo/texinfo.txi(,8794) case-sensitive, so use upper and lower case as required for them.
../texinfo/texinfo.txi(,8795) 
../texinfo/texinfo.txi(,8796) By default, entries for a concept index are printed in a small roman
../texinfo/texinfo.txi(,8797) font and entries for the other indices are printed in a small
../texinfo/texinfo.txi(,8798) @code{@@code} font.  You may change the way part of an entry is
../texinfo/texinfo.txi(,8799) printed with the usual Texinfo commands, such as @code{@@file} for
../texinfo/texinfo.txi(,8800) file names and @code{@@emph} for emphasis (@pxref{Marking
../texinfo/texinfo.txi(,8801) Text}).@refill
../texinfo/texinfo.txi(,8802) @cindex Index font types
../texinfo/texinfo.txi(,8803) 
../texinfo/texinfo.txi(,8804) @cindex Predefined indexing commands
../texinfo/texinfo.txi(,8805) @cindex Indexing commands, predefined
../texinfo/texinfo.txi(,8806) The six indexing commands for predefined indices are:
../texinfo/texinfo.txi(,8807) 
../texinfo/texinfo.txi(,8808) @table @code
../texinfo/texinfo.txi(,8809) @item @@cindex @var{concept}
../texinfo/texinfo.txi(,8810) @findex cindex
../texinfo/texinfo.txi(,8811) Make an entry in the concept index for @var{concept}.@refill
../texinfo/texinfo.txi(,8812) 
../texinfo/texinfo.txi(,8813) @item @@findex @var{function}
../texinfo/texinfo.txi(,8814) @findex findex
../texinfo/texinfo.txi(,8815) Make an entry in the function index for @var{function}.@refill
../texinfo/texinfo.txi(,8816) 
../texinfo/texinfo.txi(,8817) @item @@vindex @var{variable}
../texinfo/texinfo.txi(,8818) @findex vindex
../texinfo/texinfo.txi(,8819) Make an entry in the variable index for @var{variable}.@refill
../texinfo/texinfo.txi(,8820) 
../texinfo/texinfo.txi(,8821) @item @@kindex @var{keystroke}
../texinfo/texinfo.txi(,8822) @findex kindex
../texinfo/texinfo.txi(,8823) Make an entry in the key index for @var{keystroke}.@refill
../texinfo/texinfo.txi(,8824) 
../texinfo/texinfo.txi(,8825) @item @@pindex @var{program}
../texinfo/texinfo.txi(,8826) @findex pindex
../texinfo/texinfo.txi(,8827) Make an entry in the program index for @var{program}.@refill
../texinfo/texinfo.txi(,8828) 
../texinfo/texinfo.txi(,8829) @item @@tindex @var{data type}
../texinfo/texinfo.txi(,8830) @findex tindex
../texinfo/texinfo.txi(,8831) Make an entry in the data type index for @var{data type}.@refill
../texinfo/texinfo.txi(,8832) @end table
../texinfo/texinfo.txi(,8833) 
../texinfo/texinfo.txi(,8834) @quotation
../texinfo/texinfo.txi(,8835) @strong{Caution:} Do not use a colon in an index entry.  In Info, a
../texinfo/texinfo.txi(,8836) colon separates the menu entry name from the node name, so a colon in
../texinfo/texinfo.txi(,8837) the entry itself confuses Info.  @xref{Menu Parts, , The Parts of a
../texinfo/texinfo.txi(,8838) Menu}, for more information about the structure of a menu entry.
../texinfo/texinfo.txi(,8839) @end quotation
../texinfo/texinfo.txi(,8840) 
../texinfo/texinfo.txi(,8841) You are not actually required to use the predefined indices for their
../texinfo/texinfo.txi(,8842) canonical purposes.  For example, suppose you wish to index some C
../texinfo/texinfo.txi(,8843) preprocessor macros.  You could put them in the function index along
../texinfo/texinfo.txi(,8844) with actual functions, just by writing @code{@@findex} commands for
../texinfo/texinfo.txi(,8845) them; then, when you print the ``Function Index'' as an unnumbered
../texinfo/texinfo.txi(,8846) chapter, you could give it the title `Function and Macro Index' and
../texinfo/texinfo.txi(,8847) all will be consistent for the reader.  Or you could put the macros in
../texinfo/texinfo.txi(,8848) with the data types by writing @code{@@tindex} commands for them, and
../texinfo/texinfo.txi(,8849) give that index a suitable title so the reader will understand.
../texinfo/texinfo.txi(,8850) (@xref{Printing Indices & Menus}.)@refill
../texinfo/texinfo.txi(,8851) 
../texinfo/texinfo.txi(,8852) @node Combining Indices, New Indices, Indexing Commands, Indices
../texinfo/texinfo.txi(,8853) @comment node-name,  next,  previous,  up
../texinfo/texinfo.txi(,8854) @section Combining Indices
../texinfo/texinfo.txi(,8855) @cindex Combining indices
../texinfo/texinfo.txi(,8856) @cindex Indices, combining them
../texinfo/texinfo.txi(,8857) 
../texinfo/texinfo.txi(,8858) Sometimes you will want to combine two disparate indices such as functions
../texinfo/texinfo.txi(,8859) and concepts, perhaps because you have few enough of one of them that
../texinfo/texinfo.txi(,8860) a separate index for them would look silly.@refill
../texinfo/texinfo.txi(,8861) 
../texinfo/texinfo.txi(,8862) You could put functions into the concept index by writing
../texinfo/texinfo.txi(,8863) @code{@@cindex} commands for them instead of @code{@@findex} commands,
../texinfo/texinfo.txi(,8864) and produce a consistent manual by printing the concept index with the
../texinfo/texinfo.txi(,8865) title `Function and Concept Index' and not printing the `Function
../texinfo/texinfo.txi(,8866) Index' at all; but this is not a robust procedure.  It works only if
../texinfo/texinfo.txi(,8867) your document is never included as part of another
../texinfo/texinfo.txi(,8868) document that is designed to have a separate function index; if your
../texinfo/texinfo.txi(,8869) document were to be included with such a document, the functions from
../texinfo/texinfo.txi(,8870) your document and those from the other would not end up together.
../texinfo/texinfo.txi(,8871) Also, to make your function names appear in the right font in the
../texinfo/texinfo.txi(,8872) concept index, you would need to enclose every one of them between
../texinfo/texinfo.txi(,8873) the braces of @code{@@code}.@refill
../texinfo/texinfo.txi(,8874) 
../texinfo/texinfo.txi(,8875) @menu
../texinfo/texinfo.txi(,8876) * syncodeindex::                How to merge two indices, using @code{@@code}
../texinfo/texinfo.txi(,8877)                                   font for the merged-from index.
../texinfo/texinfo.txi(,8878) * synindex::                    How to merge two indices, using the
../texinfo/texinfo.txi(,8879)                                   default font of the merged-to index.
../texinfo/texinfo.txi(,8880) @end menu
../texinfo/texinfo.txi(,8881) 
../texinfo/texinfo.txi(,8882) @node syncodeindex
../texinfo/texinfo.txi(,8883) @subsection @code{@@syncodeindex}
../texinfo/texinfo.txi(,8884) @findex syncodeindex
../texinfo/texinfo.txi(,8885) 
../texinfo/texinfo.txi(,8886) When you want to combine functions and concepts into one index, you
../texinfo/texinfo.txi(,8887) should index the functions with @code{@@findex} and index the concepts
../texinfo/texinfo.txi(,8888) with @code{@@cindex}, and use the @code{@@syncodeindex} command to
../texinfo/texinfo.txi(,8889) redirect the function index entries into the concept index.@refill
../texinfo/texinfo.txi(,8890) @findex syncodeindex
../texinfo/texinfo.txi(,8891) 
../texinfo/texinfo.txi(,8892) The @code{@@syncodeindex} command takes two arguments; they are the name
../texinfo/texinfo.txi(,8893) of the index to redirect, and the name of the index to redirect it to.
../texinfo/texinfo.txi(,8894) The template looks like this:@refill
../texinfo/texinfo.txi(,8895) 
../texinfo/texinfo.txi(,8896) @example
../texinfo/texinfo.txi(,8897) @@syncodeindex @var{from} @var{to}
../texinfo/texinfo.txi(,8898) @end example
../texinfo/texinfo.txi(,8899) 
../texinfo/texinfo.txi(,8900) @cindex Predefined names for indices
../texinfo/texinfo.txi(,8901) @cindex Two letter names for indices
../texinfo/texinfo.txi(,8902) @cindex Indices, two letter names
../texinfo/texinfo.txi(,8903) @cindex Names for indices
../texinfo/texinfo.txi(,8904) For this purpose, the indices are given two-letter names:@refill
../texinfo/texinfo.txi(,8905) 
../texinfo/texinfo.txi(,8906) @table @samp
../texinfo/texinfo.txi(,8907) @item cp
../texinfo/texinfo.txi(,8908) concept index
../texinfo/texinfo.txi(,8909) @item fn
../texinfo/texinfo.txi(,8910) function index
../texinfo/texinfo.txi(,8911) @item vr
../texinfo/texinfo.txi(,8912) variable index
../texinfo/texinfo.txi(,8913) @item ky
../texinfo/texinfo.txi(,8914) key index
../texinfo/texinfo.txi(,8915) @item pg
../texinfo/texinfo.txi(,8916) program index
../texinfo/texinfo.txi(,8917) @item tp
../texinfo/texinfo.txi(,8918) data type index
../texinfo/texinfo.txi(,8919) @end table
../texinfo/texinfo.txi(,8920) 
../texinfo/texinfo.txi(,8921) Write an @code{@@syncodeindex} command before or shortly after the
../texinfo/texinfo.txi(,8922) end-of-header line at the beginning of a Texinfo file.  For example,
../texinfo/texinfo.txi(,8923) to merge a function index with a concept index, write the
../texinfo/texinfo.txi(,8924) following:@refill
../texinfo/texinfo.txi(,8925) 
../texinfo/texinfo.txi(,8926) @example
../texinfo/texinfo.txi(,8927) @@syncodeindex fn cp
../texinfo/texinfo.txi(,8928) @end example
../texinfo/texinfo.txi(,8929) 
../texinfo/texinfo.txi(,8930) @noindent
../texinfo/texinfo.txi(,8931) This will cause all entries designated for the function index to merge
../texinfo/texinfo.txi(,8932) in with the concept index instead.@refill
../texinfo/texinfo.txi(,8933) 
../texinfo/texinfo.txi(,8934) To merge both a variables index and a function index into a concept
../texinfo/texinfo.txi(,8935) index, write the following:@refill
../texinfo/texinfo.txi(,8936) 
../texinfo/texinfo.txi(,8937) @example
../texinfo/texinfo.txi(,8938) @group
../texinfo/texinfo.txi(,8939) @@syncodeindex vr cp
../texinfo/texinfo.txi(,8940) @@syncodeindex fn cp
../texinfo/texinfo.txi(,8941) @end group
../texinfo/texinfo.txi(,8942) @end example
../texinfo/texinfo.txi(,8943) 
../texinfo/texinfo.txi(,8944) @cindex Fonts for indices
../texinfo/texinfo.txi(,8945) The @code{@@syncodeindex} command puts all the entries from the `from'
../texinfo/texinfo.txi(,8946) index (the redirected index) into the @code{@@code} font, overriding
../texinfo/texinfo.txi(,8947) whatever default font is used by the index to which the entries are
../texinfo/texinfo.txi(,8948) now directed.  This way, if you direct function names from a function
../texinfo/texinfo.txi(,8949) index into a concept index, all the function names are printed in the
../texinfo/texinfo.txi(,8950) @code{@@code} font as you would expect.@refill
../texinfo/texinfo.txi(,8951) 
../texinfo/texinfo.txi(,8952) @node synindex,  , syncodeindex, Combining Indices
../texinfo/texinfo.txi(,8953) @subsection @code{@@synindex}
../texinfo/texinfo.txi(,8954) @findex synindex
../texinfo/texinfo.txi(,8955) 
../texinfo/texinfo.txi(,8956) The @code{@@synindex} command is nearly the same as the
../texinfo/texinfo.txi(,8957) @code{@@syncodeindex} command, except that it does not put the
../texinfo/texinfo.txi(,8958) `from' index  entries into the @code{@@code} font; rather it puts
../texinfo/texinfo.txi(,8959) them in the roman font.  Thus, you use @code{@@synindex} when you
../texinfo/texinfo.txi(,8960) merge a concept index into a function index.@refill
../texinfo/texinfo.txi(,8961) 
../texinfo/texinfo.txi(,8962) @xref{Printing Indices & Menus}, for information about printing an index
../texinfo/texinfo.txi(,8963) at the end of a book or creating an index menu in an Info file.@refill
../texinfo/texinfo.txi(,8964) 
../texinfo/texinfo.txi(,8965) @node New Indices,  , Combining Indices, Indices
../texinfo/texinfo.txi(,8966) @section Defining New Indices
../texinfo/texinfo.txi(,8967) @cindex Defining new indices
../texinfo/texinfo.txi(,8968) @cindex Indices, defining new
../texinfo/texinfo.txi(,8969) @cindex New index defining
../texinfo/texinfo.txi(,8970) @findex defindex
../texinfo/texinfo.txi(,8971) @findex defcodeindex
../texinfo/texinfo.txi(,8972) 
../texinfo/texinfo.txi(,8973) In addition to the predefined indices, you may use the
../texinfo/texinfo.txi(,8974) @code{@@defindex} and @code{@@defcodeindex} commands to define new
../texinfo/texinfo.txi(,8975) indices.  These commands create new indexing @@-commands with which
../texinfo/texinfo.txi(,8976) you mark index entries.  The @code{@@defindex }command is used like
../texinfo/texinfo.txi(,8977) this:@refill
../texinfo/texinfo.txi(,8978) 
../texinfo/texinfo.txi(,8979) @example
../texinfo/texinfo.txi(,8980) @@defindex @var{name}
../texinfo/texinfo.txi(,8981) @end example
../texinfo/texinfo.txi(,8982) 
../texinfo/texinfo.txi(,8983) The name of an index should be a two letter word, such as @samp{au}.
../texinfo/texinfo.txi(,8984) For example:@refill
../texinfo/texinfo.txi(,8985) 
../texinfo/texinfo.txi(,8986) @example
../texinfo/texinfo.txi(,8987) @@defindex au
../texinfo/texinfo.txi(,8988) @end example
../texinfo/texinfo.txi(,8989) 
../texinfo/texinfo.txi(,8990) This defines a new index, called the @samp{au} index.  At the same
../texinfo/texinfo.txi(,8991) time, it creates a new indexing command, @code{@@auindex}, that you
../texinfo/texinfo.txi(,8992) can use to make index entries.  Use the new indexing command just as
../texinfo/texinfo.txi(,8993) you would use a predefined indexing command.@refill
../texinfo/texinfo.txi(,8994) 
../texinfo/texinfo.txi(,8995) For example, here is a section heading followed by a concept index
../texinfo/texinfo.txi(,8996) entry and two @samp{au} index entries.@refill
../texinfo/texinfo.txi(,8997) 
../texinfo/texinfo.txi(,8998) @example
../texinfo/texinfo.txi(,8999) @@section Cognitive Semantics
../texinfo/texinfo.txi(,9000) @@cindex kinesthetic image schemas
../texinfo/texinfo.txi(,9001) @@auindex Johnson, Mark
../texinfo/texinfo.txi(,9002) @@auindex Lakoff, George
../texinfo/texinfo.txi(,9003) @end example
../texinfo/texinfo.txi(,9004) 
../texinfo/texinfo.txi(,9005) @noindent
../texinfo/texinfo.txi(,9006) (Evidently, @samp{au} serves here as an abbreviation for ``author''.)
../texinfo/texinfo.txi(,9007) Texinfo constructs the new indexing command by concatenating the name
../texinfo/texinfo.txi(,9008) of the index with @samp{index}; thus, defining an @samp{au} index
../texinfo/texinfo.txi(,9009) leads to the automatic creation of an @code{@@auindex} command.@refill
../texinfo/texinfo.txi(,9010) 
../texinfo/texinfo.txi(,9011) Use the @code{@@printindex} command to print the index, as you do with
../texinfo/texinfo.txi(,9012) the predefined indices.  For example:@refill
../texinfo/texinfo.txi(,9013) 
../texinfo/texinfo.txi(,9014) @example
../texinfo/texinfo.txi(,9015) @group
../texinfo/texinfo.txi(,9016) @@node Author Index, Subject Index, , Top
../texinfo/texinfo.txi(,9017) @@unnumbered Author Index
../texinfo/texinfo.txi(,9018) 
../texinfo/texinfo.txi(,9019) @@printindex au
../texinfo/texinfo.txi(,9020) @end group
../texinfo/texinfo.txi(,9021) @end example
../texinfo/texinfo.txi(,9022) 
../texinfo/texinfo.txi(,9023) The @code{@@defcodeindex} is like the @code{@@defindex} command, except
../texinfo/texinfo.txi(,9024) that, in the printed output, it prints entries in an @code{@@code} font
../texinfo/texinfo.txi(,9025) instead of a roman font.  Thus, it parallels the @code{@@findex} command
../texinfo/texinfo.txi(,9026) rather than the @code{@@cindex} command.@refill
../texinfo/texinfo.txi(,9027) 
../texinfo/texinfo.txi(,9028) You should define new indices within or right after the end-of-header
../texinfo/texinfo.txi(,9029) line of a Texinfo file, before any @code{@@synindex} or
../texinfo/texinfo.txi(,9030) @code{@@syncodeindex} commands (@pxref{Texinfo File Header}).
../texinfo/texinfo.txi(,9031) 
../texinfo/texinfo.txi(,9032) 
../texinfo/texinfo.txi(,9033) @node Insertions
../texinfo/texinfo.txi(,9034) @chapter Special Insertions
../texinfo/texinfo.txi(,9035) @cindex Inserting special characters and symbols
../texinfo/texinfo.txi(,9036) @cindex Special insertions
../texinfo/texinfo.txi(,9037) 
../texinfo/texinfo.txi(,9038) Texinfo provides several commands for inserting characters that have
../texinfo/texinfo.txi(,9039) special meaning in Texinfo, such as braces, and for other graphic
../texinfo/texinfo.txi(,9040) elements that do not correspond to simple characters you can type.
../texinfo/texinfo.txi(,9041) 
../texinfo/texinfo.txi(,9059) 
../texinfo/texinfo.txi(,9060) @menu
../texinfo/texinfo.txi(,9061) * Braces Atsigns::              How to insert braces, @samp{@@}.
../texinfo/texinfo.txi(,9062) * Inserting Space::             How to insert the right amount of space
../texinfo/texinfo.txi(,9063)                                   within a sentence.
../texinfo/texinfo.txi(,9064) * Inserting Accents::           How to insert accents and special characters.
../texinfo/texinfo.txi(,9065) * Dots Bullets::                How to insert dots and bullets.
../texinfo/texinfo.txi(,9066) * TeX and copyright::           How to insert the @TeX{} logo
../texinfo/texinfo.txi(,9067)                                   and the copyright symbol.
../texinfo/texinfo.txi(,9068) * pounds::                      How to insert the pounds currency symbol.
../texinfo/texinfo.txi(,9069) * minus::                       How to insert a minus sign.
../texinfo/texinfo.txi(,9070) * math::                        How to format a mathematical expression.
../texinfo/texinfo.txi(,9071) * Glyphs::                      How to indicate results of evaluation,
../texinfo/texinfo.txi(,9072)                                   expansion of macros, errors, etc.
../texinfo/texinfo.txi(,9073) * Footnotes::                   How to include footnotes.
../texinfo/texinfo.txi(,9074) * Images::                      How to include graphics.
../texinfo/texinfo.txi(,9075) @end menu
../texinfo/texinfo.txi(,9076) 
../texinfo/texinfo.txi(,9077) 
../texinfo/texinfo.txi(,9078) @node Braces Atsigns, Inserting Space, Insertions, Insertions
../texinfo/texinfo.txi(,9079) @section Inserting @@ and Braces
../texinfo/texinfo.txi(,9080) @cindex Inserting @@, braces
../texinfo/texinfo.txi(,9081) @cindex Braces, inserting
../texinfo/texinfo.txi(,9082) @cindex Special characters, commands to insert
../texinfo/texinfo.txi(,9083) @cindex Commands to insert special characters
../texinfo/texinfo.txi(,9084) 
../texinfo/texinfo.txi(,9085) @samp{@@} and curly braces are special characters in Texinfo.  To insert
../texinfo/texinfo.txi(,9086) these characters so they appear in text, you must put an @samp{@@} in
../texinfo/texinfo.txi(,9087) front of these characters to prevent Texinfo from misinterpreting
../texinfo/texinfo.txi(,9088) them.
../texinfo/texinfo.txi(,9089) 
../texinfo/texinfo.txi(,9090) Do not put braces after any of these commands; they are not
../texinfo/texinfo.txi(,9091) necessary.
../texinfo/texinfo.txi(,9092) 
../texinfo/texinfo.txi(,9093) @menu
../texinfo/texinfo.txi(,9094) * Inserting An Atsign::         How to insert @samp{@@}.
../texinfo/texinfo.txi(,9095) * Inserting Braces::            How to insert @samp{@{} and @samp{@}}.
../texinfo/texinfo.txi(,9096) @end menu
../texinfo/texinfo.txi(,9097) 
../texinfo/texinfo.txi(,9098) @node Inserting An Atsign, Inserting Braces, Braces Atsigns, Braces Atsigns
../texinfo/texinfo.txi(,9099) @subsection Inserting @samp{@@} with @@@@
../texinfo/texinfo.txi(,9100) @findex @@ @r{(literal @samp{@@})}
../texinfo/texinfo.txi(,9101) 
../texinfo/texinfo.txi(,9102) @code{@@@@} stands for a single @samp{@@} in either printed or Info
../texinfo/texinfo.txi(,9103) output.
../texinfo/texinfo.txi(,9104) 
../texinfo/texinfo.txi(,9105) Do not put braces after an @code{@@@@} command.
../texinfo/texinfo.txi(,9106) 
../texinfo/texinfo.txi(,9107) 
../texinfo/texinfo.txi(,9108) @node Inserting Braces
../texinfo/texinfo.txi(,9109) @subsection Inserting @samp{@{} and @samp{@}}with @@@{ and @@@}
../texinfo/texinfo.txi(,9110) @findex @{ @r{(literal @samp{@{})}
../texinfo/texinfo.txi(,9111) @findex @} @r{(literal @samp{@}})}
../texinfo/texinfo.txi(,9112) 
../texinfo/texinfo.txi(,9113) @code{@@@{} stands for a single @samp{@{} in either printed or Info
../texinfo/texinfo.txi(,9114) output.
../texinfo/texinfo.txi(,9115) 
../texinfo/texinfo.txi(,9116) @code{@@@}} stands for a single @samp{@}} in either printed or Info
../texinfo/texinfo.txi(,9117) output.
../texinfo/texinfo.txi(,9118) 
../texinfo/texinfo.txi(,9119) Do not put braces after either an @code{@@@{} or an @code{@@@}}
../texinfo/texinfo.txi(,9120) command.
../texinfo/texinfo.txi(,9121) 
../texinfo/texinfo.txi(,9122) 
../texinfo/texinfo.txi(,9123) @node Inserting Space
../texinfo/texinfo.txi(,9124) @section Inserting Space
../texinfo/texinfo.txi(,9125) 
../texinfo/texinfo.txi(,9126) @cindex Inserting space
../texinfo/texinfo.txi(,9127) @cindex Spacing, inserting
../texinfo/texinfo.txi(,9128) The following sections describe commands that control spacing of various
../texinfo/texinfo.txi(,9129) kinds within and after sentences.
../texinfo/texinfo.txi(,9130) 
../texinfo/texinfo.txi(,9131) @menu
../texinfo/texinfo.txi(,9132) * Not Ending a Sentence::       Sometimes a . doesn't end a sentence.
../texinfo/texinfo.txi(,9133) * Ending a Sentence::           Sometimes it does.
../texinfo/texinfo.txi(,9134) * Multiple Spaces::             Inserting multiple spaces.
../texinfo/texinfo.txi(,9135) * dmn::                         How to format a dimension.
../texinfo/texinfo.txi(,9136) @end menu
../texinfo/texinfo.txi(,9137) 
../texinfo/texinfo.txi(,9138) 
../texinfo/texinfo.txi(,9139) @node Not Ending a Sentence
../texinfo/texinfo.txi(,9140) @subsection Not Ending a Sentence
../texinfo/texinfo.txi(,9141) 
../texinfo/texinfo.txi(,9142) @cindex Not ending a sentence
../texinfo/texinfo.txi(,9143) @cindex Sentence non-ending punctuation
../texinfo/texinfo.txi(,9144) @cindex Periods, inserting
../texinfo/texinfo.txi(,9145) Depending on whether a period or exclamation point or question mark is
../texinfo/texinfo.txi(,9146) inside or at the end of a sentence, less or more space is inserted after
../texinfo/texinfo.txi(,9147) a period in a typeset manual.  Since it is not always possible
../texinfo/texinfo.txi(,9148) to determine when a period ends a sentence and when it is used
../texinfo/texinfo.txi(,9149) in an abbreviation, special commands are needed in some circumstances.
../texinfo/texinfo.txi(,9150) Usually, Texinfo can guess how to handle periods, so you do not need to
../texinfo/texinfo.txi(,9151) use the special commands; you just enter a period as you would if you
../texinfo/texinfo.txi(,9152) were using a typewriter, which means you put two spaces after the
../texinfo/texinfo.txi(,9153) period, question mark, or exclamation mark that ends a sentence.
../texinfo/texinfo.txi(,9154) 
../texinfo/texinfo.txi(,9155) @findex <colon> @r{(suppress widening)}
../texinfo/texinfo.txi(,9156) Use the @code{@@:}@: command after a period, question mark,
../texinfo/texinfo.txi(,9157) exclamation mark, or colon that should not be followed by extra space.
../texinfo/texinfo.txi(,9158) For example, use @code{@@:}@: after periods that end abbreviations
../texinfo/texinfo.txi(,9159) which are not at the ends of sentences.
../texinfo/texinfo.txi(,9160) 
../texinfo/texinfo.txi(,9161) For example,
../texinfo/texinfo.txi(,9162) 
../texinfo/texinfo.txi(,9163) @example
../texinfo/texinfo.txi(,9164) The s.o.p.@@: has three parts @dots{}
../texinfo/texinfo.txi(,9165) The s.o.p. has three parts @dots{}
../texinfo/texinfo.txi(,9166) @end example
../texinfo/texinfo.txi(,9167) 
../texinfo/texinfo.txi(,9168) @noindent
../texinfo/texinfo.txi(,9170) produces
../texinfo/texinfo.txi(,9177) 
../texinfo/texinfo.txi(,9178) @quotation
../texinfo/texinfo.txi(,9179) The s.o.p.@: has three parts @dots{}@*
../texinfo/texinfo.txi(,9180) The s.o.p. has three parts @dots{}
../texinfo/texinfo.txi(,9181) @end quotation
../texinfo/texinfo.txi(,9182) 
../texinfo/texinfo.txi(,9183) @noindent
../texinfo/texinfo.txi(,9184) (Incidentally, @samp{s.o.p.} is an abbreviation for ``Standard Operating
../texinfo/texinfo.txi(,9185) Procedure''.)
../texinfo/texinfo.txi(,9186) 
../texinfo/texinfo.txi(,9187) @code{@@:} has no effect on the Info output.  Do not put braces after
../texinfo/texinfo.txi(,9188) @code{@@:}.
../texinfo/texinfo.txi(,9189) 
../texinfo/texinfo.txi(,9190) 
../texinfo/texinfo.txi(,9191) @node Ending a Sentence, Multiple Spaces, Not Ending a Sentence, Inserting Space
../texinfo/texinfo.txi(,9192) @subsection Ending a Sentence
../texinfo/texinfo.txi(,9193) 
../texinfo/texinfo.txi(,9194) @cindex Ending a Sentence
../texinfo/texinfo.txi(,9195) @cindex Sentence ending punctuation
../texinfo/texinfo.txi(,9196) 
../texinfo/texinfo.txi(,9197) @findex .  @r{(end of sentence)}
../texinfo/texinfo.txi(,9198) @findex ! @r{(end of sentence)}
../texinfo/texinfo.txi(,9199) @findex ? @r{(end of sentence)}
../texinfo/texinfo.txi(,9200) Use @code{@@.}@: instead of a period, @code{@@!}@: instead of an
../texinfo/texinfo.txi(,9201) exclamation point, and @code{@@?}@: instead of a question mark at the end
../texinfo/texinfo.txi(,9202) of a sentence that ends with a single capital letter.  Otherwise, @TeX{}
../texinfo/texinfo.txi(,9203) will think the letter is an abbreviation and will not insert the correct
../texinfo/texinfo.txi(,9204) end-of-sentence spacing.  Here is an example:
../texinfo/texinfo.txi(,9205) 
../texinfo/texinfo.txi(,9206) @example
../texinfo/texinfo.txi(,9207) Give it to M.I.B. and to M.E.W@@.  Also, give it to R.J.C@@.
../texinfo/texinfo.txi(,9208) Give it to M.I.B. and to M.E.W.  Also, give it to R.J.C.
../texinfo/texinfo.txi(,9209) @end example
../texinfo/texinfo.txi(,9210) 
../texinfo/texinfo.txi(,9211) @noindent
../texinfo/texinfo.txi(,9213) produces
../texinfo/texinfo.txi(,9220) 
../texinfo/texinfo.txi(,9221) @quotation
../texinfo/texinfo.txi(,9222) Give it to M.I.B. and to M.E.W@.  Also, give it to R.J.C@.@*
../texinfo/texinfo.txi(,9223) Give it to M.I.B. and to M.E.W.  Also, give it to R.J.C.
../texinfo/texinfo.txi(,9224) @end quotation
../texinfo/texinfo.txi(,9225) 
../texinfo/texinfo.txi(,9226) In the Info file output, @code{@@.}@: is equivalent to a simple
../texinfo/texinfo.txi(,9227) @samp{.}; likewise for @code{@@!}@: and @code{@@?}@:.
../texinfo/texinfo.txi(,9228) 
../texinfo/texinfo.txi(,9229) The meanings of @code{@@:} and @code{@@.}@: in Texinfo are designed to
../texinfo/texinfo.txi(,9230) work well with the Emacs sentence motion commands (@pxref{Sentences,,,
../texinfo/texinfo.txi(,9231) emacs, The GNU Emacs Manual}).
../texinfo/texinfo.txi(,9232) 
../texinfo/texinfo.txi(,9233) Do not put braces after any of these commands.
../texinfo/texinfo.txi(,9234) 
../texinfo/texinfo.txi(,9235) 
../texinfo/texinfo.txi(,9236) @node Multiple Spaces, dmn, Ending a Sentence, Inserting Space
../texinfo/texinfo.txi(,9237) @subsection Multiple Spaces
../texinfo/texinfo.txi(,9238) 
../texinfo/texinfo.txi(,9239) @cindex Multiple spaces
../texinfo/texinfo.txi(,9240) @cindex Whitespace, inserting
../texinfo/texinfo.txi(,9241) @cindex Space, inserting horizontal
../texinfo/texinfo.txi(,9242) @findex (space)
../texinfo/texinfo.txi(,9243) @findex (tab)
../texinfo/texinfo.txi(,9244) @findex (newline)
../texinfo/texinfo.txi(,9245) 
../texinfo/texinfo.txi(,9246) Ordinarily, @TeX{} collapses multiple whitespace characters (space, tab,
../texinfo/texinfo.txi(,9247) and newline) into a single space.  Info output, on the other hand,
../texinfo/texinfo.txi(,9248) preserves whitespace as you type it, except for changing a newline into
../texinfo/texinfo.txi(,9249) a space; this is why it is important to put two spaces at the end of
../texinfo/texinfo.txi(,9250) sentences in Texinfo documents.
../texinfo/texinfo.txi(,9251) 
../texinfo/texinfo.txi(,9252) Occasionally, you may want to actually insert several consecutive
../texinfo/texinfo.txi(,9253) spaces, either for purposes of example (what your program does with
../texinfo/texinfo.txi(,9254) multiple spaces as input), or merely for purposes of appearance in
../texinfo/texinfo.txi(,9255) headings or lists.  Texinfo supports three commands:
../texinfo/texinfo.txi(,9256) @code{@@@kbd{SPACE}}, @code{@@@kbd{TAB}}, and @code{@@@kbd{NL}}, all of
../texinfo/texinfo.txi(,9257) which insert a single space into the output.  (Here,
../texinfo/texinfo.txi(,9258) @code{@@@kbd{SPACE}} represents an @samp{@@} character followed by a
../texinfo/texinfo.txi(,9259) space, i.e., @samp{@@ }, and @kbd{TAB} and @kbd{NL} represent the tab
../texinfo/texinfo.txi(,9260) character and end-of-line, i.e., when @samp{@@} is the last character on
../texinfo/texinfo.txi(,9261) a line.)
../texinfo/texinfo.txi(,9262) 
../texinfo/texinfo.txi(,9263) For example,
../texinfo/texinfo.txi(,9264) @example
../texinfo/texinfo.txi(,9265) Spacey@@ @@ @@ @@
../texinfo/texinfo.txi(,9266) example.
../texinfo/texinfo.txi(,9267) @end example
../texinfo/texinfo.txi(,9268) 
../texinfo/texinfo.txi(,9269) @noindent produces
../texinfo/texinfo.txi(,9270) 
../texinfo/texinfo.txi(,9271) @example
../texinfo/texinfo.txi(,9272) Spacey@ @ @ @
../texinfo/texinfo.txi(,9273) example.
../texinfo/texinfo.txi(,9274) @end example
../texinfo/texinfo.txi(,9275) 
../texinfo/texinfo.txi(,9276) Other possible uses of @code{@@@kbd{SPACE}} have been subsumed by
../texinfo/texinfo.txi(,9277) @code{@@multitable} (@pxref{Multi-column Tables}).
../texinfo/texinfo.txi(,9278) 
../texinfo/texinfo.txi(,9279) Do not follow any of these commands with braces.
../texinfo/texinfo.txi(,9280) 
../texinfo/texinfo.txi(,9281) To produce a non-breakable space, see @ref{w, non-breakable space}.
../texinfo/texinfo.txi(,9282) 
../texinfo/texinfo.txi(,9283) 
../texinfo/texinfo.txi(,9284) @node dmn
../texinfo/texinfo.txi(,9285) @subsection @code{@@dmn}@{@var{dimension}@}: Format a Dimension
../texinfo/texinfo.txi(,9286) @cindex Thin space between number, dimension
../texinfo/texinfo.txi(,9287) @cindex Dimension formatting
../texinfo/texinfo.txi(,9288) @cindex Format a dimension
../texinfo/texinfo.txi(,9289) @findex dmn
../texinfo/texinfo.txi(,9290) 
../texinfo/texinfo.txi(,9291) At times, you may want to write @samp{12@dmn{pt}} or
../texinfo/texinfo.txi(,9292) @samp{8.5@dmn{in}} with little or no space between the number and the
../texinfo/texinfo.txi(,9293) abbreviation for the dimension.  You can use the @code{@@dmn} command
../texinfo/texinfo.txi(,9294) to do this.  On seeing the command, @TeX{} inserts just enough space
../texinfo/texinfo.txi(,9295) for proper typesetting; the Info formatting commands insert no space
../texinfo/texinfo.txi(,9296) at all, since the Info file does not require it.
../texinfo/texinfo.txi(,9297) 
../texinfo/texinfo.txi(,9298) To use the @code{@@dmn} command, write the number and then follow it
../texinfo/texinfo.txi(,9299) immediately, with no intervening space, by @code{@@dmn}, and then by
../texinfo/texinfo.txi(,9300) the dimension within braces.  For example,
../texinfo/texinfo.txi(,9301) 
../texinfo/texinfo.txi(,9302) @example
../texinfo/texinfo.txi(,9303) A4 paper is 8.27@@dmn@{in@} wide.
../texinfo/texinfo.txi(,9304) @end example
../texinfo/texinfo.txi(,9305) 
../texinfo/texinfo.txi(,9306) @noindent
../texinfo/texinfo.txi(,9307) produces
../texinfo/texinfo.txi(,9308) 
../texinfo/texinfo.txi(,9309) @quotation
../texinfo/texinfo.txi(,9310) A4 paper is 8.27@dmn{in} wide.
../texinfo/texinfo.txi(,9311) @end quotation
../texinfo/texinfo.txi(,9312) 
../texinfo/texinfo.txi(,9313) Not everyone uses this style.  Some people prefer @w{@samp{8.27 in.@@:}}
../texinfo/texinfo.txi(,9314) or @w{@samp{8.27 inches}} to @samp{8.27@@dmn@{in@}} in the Texinfo file.
../texinfo/texinfo.txi(,9315) In these cases, however, the formatters may insert a line break between
../texinfo/texinfo.txi(,9316) the number and the dimension, so use @code{@@w} (@pxref{w}).  Also, if
../texinfo/texinfo.txi(,9317) you write a period after an abbreviation within a sentence, you should
../texinfo/texinfo.txi(,9318) write @samp{@@:} after the period to prevent @TeX{} from inserting extra
../texinfo/texinfo.txi(,9319) whitespace, as shown here.  @xref{Not Ending a Sentence}.
../texinfo/texinfo.txi(,9320) 
../texinfo/texinfo.txi(,9321) 
../texinfo/texinfo.txi(,9322) @node Inserting Accents
../texinfo/texinfo.txi(,9323) @section Inserting Accents
../texinfo/texinfo.txi(,9324) 
../texinfo/texinfo.txi(,9325) @cindex Inserting accents
../texinfo/texinfo.txi(,9326) @cindex Accents, inserting
../texinfo/texinfo.txi(,9327) @cindex Floating accents, inserting
../texinfo/texinfo.txi(,9328) 
../texinfo/texinfo.txi(,9329) Here is a table with the commands Texinfo provides for inserting
../texinfo/texinfo.txi(,9330) floating accents.  The commands with non-alphabetic names do not take
../texinfo/texinfo.txi(,9331) braces around their argument (which is taken to be the next character).
../texinfo/texinfo.txi(,9332) (Exception: @code{@@,} @emph{does} take braces around its argument.)
../texinfo/texinfo.txi(,9333) This is so as to make the source as convenient to type and read as
../texinfo/texinfo.txi(,9334) possible, since accented characters are very common in some languages.
../texinfo/texinfo.txi(,9335) 
../texinfo/texinfo.txi(,9336) @findex " @r{(umlaut accent)}
../texinfo/texinfo.txi(,9337) @cindex Umlaut accent
../texinfo/texinfo.txi(,9338) @findex ' @r{(umlaut accent)}
../texinfo/texinfo.txi(,9339) @cindex Acute accent
../texinfo/texinfo.txi(,9340) @findex = @r{(macron accent)}
../texinfo/texinfo.txi(,9341) @cindex Macron accent
../texinfo/texinfo.txi(,9342) @findex ^ @r{(circumflex accent)}
../texinfo/texinfo.txi(,9343) @cindex Circumflex accent
../texinfo/texinfo.txi(,9344) @findex ` @r{(grave accent)}
../texinfo/texinfo.txi(,9345) @cindex Grave accent
../texinfo/texinfo.txi(,9346) @findex ~ @r{(tilde accent)}
../texinfo/texinfo.txi(,9347) @cindex Tilde accent
../texinfo/texinfo.txi(,9348) @findex , @r{(cedilla accent)}
../texinfo/texinfo.txi(,9349) @cindex Cedilla accent
../texinfo/texinfo.txi(,9350) @findex dotaccent
../texinfo/texinfo.txi(,9351) @cindex Dot accent
../texinfo/texinfo.txi(,9352) @findex H @r{(Hungarian umlaut accent)}
../texinfo/texinfo.txi(,9353) @cindex Hungarian umlaut accent
../texinfo/texinfo.txi(,9354) @findex ringaccent
../texinfo/texinfo.txi(,9355) @cindex Ring accent
../texinfo/texinfo.txi(,9356) @findex tieaccent
../texinfo/texinfo.txi(,9357) @cindex Tie-after accent
../texinfo/texinfo.txi(,9358) @findex u @r{(breve accent)}
../texinfo/texinfo.txi(,9359) @cindex Breve accent
../texinfo/texinfo.txi(,9360) @findex ubaraccent
../texinfo/texinfo.txi(,9361) @cindex Underbar accent
../texinfo/texinfo.txi(,9362) @findex udotaccent
../texinfo/texinfo.txi(,9363) @cindex Underdot accent
../texinfo/texinfo.txi(,9364) @findex v @r{(check accent)}
../texinfo/texinfo.txi(,9365) @cindex Check accent
../texinfo/texinfo.txi(,9366) @multitable {@@questiondown@{@}} {Output} {macron/overbar accent}
../texinfo/texinfo.txi(,9367) @item Command               @tab Output         @tab What
../texinfo/texinfo.txi(,9368) @item @t{@@"o}              @tab @"o            @tab umlaut accent
../texinfo/texinfo.txi(,9369) @item @t{@@'o}              @tab @'o            @tab acute accent
../texinfo/texinfo.txi(,9370) @item @t{@@,@{c@}}          @tab @,{c}          @tab cedilla accent
../texinfo/texinfo.txi(,9371) @item @t{@@=o}              @tab @=o            @tab macron/overbar accent
../texinfo/texinfo.txi(,9372) @item @t{@@^o}              @tab @^o            @tab circumflex accent
../texinfo/texinfo.txi(,9373) @item @t{@@`o}              @tab @`o            @tab grave accent
../texinfo/texinfo.txi(,9374) @item @t{@@~o}              @tab @~o            @tab tilde accent
../texinfo/texinfo.txi(,9375) @item @t{@@dotaccent@{o@}}  @tab @dotaccent{o}  @tab overdot accent
../texinfo/texinfo.txi(,9376) @item @t{@@H@{o@}}          @tab @H{o}          @tab long Hungarian umlaut
../texinfo/texinfo.txi(,9377) @item @t{@@ringaccent@{o@}} @tab @ringaccent{o} @tab ring accent
../texinfo/texinfo.txi(,9378) @item @t{@@tieaccent@{oo@}} @tab @tieaccent{oo} @tab tie-after accent
../texinfo/texinfo.txi(,9379) @item @t{@@u@{o@}}          @tab @u{o}          @tab breve accent
../texinfo/texinfo.txi(,9380) @item @t{@@ubaraccent@{o@}} @tab @ubaraccent{o} @tab underbar accent
../texinfo/texinfo.txi(,9381) @item @t{@@udotaccent@{o@}} @tab @udotaccent{o} @tab underdot accent
../texinfo/texinfo.txi(,9382) @item @t{@@v@{o@}}          @tab @v{o}          @tab hacek or check accent
../texinfo/texinfo.txi(,9383) @end multitable
../texinfo/texinfo.txi(,9384) 
../texinfo/texinfo.txi(,9385) This table lists the Texinfo commands for inserting other characters
../texinfo/texinfo.txi(,9386) commonly used in languages other than English.
../texinfo/texinfo.txi(,9387) 
../texinfo/texinfo.txi(,9388) @findex questiondown
../texinfo/texinfo.txi(,9389) @cindex @questiondown{}
../texinfo/texinfo.txi(,9390) @findex exclamdown
../texinfo/texinfo.txi(,9391) @cindex @exclamdown{}
../texinfo/texinfo.txi(,9392) @findex aa
../texinfo/texinfo.txi(,9393) @cindex @aa{}
../texinfo/texinfo.txi(,9394) @findex AA
../texinfo/texinfo.txi(,9395) @cindex @AA{}
../texinfo/texinfo.txi(,9396) @findex ae
../texinfo/texinfo.txi(,9397) @cindex @ae{}
../texinfo/texinfo.txi(,9398) @findex AE
../texinfo/texinfo.txi(,9399) @cindex @AE{}
../texinfo/texinfo.txi(,9400) @findex dotless
../texinfo/texinfo.txi(,9401) @cindex @dotless{i}
../texinfo/texinfo.txi(,9402) @cindex @dotless{j}
../texinfo/texinfo.txi(,9403) @cindex Dotless i, j
../texinfo/texinfo.txi(,9404) @findex l
../texinfo/texinfo.txi(,9405) @cindex @l{}
../texinfo/texinfo.txi(,9406) @findex L
../texinfo/texinfo.txi(,9407) @cindex @L{}
../texinfo/texinfo.txi(,9408) @findex o
../texinfo/texinfo.txi(,9409) @cindex @o{}
../texinfo/texinfo.txi(,9410) @findex O
../texinfo/texinfo.txi(,9411) @cindex @O{}
../texinfo/texinfo.txi(,9412) @findex oe
../texinfo/texinfo.txi(,9413) @cindex @oe{}
../texinfo/texinfo.txi(,9414) @findex OE
../texinfo/texinfo.txi(,9415) @cindex @OE{}
../texinfo/texinfo.txi(,9416) @findex ss
../texinfo/texinfo.txi(,9417) @cindex @ss{}
../texinfo/texinfo.txi(,9418) @cindex Es-zet
../texinfo/texinfo.txi(,9419) @cindex Sharp S
../texinfo/texinfo.txi(,9420) @cindex German S
../texinfo/texinfo.txi(,9421) @multitable {x@@questiondown@{@}} {oe,OE} {es-zet or sharp S}
../texinfo/texinfo.txi(,9422) @item @t{@@exclamdown@{@}}   @tab @exclamdown{}   @tab upside-down !
../texinfo/texinfo.txi(,9423) @item @t{@@questiondown@{@}} @tab @questiondown{} @tab upside-down ?
../texinfo/texinfo.txi(,9424) @item @t{@@aa@{@},@@AA@{@}}  @tab @aa{},@AA{}     @tab a,A with circle
../texinfo/texinfo.txi(,9425) @item @t{@@ae@{@},@@AE@{@}}  @tab @ae{},@AE{}     @tab ae,AE ligatures
../texinfo/texinfo.txi(,9426) @item @t{@@dotless@{i@}}     @tab @dotless{i}     @tab dotless i
../texinfo/texinfo.txi(,9427) @item @t{@@dotless@{j@}}     @tab @dotless{j}     @tab dotless j
../texinfo/texinfo.txi(,9428) @item @t{@@l@{@},@@L@{@}}    @tab @l{},@L{}       @tab suppressed-L,l
../texinfo/texinfo.txi(,9429) @item @t{@@o@{@},@@O@{@}}    @tab @o{},@O{}       @tab O,o with slash
../texinfo/texinfo.txi(,9430) @item @t{@@oe@{@},@@OE@{@}}  @tab @oe{},@OE{}     @tab oe,OE ligatures
../texinfo/texinfo.txi(,9431) @item @t{@@ss@{@}}           @tab @ss{}           @tab es-zet or sharp S
../texinfo/texinfo.txi(,9432) @end multitable
../texinfo/texinfo.txi(,9433) 
../texinfo/texinfo.txi(,9434) 
../texinfo/texinfo.txi(,9435) @node Dots Bullets
../texinfo/texinfo.txi(,9436) @section Inserting Ellipsis and Bullets
../texinfo/texinfo.txi(,9437) @cindex Dots, inserting
../texinfo/texinfo.txi(,9438) @cindex Bullets, inserting
../texinfo/texinfo.txi(,9439) @cindex Ellipsis, inserting
../texinfo/texinfo.txi(,9440) @cindex Inserting ellipsis
../texinfo/texinfo.txi(,9441) @cindex Inserting dots
../texinfo/texinfo.txi(,9442) @cindex Special typesetting commands
../texinfo/texinfo.txi(,9443) @cindex Typesetting commands for dots, etc.
../texinfo/texinfo.txi(,9444) 
../texinfo/texinfo.txi(,9445) An @dfn{ellipsis} (a line of dots) is not typeset as a string of
../texinfo/texinfo.txi(,9446) periods, so a special command is used for ellipsis in Texinfo.  The
../texinfo/texinfo.txi(,9447) @code{@@bullet} command is special, too.  Each of these commands is
../texinfo/texinfo.txi(,9448) followed by a pair of braces, @samp{@{@}}, without any whitespace
../texinfo/texinfo.txi(,9449) between the name of the command and the braces.  (You need to use braces
../texinfo/texinfo.txi(,9450) with these commands because you can use them next to other text; without
../texinfo/texinfo.txi(,9451) the braces, the formatters would be confused.  @xref{Command Syntax, ,
../texinfo/texinfo.txi(,9452) @@-Command Syntax}, for further information.)@refill
../texinfo/texinfo.txi(,9453) 
../texinfo/texinfo.txi(,9454) @menu
../texinfo/texinfo.txi(,9455) * dots::                        How to insert dots @dots{}
../texinfo/texinfo.txi(,9456) * bullet::                      How to insert a bullet.
../texinfo/texinfo.txi(,9457) @end menu
../texinfo/texinfo.txi(,9458) 
../texinfo/texinfo.txi(,9459) 
../texinfo/texinfo.txi(,9460) @node dots
../texinfo/texinfo.txi(,9461) @subsection @code{@@dots}@{@} (@dots{}) and @code{@@enddots}@{@} (@enddots{})
../texinfo/texinfo.txi(,9462) @findex dots
../texinfo/texinfo.txi(,9463) @findex enddots
../texinfo/texinfo.txi(,9464) @cindex Inserting dots
../texinfo/texinfo.txi(,9465) @cindex Dots, inserting
../texinfo/texinfo.txi(,9466) 
../texinfo/texinfo.txi(,9467) Use the @code{@@dots@{@}} command to generate an ellipsis, which is
../texinfo/texinfo.txi(,9468) three dots in a row, appropriately spaced, like this: `@dots{}'.  Do
../texinfo/texinfo.txi(,9469) not simply write three periods in the input file; that would work for
../texinfo/texinfo.txi(,9470) the Info file output, but would produce the wrong amount of space
../texinfo/texinfo.txi(,9471) between the periods in the printed manual.
../texinfo/texinfo.txi(,9472) 
../texinfo/texinfo.txi(,9473) Similarly, the @code{@@enddots@{@}} command generates an
../texinfo/texinfo.txi(,9474) end-of-sentence ellipsis (four dots) @enddots{}
../texinfo/texinfo.txi(,9475) 
../texinfo/texinfo.txi(,9483) 
../texinfo/texinfo.txi(,9484) 
../texinfo/texinfo.txi(,9485) @node bullet
../texinfo/texinfo.txi(,9486) @subsection @code{@@bullet}@{@} (@bullet{})
../texinfo/texinfo.txi(,9487) @findex bullet
../texinfo/texinfo.txi(,9488) 
../texinfo/texinfo.txi(,9489) Use the @code{@@bullet@{@}} command to generate a large round dot, or
../texinfo/texinfo.txi(,9490) the closest possible thing to one.  In Info, an asterisk is used.@refill
../texinfo/texinfo.txi(,9491) 
../texinfo/texinfo.txi(,9492) Here is a bullet: @bullet{}
../texinfo/texinfo.txi(,9493) 
../texinfo/texinfo.txi(,9494) When you use @code{@@bullet} in @code{@@itemize}, you do not need to
../texinfo/texinfo.txi(,9495) type the braces, because @code{@@itemize} supplies them.
../texinfo/texinfo.txi(,9496) (@xref{itemize, , @code{@@itemize}}.)@refill
../texinfo/texinfo.txi(,9497) 
../texinfo/texinfo.txi(,9498) 
../texinfo/texinfo.txi(,9499) @node TeX and copyright, pounds, Dots Bullets, Insertions
../texinfo/texinfo.txi(,9500) @section Inserting @TeX{} and the Copyright Symbol
../texinfo/texinfo.txi(,9501) 
../texinfo/texinfo.txi(,9502) The logo `@TeX{}' is typeset in a special fashion and it needs an
../texinfo/texinfo.txi(,9503) @@-command.  The copyright symbol, `@copyright{}', is also special.
../texinfo/texinfo.txi(,9504) Each of these commands is followed by a pair of braces, @samp{@{@}},
../texinfo/texinfo.txi(,9505) without any whitespace between the name of the command and the
../texinfo/texinfo.txi(,9506) braces.@refill
../texinfo/texinfo.txi(,9507) 
../texinfo/texinfo.txi(,9508) @menu
../texinfo/texinfo.txi(,9509) * tex::                         How to insert the @TeX{} logo.
../texinfo/texinfo.txi(,9510) * copyright symbol::            How to use @code{@@copyright}@{@}.
../texinfo/texinfo.txi(,9511) @end menu
../texinfo/texinfo.txi(,9512) 
../texinfo/texinfo.txi(,9513) 
../texinfo/texinfo.txi(,9514) @node tex
../texinfo/texinfo.txi(,9515) @subsection @code{@@TeX}@{@} (@TeX{})
../texinfo/texinfo.txi(,9516) @findex tex (command)
../texinfo/texinfo.txi(,9517) 
../texinfo/texinfo.txi(,9518) Use the @code{@@TeX@{@}} command to generate `@TeX{}'.  In a printed
../texinfo/texinfo.txi(,9519) manual, this is a special logo that is different from three ordinary
../texinfo/texinfo.txi(,9520) letters.  In Info, it just looks like @samp{TeX}.  The
../texinfo/texinfo.txi(,9521) @code{@@TeX@{@}} command is unique among Texinfo commands in that the
../texinfo/texinfo.txi(,9522) @samp{T} and the @samp{X} are in upper case.@refill
../texinfo/texinfo.txi(,9523) 
../texinfo/texinfo.txi(,9524) 
../texinfo/texinfo.txi(,9525) @node copyright symbol
../texinfo/texinfo.txi(,9526) @subsection @code{@@copyright}@{@} (@copyright{})
../texinfo/texinfo.txi(,9527) @findex copyright
../texinfo/texinfo.txi(,9528) 
../texinfo/texinfo.txi(,9529) Use the @code{@@copyright@{@}} command to generate `@copyright{}'.  In
../texinfo/texinfo.txi(,9530) a printed manual, this is a @samp{c} inside a circle, and in Info,
../texinfo/texinfo.txi(,9531) this is @samp{(C)}.@refill
../texinfo/texinfo.txi(,9532) 
../texinfo/texinfo.txi(,9533) 
../texinfo/texinfo.txi(,9534) @node pounds, minus, TeX and copyright, Insertions
../texinfo/texinfo.txi(,9535) @section @code{@@pounds}@{@} (@pounds{}): Pounds Sterling
../texinfo/texinfo.txi(,9536) @findex pounds
../texinfo/texinfo.txi(,9537) 
../texinfo/texinfo.txi(,9538) Use the @code{@@pounds@{@}} command to generate `@pounds{}'.  In a
../texinfo/texinfo.txi(,9539) printed manual, this is the symbol for the currency pounds sterling.
../texinfo/texinfo.txi(,9540) In Info, it is a @samp{#}.  Other currency symbols are unfortunately not
../texinfo/texinfo.txi(,9541) available.
../texinfo/texinfo.txi(,9542) 
../texinfo/texinfo.txi(,9543) 
../texinfo/texinfo.txi(,9544) @node minus, math, pounds, Insertions
../texinfo/texinfo.txi(,9545) @section @code{@@minus}@{@} (@minus{}): Inserting a Minus Sign
../texinfo/texinfo.txi(,9546) @findex minus
../texinfo/texinfo.txi(,9547) 
../texinfo/texinfo.txi(,9548) @cindex em-dash
../texinfo/texinfo.txi(,9549) @cindex hyphen
../texinfo/texinfo.txi(,9550) Use the @code{@@minus@{@}} command to generate a minus sign.  In a
../texinfo/texinfo.txi(,9551) fixed-width font, this is a single hyphen, but in a proportional font,
../texinfo/texinfo.txi(,9552) the symbol is the customary length for a minus sign---a little longer
../texinfo/texinfo.txi(,9553) than a hyphen, shorter than an em-dash:
../texinfo/texinfo.txi(,9554) 
../texinfo/texinfo.txi(,9555) @display
../texinfo/texinfo.txi(,9556) @samp{@minus{}} is a minus sign generated with @samp{@@minus@{@}},
../texinfo/texinfo.txi(,9557) 
../texinfo/texinfo.txi(,9558) `-' is a hyphen generated with the character @samp{-},
../texinfo/texinfo.txi(,9559) 
../texinfo/texinfo.txi(,9560) `---' is an em-dash for text.
../texinfo/texinfo.txi(,9561) @end display
../texinfo/texinfo.txi(,9562) 
../texinfo/texinfo.txi(,9563) @noindent
../texinfo/texinfo.txi(,9564) In the fixed-width font used by Info, @code{@@minus@{@}} is the same
../texinfo/texinfo.txi(,9565) as a hyphen.
../texinfo/texinfo.txi(,9566) 
../texinfo/texinfo.txi(,9567) You should not use @code{@@minus@{@}} inside @code{@@code} or
../texinfo/texinfo.txi(,9568) @code{@@example} because the width distinction is not made in the
../texinfo/texinfo.txi(,9569) fixed-width font they use.
../texinfo/texinfo.txi(,9570) 
../texinfo/texinfo.txi(,9571) When you use @code{@@minus} to specify the mark beginning each entry in
../texinfo/texinfo.txi(,9572) an itemized list, you do not need to type the braces
../texinfo/texinfo.txi(,9573) (@pxref{itemize, , @code{@@itemize}}.)
../texinfo/texinfo.txi(,9574) 
../texinfo/texinfo.txi(,9575) 
../texinfo/texinfo.txi(,9576) @node math
../texinfo/texinfo.txi(,9577) @section @code{@@math}: Inserting Mathematical Expressions
../texinfo/texinfo.txi(,9578) @findex math
../texinfo/texinfo.txi(,9579) @cindex Mathematical expressions
../texinfo/texinfo.txi(,9580) @cindex Formulas, mathematical
../texinfo/texinfo.txi(,9581) 
../texinfo/texinfo.txi(,9582) You can write a short mathematical expression with the @code{@@math}
../texinfo/texinfo.txi(,9583) command.  Write the mathematical expression between braces, like this:
../texinfo/texinfo.txi(,9584) 
../texinfo/texinfo.txi(,9585) @example
../texinfo/texinfo.txi(,9586) @@math@{(a + b)(a + b) = a^2 + 2ab + b^2@}
../texinfo/texinfo.txi(,9587) @end example
../texinfo/texinfo.txi(,9588) 
../texinfo/texinfo.txi(,9599) @noindent This produces the following in Info:
../texinfo/texinfo.txi(,9601) 
../texinfo/texinfo.txi(,9602) @example
../texinfo/texinfo.txi(,9603) (a + b)(a + b) = a^2 + 2ab + b^2
../texinfo/texinfo.txi(,9604) @end example
../texinfo/texinfo.txi(,9605) 
../texinfo/texinfo.txi(,9606) Thus, the @code{@@math} command has no effect on the Info output.
../texinfo/texinfo.txi(,9607) 
../texinfo/texinfo.txi(,9608) @code{@@math} implies @code{@@tex}.  This not only makes it possible to
../texinfo/texinfo.txi(,9609) write superscripts and subscripts (as in the above example), but also
../texinfo/texinfo.txi(,9610) allows you to use any of the plain @TeX{} math control sequences.  It's
../texinfo/texinfo.txi(,9611) conventional to use @samp{\} instead of @samp{@@} for these commands.
../texinfo/texinfo.txi(,9612) As in:
../texinfo/texinfo.txi(,9613) @example
../texinfo/texinfo.txi(,9614) @@math@{\sin 2\pi \equiv \cos 3\pi@}
../texinfo/texinfo.txi(,9615) @end example
../texinfo/texinfo.txi(,9616) 
../texinfo/texinfo.txi(,9625) @noindent which looks like the input in Info and HTML:
../texinfo/texinfo.txi(,9626) @example
../texinfo/texinfo.txi(,9627) \sin 2\pi \equiv \cos 3\pi
../texinfo/texinfo.txi(,9628) @end example
../texinfo/texinfo.txi(,9629) 
../texinfo/texinfo.txi(,9630) @findex \ @r{(literal \ in @code{@@math})}
../texinfo/texinfo.txi(,9631) Since @samp{\} is an escape character inside @code{@@math}, you can use
../texinfo/texinfo.txi(,9632) @code{@@\} to get a literal backslash (@code{\\} will work in @TeX{},
../texinfo/texinfo.txi(,9633) but you'll get the literal @samp{\\} in Info).  @code{@@\} is not
../texinfo/texinfo.txi(,9634) defined outside of @code{@@math}, since a @samp{\} ordinarily produces a
../texinfo/texinfo.txi(,9635) literal @samp{\}.
../texinfo/texinfo.txi(,9636) 
../texinfo/texinfo.txi(,9637) 
../texinfo/texinfo.txi(,9638) @cindex Displayed equations
../texinfo/texinfo.txi(,9639) @cindex Equations, displayed
../texinfo/texinfo.txi(,9640) For displayed equations, you must at present use @TeX{} directly
../texinfo/texinfo.txi(,9641) (@pxref{Raw Formatter Commands}).  
../texinfo/texinfo.txi(,9642) 
../texinfo/texinfo.txi(,9643) 
../texinfo/texinfo.txi(,9644) @node Glyphs
../texinfo/texinfo.txi(,9645) @section Glyphs for Examples
../texinfo/texinfo.txi(,9646) @cindex Glyphs
../texinfo/texinfo.txi(,9647) @cindex Examples, glyphs for
../texinfo/texinfo.txi(,9648) 
../texinfo/texinfo.txi(,9649) In Texinfo, code is often illustrated in examples that are delimited
../texinfo/texinfo.txi(,9650) by @code{@@example} and @code{@@end example}, or by @code{@@lisp} and
../texinfo/texinfo.txi(,9651) @code{@@end lisp}.  In such examples, you can indicate the results of
../texinfo/texinfo.txi(,9652) evaluation or an expansion using @samp{@result{}} or
../texinfo/texinfo.txi(,9653) @samp{@expansion{}}.  Likewise, there are commands to insert glyphs
../texinfo/texinfo.txi(,9654) to indicate
../texinfo/texinfo.txi(,9655) printed output, error messages, equivalence of expressions, and the
../texinfo/texinfo.txi(,9656) location of point.@refill
../texinfo/texinfo.txi(,9657) 
../texinfo/texinfo.txi(,9658) The glyph-insertion commands do not need to be used within an example, but
../texinfo/texinfo.txi(,9659) most often they are.  Every  glyph-insertion command is followed by a pair of
../texinfo/texinfo.txi(,9660) left- and right-hand braces.@refill
../texinfo/texinfo.txi(,9661) 
../texinfo/texinfo.txi(,9662) @menu
../texinfo/texinfo.txi(,9663) * Glyphs Summary::              
../texinfo/texinfo.txi(,9664) * result::                      How to show the result of expression.
../texinfo/texinfo.txi(,9665) * expansion::                   How to indicate an expansion.
../texinfo/texinfo.txi(,9666) * Print Glyph::                 How to indicate printed output.
../texinfo/texinfo.txi(,9667) * Error Glyph::                 How to indicate an error message.
../texinfo/texinfo.txi(,9668) * Equivalence::                 How to indicate equivalence.
../texinfo/texinfo.txi(,9669) * Point Glyph::                 How to indicate the location of point.
../texinfo/texinfo.txi(,9670) @end menu
../texinfo/texinfo.txi(,9671) 
../texinfo/texinfo.txi(,9672) 
../texinfo/texinfo.txi(,9673) @node Glyphs Summary
../texinfo/texinfo.txi(,9674) @subsection Glyphs Summary
../texinfo/texinfo.txi(,9675) 
../texinfo/texinfo.txi(,9676) Here are the different glyph commands:@refill
../texinfo/texinfo.txi(,9677) 
../texinfo/texinfo.txi(,9678) @table @asis
../texinfo/texinfo.txi(,9679) @item @result{}
../texinfo/texinfo.txi(,9680) @code{@@result@{@}} points to the result of an expression.@refill
../texinfo/texinfo.txi(,9681) 
../texinfo/texinfo.txi(,9682) @item @expansion{}
../texinfo/texinfo.txi(,9683) @code{@@expansion@{@}} shows the results of a macro expansion.@refill
../texinfo/texinfo.txi(,9684) 
../texinfo/texinfo.txi(,9685) @item @print{}
../texinfo/texinfo.txi(,9686) @code{@@print@{@}} indicates printed output.@refill
../texinfo/texinfo.txi(,9687) 
../texinfo/texinfo.txi(,9688) @item @error{}
../texinfo/texinfo.txi(,9689) @code{@@error@{@}} indicates that the following text is an error
../texinfo/texinfo.txi(,9690) message.@refill
../texinfo/texinfo.txi(,9691) 
../texinfo/texinfo.txi(,9692) @item @equiv{}
../texinfo/texinfo.txi(,9693) @code{@@equiv@{@}} indicates the exact equivalence of two forms.@refill
../texinfo/texinfo.txi(,9694) 
../texinfo/texinfo.txi(,9695) @item @point{}
../texinfo/texinfo.txi(,9696) @code{@@point@{@}} shows the location of point.@refill
../texinfo/texinfo.txi(,9697) @end table
../texinfo/texinfo.txi(,9698) 
../texinfo/texinfo.txi(,9699) @menu
../texinfo/texinfo.txi(,9700) * result::
../texinfo/texinfo.txi(,9701) * expansion::
../texinfo/texinfo.txi(,9702) * Print Glyph::
../texinfo/texinfo.txi(,9703) * Error Glyph::
../texinfo/texinfo.txi(,9704) * Equivalence::
../texinfo/texinfo.txi(,9705) * Point Glyph::
../texinfo/texinfo.txi(,9706) @end menu
../texinfo/texinfo.txi(,9707) 
../texinfo/texinfo.txi(,9708) 
../texinfo/texinfo.txi(,9709) @node result
../texinfo/texinfo.txi(,9710) @subsection @code{@@result@{@}} (@result{}): Indicating Evaluation
../texinfo/texinfo.txi(,9711) @cindex Result of an expression
../texinfo/texinfo.txi(,9712) @cindex Indicating evaluation
../texinfo/texinfo.txi(,9713) @cindex Evaluation glyph
../texinfo/texinfo.txi(,9714) @cindex Value of an expression, indicating
../texinfo/texinfo.txi(,9715) @findex result
../texinfo/texinfo.txi(,9716) 
../texinfo/texinfo.txi(,9717) Use the @code{@@result@{@}} command to indicate the result of
../texinfo/texinfo.txi(,9718) evaluating an expression.@refill
../texinfo/texinfo.txi(,9719) 
../texinfo/texinfo.txi(,9725) The @code{@@result@{@}} command is displayed as @samp{@result{}} in Info
../texinfo/texinfo.txi(,9726) and as a double stemmed arrow in the printed output.@refill
../texinfo/texinfo.txi(,9728) 
../texinfo/texinfo.txi(,9729) Thus, the following,
../texinfo/texinfo.txi(,9730) 
../texinfo/texinfo.txi(,9731) @lisp
../texinfo/texinfo.txi(,9732) (cdr '(1 2 3))
../texinfo/texinfo.txi(,9733)      @result{} (2 3)
../texinfo/texinfo.txi(,9734) @end lisp
../texinfo/texinfo.txi(,9735) 
../texinfo/texinfo.txi(,9736) @noindent
../texinfo/texinfo.txi(,9737) may be read as ``@code{(cdr '(1 2 3))} evaluates to @code{(2 3)}''.
../texinfo/texinfo.txi(,9738) 
../texinfo/texinfo.txi(,9739) 
../texinfo/texinfo.txi(,9740) @node expansion, Print Glyph, result, Glyphs
../texinfo/texinfo.txi(,9741) @subsection @code{@@expansion@{@}} (@expansion{}): Indicating an Expansion
../texinfo/texinfo.txi(,9742) @cindex Expansion, indicating it
../texinfo/texinfo.txi(,9743) @findex expansion
../texinfo/texinfo.txi(,9744) 
../texinfo/texinfo.txi(,9745) When an expression is a macro call, it expands into a new expression.
../texinfo/texinfo.txi(,9746) You can indicate the result of the expansion with the
../texinfo/texinfo.txi(,9747) @code{@@expansion@{@}} command.@refill
../texinfo/texinfo.txi(,9748) 
../texinfo/texinfo.txi(,9754) The @code{@@expansion@{@}} command is displayed as @samp{@expansion{}}
../texinfo/texinfo.txi(,9755) in Info and as a long arrow with a flat base in the printed output.@refill
../texinfo/texinfo.txi(,9757) 
../texinfo/texinfo.txi(,9758) @need 700
../texinfo/texinfo.txi(,9759) For example, the following
../texinfo/texinfo.txi(,9760) 
../texinfo/texinfo.txi(,9761) @example
../texinfo/texinfo.txi(,9762) @group
../texinfo/texinfo.txi(,9763) @@lisp
../texinfo/texinfo.txi(,9764) (third '(a b c))
../texinfo/texinfo.txi(,9765)      @@expansion@{@} (car (cdr (cdr '(a b c))))
../texinfo/texinfo.txi(,9766)      @@result@{@} c
../texinfo/texinfo.txi(,9767) @@end lisp
../texinfo/texinfo.txi(,9768) @end group
../texinfo/texinfo.txi(,9769) @end example
../texinfo/texinfo.txi(,9770) 
../texinfo/texinfo.txi(,9771) @noindent
../texinfo/texinfo.txi(,9772) produces
../texinfo/texinfo.txi(,9773) 
../texinfo/texinfo.txi(,9774) @lisp
../texinfo/texinfo.txi(,9775) @group
../texinfo/texinfo.txi(,9776) (third '(a b c))
../texinfo/texinfo.txi(,9777)      @expansion{} (car (cdr (cdr '(a b c))))
../texinfo/texinfo.txi(,9778)      @result{} c
../texinfo/texinfo.txi(,9779) @end group
../texinfo/texinfo.txi(,9780) @end lisp
../texinfo/texinfo.txi(,9781) 
../texinfo/texinfo.txi(,9782) @noindent
../texinfo/texinfo.txi(,9783) which may be read as:
../texinfo/texinfo.txi(,9784) 
../texinfo/texinfo.txi(,9785) @quotation
../texinfo/texinfo.txi(,9786) @code{(third '(a b c))} expands to @code{(car (cdr (cdr '(a b c))))};
../texinfo/texinfo.txi(,9787) the result of evaluating the expression is @code{c}.
../texinfo/texinfo.txi(,9788) @end quotation
../texinfo/texinfo.txi(,9789) 
../texinfo/texinfo.txi(,9790) @noindent
../texinfo/texinfo.txi(,9791) Often, as in this case, an example looks better if the
../texinfo/texinfo.txi(,9792) @code{@@expansion@{@}} and @code{@@result@{@}} commands are indented
../texinfo/texinfo.txi(,9793) five spaces.@refill
../texinfo/texinfo.txi(,9794) 
../texinfo/texinfo.txi(,9795) 
../texinfo/texinfo.txi(,9796) @node Print Glyph, Error Glyph, expansion, Glyphs
../texinfo/texinfo.txi(,9797) @subsection @code{@@print@{@}} (@print{}): Indicating Printed Output
../texinfo/texinfo.txi(,9798) @cindex Printed output, indicating it
../texinfo/texinfo.txi(,9799) @findex print
../texinfo/texinfo.txi(,9800) 
../texinfo/texinfo.txi(,9801) Sometimes an expression will print output during its execution.  You
../texinfo/texinfo.txi(,9802) can indicate the printed output with the @code{@@print@{@}} command.@refill
../texinfo/texinfo.txi(,9803) 
../texinfo/texinfo.txi(,9809) The @code{@@print@{@}} command is displayed as @samp{@print{}} in Info
../texinfo/texinfo.txi(,9810) and similarly, as a horizontal dash butting against a vertical bar, in
../texinfo/texinfo.txi(,9811) the printed output.@refill
../texinfo/texinfo.txi(,9813) 
../texinfo/texinfo.txi(,9814) In the following example, the printed text is indicated with
../texinfo/texinfo.txi(,9815) @samp{@print{}}, and the value of the expression follows on the
../texinfo/texinfo.txi(,9816) last line.@refill
../texinfo/texinfo.txi(,9817) 
../texinfo/texinfo.txi(,9818) @lisp
../texinfo/texinfo.txi(,9819) @group
../texinfo/texinfo.txi(,9820) (progn (print 'foo) (print 'bar))
../texinfo/texinfo.txi(,9821)      @print{} foo
../texinfo/texinfo.txi(,9822)      @print{} bar
../texinfo/texinfo.txi(,9823)      @result{} bar
../texinfo/texinfo.txi(,9824) @end group
../texinfo/texinfo.txi(,9825) @end lisp
../texinfo/texinfo.txi(,9826) 
../texinfo/texinfo.txi(,9827) @noindent
../texinfo/texinfo.txi(,9828) In a Texinfo source file, this example is written as follows:
../texinfo/texinfo.txi(,9829) 
../texinfo/texinfo.txi(,9830) @lisp
../texinfo/texinfo.txi(,9831) @group
../texinfo/texinfo.txi(,9832) @@lisp
../texinfo/texinfo.txi(,9833) (progn (print 'foo) (print 'bar))
../texinfo/texinfo.txi(,9834)      @@print@{@} foo
../texinfo/texinfo.txi(,9835)      @@print@{@} bar
../texinfo/texinfo.txi(,9836)      @@result@{@} bar
../texinfo/texinfo.txi(,9837) @@end lisp
../texinfo/texinfo.txi(,9838) @end group
../texinfo/texinfo.txi(,9839) @end lisp
../texinfo/texinfo.txi(,9840) 
../texinfo/texinfo.txi(,9841) 
../texinfo/texinfo.txi(,9842) @node Error Glyph, Equivalence, Print Glyph, Glyphs
../texinfo/texinfo.txi(,9843) @subsection @code{@@error@{@}} (@error{}): Indicating an Error Message
../texinfo/texinfo.txi(,9844) @cindex Error message, indicating it
../texinfo/texinfo.txi(,9845) @findex error
../texinfo/texinfo.txi(,9846) 
../texinfo/texinfo.txi(,9847) A piece of code may cause an error when you evaluate it.  You can
../texinfo/texinfo.txi(,9848) designate the error message with the @code{@@error@{@}} command.@refill
../texinfo/texinfo.txi(,9849) 
../texinfo/texinfo.txi(,9855) The @code{@@error@{@}} command is displayed as @samp{@error{}} in Info
../texinfo/texinfo.txi(,9856) and as the word `error' in a box in the printed output.@refill
../texinfo/texinfo.txi(,9858) 
../texinfo/texinfo.txi(,9859) @need 700
../texinfo/texinfo.txi(,9860) Thus,
../texinfo/texinfo.txi(,9861) 
../texinfo/texinfo.txi(,9862) @example
../texinfo/texinfo.txi(,9863) @@lisp
../texinfo/texinfo.txi(,9864) (+ 23 'x)
../texinfo/texinfo.txi(,9865) @@error@{@} Wrong type argument: integer-or-marker-p, x
../texinfo/texinfo.txi(,9866) @@end lisp
../texinfo/texinfo.txi(,9867) @end example
../texinfo/texinfo.txi(,9868) 
../texinfo/texinfo.txi(,9869) @noindent
../texinfo/texinfo.txi(,9870) produces
../texinfo/texinfo.txi(,9871) 
../texinfo/texinfo.txi(,9872) @lisp
../texinfo/texinfo.txi(,9873) (+ 23 'x)
../texinfo/texinfo.txi(,9874) @error{} Wrong type argument: integer-or-marker-p, x
../texinfo/texinfo.txi(,9875) @end lisp
../texinfo/texinfo.txi(,9876) 
../texinfo/texinfo.txi(,9877) @noindent
../texinfo/texinfo.txi(,9878) This indicates that the following error message is printed
../texinfo/texinfo.txi(,9879) when you evaluate the expression:
../texinfo/texinfo.txi(,9880) 
../texinfo/texinfo.txi(,9881) @lisp
../texinfo/texinfo.txi(,9882) Wrong type argument: integer-or-marker-p, x
../texinfo/texinfo.txi(,9883) @end lisp
../texinfo/texinfo.txi(,9884) 
../texinfo/texinfo.txi(,9885) @samp{@error{}} itself is not part of the error message.
../texinfo/texinfo.txi(,9886) 
../texinfo/texinfo.txi(,9887) 
../texinfo/texinfo.txi(,9888) @node Equivalence, Point Glyph, Error Glyph, Glyphs
../texinfo/texinfo.txi(,9889) @subsection @code{@@equiv@{@}} (@equiv{}): Indicating Equivalence
../texinfo/texinfo.txi(,9890) @cindex Equivalence, indicating it
../texinfo/texinfo.txi(,9891) @findex equiv
../texinfo/texinfo.txi(,9892) 
../texinfo/texinfo.txi(,9893) Sometimes two expressions produce identical results.  You can indicate the
../texinfo/texinfo.txi(,9894) exact equivalence of two forms with the @code{@@equiv@{@}} command.@refill
../texinfo/texinfo.txi(,9895) 
../texinfo/texinfo.txi(,9901) The @code{@@equiv@{@}} command is displayed as @samp{@equiv{}} in Info
../texinfo/texinfo.txi(,9902) and as a three parallel horizontal lines in the printed output.@refill
../texinfo/texinfo.txi(,9904) 
../texinfo/texinfo.txi(,9905) Thus,
../texinfo/texinfo.txi(,9906) 
../texinfo/texinfo.txi(,9907) @example
../texinfo/texinfo.txi(,9908) @@lisp
../texinfo/texinfo.txi(,9909) (make-sparse-keymap) @@equiv@{@} (list 'keymap)
../texinfo/texinfo.txi(,9910) @@end lisp
../texinfo/texinfo.txi(,9911) @end example
../texinfo/texinfo.txi(,9912) 
../texinfo/texinfo.txi(,9913) @noindent
../texinfo/texinfo.txi(,9914) produces
../texinfo/texinfo.txi(,9915) 
../texinfo/texinfo.txi(,9916) @lisp
../texinfo/texinfo.txi(,9917) (make-sparse-keymap) @equiv{} (list 'keymap)
../texinfo/texinfo.txi(,9918) @end lisp
../texinfo/texinfo.txi(,9919) 
../texinfo/texinfo.txi(,9920) @noindent
../texinfo/texinfo.txi(,9921) This indicates that evaluating @code{(make-sparse-keymap)} produces
../texinfo/texinfo.txi(,9922) identical results to evaluating @code{(list 'keymap)}.
../texinfo/texinfo.txi(,9923) 
../texinfo/texinfo.txi(,9924) 
../texinfo/texinfo.txi(,9925) @node Point Glyph
../texinfo/texinfo.txi(,9926) @subsection @code{@@point@{@}} (@point{}): Indicating Point in a Buffer
../texinfo/texinfo.txi(,9927) @cindex Point, indicating in a buffer
../texinfo/texinfo.txi(,9928) @findex point
../texinfo/texinfo.txi(,9929) 
../texinfo/texinfo.txi(,9930) Sometimes you need to show an example of text in an Emacs buffer.  In
../texinfo/texinfo.txi(,9931) such examples, the convention is to include the entire contents of the
../texinfo/texinfo.txi(,9932) buffer in question between two lines of dashes containing the buffer
../texinfo/texinfo.txi(,9933) name.@refill
../texinfo/texinfo.txi(,9934) 
../texinfo/texinfo.txi(,9935) You can use the @samp{@@point@{@}} command to show the location of point
../texinfo/texinfo.txi(,9936) in the text in the buffer.  (The symbol for point, of course, is not
../texinfo/texinfo.txi(,9937) part of the text in the buffer; it indicates the place @emph{between}
../texinfo/texinfo.txi(,9938) two characters where point is located.)@refill
../texinfo/texinfo.txi(,9939) 
../texinfo/texinfo.txi(,9945) The @code{@@point@{@}} command is displayed as @samp{@point{}} in Info
../texinfo/texinfo.txi(,9946) and as a small five pointed star in the printed output.@refill
../texinfo/texinfo.txi(,9948) 
../texinfo/texinfo.txi(,9949) The following example shows the contents of buffer @file{foo} before
../texinfo/texinfo.txi(,9950) and after evaluating a Lisp command to insert the word @code{changed}.@refill
../texinfo/texinfo.txi(,9951) 
../texinfo/texinfo.txi(,9952) @example
../texinfo/texinfo.txi(,9953) @group
../texinfo/texinfo.txi(,9954) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9955) This is the @point{}contents of foo.
../texinfo/texinfo.txi(,9956) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9957) 
../texinfo/texinfo.txi(,9958) @end group
../texinfo/texinfo.txi(,9959) @end example
../texinfo/texinfo.txi(,9960) 
../texinfo/texinfo.txi(,9961) @example
../texinfo/texinfo.txi(,9962) @group
../texinfo/texinfo.txi(,9963) (insert "changed ")
../texinfo/texinfo.txi(,9964)      @result{} nil
../texinfo/texinfo.txi(,9965) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9966) This is the changed @point{}contents of foo.
../texinfo/texinfo.txi(,9967) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9968) 
../texinfo/texinfo.txi(,9969) @end group
../texinfo/texinfo.txi(,9970) @end example
../texinfo/texinfo.txi(,9971) 
../texinfo/texinfo.txi(,9972) In a Texinfo source file, the example is written like this:@refill
../texinfo/texinfo.txi(,9973) 
../texinfo/texinfo.txi(,9974) @example
../texinfo/texinfo.txi(,9975) @@example
../texinfo/texinfo.txi(,9976) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9977) This is the @@point@{@}contents of foo.
../texinfo/texinfo.txi(,9978) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9979) 
../texinfo/texinfo.txi(,9980) (insert "changed ")
../texinfo/texinfo.txi(,9981)      @@result@{@} nil
../texinfo/texinfo.txi(,9982) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9983) This is the changed @@point@{@}contents of foo.
../texinfo/texinfo.txi(,9984) ---------- Buffer: foo ----------
../texinfo/texinfo.txi(,9985) @@end example
../texinfo/texinfo.txi(,9986) @end example
../texinfo/texinfo.txi(,9987) 
../texinfo/texinfo.txi(,9988) 
../texinfo/texinfo.txi(,9989) @node Footnotes
../texinfo/texinfo.txi(,9990) @section Footnotes
../texinfo/texinfo.txi(,9991) @cindex Footnotes
../texinfo/texinfo.txi(,9992) @findex footnote
../texinfo/texinfo.txi(,9993) 
../texinfo/texinfo.txi(,9994) A @dfn{footnote} is for a reference that documents or elucidates the
../texinfo/texinfo.txi(,9995) primary text.@footnote{A footnote should complement or expand upon
../texinfo/texinfo.txi(,9996) the primary text, but a reader should not need to read a footnote to
../texinfo/texinfo.txi(,9997) understand the primary text.  For a thorough discussion of footnotes,
../texinfo/texinfo.txi(,9998) see @cite{The Chicago Manual of Style}, which is published by the
../texinfo/texinfo.txi(,9999) University of Chicago Press.}
../texinfo/texinfo.txi(,10000) 
../texinfo/texinfo.txi(,10001) @menu
../texinfo/texinfo.txi(,10002) * Footnote Commands::           How to write a footnote in Texinfo.
../texinfo/texinfo.txi(,10003) * Footnote Styles::             Controlling how footnotes appear in Info.
../texinfo/texinfo.txi(,10004) @end menu
../texinfo/texinfo.txi(,10005) 
../texinfo/texinfo.txi(,10006) 
../texinfo/texinfo.txi(,10007) @node Footnote Commands
../texinfo/texinfo.txi(,10008) @subsection Footnote Commands
../texinfo/texinfo.txi(,10009) 
../texinfo/texinfo.txi(,10010) In Texinfo, footnotes are created with the @code{@@footnote} command.
../texinfo/texinfo.txi(,10011) This command is followed immediately by a left brace, then by the text
../texinfo/texinfo.txi(,10012) of the footnote, and then by a terminating right brace.  Footnotes may
../texinfo/texinfo.txi(,10013) be of any length (they will be broken across pages if necessary), but
../texinfo/texinfo.txi(,10014) are usually short.  The template is:
../texinfo/texinfo.txi(,10015) 
../texinfo/texinfo.txi(,10016) @example
../texinfo/texinfo.txi(,10017) ordinary text@@footnote@{@var{text of footnote}@}
../texinfo/texinfo.txi(,10018) @end example
../texinfo/texinfo.txi(,10019) 
../texinfo/texinfo.txi(,10020) As shown here, the @code{@@footnote} command should come right after the
../texinfo/texinfo.txi(,10021) text being footnoted, with no intervening space; otherwise, the footnote
../texinfo/texinfo.txi(,10022) marker might end up starting a line.
../texinfo/texinfo.txi(,10023) 
../texinfo/texinfo.txi(,10024) For example, this clause is followed by a sample footnote@footnote{Here
../texinfo/texinfo.txi(,10025) is the sample footnote.}; in the Texinfo source, it looks like
../texinfo/texinfo.txi(,10026) this:
../texinfo/texinfo.txi(,10027) 
../texinfo/texinfo.txi(,10028) @example
../texinfo/texinfo.txi(,10029) @dots{}a sample footnote@@footnote@{Here is the sample
../texinfo/texinfo.txi(,10030) footnote.@}; in the Texinfo source@dots{}
../texinfo/texinfo.txi(,10031) @end example
../texinfo/texinfo.txi(,10032) 
../texinfo/texinfo.txi(,10033) As you can see, the source includes two punctuation marks next to each
../texinfo/texinfo.txi(,10034) other; in this case, @samp{.@};} is the sequence.  This is normal (the
../texinfo/texinfo.txi(,10035) first ends the footnote and the second belongs to the sentence being
../texinfo/texinfo.txi(,10036) footnoted), so don't worry that it looks odd.
../texinfo/texinfo.txi(,10037) 
../texinfo/texinfo.txi(,10038) In a printed manual or book, the reference mark for a footnote is a
../texinfo/texinfo.txi(,10039) small, superscripted number; the text of the footnote appears at the
../texinfo/texinfo.txi(,10040) bottom of the page, below a horizontal line.
../texinfo/texinfo.txi(,10041) 
../texinfo/texinfo.txi(,10042) In Info, the reference mark for a footnote is a pair of parentheses
../texinfo/texinfo.txi(,10043) with the footnote number between them, like this: @samp{(1)}.  The
../texinfo/texinfo.txi(,10044) reference mark is followed by a cross-reference link to the footnote's
../texinfo/texinfo.txi(,10045) text.
../texinfo/texinfo.txi(,10046) 
../texinfo/texinfo.txi(,10047) In the HTML output, footnote references are marked with a small,
../texinfo/texinfo.txi(,10048) superscripted number which is rendered as a hypertext link to the
../texinfo/texinfo.txi(,10049) footnote text.
../texinfo/texinfo.txi(,10050) 
../texinfo/texinfo.txi(,10051) By the way, footnotes in the argument of an @code{@@item} command for a
../texinfo/texinfo.txi(,10052) @code{@@table} must be on the same line as the @code{@@item}
../texinfo/texinfo.txi(,10053) (as usual).  @xref{Two-column Tables}.
../texinfo/texinfo.txi(,10054) 
../texinfo/texinfo.txi(,10055) 
../texinfo/texinfo.txi(,10056) @node Footnote Styles
../texinfo/texinfo.txi(,10057) @subsection Footnote Styles
../texinfo/texinfo.txi(,10058) 
../texinfo/texinfo.txi(,10059) Info has two footnote styles, which determine where the text of the
../texinfo/texinfo.txi(,10060) footnote is located:@refill
../texinfo/texinfo.txi(,10061) 
../texinfo/texinfo.txi(,10062) @itemize @bullet
../texinfo/texinfo.txi(,10063) @cindex @samp{@r{End}} node footnote style
../texinfo/texinfo.txi(,10064) @item
../texinfo/texinfo.txi(,10065) In the `End' node style, all the footnotes for a single node
../texinfo/texinfo.txi(,10066) are placed at the end of that node.  The footnotes are separated from
../texinfo/texinfo.txi(,10067) the rest of the node by a line of dashes with the word
../texinfo/texinfo.txi(,10068) @samp{Footnotes} within it.  Each footnote begins with an
../texinfo/texinfo.txi(,10069) @samp{(@var{n})} reference mark.@refill
../texinfo/texinfo.txi(,10070) 
../texinfo/texinfo.txi(,10071) @need 700
../texinfo/texinfo.txi(,10072) @noindent
../texinfo/texinfo.txi(,10073) Here is an example of a single footnote in the end of node style:@refill
../texinfo/texinfo.txi(,10074) 
../texinfo/texinfo.txi(,10075) @example
../texinfo/texinfo.txi(,10076) @group
../texinfo/texinfo.txi(,10077)  --------- Footnotes ---------
../texinfo/texinfo.txi(,10078) 
../texinfo/texinfo.txi(,10079) (1)  Here is a sample footnote.
../texinfo/texinfo.txi(,10080) @end group
../texinfo/texinfo.txi(,10081) @end example
../texinfo/texinfo.txi(,10082) 
../texinfo/texinfo.txi(,10083) @cindex @samp{@r{Separate}} footnote style
../texinfo/texinfo.txi(,10084) @item
../texinfo/texinfo.txi(,10085) In the `Separate' node style, all the footnotes for a single
../texinfo/texinfo.txi(,10086) node are placed in an automatically constructed node of
../texinfo/texinfo.txi(,10087) their own.  In this style, a ``footnote reference'' follows
../texinfo/texinfo.txi(,10088) each @samp{(@var{n})} reference mark in the body of the
../texinfo/texinfo.txi(,10089) node.  The footnote reference is actually a cross reference
../texinfo/texinfo.txi(,10090) which you use to reach the footnote node.@refill
../texinfo/texinfo.txi(,10091) 
../texinfo/texinfo.txi(,10092) The name of the node with the footnotes is constructed
../texinfo/texinfo.txi(,10093) by appending @w{@samp{-Footnotes}} to the name of the node
../texinfo/texinfo.txi(,10094) that contains the footnotes. (Consequently, the footnotes'
../texinfo/texinfo.txi(,10095) node for the @file{Footnotes} node is
../texinfo/texinfo.txi(,10096) @w{@file{Footnotes-Footnotes}}!)  The footnotes' node has an
../texinfo/texinfo.txi(,10097) `Up' node pointer that leads back to its parent node.@refill
../texinfo/texinfo.txi(,10098) 
../texinfo/texinfo.txi(,10099) @noindent
../texinfo/texinfo.txi(,10100) Here is how the first footnote in this manual looks after being
../texinfo/texinfo.txi(,10101) formatted for Info in the separate node style:@refill
../texinfo/texinfo.txi(,10102) 
../texinfo/texinfo.txi(,10103) @smallexample
../texinfo/texinfo.txi(,10104) @group
../texinfo/texinfo.txi(,10105) File: texinfo.info  Node: Overview-Footnotes, Up: Overview
../texinfo/texinfo.txi(,10106) 
../texinfo/texinfo.txi(,10107) (1) The first syllable of "Texinfo" is pronounced like "speck", not
../texinfo/texinfo.txi(,10108) "hex". @dots{}
../texinfo/texinfo.txi(,10109) @end group
../texinfo/texinfo.txi(,10110) @end smallexample
../texinfo/texinfo.txi(,10111) @end itemize
../texinfo/texinfo.txi(,10112) 
../texinfo/texinfo.txi(,10113) A Texinfo file may be formatted into an Info file with either footnote
../texinfo/texinfo.txi(,10114) style.@refill
../texinfo/texinfo.txi(,10115) 
../texinfo/texinfo.txi(,10116) @findex footnotestyle
../texinfo/texinfo.txi(,10117) Use the @code{@@footnotestyle} command to specify an Info file's
../texinfo/texinfo.txi(,10118) footnote style.  Write this command at the beginning of a line followed
../texinfo/texinfo.txi(,10119) by an argument, either @samp{end} for the end node style or
../texinfo/texinfo.txi(,10120) @samp{separate} for the separate node style.
../texinfo/texinfo.txi(,10121) 
../texinfo/texinfo.txi(,10122) @need 700
../texinfo/texinfo.txi(,10123) For example,
../texinfo/texinfo.txi(,10124) 
../texinfo/texinfo.txi(,10125) @example
../texinfo/texinfo.txi(,10126) @@footnotestyle end
../texinfo/texinfo.txi(,10127) @end example
../texinfo/texinfo.txi(,10128) @noindent
../texinfo/texinfo.txi(,10129) or
../texinfo/texinfo.txi(,10130) @example
../texinfo/texinfo.txi(,10131) @@footnotestyle separate
../texinfo/texinfo.txi(,10132) @end example
../texinfo/texinfo.txi(,10133) 
../texinfo/texinfo.txi(,10134) Write an @code{@@footnotestyle} command before or shortly after the
../texinfo/texinfo.txi(,10135) end-of-header line at the beginning of a Texinfo file.  (If you
../texinfo/texinfo.txi(,10136) include the @code{@@footnotestyle} command between the start-of-header
../texinfo/texinfo.txi(,10137) and end-of-header lines, the region formatting commands will format
../texinfo/texinfo.txi(,10138) footnotes as specified.)@refill
../texinfo/texinfo.txi(,10139) 
../texinfo/texinfo.txi(,10140) If you do not specify a footnote style, the formatting commands use
../texinfo/texinfo.txi(,10141) their default style.  Currently, @code{texinfo-format-buffer} and
../texinfo/texinfo.txi(,10142) @code{texinfo-format-region} use the `separate' style and
../texinfo/texinfo.txi(,10143) @code{makeinfo} uses the `end' style.@refill
../texinfo/texinfo.txi(,10144) 
../texinfo/texinfo.txi(,10145) @c !!! note: makeinfo's --footnote-style option overrides footnotestyle
../texinfo/texinfo.txi(,10181) This chapter contains two footnotes.@refill
../texinfo/texinfo.txi(,10183) 
../texinfo/texinfo.txi(,10184) 
../texinfo/texinfo.txi(,10185) @c this should be described with figures when we have them
../texinfo/texinfo.txi(,10186) @c perhaps in the quotation/example chapter.
../texinfo/texinfo.txi(,10187) @node Images
../texinfo/texinfo.txi(,10188) @section Inserting Images
../texinfo/texinfo.txi(,10189) 
../texinfo/texinfo.txi(,10190) @cindex Images, inserting
../texinfo/texinfo.txi(,10191) @cindex Pictures, inserting
../texinfo/texinfo.txi(,10192) @findex image
../texinfo/texinfo.txi(,10193) 
../texinfo/texinfo.txi(,10194) You can insert an image given in an external file with the
../texinfo/texinfo.txi(,10195) @code{@@image} command:
../texinfo/texinfo.txi(,10196) 
../texinfo/texinfo.txi(,10197) @example
../texinfo/texinfo.txi(,10198) @@image@{@var{filename}, @r{[}@var{width}@r{]}, @r{[}@var{height}@r{]}, @r{[}@var{alttext}@r{]}, @r{[}@var{extension}@r{]}@}
../texinfo/texinfo.txi(,10199) @end example
../texinfo/texinfo.txi(,10200) 
../texinfo/texinfo.txi(,10201) @cindex Formats for images
../texinfo/texinfo.txi(,10202) @cindex Image formats
../texinfo/texinfo.txi(,10203) The @var{filename} argument is mandatory, and must not have an
../texinfo/texinfo.txi(,10204) extension, because the different processors support different formats:
../texinfo/texinfo.txi(,10205) @itemize @bullet
../texinfo/texinfo.txi(,10206) @item
../texinfo/texinfo.txi(,10207) @TeX{} reads the file @file{@var{filename}.eps} (Encapsulated PostScript
../texinfo/texinfo.txi(,10208) format).
../texinfo/texinfo.txi(,10209) @item
../texinfo/texinfo.txi(,10210) @pindex pdftex@r{, and images}
../texinfo/texinfo.txi(,10211) PDF@TeX{} reads @file{@var{filename}.pdf} (Adobe's Portable Document Format).
../texinfo/texinfo.txi(,10212) @item
../texinfo/texinfo.txi(,10213) @code{makeinfo} uses @file{@var{filename}.txt} verbatim for
../texinfo/texinfo.txi(,10214) Info output (more or less as if it was an @code{@@example}).
../texinfo/texinfo.txi(,10215) @item
../texinfo/texinfo.txi(,10216) @code{makeinfo}
../texinfo/texinfo.txi(,10217) uses the optional fifth argument to @code{@@image} for the extension if
../texinfo/texinfo.txi(,10218) you supply it.  For example:
../texinfo/texinfo.txi(,10219) 
../texinfo/texinfo.txi(,10220) @pindex XPM image format
../texinfo/texinfo.txi(,10221) @example
../texinfo/texinfo.txi(,10222) @@image@{foo,,,,xpm@}
../texinfo/texinfo.txi(,10223) @end example
../texinfo/texinfo.txi(,10224) 
../texinfo/texinfo.txi(,10225) @noindent
../texinfo/texinfo.txi(,10226) will cause @samp{makeinfo --html} to try @file{foo.xpm}.
../texinfo/texinfo.txi(,10227) 
../texinfo/texinfo.txi(,10228) @cindex GIF, unsupported due to patents
../texinfo/texinfo.txi(,10229) @cindex PNG image format
../texinfo/texinfo.txi(,10230) @cindex JPG image format
../texinfo/texinfo.txi(,10231) If you do not supply the optional fifth argument, @samp{makeinfo
../texinfo/texinfo.txi(,10232) ---html} first tries @file{@var{filename}.png}; if that does not exist,
../texinfo/texinfo.txi(,10233) it tries @file{@var{filename}.jpg}.  If that does not exist either, it
../texinfo/texinfo.txi(,10234) complains.  (We cannot support GIF format directly due to software
../texinfo/texinfo.txi(,10235) patents.)
../texinfo/texinfo.txi(,10236) @end itemize
../texinfo/texinfo.txi(,10237) 
../texinfo/texinfo.txi(,10238) @cindex Width of images
../texinfo/texinfo.txi(,10239) @cindex Height of images
../texinfo/texinfo.txi(,10240) @cindex Aspect ratio of images
../texinfo/texinfo.txi(,10241) @cindex Distorting images
../texinfo/texinfo.txi(,10242) The optional @var{width} and @var{height} arguments specify the size to
../texinfo/texinfo.txi(,10243) scale the image to (they are ignored for Info output).  If neither is
../texinfo/texinfo.txi(,10244) specified, the image is presented in its natural size (given in the
../texinfo/texinfo.txi(,10245) file); if only one is specified, the other is scaled proportionately;
../texinfo/texinfo.txi(,10246) and if both are specified, both are respected, thus possibly distorting
../texinfo/texinfo.txi(,10247) the original image by changing its aspect ratio.
../texinfo/texinfo.txi(,10248) 
../texinfo/texinfo.txi(,10249) @cindex Dimensions and image sizes
../texinfo/texinfo.txi(,10250) The @var{width} and @var{height} may be specified using any valid @TeX{}
../texinfo/texinfo.txi(,10251) dimension, namely:
../texinfo/texinfo.txi(,10252) 
../texinfo/texinfo.txi(,10253) @table @asis
../texinfo/texinfo.txi(,10254) @item pt
../texinfo/texinfo.txi(,10255) @cindex Points (dimension)
../texinfo/texinfo.txi(,10256) point (72.27pt = 1in)
../texinfo/texinfo.txi(,10257) @item pc
../texinfo/texinfo.txi(,10258) @cindex Picas
../texinfo/texinfo.txi(,10259) pica (1pc = 12pt)
../texinfo/texinfo.txi(,10260) @item bp
../texinfo/texinfo.txi(,10261) @cindex Big points
../texinfo/texinfo.txi(,10262) big point (72bp = 1in)
../texinfo/texinfo.txi(,10263) @item in
../texinfo/texinfo.txi(,10264) @cindex Inches
../texinfo/texinfo.txi(,10265) inch
../texinfo/texinfo.txi(,10266) @item cm
../texinfo/texinfo.txi(,10267) @cindex Centimeters
../texinfo/texinfo.txi(,10268) centimeter (2.54cm = 1in)
../texinfo/texinfo.txi(,10269) @item mm
../texinfo/texinfo.txi(,10270) @cindex Millimeters
../texinfo/texinfo.txi(,10271) millimeter (10mm = 1cm)
../texinfo/texinfo.txi(,10272) @item dd
../texinfo/texinfo.txi(,10273) @cindex Did@^ot points
../texinfo/texinfo.txi(,10274) did@^ot point (1157dd = 1238pt)
../texinfo/texinfo.txi(,10275) @item cc
../texinfo/texinfo.txi(,10276) @cindex Ciceros
../texinfo/texinfo.txi(,10277) cicero (1cc = 12dd)
../texinfo/texinfo.txi(,10278) @item sp
../texinfo/texinfo.txi(,10279) @cindex Scaled points
../texinfo/texinfo.txi(,10280) scaled point (65536sp = 1pt)
../texinfo/texinfo.txi(,10281) @end table
../texinfo/texinfo.txi(,10282) 
../texinfo/texinfo.txi(,10283) @pindex ridt.eps
../texinfo/texinfo.txi(,10284) For example, the following will scale a file @file{ridt.eps} to one
../texinfo/texinfo.txi(,10285) inch vertically, with the width scaled proportionately:
../texinfo/texinfo.txi(,10286) 
../texinfo/texinfo.txi(,10287) @example
../texinfo/texinfo.txi(,10288) @@image@{ridt,,1in@}
../texinfo/texinfo.txi(,10289) @end example
../texinfo/texinfo.txi(,10290) 
../texinfo/texinfo.txi(,10291) @pindex epsf.tex
../texinfo/texinfo.txi(,10292) For @code{@@image} to work with @TeX{}, the file @file{epsf.tex} must be
../texinfo/texinfo.txi(,10293) installed somewhere that @TeX{} can find it.  (The standard location is
../texinfo/texinfo.txi(,10294) @file{@var{texmf}/tex/generic/dvips/epsf.tex}, where @var{texmf} is a
../texinfo/texinfo.txi(,10295) root of your @TeX{} directory tree.)  This file is included in the
../texinfo/texinfo.txi(,10296) Texinfo distribution and is also available from
../texinfo/texinfo.txi(,10297) @uref{ftp://tug.org/tex/epsf.tex}, among other places.
../texinfo/texinfo.txi(,10298) 
../texinfo/texinfo.txi(,10299) @code{@@image} can be used within a line as well as for displayed
../texinfo/texinfo.txi(,10300) figures.  Therefore, if you intend it to be displayed, be sure to leave
../texinfo/texinfo.txi(,10301) a blank line before the command, or the output will run into the
../texinfo/texinfo.txi(,10302) preceding text.
../texinfo/texinfo.txi(,10303) 
../texinfo/texinfo.txi(,10304) @cindex alt attribute for images
../texinfo/texinfo.txi(,10305) @cindex alternate text for images
../texinfo/texinfo.txi(,10306) When producing html, @code{makeinfo} sets the @dfn{alt attribute} for
../texinfo/texinfo.txi(,10307) inline images to the optional fourth argument to @code{@@image}, if
../texinfo/texinfo.txi(,10308) supplied.  If not supplied, @code{makeinfo} uses the full file name of
../texinfo/texinfo.txi(,10309) the image being displayed.
../texinfo/texinfo.txi(,10310) 
../texinfo/texinfo.txi(,10311) 
../texinfo/texinfo.txi(,10312) @node Breaks
../texinfo/texinfo.txi(,10313) @chapter Making and Preventing Breaks
../texinfo/texinfo.txi(,10314) @cindex Making line and page breaks
../texinfo/texinfo.txi(,10315) @cindex Preventing line and page breaks
../texinfo/texinfo.txi(,10316) 
../texinfo/texinfo.txi(,10317) @cindex Line breaks
../texinfo/texinfo.txi(,10318) Usually, a Texinfo file is processed both by @TeX{} and by one of the
../texinfo/texinfo.txi(,10319) Info formatting commands.  Line, paragraph, or page breaks sometimes
../texinfo/texinfo.txi(,10320) occur in the `wrong' place in one or other form of output.  You must
../texinfo/texinfo.txi(,10321) ensure that text looks right both in the printed manual and in the
../texinfo/texinfo.txi(,10322) Info file.
../texinfo/texinfo.txi(,10323) 
../texinfo/texinfo.txi(,10324) @cindex White space, excessive
../texinfo/texinfo.txi(,10325) @cindex Page breaks
../texinfo/texinfo.txi(,10326) For example, in a printed manual, page breaks may occur awkwardly in
../texinfo/texinfo.txi(,10327) the middle of an example; to prevent this, you can hold text together
../texinfo/texinfo.txi(,10328) using a grouping command that keeps the text from being split across
../texinfo/texinfo.txi(,10329) two pages.  Conversely, you may want to force a page break where none
../texinfo/texinfo.txi(,10330) would occur normally.  Fortunately, problems like these do not often
../texinfo/texinfo.txi(,10331) arise.  When they do, use the break, break prevention, or pagination
../texinfo/texinfo.txi(,10332) commands.
../texinfo/texinfo.txi(,10333) 
../texinfo/texinfo.txi(,10334) @menu
../texinfo/texinfo.txi(,10335) * Break Commands::              Cause and prevent splits.
../texinfo/texinfo.txi(,10336) * Line Breaks::                 How to force a single line to use two lines.
../texinfo/texinfo.txi(,10337) * - and hyphenation::           How to tell @TeX{} about hyphenation points.
../texinfo/texinfo.txi(,10338) * w::                           How to prevent unwanted line breaks.
../texinfo/texinfo.txi(,10339) * sp::                          How to insert blank lines.
../texinfo/texinfo.txi(,10340) * page::                        How to force the start of a new page.
../texinfo/texinfo.txi(,10341) * group::                       How to prevent unwanted page breaks.
../texinfo/texinfo.txi(,10342) * need::                        Another way to prevent unwanted page breaks.
../texinfo/texinfo.txi(,10343) @end menu
../texinfo/texinfo.txi(,10344) 
../texinfo/texinfo.txi(,10345) 
../texinfo/texinfo.txi(,10346) @node Break Commands, Line Breaks, Breaks, Breaks
../texinfo/texinfo.txi(,10348) @heading Break Commands
../texinfo/texinfo.txi(,10350) 
../texinfo/texinfo.txi(,10351) The break commands create or allow line and paragraph breaks:@refill
../texinfo/texinfo.txi(,10352) 
../texinfo/texinfo.txi(,10353) @table @code
../texinfo/texinfo.txi(,10354) @item @@*
../texinfo/texinfo.txi(,10355) Force a line break.
../texinfo/texinfo.txi(,10356) 
../texinfo/texinfo.txi(,10357) @item @@sp @var{n}
../texinfo/texinfo.txi(,10358) Skip @var{n} blank lines.@refill
../texinfo/texinfo.txi(,10359) 
../texinfo/texinfo.txi(,10360) @item @@-
../texinfo/texinfo.txi(,10361) Insert a discretionary hyphen.
../texinfo/texinfo.txi(,10362) 
../texinfo/texinfo.txi(,10363) @item @@hyphenation@{@var{hy-phen-a-ted words}@}
../texinfo/texinfo.txi(,10364) Define hyphen points in @var{hy-phen-a-ted words}.
../texinfo/texinfo.txi(,10365) @end table
../texinfo/texinfo.txi(,10366) 
../texinfo/texinfo.txi(,10367) The line-break-prevention command holds text together all on one
../texinfo/texinfo.txi(,10368) line:@refill
../texinfo/texinfo.txi(,10369) 
../texinfo/texinfo.txi(,10370) @table @code
../texinfo/texinfo.txi(,10371) @item @@w@{@var{text}@}
../texinfo/texinfo.txi(,10372) Prevent @var{text} from being split and hyphenated across two lines.@refill
../texinfo/texinfo.txi(,10373) @end table
../texinfo/texinfo.txi(,10377) 
../texinfo/texinfo.txi(,10378) The pagination commands apply only to printed output, since Info
../texinfo/texinfo.txi(,10379) files do not have pages.@refill
../texinfo/texinfo.txi(,10380) 
../texinfo/texinfo.txi(,10381) @table @code
../texinfo/texinfo.txi(,10382) @item @@page
../texinfo/texinfo.txi(,10383) Start a new page in the printed manual.@refill
../texinfo/texinfo.txi(,10384) 
../texinfo/texinfo.txi(,10385) @item @@group
../texinfo/texinfo.txi(,10386) Hold text together that must appear on one printed page.@refill
../texinfo/texinfo.txi(,10387) 
../texinfo/texinfo.txi(,10388) @item @@need @var{mils}
../texinfo/texinfo.txi(,10389) Start a new printed page if not enough space on this one.@refill
../texinfo/texinfo.txi(,10390) @end table
../texinfo/texinfo.txi(,10391) 
../texinfo/texinfo.txi(,10392) @node Line Breaks
../texinfo/texinfo.txi(,10393) @section @code{@@*}: Generate Line Breaks
../texinfo/texinfo.txi(,10394) @findex * @r{(force line break)}
../texinfo/texinfo.txi(,10395) @cindex Line breaks
../texinfo/texinfo.txi(,10396) @cindex Breaks in a line
../texinfo/texinfo.txi(,10397) 
../texinfo/texinfo.txi(,10398) The @code{@@*} command forces a line break in both the printed manual and
../texinfo/texinfo.txi(,10399) in Info.@refill
../texinfo/texinfo.txi(,10400) 
../texinfo/texinfo.txi(,10401) @need 700
../texinfo/texinfo.txi(,10402) For example,
../texinfo/texinfo.txi(,10403) 
../texinfo/texinfo.txi(,10404) @example
../texinfo/texinfo.txi(,10405) This line @@* is broken @@*in two places.
../texinfo/texinfo.txi(,10406) @end example
../texinfo/texinfo.txi(,10407) 
../texinfo/texinfo.txi(,10408) @noindent
../texinfo/texinfo.txi(,10409) produces
../texinfo/texinfo.txi(,10410) 
../texinfo/texinfo.txi(,10411) @example
../texinfo/texinfo.txi(,10412) @group
../texinfo/texinfo.txi(,10413) This line
../texinfo/texinfo.txi(,10414)  is broken
../texinfo/texinfo.txi(,10415) in two places.
../texinfo/texinfo.txi(,10416) @end group
../texinfo/texinfo.txi(,10417) @end example
../texinfo/texinfo.txi(,10418) 
../texinfo/texinfo.txi(,10419) @noindent
../texinfo/texinfo.txi(,10420) (Note that the space after the first @code{@@*} command is faithfully
../texinfo/texinfo.txi(,10421) carried down to the next line.)@refill
../texinfo/texinfo.txi(,10422) 
../texinfo/texinfo.txi(,10423) @need 800
../texinfo/texinfo.txi(,10424) The @code{@@*} command is often used in a file's copyright page:@refill
../texinfo/texinfo.txi(,10425) 
../texinfo/texinfo.txi(,10426) @example
../texinfo/texinfo.txi(,10427) @group
../texinfo/texinfo.txi(,10428) This is edition 2.0 of the Texinfo documentation,@@*
../texinfo/texinfo.txi(,10429) and is for @dots{}
../texinfo/texinfo.txi(,10430) @end group
../texinfo/texinfo.txi(,10431) @end example
../texinfo/texinfo.txi(,10432) 
../texinfo/texinfo.txi(,10433) @noindent
../texinfo/texinfo.txi(,10434) In this case, the @code{@@*} command keeps @TeX{} from stretching the
../texinfo/texinfo.txi(,10435) line across the whole page in an ugly manner.@refill
../texinfo/texinfo.txi(,10436) 
../texinfo/texinfo.txi(,10437) @quotation
../texinfo/texinfo.txi(,10438) @strong{Please note:} Do not write braces after an @code{@@*} command;
../texinfo/texinfo.txi(,10439) they are not needed.@refill
../texinfo/texinfo.txi(,10440) 
../texinfo/texinfo.txi(,10441) Do not write an @code{@@refill} command at the end of a paragraph
../texinfo/texinfo.txi(,10442) containing an @code{@@*} command; it will cause the paragraph to be
../texinfo/texinfo.txi(,10443) refilled after the line break occurs, negating the effect of the line
../texinfo/texinfo.txi(,10444) break.@refill
../texinfo/texinfo.txi(,10445) @end quotation
../texinfo/texinfo.txi(,10446) 
../texinfo/texinfo.txi(,10447) 
../texinfo/texinfo.txi(,10448) @node - and hyphenation
../texinfo/texinfo.txi(,10449) @section @code{@@-} and @code{@@hyphenation}: Helping @TeX{} hyphenate
../texinfo/texinfo.txi(,10450) 
../texinfo/texinfo.txi(,10451) @findex - @r{(discretionary hyphen)}
../texinfo/texinfo.txi(,10452) @findex hyphenation
../texinfo/texinfo.txi(,10453) @cindex Hyphenation, helping @TeX{} do
../texinfo/texinfo.txi(,10454) @cindex Fine-tuning, and hyphenation
../texinfo/texinfo.txi(,10455) 
../texinfo/texinfo.txi(,10456) Although @TeX{}'s hyphenation algorithm is generally pretty good, it
../texinfo/texinfo.txi(,10457) does miss useful hyphenation points from time to time.  (Or, far more
../texinfo/texinfo.txi(,10458) rarely, insert an incorrect hyphenation.)  So, for documents with an
../texinfo/texinfo.txi(,10459) unusual vocabulary or when fine-tuning for a printed edition, you may
../texinfo/texinfo.txi(,10460) wish to help @TeX{} out.  Texinfo supports two commands for this:
../texinfo/texinfo.txi(,10461) 
../texinfo/texinfo.txi(,10462) @table @code
../texinfo/texinfo.txi(,10463) @item @@-
../texinfo/texinfo.txi(,10464) Insert a discretionary hyphen, i.e., a place where @TeX{} can (but does
../texinfo/texinfo.txi(,10465) not have to) hyphenate.  This is especially useful when you notice an
../texinfo/texinfo.txi(,10466) overfull hbox is due to @TeX{} missing a hyphenation (@pxref{Overfull
../texinfo/texinfo.txi(,10467) hboxes}).  @TeX{} will not insert any hyphenation points itself into a
../texinfo/texinfo.txi(,10468) word containing @code{@@-}.
../texinfo/texinfo.txi(,10469) 
../texinfo/texinfo.txi(,10470) @item @@hyphenation@{@var{hy-phen-a-ted words}@}
../texinfo/texinfo.txi(,10471) Tell @TeX{} how to hyphenate @var{hy-phen-a-ted words}.  As shown, you
../texinfo/texinfo.txi(,10472) put a @samp{-} at each hyphenation point.  For example:
../texinfo/texinfo.txi(,10473) @example
../texinfo/texinfo.txi(,10474) @@hyphenation@{man-u-script man-u-scripts@}
../texinfo/texinfo.txi(,10475) @end example
../texinfo/texinfo.txi(,10476) @noindent @TeX{} only uses the specified hyphenation points when the
../texinfo/texinfo.txi(,10477) words match exactly, so give all necessary variants.
../texinfo/texinfo.txi(,10478) @end table
../texinfo/texinfo.txi(,10479) 
../texinfo/texinfo.txi(,10480) Info output is not hyphenated, so these commands have no effect there.
../texinfo/texinfo.txi(,10481) 
../texinfo/texinfo.txi(,10482) @node w
../texinfo/texinfo.txi(,10483) @section @code{@@w}@{@var{text}@}: Prevent Line Breaks
../texinfo/texinfo.txi(,10484) @findex w @r{(prevent line break)}
../texinfo/texinfo.txi(,10485) @cindex Line breaks, preventing
../texinfo/texinfo.txi(,10486) @cindex Hyphenation, preventing
../texinfo/texinfo.txi(,10487) 
../texinfo/texinfo.txi(,10488) @code{@@w@{@var{text}@}} outputs @var{text} and prohibits line breaks
../texinfo/texinfo.txi(,10489) within @var{text}.@refill
../texinfo/texinfo.txi(,10490) 
../texinfo/texinfo.txi(,10491) You can use the @code{@@w} command to prevent @TeX{} from automatically
../texinfo/texinfo.txi(,10492) hyphenating a long name or phrase that happens to fall near the end of a
../texinfo/texinfo.txi(,10493) line.  For example:
../texinfo/texinfo.txi(,10494) 
../texinfo/texinfo.txi(,10495) @example
../texinfo/texinfo.txi(,10496) You can copy GNU software from @@w@{@@samp@{ftp.gnu.org@}@}.
../texinfo/texinfo.txi(,10497) @end example
../texinfo/texinfo.txi(,10498) 
../texinfo/texinfo.txi(,10499) @noindent
../texinfo/texinfo.txi(,10500) produces
../texinfo/texinfo.txi(,10501) 
../texinfo/texinfo.txi(,10502) @quotation
../texinfo/texinfo.txi(,10503) You can copy GNU software from @w{@samp{ftp.gnu.org}}.
../texinfo/texinfo.txi(,10504) @end quotation
../texinfo/texinfo.txi(,10505) 
../texinfo/texinfo.txi(,10506) @cindex Non-breakable space
../texinfo/texinfo.txi(,10507) @cindex Unbreakable space
../texinfo/texinfo.txi(,10508) @cindex Tied space
../texinfo/texinfo.txi(,10509) You can also use @code{@@w} to produce a non-breakable space:
../texinfo/texinfo.txi(,10510) 
../texinfo/texinfo.txi(,10511) @example
../texinfo/texinfo.txi(,10512) None of the formatters will break at this@@w@{ @}space.
../texinfo/texinfo.txi(,10513) @end example
../texinfo/texinfo.txi(,10514) 
../texinfo/texinfo.txi(,10515) 
../texinfo/texinfo.txi(,10516) @node sp
../texinfo/texinfo.txi(,10517) @section @code{@@sp} @var{n}: Insert Blank Lines
../texinfo/texinfo.txi(,10518) @findex sp @r{(line spacing)}
../texinfo/texinfo.txi(,10519) @cindex Space, inserting vertical
../texinfo/texinfo.txi(,10520) @cindex Blank lines
../texinfo/texinfo.txi(,10521) @cindex Line spacing
../texinfo/texinfo.txi(,10522) 
../texinfo/texinfo.txi(,10523) A line beginning with and containing only @code{@@sp @var{n}}
../texinfo/texinfo.txi(,10524) generates @var{n} blank lines of space in both the printed manual and
../texinfo/texinfo.txi(,10525) the Info file.  @code{@@sp} also forces a paragraph break.  For
../texinfo/texinfo.txi(,10526) example,
../texinfo/texinfo.txi(,10527) 
../texinfo/texinfo.txi(,10528) @example
../texinfo/texinfo.txi(,10529) @@sp 2
../texinfo/texinfo.txi(,10530) @end example
../texinfo/texinfo.txi(,10531) 
../texinfo/texinfo.txi(,10532) @noindent
../texinfo/texinfo.txi(,10533) generates two blank lines.
../texinfo/texinfo.txi(,10534) 
../texinfo/texinfo.txi(,10535) The @code{@@sp} command is most often used in the title page.@refill
../texinfo/texinfo.txi(,10536) 
../texinfo/texinfo.txi(,10576) 
../texinfo/texinfo.txi(,10577) 
../texinfo/texinfo.txi(,10578) @node page
../texinfo/texinfo.txi(,10579) @section @code{@@page}: Start a New Page
../texinfo/texinfo.txi(,10580) @cindex Page breaks
../texinfo/texinfo.txi(,10581) @findex page
../texinfo/texinfo.txi(,10582) 
../texinfo/texinfo.txi(,10583) A line containing only @code{@@page} starts a new page in a printed
../texinfo/texinfo.txi(,10584) manual.  The command has no effect on Info files since they are not
../texinfo/texinfo.txi(,10585) paginated.  An @code{@@page} command is often used in the @code{@@titlepage}
../texinfo/texinfo.txi(,10586) section of a Texinfo file to start the copyright page.
../texinfo/texinfo.txi(,10587) 
../texinfo/texinfo.txi(,10588) 
../texinfo/texinfo.txi(,10589) @node group, need, page, Breaks
../texinfo/texinfo.txi(,10590) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,10591) @section @code{@@group}: Prevent Page Breaks
../texinfo/texinfo.txi(,10592) @cindex Group (hold text together vertically)
../texinfo/texinfo.txi(,10593) @cindex Holding text together vertically
../texinfo/texinfo.txi(,10594) @cindex Vertically holding text together
../texinfo/texinfo.txi(,10595) @findex group
../texinfo/texinfo.txi(,10596) 
../texinfo/texinfo.txi(,10597) The @code{@@group} command (on a line by itself) is used inside an
../texinfo/texinfo.txi(,10598) @code{@@example} or similar construct to begin an unsplittable vertical
../texinfo/texinfo.txi(,10599) group, which will appear entirely on one page in the printed output.
../texinfo/texinfo.txi(,10600) The group is terminated by a line containing only @code{@@end group}.
../texinfo/texinfo.txi(,10601) These two lines produce no output of their own, and in the Info file
../texinfo/texinfo.txi(,10602) output they have no effect at all.@refill
../texinfo/texinfo.txi(,10603) 
../texinfo/texinfo.txi(,10604) @c Once said that these environments
../texinfo/texinfo.txi(,10605) @c turn off vertical spacing between ``paragraphs''.
../texinfo/texinfo.txi(,10606) @c Also, quotation used to work, but doesn't in texinfo-2.72
../texinfo/texinfo.txi(,10607) Although @code{@@group} would make sense conceptually in a wide
../texinfo/texinfo.txi(,10608) variety of contexts, its current implementation works reliably only
../texinfo/texinfo.txi(,10609) within @code{@@example} and variants, and within @code{@@display},
../texinfo/texinfo.txi(,10610) @code{@@format}, @code{@@flushleft} and @code{@@flushright}.
../texinfo/texinfo.txi(,10611) @xref{Quotations and Examples}.  (What all these commands have in
../texinfo/texinfo.txi(,10612) common is that each line of input produces a line of output.)  In
../texinfo/texinfo.txi(,10613) other contexts, @code{@@group} can cause anomalous vertical
../texinfo/texinfo.txi(,10614) spacing.@refill
../texinfo/texinfo.txi(,10615) 
../texinfo/texinfo.txi(,10616) @need 750
../texinfo/texinfo.txi(,10617) This formatting requirement means that you should write:
../texinfo/texinfo.txi(,10618) 
../texinfo/texinfo.txi(,10619) @example
../texinfo/texinfo.txi(,10620) @group
../texinfo/texinfo.txi(,10621) @@example
../texinfo/texinfo.txi(,10622) @@group
../texinfo/texinfo.txi(,10623) @dots{}
../texinfo/texinfo.txi(,10624) @@end group
../texinfo/texinfo.txi(,10625) @@end example
../texinfo/texinfo.txi(,10626) @end group
../texinfo/texinfo.txi(,10627) @end example
../texinfo/texinfo.txi(,10628) 
../texinfo/texinfo.txi(,10629) @noindent
../texinfo/texinfo.txi(,10630) with the @code{@@group} and @code{@@end group} commands inside the
../texinfo/texinfo.txi(,10631) @code{@@example} and @code{@@end example} commands.
../texinfo/texinfo.txi(,10632) 
../texinfo/texinfo.txi(,10633) The @code{@@group} command is most often used to hold an example
../texinfo/texinfo.txi(,10634) together on one page.  In this Texinfo manual, more than 100 examples
../texinfo/texinfo.txi(,10635) contain text that is enclosed between @code{@@group} and @code{@@end
../texinfo/texinfo.txi(,10636) group}.
../texinfo/texinfo.txi(,10637) 
../texinfo/texinfo.txi(,10638) If you forget to end a group, you may get strange and unfathomable
../texinfo/texinfo.txi(,10639) error messages when you run @TeX{}.  This is because @TeX{} keeps
../texinfo/texinfo.txi(,10640) trying to put the rest of the Texinfo file onto the one page and does
../texinfo/texinfo.txi(,10641) not start to generate error messages until it has processed
../texinfo/texinfo.txi(,10642) considerable text.  It is a good rule of thumb to look for a missing
../texinfo/texinfo.txi(,10643) @code{@@end group} if you get incomprehensible error messages in
../texinfo/texinfo.txi(,10644) @TeX{}.@refill
../texinfo/texinfo.txi(,10645) 
../texinfo/texinfo.txi(,10646) @node need,  , group, Breaks
../texinfo/texinfo.txi(,10647) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,10648) @section @code{@@need @var{mils}}: Prevent Page Breaks
../texinfo/texinfo.txi(,10649) @cindex Need space at page bottom
../texinfo/texinfo.txi(,10650) @findex need
../texinfo/texinfo.txi(,10651) 
../texinfo/texinfo.txi(,10652) A line containing only @code{@@need @var{n}} starts
../texinfo/texinfo.txi(,10653) a new page in a printed manual if fewer than @var{n} mils (thousandths
../texinfo/texinfo.txi(,10654) of an inch) remain on the current page.  Do not use
../texinfo/texinfo.txi(,10655) braces around the argument @var{n}.  The @code{@@need} command has no
../texinfo/texinfo.txi(,10656) effect on Info files since they are not paginated.@refill
../texinfo/texinfo.txi(,10657) 
../texinfo/texinfo.txi(,10658) @need 800
../texinfo/texinfo.txi(,10659) This paragraph is preceded by an @code{@@need} command that tells
../texinfo/texinfo.txi(,10660) @TeX{} to start a new page if fewer than 800 mils (eight-tenths
../texinfo/texinfo.txi(,10661) inch) remain on the page.  It looks like this:@refill
../texinfo/texinfo.txi(,10662) 
../texinfo/texinfo.txi(,10663) @example
../texinfo/texinfo.txi(,10664) @group
../texinfo/texinfo.txi(,10665) @@need 800
../texinfo/texinfo.txi(,10666) This paragraph is preceded by @dots{}
../texinfo/texinfo.txi(,10667) @end group
../texinfo/texinfo.txi(,10668) @end example
../texinfo/texinfo.txi(,10669) 
../texinfo/texinfo.txi(,10670) The @code{@@need} command is useful for preventing orphans (single
../texinfo/texinfo.txi(,10671) lines at the bottoms of printed pages).@refill
../texinfo/texinfo.txi(,10672) 
../texinfo/texinfo.txi(,10673) 
../texinfo/texinfo.txi(,10674) @node Definition Commands
../texinfo/texinfo.txi(,10675) @chapter Definition Commands
../texinfo/texinfo.txi(,10676) @cindex Definition commands
../texinfo/texinfo.txi(,10677) 
../texinfo/texinfo.txi(,10678) The @code{@@deffn} command and the other @dfn{definition commands}
../texinfo/texinfo.txi(,10679) enable you to describe functions, variables, macros, commands, user
../texinfo/texinfo.txi(,10680) options, special forms and other such artifacts in a uniform
../texinfo/texinfo.txi(,10681) format.@refill
../texinfo/texinfo.txi(,10682) 
../texinfo/texinfo.txi(,10683) In the Info file, a definition causes the entity
../texinfo/texinfo.txi(,10684) category---`Function', `Variable', or whatever---to appear at the
../texinfo/texinfo.txi(,10685) beginning of the first line of the definition, followed by the
../texinfo/texinfo.txi(,10686) entity's name and arguments.  In the printed manual, the command
../texinfo/texinfo.txi(,10687) causes @TeX{} to print the entity's name and its arguments on the left
../texinfo/texinfo.txi(,10688) margin and print the category next to the right margin.  In both
../texinfo/texinfo.txi(,10689) output formats, the body of the definition is indented.  Also, the
../texinfo/texinfo.txi(,10690) name of the entity is entered into the appropriate index:
../texinfo/texinfo.txi(,10691) @code{@@deffn} enters the name into the index of functions,
../texinfo/texinfo.txi(,10692) @code{@@defvr} enters it into the index of variables, and so
../texinfo/texinfo.txi(,10693) on.@refill
../texinfo/texinfo.txi(,10694) 
../texinfo/texinfo.txi(,10695) A manual need not and should not contain more than one definition for
../texinfo/texinfo.txi(,10696) a given name.  An appendix containing a summary should use
../texinfo/texinfo.txi(,10697) @code{@@table} rather than the definition commands.@refill
../texinfo/texinfo.txi(,10698) 
../texinfo/texinfo.txi(,10699) @menu
../texinfo/texinfo.txi(,10700) * Def Cmd Template::            How to structure a description using a
../texinfo/texinfo.txi(,10701)                                   definition command.
../texinfo/texinfo.txi(,10702) * Optional Arguments::          How to handle optional and repeated arguments.
../texinfo/texinfo.txi(,10703) * deffnx::                      How to group two or more `first' lines.
../texinfo/texinfo.txi(,10704) * Def Cmds in Detail::          All the definition commands.
../texinfo/texinfo.txi(,10705) * Def Cmd Conventions::         Conventions for writing definitions.
../texinfo/texinfo.txi(,10706) * Sample Function Definition::  
../texinfo/texinfo.txi(,10707) @end menu
../texinfo/texinfo.txi(,10708) 
../texinfo/texinfo.txi(,10709) @node Def Cmd Template, Optional Arguments, Definition Commands, Definition Commands
../texinfo/texinfo.txi(,10710) @section The Template for a Definition
../texinfo/texinfo.txi(,10711) @cindex Definition template
../texinfo/texinfo.txi(,10712) @cindex Template for a definition
../texinfo/texinfo.txi(,10713) 
../texinfo/texinfo.txi(,10714) The @code{@@deffn} command is used for definitions of entities that
../texinfo/texinfo.txi(,10715) resemble functions.  To write a definition using the @code{@@deffn}
../texinfo/texinfo.txi(,10716) command, write the @code{@@deffn} command at the beginning of a line
../texinfo/texinfo.txi(,10717) and follow it on the same line by the category of the entity, the name
../texinfo/texinfo.txi(,10718) of the entity itself, and its arguments (if any).  Then write the body
../texinfo/texinfo.txi(,10719) of the definition on succeeding lines.  (You may embed examples in the
../texinfo/texinfo.txi(,10720) body.)  Finally, end the definition with an @code{@@end deffn} command
../texinfo/texinfo.txi(,10721) written on a line of its own.  (The other definition commands follow
../texinfo/texinfo.txi(,10722) the same format.)@refill
../texinfo/texinfo.txi(,10723) 
../texinfo/texinfo.txi(,10724) The template for a definition looks like this:
../texinfo/texinfo.txi(,10725) 
../texinfo/texinfo.txi(,10726) @example
../texinfo/texinfo.txi(,10727) @group
../texinfo/texinfo.txi(,10728) @@deffn @var{category} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,10729) @var{body-of-definition}
../texinfo/texinfo.txi(,10730) @@end deffn
../texinfo/texinfo.txi(,10731) @end group
../texinfo/texinfo.txi(,10732) @end example
../texinfo/texinfo.txi(,10733) 
../texinfo/texinfo.txi(,10734) @need 700
../texinfo/texinfo.txi(,10735) @noindent
../texinfo/texinfo.txi(,10736) For example,
../texinfo/texinfo.txi(,10737) 
../texinfo/texinfo.txi(,10738) @example
../texinfo/texinfo.txi(,10739) @group
../texinfo/texinfo.txi(,10740) @@deffn Command forward-word count
../texinfo/texinfo.txi(,10741) This command moves point forward @@var@{count@} words
../texinfo/texinfo.txi(,10742) (or backward if @@var@{count@} is negative). @dots{}
../texinfo/texinfo.txi(,10743) @@end deffn
../texinfo/texinfo.txi(,10744) @end group
../texinfo/texinfo.txi(,10745) @end example
../texinfo/texinfo.txi(,10746) 
../texinfo/texinfo.txi(,10747) @noindent
../texinfo/texinfo.txi(,10748) produces
../texinfo/texinfo.txi(,10749) 
../texinfo/texinfo.txi(,10750) @quotation
../texinfo/texinfo.txi(,10751) @deffn Command forward-word count
../texinfo/texinfo.txi(,10752) This function moves point forward @var{count} words
../texinfo/texinfo.txi(,10753) (or backward if @var{count} is negative). @dots{}
../texinfo/texinfo.txi(,10754) @end deffn
../texinfo/texinfo.txi(,10755) @end quotation
../texinfo/texinfo.txi(,10756) 
../texinfo/texinfo.txi(,10757) Capitalize the category name like a title.  If the name of the
../texinfo/texinfo.txi(,10758) category contains spaces, as in the phrase `Interactive Command',
../texinfo/texinfo.txi(,10759) write braces around it.  For example:@refill
../texinfo/texinfo.txi(,10760) 
../texinfo/texinfo.txi(,10761) @example
../texinfo/texinfo.txi(,10762) @group
../texinfo/texinfo.txi(,10763) @@deffn @{Interactive Command@} isearch-forward
../texinfo/texinfo.txi(,10764) @dots{}
../texinfo/texinfo.txi(,10765) @@end deffn
../texinfo/texinfo.txi(,10766) @end group
../texinfo/texinfo.txi(,10767) @end example
../texinfo/texinfo.txi(,10768) 
../texinfo/texinfo.txi(,10769) @noindent
../texinfo/texinfo.txi(,10770) Otherwise, the second word will be mistaken for the name of the
../texinfo/texinfo.txi(,10771) entity.@refill
../texinfo/texinfo.txi(,10772) 
../texinfo/texinfo.txi(,10773) Some of the definition commands are more general than others.  The
../texinfo/texinfo.txi(,10774) @code{@@deffn} command, for example, is the general definition command
../texinfo/texinfo.txi(,10775) for functions and the like---for entities that may take arguments.  When
../texinfo/texinfo.txi(,10776) you use this command, you specify the category to which the entity
../texinfo/texinfo.txi(,10777) belongs.  The @code{@@deffn} command possesses three predefined,
../texinfo/texinfo.txi(,10778) specialized variations, @code{@@defun}, @code{@@defmac}, and
../texinfo/texinfo.txi(,10779) @code{@@defspec}, that specify the category for you: ``Function'',
../texinfo/texinfo.txi(,10780) ``Macro'', and ``Special Form'' respectively.  (In Lisp, a special form
../texinfo/texinfo.txi(,10781) is an entity much like a function.)  The @code{@@defvr} command also is
../texinfo/texinfo.txi(,10782) accompanied by several predefined, specialized variations for describing
../texinfo/texinfo.txi(,10783) particular kinds of variables.@refill
../texinfo/texinfo.txi(,10784) 
../texinfo/texinfo.txi(,10785) The template for a specialized definition, such as @code{@@defun}, is
../texinfo/texinfo.txi(,10786) similar to the template for a generalized definition, except that you
../texinfo/texinfo.txi(,10787) do not need to specify the category:@refill
../texinfo/texinfo.txi(,10788) 
../texinfo/texinfo.txi(,10789) @example
../texinfo/texinfo.txi(,10790) @group
../texinfo/texinfo.txi(,10791) @@defun @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,10792) @var{body-of-definition}
../texinfo/texinfo.txi(,10793) @@end defun
../texinfo/texinfo.txi(,10794) @end group
../texinfo/texinfo.txi(,10795) @end example
../texinfo/texinfo.txi(,10796) 
../texinfo/texinfo.txi(,10797) @noindent
../texinfo/texinfo.txi(,10798) Thus,
../texinfo/texinfo.txi(,10799) 
../texinfo/texinfo.txi(,10800) @example
../texinfo/texinfo.txi(,10801) @group
../texinfo/texinfo.txi(,10802) @@defun buffer-end flag
../texinfo/texinfo.txi(,10803) This function returns @@code@{(point-min)@} if @@var@{flag@}
../texinfo/texinfo.txi(,10804) is less than 1, @@code@{(point-max)@} otherwise.
../texinfo/texinfo.txi(,10805) @dots{}
../texinfo/texinfo.txi(,10806) @@end defun
../texinfo/texinfo.txi(,10807) @end group
../texinfo/texinfo.txi(,10808) @end example
../texinfo/texinfo.txi(,10809) 
../texinfo/texinfo.txi(,10810) @noindent
../texinfo/texinfo.txi(,10811) produces
../texinfo/texinfo.txi(,10812) 
../texinfo/texinfo.txi(,10813) @quotation
../texinfo/texinfo.txi(,10814) @defun buffer-end flag
../texinfo/texinfo.txi(,10815) This function returns @code{(point-min)} if @var{flag} is less than 1,
../texinfo/texinfo.txi(,10816) @code{(point-max)} otherwise.  @dots{}
../texinfo/texinfo.txi(,10817) @end defun
../texinfo/texinfo.txi(,10818) @end quotation
../texinfo/texinfo.txi(,10819) 
../texinfo/texinfo.txi(,10820) @noindent
../texinfo/texinfo.txi(,10821) @xref{Sample Function Definition, Sample Function Definition, A Sample
../texinfo/texinfo.txi(,10822) Function Definition}, for a more detailed example of a function
../texinfo/texinfo.txi(,10823) definition, including the use of @code{@@example} inside the
../texinfo/texinfo.txi(,10824) definition.@refill
../texinfo/texinfo.txi(,10825) 
../texinfo/texinfo.txi(,10826) The other specialized commands work like @code{@@defun}.@refill
../texinfo/texinfo.txi(,10827) 
../texinfo/texinfo.txi(,10828) @cindex Macros in definition commands
../texinfo/texinfo.txi(,10829) Note that, due to implementation difficulties, macros are not expanded
../texinfo/texinfo.txi(,10830) in @code{@@deffn} and all the other definition commands.
../texinfo/texinfo.txi(,10831) 
../texinfo/texinfo.txi(,10832) @node Optional Arguments, deffnx, Def Cmd Template, Definition Commands
../texinfo/texinfo.txi(,10833) @section Optional and Repeated Arguments
../texinfo/texinfo.txi(,10834) @cindex Optional and repeated arguments
../texinfo/texinfo.txi(,10835) @cindex Repeated and optional arguments
../texinfo/texinfo.txi(,10836) @cindex Arguments, repeated and optional
../texinfo/texinfo.txi(,10837) @cindex Syntax, optional & repeated arguments
../texinfo/texinfo.txi(,10838) @cindex Meta-syntactic chars for arguments
../texinfo/texinfo.txi(,10839) 
../texinfo/texinfo.txi(,10840) Some entities take optional or repeated arguments, which may be
../texinfo/texinfo.txi(,10841) specified by a distinctive glyph that uses square brackets and
../texinfo/texinfo.txi(,10842) ellipses.  For @w{example}, a special form often breaks its argument list
../texinfo/texinfo.txi(,10843) into separate arguments in more complicated ways than a
../texinfo/texinfo.txi(,10844) straightforward function.@refill
../texinfo/texinfo.txi(,10845) 
../texinfo/texinfo.txi(,10858) @c The following looks better in Info (no `r', `samp' and `code'):
../texinfo/texinfo.txi(,10860) An argument enclosed within square brackets is optional.
../texinfo/texinfo.txi(,10861) Thus, [@var{optional-arg}] means that @var{optional-arg} is optional.
../texinfo/texinfo.txi(,10862) An argument followed by an ellipsis is optional
../texinfo/texinfo.txi(,10863) and may be repeated more than once.
../texinfo/texinfo.txi(,10864) @c This is consistent with Emacs Lisp Reference manual
../texinfo/texinfo.txi(,10865) Thus, @var{repeated-args}@dots{} stands for zero or more arguments.
../texinfo/texinfo.txi(,10866) Parentheses are used when several arguments are grouped
../texinfo/texinfo.txi(,10867) into additional levels of list structure in Lisp.
../texinfo/texinfo.txi(,10869) 
../texinfo/texinfo.txi(,10870) Here is the @code{@@defspec} line of an example of an imaginary
../texinfo/texinfo.txi(,10871) special form:@refill
../texinfo/texinfo.txi(,10872) 
../texinfo/texinfo.txi(,10873) @quotation
../texinfo/texinfo.txi(,10874) @defspec foobar (@var{var} [@var{from} @var{to} [@var{inc}]]) @var{body}@dots{}
../texinfo/texinfo.txi(,10875) @end defspec
../texinfo/texinfo.txi(,10879) @end quotation
../texinfo/texinfo.txi(,10880) 
../texinfo/texinfo.txi(,10881) @noindent
../texinfo/texinfo.txi(,10882) In this example, the arguments @var{from} and @var{to} are optional,
../texinfo/texinfo.txi(,10883) but must both be present or both absent.  If they are present,
../texinfo/texinfo.txi(,10884) @var{inc} may optionally be specified as well.  These arguments are
../texinfo/texinfo.txi(,10885) grouped with the argument @var{var} into a list, to distinguish them
../texinfo/texinfo.txi(,10886) from @var{body}, which includes all remaining elements of the
../texinfo/texinfo.txi(,10887) form.@refill
../texinfo/texinfo.txi(,10888) 
../texinfo/texinfo.txi(,10889) In a Texinfo source file, this @code{@@defspec} line is written like
../texinfo/texinfo.txi(,10890) this (except it would not be split over two lines, as it is in this
../texinfo/texinfo.txi(,10891) example).@refill
../texinfo/texinfo.txi(,10892) 
../texinfo/texinfo.txi(,10893) @example
../texinfo/texinfo.txi(,10894) @group
../texinfo/texinfo.txi(,10895) @@defspec foobar (@@var@{var@} [@@var@{from@} @@var@{to@}
../texinfo/texinfo.txi(,10896)      [@@var@{inc@}]]) @@var@{body@}@@dots@{@}
../texinfo/texinfo.txi(,10897) @end group
../texinfo/texinfo.txi(,10898) @end example
../texinfo/texinfo.txi(,10899) 
../texinfo/texinfo.txi(,10900) @noindent
../texinfo/texinfo.txi(,10901) The function is listed in the Command and Variable Index under
../texinfo/texinfo.txi(,10902) @samp{foobar}.@refill
../texinfo/texinfo.txi(,10903) 
../texinfo/texinfo.txi(,10904) @node deffnx, Def Cmds in Detail, Optional Arguments, Definition Commands
../texinfo/texinfo.txi(,10905) @section Two or More `First' Lines
../texinfo/texinfo.txi(,10906) @cindex Two `First' Lines for @code{@@deffn}
../texinfo/texinfo.txi(,10907) @cindex Grouping two definitions together
../texinfo/texinfo.txi(,10908) @cindex Definitions grouped together
../texinfo/texinfo.txi(,10909) @findex deffnx
../texinfo/texinfo.txi(,10910) 
../texinfo/texinfo.txi(,10911) To create two or more `first' or header lines for a definition, follow
../texinfo/texinfo.txi(,10912) the first @code{@@deffn} line by a line beginning with @code{@@deffnx}.
../texinfo/texinfo.txi(,10913) The @code{@@deffnx} command works exactly like @code{@@deffn}
../texinfo/texinfo.txi(,10914) except that it does not generate extra vertical white space between it
../texinfo/texinfo.txi(,10915) and the preceding line.@refill
../texinfo/texinfo.txi(,10916) 
../texinfo/texinfo.txi(,10917) @need 1000
../texinfo/texinfo.txi(,10918) For example,
../texinfo/texinfo.txi(,10919) 
../texinfo/texinfo.txi(,10920) @example
../texinfo/texinfo.txi(,10921) @group
../texinfo/texinfo.txi(,10922) @@deffn @{Interactive Command@} isearch-forward
../texinfo/texinfo.txi(,10923) @@deffnx @{Interactive Command@} isearch-backward
../texinfo/texinfo.txi(,10924) These two search commands are similar except @dots{}
../texinfo/texinfo.txi(,10925) @@end deffn
../texinfo/texinfo.txi(,10926) @end group
../texinfo/texinfo.txi(,10927) @end example
../texinfo/texinfo.txi(,10928) 
../texinfo/texinfo.txi(,10929) @noindent
../texinfo/texinfo.txi(,10930) produces
../texinfo/texinfo.txi(,10931) 
../texinfo/texinfo.txi(,10932) @deffn {Interactive Command} isearch-forward
../texinfo/texinfo.txi(,10933) @deffnx {Interactive Command} isearch-backward
../texinfo/texinfo.txi(,10934) These two search commands are similar except @dots{}
../texinfo/texinfo.txi(,10935) @end deffn
../texinfo/texinfo.txi(,10936) 
../texinfo/texinfo.txi(,10937) Each definition command has an `x' form: @code{@@defunx},
../texinfo/texinfo.txi(,10938) @code{@@defvrx}, @code{@@deftypefunx}, etc.
../texinfo/texinfo.txi(,10939) 
../texinfo/texinfo.txi(,10940) The `x' forms work just like @code{@@itemx}; see @ref{itemx, , @code{@@itemx}}.
../texinfo/texinfo.txi(,10941) 
../texinfo/texinfo.txi(,10942) @node Def Cmds in Detail, Def Cmd Conventions, deffnx, Definition Commands
../texinfo/texinfo.txi(,10943) @section The Definition Commands
../texinfo/texinfo.txi(,10944) 
../texinfo/texinfo.txi(,10945) Texinfo provides more than a dozen definition commands, all of which
../texinfo/texinfo.txi(,10946) are described in this section.@refill
../texinfo/texinfo.txi(,10947) 
../texinfo/texinfo.txi(,10948) The definition commands automatically enter the name of the entity in
../texinfo/texinfo.txi(,10949) the appropriate index: for example, @code{@@deffn}, @code{@@defun},
../texinfo/texinfo.txi(,10950) and @code{@@defmac} enter function names in the index of functions;
../texinfo/texinfo.txi(,10951) @code{@@defvr} and @code{@@defvar} enter variable names in the index
../texinfo/texinfo.txi(,10952) of variables.@refill
../texinfo/texinfo.txi(,10953) 
../texinfo/texinfo.txi(,10954) Although the examples that follow mostly illustrate Lisp, the commands
../texinfo/texinfo.txi(,10955) can be used for other programming languages.@refill
../texinfo/texinfo.txi(,10956) 
../texinfo/texinfo.txi(,10957) @menu
../texinfo/texinfo.txi(,10958) * Functions Commands::          Commands for functions and similar entities.
../texinfo/texinfo.txi(,10959) * Variables Commands::          Commands for variables and similar entities.
../texinfo/texinfo.txi(,10960) * Typed Functions::             Commands for functions in typed languages.
../texinfo/texinfo.txi(,10961) * Typed Variables::             Commands for variables in typed languages.
../texinfo/texinfo.txi(,10962) * Abstract Objects::            Commands for object-oriented programming.
../texinfo/texinfo.txi(,10963) * Data Types::                  The definition command for data types.
../texinfo/texinfo.txi(,10964) @end menu
../texinfo/texinfo.txi(,10965) 
../texinfo/texinfo.txi(,10966) @node Functions Commands, Variables Commands, Def Cmds in Detail, Def Cmds in Detail
../texinfo/texinfo.txi(,10967) @subsection Functions and Similar Entities
../texinfo/texinfo.txi(,10968) 
../texinfo/texinfo.txi(,10969) This section describes the commands for describing functions and similar
../texinfo/texinfo.txi(,10970) entities:@refill
../texinfo/texinfo.txi(,10971) 
../texinfo/texinfo.txi(,10972) @table @code
../texinfo/texinfo.txi(,10973) @findex deffn
../texinfo/texinfo.txi(,10974) @item @@deffn @var{category} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,10975) The @code{@@deffn} command is the general definition command for
../texinfo/texinfo.txi(,10976) functions, interactive commands, and similar entities that may take
../texinfo/texinfo.txi(,10977) arguments.  You must choose a term to describe the category of entity
../texinfo/texinfo.txi(,10978) being defined; for example, ``Function'' could be used if the entity is
../texinfo/texinfo.txi(,10979) a function.  The @code{@@deffn} command is written at the beginning of a
../texinfo/texinfo.txi(,10980) line and is followed on the same line by the category of entity being
../texinfo/texinfo.txi(,10981) described, the name of this particular entity, and its arguments, if
../texinfo/texinfo.txi(,10982) any.  Terminate the definition with @code{@@end deffn} on a line of its
../texinfo/texinfo.txi(,10983) own.@refill
../texinfo/texinfo.txi(,10984) 
../texinfo/texinfo.txi(,10985) @need 750
../texinfo/texinfo.txi(,10986) For example, here is a definition:
../texinfo/texinfo.txi(,10987) 
../texinfo/texinfo.txi(,10988) @example
../texinfo/texinfo.txi(,10989) @group
../texinfo/texinfo.txi(,10990) @@deffn Command forward-char nchars
../texinfo/texinfo.txi(,10991) Move point forward @@var@{nchars@} characters.
../texinfo/texinfo.txi(,10992) @@end deffn
../texinfo/texinfo.txi(,10993) @end group
../texinfo/texinfo.txi(,10994) @end example
../texinfo/texinfo.txi(,10995) 
../texinfo/texinfo.txi(,10996) @noindent
../texinfo/texinfo.txi(,10997) This shows a rather terse definition for a ``command'' named
../texinfo/texinfo.txi(,10998) @code{forward-char} with one argument, @var{nchars}.
../texinfo/texinfo.txi(,10999) 
../texinfo/texinfo.txi(,11000) @code{@@deffn} prints argument names such as @var{nchars} in italics or
../texinfo/texinfo.txi(,11001) upper case, as if @code{@@var} had been used, because we think of these
../texinfo/texinfo.txi(,11002) names as metasyntactic variables---they stand for the actual argument
../texinfo/texinfo.txi(,11003) values.  Within the text of the description, write an argument name
../texinfo/texinfo.txi(,11004) explicitly with @code{@@var} to refer to the value of the argument.  In
../texinfo/texinfo.txi(,11005) the example above, we used @samp{@@var@{nchars@}} in this way.
../texinfo/texinfo.txi(,11006) 
../texinfo/texinfo.txi(,11007) The template for @code{@@deffn} is:
../texinfo/texinfo.txi(,11008) 
../texinfo/texinfo.txi(,11009) @example
../texinfo/texinfo.txi(,11010) @group
../texinfo/texinfo.txi(,11011) @@deffn @var{category} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11012) @var{body-of-definition}
../texinfo/texinfo.txi(,11013) @@end deffn
../texinfo/texinfo.txi(,11014) @end group
../texinfo/texinfo.txi(,11015) @end example
../texinfo/texinfo.txi(,11016) 
../texinfo/texinfo.txi(,11017) @findex defun
../texinfo/texinfo.txi(,11018) @item @@defun @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11019) The @code{@@defun} command is the definition command for functions.
../texinfo/texinfo.txi(,11020) @code{@@defun} is equivalent to @samp{@@deffn Function
../texinfo/texinfo.txi(,11021) @dots{}}.@refill
../texinfo/texinfo.txi(,11022) 
../texinfo/texinfo.txi(,11023) @need 800
../texinfo/texinfo.txi(,11024) @noindent
../texinfo/texinfo.txi(,11025) For example,
../texinfo/texinfo.txi(,11026) 
../texinfo/texinfo.txi(,11027) @example
../texinfo/texinfo.txi(,11028) @group
../texinfo/texinfo.txi(,11029) @@defun set symbol new-value
../texinfo/texinfo.txi(,11030) Change the value of the symbol @@var@{symbol@}
../texinfo/texinfo.txi(,11031) to @@var@{new-value@}.
../texinfo/texinfo.txi(,11032) @@end defun
../texinfo/texinfo.txi(,11033) @end group
../texinfo/texinfo.txi(,11034) @end example
../texinfo/texinfo.txi(,11035) 
../texinfo/texinfo.txi(,11036) @noindent
../texinfo/texinfo.txi(,11037) shows a rather terse definition for a function @code{set} whose
../texinfo/texinfo.txi(,11038) arguments are @var{symbol} and @var{new-value}.  The argument names on
../texinfo/texinfo.txi(,11039) the @code{@@defun} line automatically appear in italics or upper case as
../texinfo/texinfo.txi(,11040) if they were enclosed in @code{@@var}.  Terminate the definition with
../texinfo/texinfo.txi(,11041) @code{@@end defun} on a line of its own.@refill
../texinfo/texinfo.txi(,11042) 
../texinfo/texinfo.txi(,11043) The template is:
../texinfo/texinfo.txi(,11044) 
../texinfo/texinfo.txi(,11045) @example
../texinfo/texinfo.txi(,11046) @group
../texinfo/texinfo.txi(,11047) @@defun @var{function-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11048) @var{body-of-definition}
../texinfo/texinfo.txi(,11049) @@end defun
../texinfo/texinfo.txi(,11050) @end group
../texinfo/texinfo.txi(,11051) @end example
../texinfo/texinfo.txi(,11052) 
../texinfo/texinfo.txi(,11053) @code{@@defun} creates an entry in the index of functions.
../texinfo/texinfo.txi(,11054) 
../texinfo/texinfo.txi(,11055) @findex defmac
../texinfo/texinfo.txi(,11056) @item @@defmac @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11057) The @code{@@defmac} command is the definition command for macros.
../texinfo/texinfo.txi(,11058) @code{@@defmac} is equivalent to @samp{@@deffn Macro @dots{}} and
../texinfo/texinfo.txi(,11059) works like @code{@@defun}.@refill
../texinfo/texinfo.txi(,11060) 
../texinfo/texinfo.txi(,11061) @findex defspec
../texinfo/texinfo.txi(,11062) @item @@defspec @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11063) The @code{@@defspec} command is the definition command for special
../texinfo/texinfo.txi(,11064) forms.  (In Lisp, a special form is an entity much like a function,
../texinfo/texinfo.txi(,11065) @pxref{Special Forms,,, elisp, GNU Emacs Lisp Reference Manual}.)
../texinfo/texinfo.txi(,11066) @code{@@defspec} is equivalent to @samp{@@deffn @{Special Form@}
../texinfo/texinfo.txi(,11067) @dots{}} and works like @code{@@defun}.@refill
../texinfo/texinfo.txi(,11068) @end table
../texinfo/texinfo.txi(,11069) 
../texinfo/texinfo.txi(,11070) @node Variables Commands, Typed Functions, Functions Commands, Def Cmds in Detail
../texinfo/texinfo.txi(,11071) @subsection Variables and Similar Entities
../texinfo/texinfo.txi(,11072) 
../texinfo/texinfo.txi(,11073) Here are the commands for defining variables and similar
../texinfo/texinfo.txi(,11074) entities:@refill
../texinfo/texinfo.txi(,11075) 
../texinfo/texinfo.txi(,11076) @table @code
../texinfo/texinfo.txi(,11077) @findex defvr
../texinfo/texinfo.txi(,11078) @item @@defvr @var{category} @var{name}
../texinfo/texinfo.txi(,11079) The @code{@@defvr} command is a general definition command for
../texinfo/texinfo.txi(,11080) something like a variable---an entity that records a value.  You must
../texinfo/texinfo.txi(,11081) choose a term to describe the category of entity being defined; for
../texinfo/texinfo.txi(,11082) example, ``Variable'' could be used if the entity is a variable.
../texinfo/texinfo.txi(,11083) Write the @code{@@defvr} command at the beginning of a line and
../texinfo/texinfo.txi(,11084) follow it on the same line by the category of the entity and the
../texinfo/texinfo.txi(,11085) name of the entity.
../texinfo/texinfo.txi(,11086) 
../texinfo/texinfo.txi(,11087) Capitalize the category name like a title.  If the name of the category
../texinfo/texinfo.txi(,11088) contains spaces, as in the name ``User Option'', enclose it in braces.
../texinfo/texinfo.txi(,11089) Otherwise, the second word will be mistaken for the name of the entity.
../texinfo/texinfo.txi(,11090) For example,
../texinfo/texinfo.txi(,11091) 
../texinfo/texinfo.txi(,11092) @example
../texinfo/texinfo.txi(,11093) @group
../texinfo/texinfo.txi(,11094) @@defvr @{User Option@} fill-column
../texinfo/texinfo.txi(,11095) This buffer-local variable specifies
../texinfo/texinfo.txi(,11096) the maximum width of filled lines.
../texinfo/texinfo.txi(,11097) @dots{}
../texinfo/texinfo.txi(,11098) @@end defvr
../texinfo/texinfo.txi(,11099) @end group
../texinfo/texinfo.txi(,11100) @end example
../texinfo/texinfo.txi(,11101) 
../texinfo/texinfo.txi(,11102) Terminate the definition with @code{@@end defvr} on a line of its
../texinfo/texinfo.txi(,11103) own.@refill
../texinfo/texinfo.txi(,11104) 
../texinfo/texinfo.txi(,11105) The template is:
../texinfo/texinfo.txi(,11106) 
../texinfo/texinfo.txi(,11107) @example
../texinfo/texinfo.txi(,11108) @group
../texinfo/texinfo.txi(,11109) @@defvr @var{category} @var{name}
../texinfo/texinfo.txi(,11110) @var{body-of-definition}
../texinfo/texinfo.txi(,11111) @@end defvr
../texinfo/texinfo.txi(,11112) @end group
../texinfo/texinfo.txi(,11113) @end example
../texinfo/texinfo.txi(,11114) 
../texinfo/texinfo.txi(,11115) @code{@@defvr} creates an entry in the index of variables for @var{name}.
../texinfo/texinfo.txi(,11116) 
../texinfo/texinfo.txi(,11117) @findex defvar
../texinfo/texinfo.txi(,11118) @item @@defvar @var{name}
../texinfo/texinfo.txi(,11119) The @code{@@defvar} command is the definition command for variables.
../texinfo/texinfo.txi(,11120) @code{@@defvar} is equivalent to @samp{@@defvr Variable
../texinfo/texinfo.txi(,11121) @dots{}}.@refill
../texinfo/texinfo.txi(,11122) 
../texinfo/texinfo.txi(,11123) @need 750
../texinfo/texinfo.txi(,11124) For example:
../texinfo/texinfo.txi(,11125) 
../texinfo/texinfo.txi(,11126) @example
../texinfo/texinfo.txi(,11127) @group
../texinfo/texinfo.txi(,11128) @@defvar kill-ring
../texinfo/texinfo.txi(,11129) @dots{}
../texinfo/texinfo.txi(,11130) @@end defvar
../texinfo/texinfo.txi(,11131) @end group
../texinfo/texinfo.txi(,11132) @end example
../texinfo/texinfo.txi(,11133) 
../texinfo/texinfo.txi(,11134) The template is:
../texinfo/texinfo.txi(,11135) 
../texinfo/texinfo.txi(,11136) @example
../texinfo/texinfo.txi(,11137) @group
../texinfo/texinfo.txi(,11138) @@defvar @var{name}
../texinfo/texinfo.txi(,11139) @var{body-of-definition}
../texinfo/texinfo.txi(,11140) @@end defvar
../texinfo/texinfo.txi(,11141) @end group
../texinfo/texinfo.txi(,11142) @end example
../texinfo/texinfo.txi(,11143) 
../texinfo/texinfo.txi(,11144) @code{@@defvar} creates an entry in the index of variables for
../texinfo/texinfo.txi(,11145) @var{name}.@refill
../texinfo/texinfo.txi(,11146) 
../texinfo/texinfo.txi(,11147) @findex defopt
../texinfo/texinfo.txi(,11148) @item @@defopt @var{name}
../texinfo/texinfo.txi(,11149) @cindex User options, marking
../texinfo/texinfo.txi(,11150) The @code{@@defopt} command is the definition command for @dfn{user
../texinfo/texinfo.txi(,11151) options}, i.e., variables intended for users to change according to
../texinfo/texinfo.txi(,11152) taste; Emacs has many such (@pxref{Variables,,, emacs, The GNU Emacs
../texinfo/texinfo.txi(,11153) Manual}).  @code{@@defopt} is equivalent to @samp{@@defvr @{User
../texinfo/texinfo.txi(,11154) Option@} @dots{}} and works like @code{@@defvar}.@refill
../texinfo/texinfo.txi(,11155) @end table
../texinfo/texinfo.txi(,11156) 
../texinfo/texinfo.txi(,11157) 
../texinfo/texinfo.txi(,11158) @node Typed Functions, Typed Variables, Variables Commands, Def Cmds in Detail
../texinfo/texinfo.txi(,11159) @subsection Functions in Typed Languages
../texinfo/texinfo.txi(,11160) 
../texinfo/texinfo.txi(,11161) The @code{@@deftypefn} command and its variations are for describing
../texinfo/texinfo.txi(,11162) functions in languages in which you must declare types of variables and
../texinfo/texinfo.txi(,11163) functions, such as C and C++.
../texinfo/texinfo.txi(,11164) 
../texinfo/texinfo.txi(,11165) @table @code
../texinfo/texinfo.txi(,11166) @findex deftypefn
../texinfo/texinfo.txi(,11167) @item @@deftypefn @var{category} @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11168) The @code{@@deftypefn} command is the general definition command for
../texinfo/texinfo.txi(,11169) functions and similar entities that may take arguments and that are
../texinfo/texinfo.txi(,11170) typed.  The @code{@@deftypefn} command is written at the beginning of
../texinfo/texinfo.txi(,11171) a line and is followed on the same line by the category of entity
../texinfo/texinfo.txi(,11172) being described, the type of the returned value, the name of this
../texinfo/texinfo.txi(,11173) particular entity, and its arguments, if any.@refill
../texinfo/texinfo.txi(,11174) 
../texinfo/texinfo.txi(,11175) @need 800
../texinfo/texinfo.txi(,11176) @noindent
../texinfo/texinfo.txi(,11177) For example,
../texinfo/texinfo.txi(,11178) 
../texinfo/texinfo.txi(,11179) @example
../texinfo/texinfo.txi(,11180) @group
../texinfo/texinfo.txi(,11181) @@deftypefn @{Library Function@} int foobar
../texinfo/texinfo.txi(,11182)    (int @@var@{foo@}, float @@var@{bar@})
../texinfo/texinfo.txi(,11183) @dots{}
../texinfo/texinfo.txi(,11184) @@end deftypefn
../texinfo/texinfo.txi(,11185) @end group
../texinfo/texinfo.txi(,11186) @end example
../texinfo/texinfo.txi(,11187) 
../texinfo/texinfo.txi(,11188) @need 1000
../texinfo/texinfo.txi(,11189) @noindent
../texinfo/texinfo.txi(,11190) (where the text before the ``@dots{}'', shown above as two lines, would
../texinfo/texinfo.txi(,11191) actually be a single line in a real Texinfo file) produces the following
../texinfo/texinfo.txi(,11192) in Info:
../texinfo/texinfo.txi(,11193) 
../texinfo/texinfo.txi(,11194) @smallexample
../texinfo/texinfo.txi(,11195) @group
../texinfo/texinfo.txi(,11196) -- Library Function: int foobar (int FOO, float BAR)
../texinfo/texinfo.txi(,11197) @dots{}
../texinfo/texinfo.txi(,11198) @end group
../texinfo/texinfo.txi(,11199) @end smallexample
../texinfo/texinfo.txi(,11210) 
../texinfo/texinfo.txi(,11211) This means that @code{foobar} is a ``library function'' that returns an
../texinfo/texinfo.txi(,11212) @code{int}, and its arguments are @var{foo} (an @code{int}) and
../texinfo/texinfo.txi(,11213) @var{bar} (a @code{float}).@refill
../texinfo/texinfo.txi(,11214) 
../texinfo/texinfo.txi(,11215) The argument names that you write in @code{@@deftypefn} are not subject
../texinfo/texinfo.txi(,11216) to an implicit @code{@@var}---since the actual names of the arguments in
../texinfo/texinfo.txi(,11217) @code{@@deftypefn} are typically scattered among data type names and
../texinfo/texinfo.txi(,11218) keywords, Texinfo cannot find them without help.  Instead, you must write
../texinfo/texinfo.txi(,11219) @code{@@var} explicitly around the argument names.  In the example
../texinfo/texinfo.txi(,11220) above, the argument names are @samp{foo} and @samp{bar}.@refill
../texinfo/texinfo.txi(,11221) 
../texinfo/texinfo.txi(,11222) The template for @code{@@deftypefn} is:@refill
../texinfo/texinfo.txi(,11223) 
../texinfo/texinfo.txi(,11224) @example
../texinfo/texinfo.txi(,11225) @group
../texinfo/texinfo.txi(,11226) @@deftypefn @var{category} @var{data-type} @var{name} @var{arguments} @dots{}
../texinfo/texinfo.txi(,11227) @var{body-of-description}
../texinfo/texinfo.txi(,11228) @@end deftypefn
../texinfo/texinfo.txi(,11229) @end group
../texinfo/texinfo.txi(,11230) @end example
../texinfo/texinfo.txi(,11231) 
../texinfo/texinfo.txi(,11232) @noindent
../texinfo/texinfo.txi(,11233) Note that if the @var{category} or @var{data type} is more than one
../texinfo/texinfo.txi(,11234) word then it must be enclosed in braces to make it a single argument.@refill
../texinfo/texinfo.txi(,11235) 
../texinfo/texinfo.txi(,11236) If you are describing a procedure in a language that has packages,
../texinfo/texinfo.txi(,11237) such as Ada, you might consider using @code{@@deftypefn} in a manner
../texinfo/texinfo.txi(,11238) somewhat contrary to the convention described in the preceding
../texinfo/texinfo.txi(,11239) paragraphs.@refill
../texinfo/texinfo.txi(,11240) 
../texinfo/texinfo.txi(,11241) @need 800
../texinfo/texinfo.txi(,11242) @noindent
../texinfo/texinfo.txi(,11243) For example:
../texinfo/texinfo.txi(,11244) 
../texinfo/texinfo.txi(,11245) @example
../texinfo/texinfo.txi(,11246) @group
../texinfo/texinfo.txi(,11247) @@deftypefn stacks private push
../texinfo/texinfo.txi(,11248)         (@@var@{s@}:in out stack;
../texinfo/texinfo.txi(,11249)         @@var@{n@}:in integer)
../texinfo/texinfo.txi(,11250) @dots{}
../texinfo/texinfo.txi(,11251) @@end deftypefn
../texinfo/texinfo.txi(,11252) @end group
../texinfo/texinfo.txi(,11253) @end example
../texinfo/texinfo.txi(,11254) 
../texinfo/texinfo.txi(,11255) @noindent
../texinfo/texinfo.txi(,11256) (The @code{@@deftypefn} arguments are shown split into three lines, but
../texinfo/texinfo.txi(,11257) would be a single line in a real Texinfo file.)
../texinfo/texinfo.txi(,11258) 
../texinfo/texinfo.txi(,11259) In this instance, the procedure is classified as belonging to the
../texinfo/texinfo.txi(,11260) package @code{stacks} rather than classified as a `procedure' and its
../texinfo/texinfo.txi(,11261) data type is described as @code{private}.  (The name of the procedure
../texinfo/texinfo.txi(,11262) is @code{push}, and its arguments are @var{s} and @var{n}.)@refill
../texinfo/texinfo.txi(,11263) 
../texinfo/texinfo.txi(,11264) @code{@@deftypefn} creates an entry in the index of functions for
../texinfo/texinfo.txi(,11265) @var{name}.@refill
../texinfo/texinfo.txi(,11266) 
../texinfo/texinfo.txi(,11267) @item @@deftypefun @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11268) @findex deftypefun
../texinfo/texinfo.txi(,11269) The @code{@@deftypefun} command is the specialized definition command
../texinfo/texinfo.txi(,11270) for functions in typed languages.  The command is equivalent to
../texinfo/texinfo.txi(,11271) @samp{@@deftypefn Function @dots{}}.@refill
../texinfo/texinfo.txi(,11272) 
../texinfo/texinfo.txi(,11273) @need 800
../texinfo/texinfo.txi(,11274) @noindent
../texinfo/texinfo.txi(,11275) Thus,
../texinfo/texinfo.txi(,11276) 
../texinfo/texinfo.txi(,11277) @smallexample
../texinfo/texinfo.txi(,11278) @group
../texinfo/texinfo.txi(,11279) @@deftypefun int foobar (int @@var@{foo@}, float @@var@{bar@})
../texinfo/texinfo.txi(,11280) @dots{}
../texinfo/texinfo.txi(,11281) @@end deftypefun
../texinfo/texinfo.txi(,11282) @end group
../texinfo/texinfo.txi(,11283) @end smallexample
../texinfo/texinfo.txi(,11284) 
../texinfo/texinfo.txi(,11285) @noindent
../texinfo/texinfo.txi(,11286) produces the following in Info:
../texinfo/texinfo.txi(,11287) 
../texinfo/texinfo.txi(,11288) @example
../texinfo/texinfo.txi(,11289) @group
../texinfo/texinfo.txi(,11290) -- Function: int foobar (int FOO, float BAR)
../texinfo/texinfo.txi(,11291) @dots{}
../texinfo/texinfo.txi(,11292) @end group
../texinfo/texinfo.txi(,11293) @end example
../texinfo/texinfo.txi(,11306) 
../texinfo/texinfo.txi(,11307) @need 800
../texinfo/texinfo.txi(,11308) The template is:
../texinfo/texinfo.txi(,11309) 
../texinfo/texinfo.txi(,11310) @example
../texinfo/texinfo.txi(,11311) @group
../texinfo/texinfo.txi(,11312) @@deftypefun @var{type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11313) @var{body-of-description}
../texinfo/texinfo.txi(,11314) @@end deftypefun
../texinfo/texinfo.txi(,11315) @end group
../texinfo/texinfo.txi(,11316) @end example
../texinfo/texinfo.txi(,11317) 
../texinfo/texinfo.txi(,11318) @code{@@deftypefun} creates an entry in the index of functions for
../texinfo/texinfo.txi(,11319) @var{name}.@refill
../texinfo/texinfo.txi(,11320) 
../texinfo/texinfo.txi(,11321) @end table
../texinfo/texinfo.txi(,11322) 
../texinfo/texinfo.txi(,11323) 
../texinfo/texinfo.txi(,11324) @node Typed Variables, Abstract Objects, Typed Functions, Def Cmds in Detail
../texinfo/texinfo.txi(,11325) @subsection Variables in Typed Languages
../texinfo/texinfo.txi(,11326) 
../texinfo/texinfo.txi(,11327) Variables in typed languages are handled in a manner similar to
../texinfo/texinfo.txi(,11328) functions in typed languages.  @xref{Typed Functions}.  The general
../texinfo/texinfo.txi(,11329) definition command @code{@@deftypevr} corresponds to
../texinfo/texinfo.txi(,11330) @code{@@deftypefn} and the specialized definition command
../texinfo/texinfo.txi(,11331) @code{@@deftypevar} corresponds to @code{@@deftypefun}.@refill
../texinfo/texinfo.txi(,11332) 
../texinfo/texinfo.txi(,11333) @table @code
../texinfo/texinfo.txi(,11334) @findex deftypevr
../texinfo/texinfo.txi(,11335) @item @@deftypevr @var{category} @var{data-type} @var{name}
../texinfo/texinfo.txi(,11336) The @code{@@deftypevr} command is the general definition command for
../texinfo/texinfo.txi(,11337) something like a variable in a typed language---an entity that records
../texinfo/texinfo.txi(,11338) a value.  You must choose a term to describe the category of the
../texinfo/texinfo.txi(,11339) entity being defined; for example, ``Variable'' could be used if the
../texinfo/texinfo.txi(,11340) entity is a variable.@refill
../texinfo/texinfo.txi(,11341) 
../texinfo/texinfo.txi(,11342) The @code{@@deftypevr} command is written at the beginning of a line
../texinfo/texinfo.txi(,11343) and is followed on the same line by the category of the entity
../texinfo/texinfo.txi(,11344) being described, the data type, and the name of this particular
../texinfo/texinfo.txi(,11345) entity.@refill
../texinfo/texinfo.txi(,11346) 
../texinfo/texinfo.txi(,11347) @need 800
../texinfo/texinfo.txi(,11348) @noindent
../texinfo/texinfo.txi(,11349) For example:
../texinfo/texinfo.txi(,11350) 
../texinfo/texinfo.txi(,11351) @example
../texinfo/texinfo.txi(,11352) @group
../texinfo/texinfo.txi(,11353) @@deftypevr @{Global Flag@} int enable
../texinfo/texinfo.txi(,11354) @dots{}
../texinfo/texinfo.txi(,11355) @@end deftypevr
../texinfo/texinfo.txi(,11356) @end group
../texinfo/texinfo.txi(,11357) @end example
../texinfo/texinfo.txi(,11358) 
../texinfo/texinfo.txi(,11359) @noindent
../texinfo/texinfo.txi(,11360) produces the following in Info:
../texinfo/texinfo.txi(,11361) 
../texinfo/texinfo.txi(,11362) @example
../texinfo/texinfo.txi(,11363) @group
../texinfo/texinfo.txi(,11364) -- Global Flag: int enable
../texinfo/texinfo.txi(,11365) @dots{}
../texinfo/texinfo.txi(,11366) @end group
../texinfo/texinfo.txi(,11367) @end example
../texinfo/texinfo.txi(,11379) 
../texinfo/texinfo.txi(,11380) @need 800
../texinfo/texinfo.txi(,11381) The template is:
../texinfo/texinfo.txi(,11382) 
../texinfo/texinfo.txi(,11383) @example
../texinfo/texinfo.txi(,11384) @@deftypevr @var{category} @var{data-type} @var{name}
../texinfo/texinfo.txi(,11385) @var{body-of-description}
../texinfo/texinfo.txi(,11386) @@end deftypevr
../texinfo/texinfo.txi(,11387) @end example
../texinfo/texinfo.txi(,11388) 
../texinfo/texinfo.txi(,11389) @code{@@deftypevr} creates an entry in the index of variables for
../texinfo/texinfo.txi(,11390) @var{name}.@refill
../texinfo/texinfo.txi(,11391) 
../texinfo/texinfo.txi(,11392) @findex deftypevar
../texinfo/texinfo.txi(,11393) @item @@deftypevar @var{data-type} @var{name}
../texinfo/texinfo.txi(,11394) The @code{@@deftypevar} command is the specialized definition command
../texinfo/texinfo.txi(,11395) for variables in typed languages.  @code{@@deftypevar} is equivalent
../texinfo/texinfo.txi(,11396) to @samp{@@deftypevr Variable @dots{}}.@refill
../texinfo/texinfo.txi(,11397) 
../texinfo/texinfo.txi(,11398) @need 800
../texinfo/texinfo.txi(,11399) @noindent
../texinfo/texinfo.txi(,11400) For example:
../texinfo/texinfo.txi(,11401) 
../texinfo/texinfo.txi(,11402) @example
../texinfo/texinfo.txi(,11403) @group
../texinfo/texinfo.txi(,11404) @@deftypevar int fubar
../texinfo/texinfo.txi(,11405) @dots{}
../texinfo/texinfo.txi(,11406) @@end deftypevar
../texinfo/texinfo.txi(,11407) @end group
../texinfo/texinfo.txi(,11408) @end example
../texinfo/texinfo.txi(,11409) 
../texinfo/texinfo.txi(,11410) @noindent
../texinfo/texinfo.txi(,11411) produces the following in Info:
../texinfo/texinfo.txi(,11412) 
../texinfo/texinfo.txi(,11413) @example
../texinfo/texinfo.txi(,11414) @group
../texinfo/texinfo.txi(,11415) -- Variable: int fubar
../texinfo/texinfo.txi(,11416) @dots{}
../texinfo/texinfo.txi(,11417) @end group
../texinfo/texinfo.txi(,11418) @end example
../texinfo/texinfo.txi(,11431) 
../texinfo/texinfo.txi(,11432) @need 800
../texinfo/texinfo.txi(,11433) @noindent
../texinfo/texinfo.txi(,11434) The template is:
../texinfo/texinfo.txi(,11435) 
../texinfo/texinfo.txi(,11436) @example
../texinfo/texinfo.txi(,11437) @group
../texinfo/texinfo.txi(,11438) @@deftypevar @var{data-type} @var{name}
../texinfo/texinfo.txi(,11439) @var{body-of-description}
../texinfo/texinfo.txi(,11440) @@end deftypevar
../texinfo/texinfo.txi(,11441) @end group
../texinfo/texinfo.txi(,11442) @end example
../texinfo/texinfo.txi(,11443) 
../texinfo/texinfo.txi(,11444) @code{@@deftypevar} creates an entry in the index of variables for
../texinfo/texinfo.txi(,11445) @var{name}.@refill
../texinfo/texinfo.txi(,11446) @end table
../texinfo/texinfo.txi(,11447) 
../texinfo/texinfo.txi(,11448) @node Abstract Objects
../texinfo/texinfo.txi(,11449) @subsection Object-Oriented Programming
../texinfo/texinfo.txi(,11450) 
../texinfo/texinfo.txi(,11451) Here are the commands for formatting descriptions about abstract
../texinfo/texinfo.txi(,11452) objects, such as are used in object-oriented programming.  A class is
../texinfo/texinfo.txi(,11453) a defined type of abstract object.  An instance of a class is a
../texinfo/texinfo.txi(,11454) particular object that has the type of the class.  An instance
../texinfo/texinfo.txi(,11455) variable is a variable that belongs to the class but for which each
../texinfo/texinfo.txi(,11456) instance has its own value.@refill
../texinfo/texinfo.txi(,11457) 
../texinfo/texinfo.txi(,11458) In a definition, if the name of a class is truly a name defined in the
../texinfo/texinfo.txi(,11459) programming system for a class, then you should write an @code{@@code}
../texinfo/texinfo.txi(,11460) around it.  Otherwise, it is printed in the usual text font.@refill
../texinfo/texinfo.txi(,11461) 
../texinfo/texinfo.txi(,11462) @table @code
../texinfo/texinfo.txi(,11463) @findex defcv
../texinfo/texinfo.txi(,11464) @item @@defcv @var{category} @var{class} @var{name}
../texinfo/texinfo.txi(,11465) The @code{@@defcv} command is the general definition command for
../texinfo/texinfo.txi(,11466) variables associated with classes in object-oriented programming.  The
../texinfo/texinfo.txi(,11467) @code{@@defcv} command is followed by three arguments: the category of
../texinfo/texinfo.txi(,11468) thing being defined, the class to which it belongs, and its
../texinfo/texinfo.txi(,11469) name.  Thus,@refill
../texinfo/texinfo.txi(,11470) 
../texinfo/texinfo.txi(,11471) @example
../texinfo/texinfo.txi(,11472) @group
../texinfo/texinfo.txi(,11473) @@defcv @{Class Option@} Window border-pattern
../texinfo/texinfo.txi(,11474) @dots{}
../texinfo/texinfo.txi(,11475) @@end defcv
../texinfo/texinfo.txi(,11476) @end group
../texinfo/texinfo.txi(,11477) @end example
../texinfo/texinfo.txi(,11478) 
../texinfo/texinfo.txi(,11479) @noindent
../texinfo/texinfo.txi(,11480) illustrates how you would write the first line of a definition of the
../texinfo/texinfo.txi(,11481) @code{border-pattern} class option of the class @code{Window}.@refill
../texinfo/texinfo.txi(,11482) 
../texinfo/texinfo.txi(,11483) The template is:
../texinfo/texinfo.txi(,11484) @example
../texinfo/texinfo.txi(,11485) @group
../texinfo/texinfo.txi(,11486) @@defcv @var{category} @var{class} @var{name}
../texinfo/texinfo.txi(,11487) @dots{}
../texinfo/texinfo.txi(,11488) @@end defcv
../texinfo/texinfo.txi(,11489) @end group
../texinfo/texinfo.txi(,11490) @end example
../texinfo/texinfo.txi(,11491) 
../texinfo/texinfo.txi(,11492) @code{@@defcv} creates an entry in the index of variables.
../texinfo/texinfo.txi(,11493) 
../texinfo/texinfo.txi(,11494) @findex defivar
../texinfo/texinfo.txi(,11495) @item @@defivar @var{class} @var{name}
../texinfo/texinfo.txi(,11496) The @code{@@defivar} command is the definition command for instance
../texinfo/texinfo.txi(,11497) variables in object-oriented programming.  @code{@@defivar} is
../texinfo/texinfo.txi(,11498) equivalent to @samp{@@defcv @{Instance Variable@} @dots{}}@refill
../texinfo/texinfo.txi(,11499) 
../texinfo/texinfo.txi(,11500) The template is:
../texinfo/texinfo.txi(,11501) @example
../texinfo/texinfo.txi(,11502) @group
../texinfo/texinfo.txi(,11503) @@defivar @var{class} @var{instance-variable-name}
../texinfo/texinfo.txi(,11504) @var{body-of-definition}
../texinfo/texinfo.txi(,11505) @@end defivar
../texinfo/texinfo.txi(,11506) @end group
../texinfo/texinfo.txi(,11507) @end example
../texinfo/texinfo.txi(,11508) 
../texinfo/texinfo.txi(,11509) @code{@@defivar} creates an entry in the index of variables.
../texinfo/texinfo.txi(,11510) 
../texinfo/texinfo.txi(,11511) @findex deftypeivar
../texinfo/texinfo.txi(,11512) @item @@deftypeivar @var{class} @var{data-type} @var{name}
../texinfo/texinfo.txi(,11513) The @code{@@deftypeivar} command is the definition command for typed
../texinfo/texinfo.txi(,11514) instance variables in object-oriented programming.  It is similar to
../texinfo/texinfo.txi(,11515) @code{@@defivar} with the addition of the @var{data-type} parameter to
../texinfo/texinfo.txi(,11516) specify the type of the instance variable.  @code{@@deftypeivar} creates an
../texinfo/texinfo.txi(,11517) entry in the index of variables.
../texinfo/texinfo.txi(,11518) 
../texinfo/texinfo.txi(,11519) @findex defop
../texinfo/texinfo.txi(,11520) @item @@defop @var{category} @var{class} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11521) The @code{@@defop} command is the general definition command for
../texinfo/texinfo.txi(,11522) entities that may resemble methods in object-oriented programming.
../texinfo/texinfo.txi(,11523) These entities take arguments, as functions do, but are associated with
../texinfo/texinfo.txi(,11524) particular classes of objects.@refill
../texinfo/texinfo.txi(,11525) 
../texinfo/texinfo.txi(,11526) For example, some systems have constructs called @dfn{wrappers} that
../texinfo/texinfo.txi(,11527) are associated with classes as methods are, but that act more like
../texinfo/texinfo.txi(,11528) macros than like functions.  You could use @code{@@defop Wrapper} to
../texinfo/texinfo.txi(,11529) describe one of these.@refill
../texinfo/texinfo.txi(,11530) 
../texinfo/texinfo.txi(,11531) Sometimes it is useful to distinguish methods and @dfn{operations}.
../texinfo/texinfo.txi(,11532) You can think of an operation as the specification for a method.
../texinfo/texinfo.txi(,11533) Thus, a window system might specify that all window classes have a
../texinfo/texinfo.txi(,11534) method named @code{expose}; we would say that this window system
../texinfo/texinfo.txi(,11535) defines an @code{expose} operation on windows in general.  Typically,
../texinfo/texinfo.txi(,11536) the operation has a name and also specifies the pattern of arguments;
../texinfo/texinfo.txi(,11537) all methods that implement the operation must accept the same
../texinfo/texinfo.txi(,11538) arguments, since applications that use the operation do so without
../texinfo/texinfo.txi(,11539) knowing which method will implement it.@refill
../texinfo/texinfo.txi(,11540) 
../texinfo/texinfo.txi(,11541) Often it makes more sense to document operations than methods.  For
../texinfo/texinfo.txi(,11542) example, window application developers need to know about the
../texinfo/texinfo.txi(,11543) @code{expose} operation, but need not be concerned with whether a
../texinfo/texinfo.txi(,11544) given class of windows has its own method to implement this operation.
../texinfo/texinfo.txi(,11545) To describe this operation, you would write:@refill
../texinfo/texinfo.txi(,11546) 
../texinfo/texinfo.txi(,11547) @example
../texinfo/texinfo.txi(,11548) @@defop Operation windows expose
../texinfo/texinfo.txi(,11549) @end example
../texinfo/texinfo.txi(,11550) 
../texinfo/texinfo.txi(,11551) The @code{@@defop} command is written at the beginning of a line and
../texinfo/texinfo.txi(,11552) is followed on the same line by the overall name of the category of
../texinfo/texinfo.txi(,11553) operation, the name of the class of the operation, the name of the
../texinfo/texinfo.txi(,11554) operation, and its arguments, if any.@refill
../texinfo/texinfo.txi(,11555) 
../texinfo/texinfo.txi(,11556) The template is:
../texinfo/texinfo.txi(,11557) @example
../texinfo/texinfo.txi(,11558) @group
../texinfo/texinfo.txi(,11559) @@defop @var{category} @var{class} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11560) @var{body-of-definition}
../texinfo/texinfo.txi(,11561) @@end defop
../texinfo/texinfo.txi(,11562) @end group
../texinfo/texinfo.txi(,11563) @end example
../texinfo/texinfo.txi(,11564) 
../texinfo/texinfo.txi(,11565) @code{@@defop} creates an entry, such as `@code{expose} on
../texinfo/texinfo.txi(,11566) @code{windows}', in the index of functions.@refill
../texinfo/texinfo.txi(,11567) 
../texinfo/texinfo.txi(,11568) @findex deftypeop
../texinfo/texinfo.txi(,11569) @item @@deftypeop @var{category} @var{class} @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11570) The @code{@@deftypeop} command is the definition command for typed
../texinfo/texinfo.txi(,11571) operations in object-oriented programming.  It is similar to
../texinfo/texinfo.txi(,11572) @code{@@defop} with the addition of the @var{data-type} parameter to
../texinfo/texinfo.txi(,11573) specify the return type of the method.  @code{@@deftypeop} creates an
../texinfo/texinfo.txi(,11574) entry in the index of functions.
../texinfo/texinfo.txi(,11575) 
../texinfo/texinfo.txi(,11576) @item @@defmethod @var{class} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11577) @findex defmethod
../texinfo/texinfo.txi(,11578) The @code{@@defmethod} command is the definition command for methods
../texinfo/texinfo.txi(,11579) in object-oriented programming.  A method is a kind of function that
../texinfo/texinfo.txi(,11580) implements an operation for a particular class of objects and its
../texinfo/texinfo.txi(,11581) subclasses.
../texinfo/texinfo.txi(,11588) 
../texinfo/texinfo.txi(,11589) @code{@@defmethod} is equivalent to @samp{@@defop Method @dots{}}.
../texinfo/texinfo.txi(,11590) The command is written at the beginning of a line and is followed by
../texinfo/texinfo.txi(,11591) the name of the class of the method, the name of the method, and its
../texinfo/texinfo.txi(,11592) arguments, if any.@refill
../texinfo/texinfo.txi(,11593) 
../texinfo/texinfo.txi(,11594) @noindent
../texinfo/texinfo.txi(,11595) For example:
../texinfo/texinfo.txi(,11596) @example
../texinfo/texinfo.txi(,11597) @group
../texinfo/texinfo.txi(,11598) @@defmethod @code{bar-class} bar-method argument
../texinfo/texinfo.txi(,11599) @dots{}
../texinfo/texinfo.txi(,11600) @@end defmethod
../texinfo/texinfo.txi(,11601) @end group
../texinfo/texinfo.txi(,11602) @end example
../texinfo/texinfo.txi(,11603) 
../texinfo/texinfo.txi(,11604) @noindent
../texinfo/texinfo.txi(,11605) illustrates the definition for a method called @code{bar-method} of
../texinfo/texinfo.txi(,11606) the class @code{bar-class}.  The method takes an argument.@refill
../texinfo/texinfo.txi(,11607) 
../texinfo/texinfo.txi(,11608) The template is:
../texinfo/texinfo.txi(,11609) 
../texinfo/texinfo.txi(,11610) @example
../texinfo/texinfo.txi(,11611) @group
../texinfo/texinfo.txi(,11612) @@defmethod @var{class} @var{method-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11613) @var{body-of-definition}
../texinfo/texinfo.txi(,11614) @@end defmethod
../texinfo/texinfo.txi(,11615) @end group
../texinfo/texinfo.txi(,11616) @end example
../texinfo/texinfo.txi(,11617) 
../texinfo/texinfo.txi(,11618) @code{@@defmethod} creates an entry, such as `@code{bar-method} on
../texinfo/texinfo.txi(,11619) @code{bar-class}', in the index of functions.@refill
../texinfo/texinfo.txi(,11620) 
../texinfo/texinfo.txi(,11621) 
../texinfo/texinfo.txi(,11622) @item @@deftypemethod @var{class} @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,11623) @findex defmethod
../texinfo/texinfo.txi(,11624) The @code{@@deftypemethod} command is the definition command for methods
../texinfo/texinfo.txi(,11625) in object-oriented typed languages, such as C++ and Java.  It is similar
../texinfo/texinfo.txi(,11626) to the @code{@@defmethod} command with the addition of the
../texinfo/texinfo.txi(,11627) @var{data-type} parameter to specify the return type of the method.
../texinfo/texinfo.txi(,11628) 
../texinfo/texinfo.txi(,11629) @end table
../texinfo/texinfo.txi(,11630) 
../texinfo/texinfo.txi(,11631) 
../texinfo/texinfo.txi(,11632) @node Data Types
../texinfo/texinfo.txi(,11633) @subsection Data Types
../texinfo/texinfo.txi(,11634) 
../texinfo/texinfo.txi(,11635) Here is the command for data types:@refill
../texinfo/texinfo.txi(,11636) 
../texinfo/texinfo.txi(,11637) @table @code
../texinfo/texinfo.txi(,11638) @findex deftp
../texinfo/texinfo.txi(,11639) @item @@deftp @var{category} @var{name} @var{attributes}@dots{}
../texinfo/texinfo.txi(,11640) The @code{@@deftp} command is the generic definition command for data
../texinfo/texinfo.txi(,11641) types.  The command is written at the beginning of a line and is
../texinfo/texinfo.txi(,11642) followed on the same line by the category, by the name of the type
../texinfo/texinfo.txi(,11643) (which is a word like @code{int} or @code{float}), and then by names of
../texinfo/texinfo.txi(,11644) attributes of objects of that type.  Thus, you could use this command
../texinfo/texinfo.txi(,11645) for describing @code{int} or @code{float}, in which case you could use
../texinfo/texinfo.txi(,11646) @code{data type} as the category.  (A data type is a category of
../texinfo/texinfo.txi(,11647) certain objects for purposes of deciding which operations can be
../texinfo/texinfo.txi(,11648) performed on them.)@refill
../texinfo/texinfo.txi(,11649) 
../texinfo/texinfo.txi(,11650) In Lisp, for example,  @dfn{pair} names a particular data
../texinfo/texinfo.txi(,11651) type, and an object of that type has two slots called the
../texinfo/texinfo.txi(,11652) @sc{car} and the @sc{cdr}.  Here is how you would write the first line
../texinfo/texinfo.txi(,11653) of a definition of @code{pair}.@refill
../texinfo/texinfo.txi(,11654) 
../texinfo/texinfo.txi(,11655) @example
../texinfo/texinfo.txi(,11656) @group
../texinfo/texinfo.txi(,11657) @@deftp @{Data type@} pair car cdr
../texinfo/texinfo.txi(,11658) @dots{}
../texinfo/texinfo.txi(,11659) @@end deftp
../texinfo/texinfo.txi(,11660) @end group
../texinfo/texinfo.txi(,11661) @end example
../texinfo/texinfo.txi(,11662) 
../texinfo/texinfo.txi(,11663) @need 950
../texinfo/texinfo.txi(,11664) The template is:
../texinfo/texinfo.txi(,11665) 
../texinfo/texinfo.txi(,11666) @example
../texinfo/texinfo.txi(,11667) @group
../texinfo/texinfo.txi(,11668) @@deftp @var{category} @var{name-of-type} @var{attributes}@dots{}
../texinfo/texinfo.txi(,11669) @var{body-of-definition}
../texinfo/texinfo.txi(,11670) @@end deftp
../texinfo/texinfo.txi(,11671) @end group
../texinfo/texinfo.txi(,11672) @end example
../texinfo/texinfo.txi(,11673) 
../texinfo/texinfo.txi(,11674) @code{@@deftp} creates an entry in the index of data types.
../texinfo/texinfo.txi(,11675) @end table
../texinfo/texinfo.txi(,11676) 
../texinfo/texinfo.txi(,11677) @node Def Cmd Conventions, Sample Function Definition, Def Cmds in Detail, Definition Commands
../texinfo/texinfo.txi(,11678) @section Conventions for Writing Definitions
../texinfo/texinfo.txi(,11679) @cindex Definition conventions
../texinfo/texinfo.txi(,11680) @cindex Conventions for writing definitions
../texinfo/texinfo.txi(,11681) 
../texinfo/texinfo.txi(,11682) When you write a definition using @code{@@deffn}, @code{@@defun}, or
../texinfo/texinfo.txi(,11683) one of the other definition commands, please take care to use
../texinfo/texinfo.txi(,11684) arguments that indicate the meaning, as with the @var{count} argument
../texinfo/texinfo.txi(,11685) to the @code{forward-word} function.  Also, if the name of an argument
../texinfo/texinfo.txi(,11686) contains the name of a type, such as @var{integer}, take care that the
../texinfo/texinfo.txi(,11687) argument actually is of that type.@refill
../texinfo/texinfo.txi(,11688) 
../texinfo/texinfo.txi(,11689) @node Sample Function Definition,  , Def Cmd Conventions, Definition Commands
../texinfo/texinfo.txi(,11690) @section A Sample Function Definition
../texinfo/texinfo.txi(,11691) @cindex Function definitions
../texinfo/texinfo.txi(,11692) @cindex Command definitions
../texinfo/texinfo.txi(,11693) @cindex Macro definitions
../texinfo/texinfo.txi(,11694) @cindex Sample function definition
../texinfo/texinfo.txi(,11695) 
../texinfo/texinfo.txi(,11696) A function definition uses the @code{@@defun} and @code{@@end defun}
../texinfo/texinfo.txi(,11697) commands.  The name of the function follows immediately after the
../texinfo/texinfo.txi(,11698) @code{@@defun} command and it is followed, on the same line, by the
../texinfo/texinfo.txi(,11699) parameter list.@refill
../texinfo/texinfo.txi(,11700) 
../texinfo/texinfo.txi(,11701) Here is a definition from @ref{Calling Functions,,, elisp, The GNU Emacs
../texinfo/texinfo.txi(,11702) Lisp Reference Manual}.
../texinfo/texinfo.txi(,11703) 
../texinfo/texinfo.txi(,11704) @quotation
../texinfo/texinfo.txi(,11705) @defun apply function &rest arguments
../texinfo/texinfo.txi(,11706) @code{apply} calls @var{function} with @var{arguments}, just
../texinfo/texinfo.txi(,11707) like @code{funcall} but with one difference: the last of
../texinfo/texinfo.txi(,11708) @var{arguments} is a list of arguments to give to
../texinfo/texinfo.txi(,11709) @var{function}, rather than a single argument.  We also say
../texinfo/texinfo.txi(,11710) that this list is @dfn{appended} to the other arguments.
../texinfo/texinfo.txi(,11711) 
../texinfo/texinfo.txi(,11712) @code{apply} returns the result of calling @var{function}.
../texinfo/texinfo.txi(,11713) As with @code{funcall}, @var{function} must either be a Lisp
../texinfo/texinfo.txi(,11714) function or a primitive function; special forms and macros
../texinfo/texinfo.txi(,11715) do not make sense in @code{apply}.
../texinfo/texinfo.txi(,11716) 
../texinfo/texinfo.txi(,11717) @example
../texinfo/texinfo.txi(,11718) (setq f 'list)
../texinfo/texinfo.txi(,11719)      @result{} list
../texinfo/texinfo.txi(,11720) (apply f 'x 'y 'z)
../texinfo/texinfo.txi(,11721) @error{} Wrong type argument: listp, z
../texinfo/texinfo.txi(,11722) (apply '+ 1 2 '(3 4))
../texinfo/texinfo.txi(,11723)      @result{} 10
../texinfo/texinfo.txi(,11724) (apply '+ '(1 2 3 4))
../texinfo/texinfo.txi(,11725)      @result{} 10
../texinfo/texinfo.txi(,11726) 
../texinfo/texinfo.txi(,11727) (apply 'append '((a b c) nil (x y z) nil))
../texinfo/texinfo.txi(,11728)      @result{} (a b c x y z)
../texinfo/texinfo.txi(,11729) @end example
../texinfo/texinfo.txi(,11730) 
../texinfo/texinfo.txi(,11731) An interesting example of using @code{apply} is found in the description
../texinfo/texinfo.txi(,11732) of @code{mapcar}.@refill
../texinfo/texinfo.txi(,11733) @end defun
../texinfo/texinfo.txi(,11734) @end quotation
../texinfo/texinfo.txi(,11735) 
../texinfo/texinfo.txi(,11736) @need 1200
../texinfo/texinfo.txi(,11737) In the Texinfo source file, this example looks like this:
../texinfo/texinfo.txi(,11738) 
../texinfo/texinfo.txi(,11739) @example
../texinfo/texinfo.txi(,11740) @group
../texinfo/texinfo.txi(,11741) @@defun apply function &rest arguments
../texinfo/texinfo.txi(,11742) @@code@{apply@} calls @@var@{function@} with
../texinfo/texinfo.txi(,11743) @@var@{arguments@}, just like @@code@{funcall@} but with one
../texinfo/texinfo.txi(,11744) difference: the last of @@var@{arguments@} is a list of
../texinfo/texinfo.txi(,11745) arguments to give to @@var@{function@}, rather than a single
../texinfo/texinfo.txi(,11746) argument.  We also say that this list is @@dfn@{appended@}
../texinfo/texinfo.txi(,11747) to the other arguments.
../texinfo/texinfo.txi(,11748) @end group
../texinfo/texinfo.txi(,11749) 
../texinfo/texinfo.txi(,11750) @group
../texinfo/texinfo.txi(,11751) @@code@{apply@} returns the result of calling
../texinfo/texinfo.txi(,11752) @@var@{function@}.  As with @@code@{funcall@},
../texinfo/texinfo.txi(,11753) @@var@{function@} must either be a Lisp function or a
../texinfo/texinfo.txi(,11754) primitive function; special forms and macros do not make
../texinfo/texinfo.txi(,11755) sense in @@code@{apply@}.
../texinfo/texinfo.txi(,11756) @end group
../texinfo/texinfo.txi(,11757) 
../texinfo/texinfo.txi(,11758) @group
../texinfo/texinfo.txi(,11759) @@example
../texinfo/texinfo.txi(,11760) (setq f 'list)
../texinfo/texinfo.txi(,11761)      @@result@{@} list
../texinfo/texinfo.txi(,11762) (apply f 'x 'y 'z)
../texinfo/texinfo.txi(,11763) @@error@{@} Wrong type argument: listp, z
../texinfo/texinfo.txi(,11764) (apply '+ 1 2 '(3 4))
../texinfo/texinfo.txi(,11765)      @@result@{@} 10
../texinfo/texinfo.txi(,11766) (apply '+ '(1 2 3 4))
../texinfo/texinfo.txi(,11767)      @@result@{@} 10
../texinfo/texinfo.txi(,11768) 
../texinfo/texinfo.txi(,11769) (apply 'append '((a b c) nil (x y z) nil))
../texinfo/texinfo.txi(,11770)      @@result@{@} (a b c x y z)
../texinfo/texinfo.txi(,11771) @@end example
../texinfo/texinfo.txi(,11772) @end group
../texinfo/texinfo.txi(,11773) 
../texinfo/texinfo.txi(,11774) @group
../texinfo/texinfo.txi(,11775) An interesting example of using @@code@{apply@} is found
../texinfo/texinfo.txi(,11776) in the description of @@code@{mapcar@}.
../texinfo/texinfo.txi(,11777) @@end defun
../texinfo/texinfo.txi(,11778) @end group
../texinfo/texinfo.txi(,11779) @end example
../texinfo/texinfo.txi(,11780) 
../texinfo/texinfo.txi(,11781) @noindent
../texinfo/texinfo.txi(,11782) In this manual, this function is listed in the Command and Variable
../texinfo/texinfo.txi(,11783) Index under @code{apply}.@refill
../texinfo/texinfo.txi(,11784) 
../texinfo/texinfo.txi(,11785) Ordinary variables and user options are described using a format like
../texinfo/texinfo.txi(,11786) that for functions except that variables do not take arguments.
../texinfo/texinfo.txi(,11787) 
../texinfo/texinfo.txi(,11788) 
../texinfo/texinfo.txi(,11789) @node Conditionals
../texinfo/texinfo.txi(,11790) @chapter Conditionally Visible Text
../texinfo/texinfo.txi(,11791) @cindex Conditionally visible text
../texinfo/texinfo.txi(,11792) @cindex Text, conditionally visible
../texinfo/texinfo.txi(,11793) @cindex Visibility of conditional text
../texinfo/texinfo.txi(,11794) @cindex If text conditionally visible
../texinfo/texinfo.txi(,11795) 
../texinfo/texinfo.txi(,11796) Sometimes it is good to use different text for different output formats.
../texinfo/texinfo.txi(,11797) For example, you can use the @dfn{conditional commands} to specify
../texinfo/texinfo.txi(,11798) different text for the printed manual and the Info output.
../texinfo/texinfo.txi(,11799) 
../texinfo/texinfo.txi(,11800) Conditional commands may not be nested.
../texinfo/texinfo.txi(,11801) 
../texinfo/texinfo.txi(,11802) The conditional commands comprise the following categories.
../texinfo/texinfo.txi(,11803) 
../texinfo/texinfo.txi(,11804) @itemize @bullet
../texinfo/texinfo.txi(,11805) @item Commands for HTML, Info, or @TeX{}.
../texinfo/texinfo.txi(,11806) @item Commands for not HTML, Info, or @TeX{}.
../texinfo/texinfo.txi(,11807) @item Raw @TeX{} or HTML commands.
../texinfo/texinfo.txi(,11808) @item
../texinfo/texinfo.txi(,11809) Substituting text for all formats, and testing if a flag is set or clear.
../texinfo/texinfo.txi(,11810) @end itemize
../texinfo/texinfo.txi(,11811) 
../texinfo/texinfo.txi(,11812) @menu
../texinfo/texinfo.txi(,11813) * Conditional Commands::        Specifying text for HTML, Info, or @TeX{}.
../texinfo/texinfo.txi(,11814) * Conditional Not Commands::    Specifying text for not HTML, Info, or @TeX{}.
../texinfo/texinfo.txi(,11815) * Raw Formatter Commands::      Using raw @TeX{} or HTML commands.
../texinfo/texinfo.txi(,11816) * set clear value::             Designating which text to format (for
../texinfo/texinfo.txi(,11817)                                   all output formats); and how to set a
../texinfo/texinfo.txi(,11818)                                   flag to a string that you can insert.
../texinfo/texinfo.txi(,11819) @end menu
../texinfo/texinfo.txi(,11820) 
../texinfo/texinfo.txi(,11821) 
../texinfo/texinfo.txi(,11822) @node Conditional Commands
../texinfo/texinfo.txi(,11823) @section Conditional Commands
../texinfo/texinfo.txi(,11824) 
../texinfo/texinfo.txi(,11825) Texinfo has a pair of commands for each output format, to allow
../texinfo/texinfo.txi(,11826) conditional inclusion of text for a particular output format.
../texinfo/texinfo.txi(,11827) 
../texinfo/texinfo.txi(,11828) @findex ifinfo
../texinfo/texinfo.txi(,11829) @code{@@ifinfo} begins segments of text that should be ignored by @TeX{}
../texinfo/texinfo.txi(,11830) when it typesets the printed manual.  The segment of text appears only
../texinfo/texinfo.txi(,11831) in the Info file and (for historical compatibility) the plain text
../texinfo/texinfo.txi(,11832) output.  The @code{@@ifinfo} command should appear on a line by itself;
../texinfo/texinfo.txi(,11833) end the Info-only text with a line containing @code{@@end ifinfo} by
../texinfo/texinfo.txi(,11834) itself.
../texinfo/texinfo.txi(,11835) 
../texinfo/texinfo.txi(,11836) @findex iftex
../texinfo/texinfo.txi(,11837) @findex ifhtml
../texinfo/texinfo.txi(,11838) @findex ifplaintext
../texinfo/texinfo.txi(,11839) The @code{@@iftex} and @code{@@end iftex} commands are analogous to the
../texinfo/texinfo.txi(,11840) @code{@@ifinfo} and @code{@@end ifinfo} commands; they specify text that
../texinfo/texinfo.txi(,11841) will appear in the printed manual but not in the Info file.  Likewise
../texinfo/texinfo.txi(,11842) for @code{@@ifhtml} and @code{@@end ifhtml}, which specify text to
../texinfo/texinfo.txi(,11843) appear only in HTML output.  And for @code{@@ifplaintext} and
../texinfo/texinfo.txi(,11844) @code{@@end ifplaintext}, which specify text to appear only in plain
../texinfo/texinfo.txi(,11845) text output.
../texinfo/texinfo.txi(,11846) 
../texinfo/texinfo.txi(,11847) For example,
../texinfo/texinfo.txi(,11848) 
../texinfo/texinfo.txi(,11849) @example
../texinfo/texinfo.txi(,11850) @@iftex
../texinfo/texinfo.txi(,11851) This text will appear only in the printed manual.
../texinfo/texinfo.txi(,11852) @@end iftex
../texinfo/texinfo.txi(,11853) @@ifinfo
../texinfo/texinfo.txi(,11854) However, this text will appear only in Info (or plain text).
../texinfo/texinfo.txi(,11855) @@end ifinfo
../texinfo/texinfo.txi(,11856) @@ifhtml
../texinfo/texinfo.txi(,11857) And this text will only appear in HTML.
../texinfo/texinfo.txi(,11858) @@end ifhtml
../texinfo/texinfo.txi(,11859) @@ifplaintext
../texinfo/texinfo.txi(,11860) Whereas this text will only appear in plain text.
../texinfo/texinfo.txi(,11861) @@end ifplaintext
../texinfo/texinfo.txi(,11862) @end example
../texinfo/texinfo.txi(,11863) 
../texinfo/texinfo.txi(,11864) @noindent
../texinfo/texinfo.txi(,11865) The preceding example produces the following line:
../texinfo/texinfo.txi(,11870) However, this text will appear only in Info (or plain text).
../texinfo/texinfo.txi(,11873) And this text will only appear in HTML.
../texinfo/texinfo.txi(,11878) 
../texinfo/texinfo.txi(,11879) @noindent
../texinfo/texinfo.txi(,11880) Notice that you only see one of the input lines, depending on which
../texinfo/texinfo.txi(,11881) version of the manual you are reading.
../texinfo/texinfo.txi(,11882) 
../texinfo/texinfo.txi(,11883) 
../texinfo/texinfo.txi(,11884) @node Conditional Not Commands
../texinfo/texinfo.txi(,11885) @section Conditional Not Commands
../texinfo/texinfo.txi(,11886) @findex ifnothtml
../texinfo/texinfo.txi(,11887) @findex ifnotinfo
../texinfo/texinfo.txi(,11888) @findex ifnotplaintext
../texinfo/texinfo.txi(,11889) @findex ifnottex
../texinfo/texinfo.txi(,11890) 
../texinfo/texinfo.txi(,11891) You can specify text to be included in any output format @emph{other}
../texinfo/texinfo.txi(,11892) than some given one with the @code{@@ifnot@dots{}} commands:
../texinfo/texinfo.txi(,11893) @example
../texinfo/texinfo.txi(,11894) @@ifnothtml @dots{} @@end ifnothtml
../texinfo/texinfo.txi(,11895) @@ifnotinfo @dots{} @@end ifnotinfo
../texinfo/texinfo.txi(,11896) @@ifnotplaintext @dots{} @@end ifnotplaintext
../texinfo/texinfo.txi(,11897) @@ifnottex @dots{} @@end ifnottex
../texinfo/texinfo.txi(,11898) @end example
../texinfo/texinfo.txi(,11899) @noindent
../texinfo/texinfo.txi(,11900) (The @code{@@ifnot@dots{}} command and the @code{@@end} command must
../texinfo/texinfo.txi(,11901) appear on lines by themselves in your actual source file.)
../texinfo/texinfo.txi(,11902) 
../texinfo/texinfo.txi(,11903) If the output file is @emph{not} being made for the given format, the
../texinfo/texinfo.txi(,11904) region is included.  Otherwise, it is ignored.
../texinfo/texinfo.txi(,11905) 
../texinfo/texinfo.txi(,11906) With one exception (for historical compatibility): @code{@@ifnotinfo}
../texinfo/texinfo.txi(,11907) text is omitted for both Info and plain text output, not just Info.  To
../texinfo/texinfo.txi(,11908) specify text which appears only in Info and not in plain text, use
../texinfo/texinfo.txi(,11909) @code{@@ifnotplaintext}, like this:
../texinfo/texinfo.txi(,11910) @example
../texinfo/texinfo.txi(,11913) This will be in Info, but not plain text.
../texinfo/texinfo.txi(,11916) @end example
../texinfo/texinfo.txi(,11917) 
../texinfo/texinfo.txi(,11918) The regions delimited by these commands are ordinary Texinfo source as
../texinfo/texinfo.txi(,11919) with @code{@@iftex}, not raw formatter source as with @code{@@tex}
../texinfo/texinfo.txi(,11920) (@pxref{Raw Formatter Commands}).
../texinfo/texinfo.txi(,11921) 
../texinfo/texinfo.txi(,11922) 
../texinfo/texinfo.txi(,11923) @node Raw Formatter Commands
../texinfo/texinfo.txi(,11924) @section Raw Formatter Commands
../texinfo/texinfo.txi(,11925) @cindex @TeX{} commands, using ordinary
../texinfo/texinfo.txi(,11926) @cindex HTML commands, using ordinary
../texinfo/texinfo.txi(,11927) @cindex Raw formatter commands
../texinfo/texinfo.txi(,11928) @cindex Ordinary @TeX{} commands, using
../texinfo/texinfo.txi(,11929) @cindex Ordinary HTML commands, using
../texinfo/texinfo.txi(,11930) @cindex Commands using raw @TeX{}
../texinfo/texinfo.txi(,11931) @cindex Commands using raw HTML
../texinfo/texinfo.txi(,11932) @cindex plain @TeX{}
../texinfo/texinfo.txi(,11933) 
../texinfo/texinfo.txi(,11934) Inside a region delineated by @code{@@iftex} and @code{@@end iftex}, you
../texinfo/texinfo.txi(,11935) can embed some raw @TeX{} commands.  Info will ignore these commands
../texinfo/texinfo.txi(,11936) since they are only in that part of the file which is seen by @TeX{}.
../texinfo/texinfo.txi(,11937) You can write the @TeX{} commands as you would write them in a normal
../texinfo/texinfo.txi(,11938) @TeX{} file, except that you must replace the @samp{\} used by @TeX{}
../texinfo/texinfo.txi(,11939) with an @samp{@@}.  For example, in the @code{@@titlepage} section of a
../texinfo/texinfo.txi(,11940) Texinfo file, you can use the @TeX{} command @code{@@vskip} to format
../texinfo/texinfo.txi(,11941) the copyright page.  (The @code{@@titlepage} command causes Info to
../texinfo/texinfo.txi(,11942) ignore the region automatically, as it does with the @code{@@iftex}
../texinfo/texinfo.txi(,11943) command.)
../texinfo/texinfo.txi(,11944) 
../texinfo/texinfo.txi(,11945) However, many features of plain @TeX{} will not work, as they are
../texinfo/texinfo.txi(,11946) overridden by Texinfo features.
../texinfo/texinfo.txi(,11947) 
../texinfo/texinfo.txi(,11948) @findex tex
../texinfo/texinfo.txi(,11949) You can enter plain @TeX{} completely, and use @samp{\} in the @TeX{}
../texinfo/texinfo.txi(,11950) commands, by delineating a region with the @code{@@tex} and @code{@@end
../texinfo/texinfo.txi(,11951) tex} commands.  (The @code{@@tex} command also causes Info to ignore the
../texinfo/texinfo.txi(,11952) region, like the @code{@@iftex} command.)  The sole exception is that the
../texinfo/texinfo.txi(,11953) @code{@@} character still introduces a command, so that @code{@@end tex}
../texinfo/texinfo.txi(,11954) can be recognized properly.
../texinfo/texinfo.txi(,11955) 
../texinfo/texinfo.txi(,11956) @cindex Mathematical expressions
../texinfo/texinfo.txi(,11957) For example, here is a mathematical expression written in
../texinfo/texinfo.txi(,11958) plain @TeX{}:
../texinfo/texinfo.txi(,11959) 
../texinfo/texinfo.txi(,11960) @example
../texinfo/texinfo.txi(,11961) @@tex
../texinfo/texinfo.txi(,11962) $$ \chi^2 = \sum_@{i=1@}^N
../texinfo/texinfo.txi(,11963)           \left (y_i - (a + b x_i)
../texinfo/texinfo.txi(,11964)           \over \sigma_i\right)^2 $$
../texinfo/texinfo.txi(,11965) @@end tex
../texinfo/texinfo.txi(,11966) @end example
../texinfo/texinfo.txi(,11967) 
../texinfo/texinfo.txi(,11968) @noindent
../texinfo/texinfo.txi(,11969) The output of this example will appear only in a printed manual.  If
../texinfo/texinfo.txi(,11970) you are reading this in Info, you will not see the equation that appears
../texinfo/texinfo.txi(,11971) in the printed manual.
../texinfo/texinfo.txi(,11976) 
../texinfo/texinfo.txi(,11982) 
../texinfo/texinfo.txi(,11983) @findex ifhtml
../texinfo/texinfo.txi(,11984) @findex html
../texinfo/texinfo.txi(,11985) Analogously, you can use @code{@@ifhtml @dots{} @@end ifhtml} to delimit
../texinfo/texinfo.txi(,11986) a region to be included in HTML output only, and @code{@@html @dots{}
../texinfo/texinfo.txi(,11987) @@end html} for a region of raw HTML (again, except that @code{@@} is
../texinfo/texinfo.txi(,11988) still the escape character, so the @code{@@end} command can be
../texinfo/texinfo.txi(,11989) recognized.)
../texinfo/texinfo.txi(,11990) 
../texinfo/texinfo.txi(,11991) 
../texinfo/texinfo.txi(,11992) @node set clear value
../texinfo/texinfo.txi(,11993) @section @code{@@set}, @code{@@clear}, and @code{@@value}
../texinfo/texinfo.txi(,11994) 
../texinfo/texinfo.txi(,11995) You can direct the Texinfo formatting commands to format or ignore parts
../texinfo/texinfo.txi(,11996) of a Texinfo file with the @code{@@set}, @code{@@clear}, @code{@@ifset},
../texinfo/texinfo.txi(,11997) and @code{@@ifclear} commands.@refill
../texinfo/texinfo.txi(,11998) 
../texinfo/texinfo.txi(,11999) Brief descriptions:
../texinfo/texinfo.txi(,12000) 
../texinfo/texinfo.txi(,12001) @table @code
../texinfo/texinfo.txi(,12002) @item @@set @var{flag} [@var{value}]
../texinfo/texinfo.txi(,12003) Set the variable @var{flag}, to the optional @var{value} if specifed.
../texinfo/texinfo.txi(,12004) 
../texinfo/texinfo.txi(,12005) @item @@clear @var{flag}
../texinfo/texinfo.txi(,12006) Undefine the variable @var{flag}, whether or not it was previously defined.
../texinfo/texinfo.txi(,12007) 
../texinfo/texinfo.txi(,12008) @item @@ifset @var{flag}
../texinfo/texinfo.txi(,12009) If @var{flag} is set, text through the next @code{@@end ifset} command
../texinfo/texinfo.txi(,12010) is formatted.  If @var{flag} is clear, text through the following
../texinfo/texinfo.txi(,12011) @code{@@end ifset} command is ignored.
../texinfo/texinfo.txi(,12012) 
../texinfo/texinfo.txi(,12013) @item @@ifclear @var{flag}
../texinfo/texinfo.txi(,12014) If @var{flag} is set, text through the next @code{@@end ifclear} command
../texinfo/texinfo.txi(,12015) is ignored.  If @var{flag} is clear, text through the following
../texinfo/texinfo.txi(,12016) @code{@@end ifclear} command is formatted.
../texinfo/texinfo.txi(,12017) @end table
../texinfo/texinfo.txi(,12018) 
../texinfo/texinfo.txi(,12019) @menu
../texinfo/texinfo.txi(,12020) * set value::                   Expand a flag variable to a string.
../texinfo/texinfo.txi(,12021) * ifset ifclear::               Format a region if a flag is set.
../texinfo/texinfo.txi(,12022) * value Example::               An easy way to update edition information.
../texinfo/texinfo.txi(,12023) @end menu
../texinfo/texinfo.txi(,12024) 
../texinfo/texinfo.txi(,12025) 
../texinfo/texinfo.txi(,12026) @node set value
../texinfo/texinfo.txi(,12027) @subsection @code{@@set} and @code{@@value}
../texinfo/texinfo.txi(,12028) @findex value
../texinfo/texinfo.txi(,12029) 
../texinfo/texinfo.txi(,12030) You use the @code{@@set} command to specify a value for a flag, which is
../texinfo/texinfo.txi(,12031) later expanded by the @code{@@value} command.
../texinfo/texinfo.txi(,12032) 
../texinfo/texinfo.txi(,12033) A @dfn{flag} is an identifier.  In general, it is best to use only
../texinfo/texinfo.txi(,12034) letters and numerals in a flag name, not @samp{-} or @samp{_}---they
../texinfo/texinfo.txi(,12035) will work in some contexts, but not all, due to limitations in @TeX{}.
../texinfo/texinfo.txi(,12036) 
../texinfo/texinfo.txi(,12037) The value is the remainder of the input line, and can contain anything.
../texinfo/texinfo.txi(,12038) 
../texinfo/texinfo.txi(,12039) Write the @code{@@set} command like this:
../texinfo/texinfo.txi(,12040) 
../texinfo/texinfo.txi(,12041) @example
../texinfo/texinfo.txi(,12042) @@set foo This is a string.
../texinfo/texinfo.txi(,12043) @end example
../texinfo/texinfo.txi(,12044) 
../texinfo/texinfo.txi(,12045) @noindent
../texinfo/texinfo.txi(,12046) This sets the value of the flag @code{foo} to ``This is a string.''.
../texinfo/texinfo.txi(,12047) 
../texinfo/texinfo.txi(,12048) The Texinfo formatters then replace an @code{@@value@{@var{flag}@}}
../texinfo/texinfo.txi(,12049) command with the string to which @var{flag} is set.  Thus, when
../texinfo/texinfo.txi(,12050) @code{foo} is set as shown above, the Texinfo formatters convert this:
../texinfo/texinfo.txi(,12051) 
../texinfo/texinfo.txi(,12052) @example
../texinfo/texinfo.txi(,12053) @group
../texinfo/texinfo.txi(,12054) @@value@{foo@}
../texinfo/texinfo.txi(,12055) @exdent @r{to this:}
../texinfo/texinfo.txi(,12056) This is a string.
../texinfo/texinfo.txi(,12057) @end group
../texinfo/texinfo.txi(,12058) @end example
../texinfo/texinfo.txi(,12059) 
../texinfo/texinfo.txi(,12060) You can write an @code{@@value} command within a paragraph; but you
../texinfo/texinfo.txi(,12061) must write an @code{@@set} command on a line of its own.
../texinfo/texinfo.txi(,12062) 
../texinfo/texinfo.txi(,12063) If you write the @code{@@set} command like this:
../texinfo/texinfo.txi(,12064) 
../texinfo/texinfo.txi(,12065) @example
../texinfo/texinfo.txi(,12066) @@set foo
../texinfo/texinfo.txi(,12067) @end example
../texinfo/texinfo.txi(,12068) 
../texinfo/texinfo.txi(,12069) @noindent
../texinfo/texinfo.txi(,12070) without specifying a string, the value of @code{foo} is the empty string.
../texinfo/texinfo.txi(,12071) 
../texinfo/texinfo.txi(,12072) If you clear a previously set flag with @code{@@clear @var{flag}}, a
../texinfo/texinfo.txi(,12073) subsequent @code{@@value@{flag@}} command will report an error.
../texinfo/texinfo.txi(,12074) 
../texinfo/texinfo.txi(,12075) For example, if you set @code{foo} as follows:@refill
../texinfo/texinfo.txi(,12076) 
../texinfo/texinfo.txi(,12077) @example
../texinfo/texinfo.txi(,12078) @@set how-much very, very, very
../texinfo/texinfo.txi(,12079) @end example
../texinfo/texinfo.txi(,12080) 
../texinfo/texinfo.txi(,12081) @noindent
../texinfo/texinfo.txi(,12082) then the formatters transform
../texinfo/texinfo.txi(,12083) 
../texinfo/texinfo.txi(,12084) @example
../texinfo/texinfo.txi(,12085) @group
../texinfo/texinfo.txi(,12086) It is a @@value@{how-much@} wet day.
../texinfo/texinfo.txi(,12087) @exdent @r{into}
../texinfo/texinfo.txi(,12088) It is a very, very, very wet day.
../texinfo/texinfo.txi(,12089) @end group
../texinfo/texinfo.txi(,12090) @end example
../texinfo/texinfo.txi(,12091) 
../texinfo/texinfo.txi(,12092) If you write
../texinfo/texinfo.txi(,12093) 
../texinfo/texinfo.txi(,12094) @example
../texinfo/texinfo.txi(,12095) @@clear how-much
../texinfo/texinfo.txi(,12096) @end example
../texinfo/texinfo.txi(,12097) 
../texinfo/texinfo.txi(,12098) @noindent
../texinfo/texinfo.txi(,12099) then the formatters transform
../texinfo/texinfo.txi(,12100) 
../texinfo/texinfo.txi(,12101) @example
../texinfo/texinfo.txi(,12102) @group
../texinfo/texinfo.txi(,12103) It is a @@value@{how-much@} wet day.
../texinfo/texinfo.txi(,12104) @exdent @r{into}
../texinfo/texinfo.txi(,12105) It is a @{No value for "how-much"@} wet day.
../texinfo/texinfo.txi(,12106) @end group
../texinfo/texinfo.txi(,12107) @end example
../texinfo/texinfo.txi(,12108) 
../texinfo/texinfo.txi(,12109) 
../texinfo/texinfo.txi(,12110) @node ifset ifclear
../texinfo/texinfo.txi(,12111) @subsection @code{@@ifset} and @code{@@ifclear}
../texinfo/texinfo.txi(,12112) 
../texinfo/texinfo.txi(,12113) @findex ifset
../texinfo/texinfo.txi(,12114) When a @var{flag} is set, the Texinfo formatting commands format text
../texinfo/texinfo.txi(,12115) between subsequent pairs of @code{@@ifset @var{flag}} and @code{@@end
../texinfo/texinfo.txi(,12116) ifset} commands.  When the @var{flag} is cleared, the Texinfo formatting
../texinfo/texinfo.txi(,12117) commands do @emph{not} format the text.  @code{@@ifclear} operates
../texinfo/texinfo.txi(,12118) analogously.
../texinfo/texinfo.txi(,12119) 
../texinfo/texinfo.txi(,12120) Write the conditionally formatted text between @code{@@ifset @var{flag}}
../texinfo/texinfo.txi(,12121) and @code{@@end ifset} commands, like this:
../texinfo/texinfo.txi(,12122) 
../texinfo/texinfo.txi(,12123) @example
../texinfo/texinfo.txi(,12124) @group
../texinfo/texinfo.txi(,12125) @@ifset @var{flag}
../texinfo/texinfo.txi(,12126) @var{conditional-text}
../texinfo/texinfo.txi(,12127) @@end ifset
../texinfo/texinfo.txi(,12128) @end group
../texinfo/texinfo.txi(,12129) @end example
../texinfo/texinfo.txi(,12130) 
../texinfo/texinfo.txi(,12131) For example, you can create one document that has two variants, such as
../texinfo/texinfo.txi(,12132) a manual for a `large' and `small' model:
../texinfo/texinfo.txi(,12133) 
../texinfo/texinfo.txi(,12134) @cindex shrubbery
../texinfo/texinfo.txi(,12135) @example
../texinfo/texinfo.txi(,12136) You can use this machine to dig up shrubs
../texinfo/texinfo.txi(,12137) without hurting them.
../texinfo/texinfo.txi(,12138) 
../texinfo/texinfo.txi(,12139) @@set large
../texinfo/texinfo.txi(,12140) 
../texinfo/texinfo.txi(,12141) @@ifset large
../texinfo/texinfo.txi(,12142) It can also dig up fully grown trees.
../texinfo/texinfo.txi(,12143) @@end ifset
../texinfo/texinfo.txi(,12144) 
../texinfo/texinfo.txi(,12145) Remember to replant promptly @dots{}
../texinfo/texinfo.txi(,12146) @end example
../texinfo/texinfo.txi(,12147) 
../texinfo/texinfo.txi(,12148) @noindent
../texinfo/texinfo.txi(,12149) In the example, the formatting commands will format the text between
../texinfo/texinfo.txi(,12150) @code{@@ifset large} and @code{@@end ifset} because the @code{large}
../texinfo/texinfo.txi(,12151) flag is set.
../texinfo/texinfo.txi(,12152) 
../texinfo/texinfo.txi(,12153) When @var{flag} is cleared, the Texinfo formatting commands do
../texinfo/texinfo.txi(,12154) @emph{not} format the text between @code{@@ifset @var{flag}} and
../texinfo/texinfo.txi(,12155) @code{@@end ifset}; that text is ignored and does not appear in either
../texinfo/texinfo.txi(,12156) printed or Info output.
../texinfo/texinfo.txi(,12157) 
../texinfo/texinfo.txi(,12158) For example, if you clear the flag of the preceding example by writing
../texinfo/texinfo.txi(,12159) an @code{@@clear large} command after the @code{@@set large} command
../texinfo/texinfo.txi(,12160) (but before the conditional text), then the Texinfo formatting commands
../texinfo/texinfo.txi(,12161) ignore the text between the @code{@@ifset large} and @code{@@end ifset}
../texinfo/texinfo.txi(,12162) commands.  In the formatted output, that text does not appear; in both
../texinfo/texinfo.txi(,12163) printed and Info output, you see only the lines that say, ``You can use
../texinfo/texinfo.txi(,12164) this machine to dig up shrubs without hurting them.  Remember to replant
../texinfo/texinfo.txi(,12165) promptly @dots{}''.
../texinfo/texinfo.txi(,12166) 
../texinfo/texinfo.txi(,12167) @findex ifclear
../texinfo/texinfo.txi(,12168) If a flag is cleared with an @code{@@clear @var{flag}} command, then
../texinfo/texinfo.txi(,12169) the formatting commands format text between subsequent pairs of
../texinfo/texinfo.txi(,12170) @code{@@ifclear} and @code{@@end ifclear} commands.  But if the flag
../texinfo/texinfo.txi(,12171) is set with @code{@@set @var{flag}}, then the formatting commands do
../texinfo/texinfo.txi(,12172) @emph{not} format text between an @code{@@ifclear} and an @code{@@end
../texinfo/texinfo.txi(,12173) ifclear} command; rather, they ignore that text.  An @code{@@ifclear}
../texinfo/texinfo.txi(,12174) command looks like this:
../texinfo/texinfo.txi(,12175) 
../texinfo/texinfo.txi(,12176) @example
../texinfo/texinfo.txi(,12177) @@ifclear @var{flag}
../texinfo/texinfo.txi(,12178) @end example
../texinfo/texinfo.txi(,12179) 
../texinfo/texinfo.txi(,12180) 
../texinfo/texinfo.txi(,12181) @node value Example
../texinfo/texinfo.txi(,12182) @subsection @code{@@value} Example
../texinfo/texinfo.txi(,12183) 
../texinfo/texinfo.txi(,12184) You can use the @code{@@value} command to minimize the number of places
../texinfo/texinfo.txi(,12185) you need to change when you record an update to a manual.  @xref{GNU
../texinfo/texinfo.txi(,12186) Sample Texts}, for an example of this same principle can work with
../texinfo/texinfo.txi(,12187) Automake distributions, and full texts.
../texinfo/texinfo.txi(,12188) 
../texinfo/texinfo.txi(,12189) Here is an example adapted from @ref{Top,, Overview, make, The GNU Make
../texinfo/texinfo.txi(,12190) Manual}):
../texinfo/texinfo.txi(,12191) 
../texinfo/texinfo.txi(,12192) @enumerate
../texinfo/texinfo.txi(,12193) @item
../texinfo/texinfo.txi(,12194) Set the flags:
../texinfo/texinfo.txi(,12195) 
../texinfo/texinfo.txi(,12196) @example
../texinfo/texinfo.txi(,12197) @group
../texinfo/texinfo.txi(,12198) @@set EDITION 0.35 Beta
../texinfo/texinfo.txi(,12199) @@set VERSION 3.63 Beta
../texinfo/texinfo.txi(,12200) @@set UPDATED 14 August 1992
../texinfo/texinfo.txi(,12201) @@set UPDATE-MONTH August 1992
../texinfo/texinfo.txi(,12202) @end group
../texinfo/texinfo.txi(,12203) @end example
../texinfo/texinfo.txi(,12204) 
../texinfo/texinfo.txi(,12205) @item
../texinfo/texinfo.txi(,12206) Write text for the @code{@@copying} section (@pxref{copying}):
../texinfo/texinfo.txi(,12207) 
../texinfo/texinfo.txi(,12208) @example
../texinfo/texinfo.txi(,12209) @group
../texinfo/texinfo.txi(,12210) @@copying
../texinfo/texinfo.txi(,12211) This is Edition @@value@{EDITION@},
../texinfo/texinfo.txi(,12212) last updated @@value@{UPDATED@},
../texinfo/texinfo.txi(,12213) of @@cite@{The GNU Make Manual@},
../texinfo/texinfo.txi(,12214) for @@code@{make@}, version @@value@{VERSION@}.
../texinfo/texinfo.txi(,12215) 
../texinfo/texinfo.txi(,12216) Copyright @dots{}
../texinfo/texinfo.txi(,12217) 
../texinfo/texinfo.txi(,12218) Permission is granted @dots{}
../texinfo/texinfo.txi(,12219) @@end copying
../texinfo/texinfo.txi(,12220) @end group
../texinfo/texinfo.txi(,12221) @end example
../texinfo/texinfo.txi(,12222) 
../texinfo/texinfo.txi(,12223) @item
../texinfo/texinfo.txi(,12224) Write text for the title page, for people reading the printed manual:
../texinfo/texinfo.txi(,12225) 
../texinfo/texinfo.txi(,12226) @example
../texinfo/texinfo.txi(,12227) @group
../texinfo/texinfo.txi(,12228) @@titlepage
../texinfo/texinfo.txi(,12229) @@title GNU Make
../texinfo/texinfo.txi(,12230) @@subtitle A Program for Directing Recompilation
../texinfo/texinfo.txi(,12231) @@subtitle Edition @@value@{EDITION@}, @dots{}
../texinfo/texinfo.txi(,12232) @@subtitle @@value@{UPDATE-MONTH@}
../texinfo/texinfo.txi(,12233) @@page
../texinfo/texinfo.txi(,12234) @@insertcopying
../texinfo/texinfo.txi(,12235) @dots{}
../texinfo/texinfo.txi(,12236) @@end titlepage
../texinfo/texinfo.txi(,12237) @end group
../texinfo/texinfo.txi(,12238) @end example
../texinfo/texinfo.txi(,12239) 
../texinfo/texinfo.txi(,12240) @noindent
../texinfo/texinfo.txi(,12241) (On a printed cover, a date listing the month and the year looks less
../texinfo/texinfo.txi(,12242) fussy than a date listing the day as well as the month and year.)
../texinfo/texinfo.txi(,12243) 
../texinfo/texinfo.txi(,12244) @item
../texinfo/texinfo.txi(,12245) Write text for the Top node, for people reading the Info file:
../texinfo/texinfo.txi(,12246) 
../texinfo/texinfo.txi(,12247) @example
../texinfo/texinfo.txi(,12248) @group
../texinfo/texinfo.txi(,12249) @@ifnottex
../texinfo/texinfo.txi(,12250) @@node Top
../texinfo/texinfo.txi(,12251) @@top Make
../texinfo/texinfo.txi(,12252) 
../texinfo/texinfo.txi(,12253) @@insertcopying
../texinfo/texinfo.txi(,12254) @dots{}
../texinfo/texinfo.txi(,12255) @@end ifnottex
../texinfo/texinfo.txi(,12256) @end group
../texinfo/texinfo.txi(,12257) @end example
../texinfo/texinfo.txi(,12258) 
../texinfo/texinfo.txi(,12259) After you format the manual, the @code{@@value} constructs have been
../texinfo/texinfo.txi(,12260) expanded, so the output contains text like this:
../texinfo/texinfo.txi(,12261) 
../texinfo/texinfo.txi(,12262) @example
../texinfo/texinfo.txi(,12263) @group
../texinfo/texinfo.txi(,12264) This is Edition 0.35 Beta, last updated 14 August 1992,
../texinfo/texinfo.txi(,12265) of `The GNU Make Manual', for `make', Version 3.63 Beta.
../texinfo/texinfo.txi(,12266) @end group
../texinfo/texinfo.txi(,12267) @end example
../texinfo/texinfo.txi(,12268) @end enumerate
../texinfo/texinfo.txi(,12269) 
../texinfo/texinfo.txi(,12270) When you update the manual, you change only the values of the flags; you
../texinfo/texinfo.txi(,12271) do not need to edit the three sections.
../texinfo/texinfo.txi(,12272) 
../texinfo/texinfo.txi(,12273) 
../texinfo/texinfo.txi(,12274) @node Internationalization
../texinfo/texinfo.txi(,12275) @chapter Internationalization
../texinfo/texinfo.txi(,12276) 
../texinfo/texinfo.txi(,12277) @cindex Internationalization
../texinfo/texinfo.txi(,12278) Texinfo has some support for writing in languages other than English,
../texinfo/texinfo.txi(,12279) although this area still needs considerable work.
../texinfo/texinfo.txi(,12280) 
../texinfo/texinfo.txi(,12281) For a list of the various accented and special characters Texinfo
../texinfo/texinfo.txi(,12282) supports, see @ref{Inserting Accents}.
../texinfo/texinfo.txi(,12283) 
../texinfo/texinfo.txi(,12284) @menu
../texinfo/texinfo.txi(,12285) * documentlanguage::            Declaring the current language.
../texinfo/texinfo.txi(,12286) * documentencoding::            Declaring the input encoding.
../texinfo/texinfo.txi(,12287) @end menu
../texinfo/texinfo.txi(,12288) 
../texinfo/texinfo.txi(,12289) 
../texinfo/texinfo.txi(,12290) @node documentlanguage
../texinfo/texinfo.txi(,12291) @section @code{@@documentlanguage @var{cc}}: Set the Document Language
../texinfo/texinfo.txi(,12292) 
../texinfo/texinfo.txi(,12293) @findex documentlanguage
../texinfo/texinfo.txi(,12294) @cindex Language, declaring
../texinfo/texinfo.txi(,12295) @cindex Document language, declaring
../texinfo/texinfo.txi(,12296) 
../texinfo/texinfo.txi(,12297) The @code{@@documentlanguage} command declares the current document
../texinfo/texinfo.txi(,12298) language.  Write it on a line by itself, with a two-letter ISO-639
../texinfo/texinfo.txi(,12299) language code following (list is included below).  If you have a
../texinfo/texinfo.txi(,12300) multilingual document, the intent is to be able to use this command
../texinfo/texinfo.txi(,12301) multiple times, to declare each language change.  If the command is not
../texinfo/texinfo.txi(,12302) used at all, the default is @code{en} for English.
../texinfo/texinfo.txi(,12303) 
../texinfo/texinfo.txi(,12304) @cindex @file{txi-@var{cc}.tex}
../texinfo/texinfo.txi(,12305) At present, this command is ignored in Info and HTML output.  For
../texinfo/texinfo.txi(,12306) @TeX{}, it causes the file @file{txi-@var{cc}.tex} to be read (if it
../texinfo/texinfo.txi(,12307) exists).  Such a file appropriately redefines the various English words
../texinfo/texinfo.txi(,12308) used in @TeX{} output, such as `Chapter', `See', and so on.
../texinfo/texinfo.txi(,12309) 
../texinfo/texinfo.txi(,12310) @cindex Hyphenation patterns, language-dependent
../texinfo/texinfo.txi(,12311) It would be good if this command also changed @TeX{}'s ideas of the
../texinfo/texinfo.txi(,12312) current hyphenation patterns (via the @TeX{} primitive
../texinfo/texinfo.txi(,12313) @code{\language}), but this is unfortunately not currently implemented.
../texinfo/texinfo.txi(,12314) 
../texinfo/texinfo.txi(,12315) @cindex ISO 639 codes
../texinfo/texinfo.txi(,12316) @cindex Language codes
../texinfo/texinfo.txi(,12317) Hereare the valid language codes, from ISO-639.
../texinfo/texinfo.txi(,12318) 
../texinfo/texinfo.txi(,12319) @multitable @columnfractions .07 .26 .07 .26 .07 .26
../texinfo/texinfo.txi(,12320) @item
../texinfo/texinfo.txi(,12321) @code{aa} @tab Afar @tab
../texinfo/texinfo.txi(,12322) @code{ab} @tab Abkhazian @tab
../texinfo/texinfo.txi(,12323) @code{af} @tab Afrikaans
../texinfo/texinfo.txi(,12324) @item
../texinfo/texinfo.txi(,12325) @code{am} @tab Amharic @tab
../texinfo/texinfo.txi(,12326) @code{ar} @tab Arabic @tab
../texinfo/texinfo.txi(,12327) @code{as} @tab Assamese
../texinfo/texinfo.txi(,12328) @item
../texinfo/texinfo.txi(,12329) @code{ay} @tab Aymara @tab
../texinfo/texinfo.txi(,12330) @code{az} @tab Azerbaijani @tab
../texinfo/texinfo.txi(,12331) @code{ba} @tab Bashkir
../texinfo/texinfo.txi(,12332) @item
../texinfo/texinfo.txi(,12333) @code{be} @tab Byelorussian @tab
../texinfo/texinfo.txi(,12334) @code{bg} @tab Bulgarian @tab
../texinfo/texinfo.txi(,12335) @code{bh} @tab Bihari
../texinfo/texinfo.txi(,12336) @item
../texinfo/texinfo.txi(,12337) @code{bi} @tab Bislama @tab
../texinfo/texinfo.txi(,12338) @code{bn} @tab Bengali; Bangla @tab
../texinfo/texinfo.txi(,12339) @code{bo} @tab Tibetan
../texinfo/texinfo.txi(,12340) @item
../texinfo/texinfo.txi(,12341) @code{br} @tab Breton @tab
../texinfo/texinfo.txi(,12342) @code{ca} @tab Catalan @tab
../texinfo/texinfo.txi(,12343) @code{co} @tab Corsican
../texinfo/texinfo.txi(,12344) @item
../texinfo/texinfo.txi(,12345) @code{cs} @tab Czech @tab
../texinfo/texinfo.txi(,12346) @code{cy} @tab Welsh @tab
../texinfo/texinfo.txi(,12347) @code{da} @tab Danish
../texinfo/texinfo.txi(,12348) @item
../texinfo/texinfo.txi(,12349) @code{de} @tab German @tab
../texinfo/texinfo.txi(,12350) @code{dz} @tab Bhutani @tab
../texinfo/texinfo.txi(,12351) @code{el} @tab Greek
../texinfo/texinfo.txi(,12352) @item
../texinfo/texinfo.txi(,12353) @code{en} @tab English @tab
../texinfo/texinfo.txi(,12354) @code{eo} @tab Esperanto @tab
../texinfo/texinfo.txi(,12355) @code{es} @tab Spanish
../texinfo/texinfo.txi(,12356) @item
../texinfo/texinfo.txi(,12357) @code{et} @tab Estonian @tab
../texinfo/texinfo.txi(,12358) @code{eu} @tab Basque @tab
../texinfo/texinfo.txi(,12359) @code{fa} @tab Persian
../texinfo/texinfo.txi(,12360) @item
../texinfo/texinfo.txi(,12361) @code{fi} @tab Finnish @tab
../texinfo/texinfo.txi(,12362) @code{fj} @tab Fiji @tab
../texinfo/texinfo.txi(,12363) @code{fo} @tab Faroese
../texinfo/texinfo.txi(,12364) @item
../texinfo/texinfo.txi(,12365) @code{fr} @tab French @tab
../texinfo/texinfo.txi(,12366) @code{fy} @tab Frisian @tab
../texinfo/texinfo.txi(,12367) @code{ga} @tab Irish
../texinfo/texinfo.txi(,12368) @item
../texinfo/texinfo.txi(,12369) @code{gd} @tab Scots Gaelic @tab
../texinfo/texinfo.txi(,12370) @code{gl} @tab Galician @tab
../texinfo/texinfo.txi(,12371) @code{gn} @tab Guarani
../texinfo/texinfo.txi(,12372) @item
../texinfo/texinfo.txi(,12373) @code{gu} @tab Gujarati @tab
../texinfo/texinfo.txi(,12374) @code{ha} @tab Hausa @tab
../texinfo/texinfo.txi(,12375) @code{he} @tab Hebrew
../texinfo/texinfo.txi(,12376) @item
../texinfo/texinfo.txi(,12377) @code{hi} @tab Hindi @tab
../texinfo/texinfo.txi(,12378) @code{hr} @tab Croatian @tab
../texinfo/texinfo.txi(,12379) @code{hu} @tab Hungarian
../texinfo/texinfo.txi(,12380) @item
../texinfo/texinfo.txi(,12381) @code{hy} @tab Armenian @tab
../texinfo/texinfo.txi(,12382) @code{ia} @tab Interlingua @tab
../texinfo/texinfo.txi(,12383) @code{id} @tab Indonesian
../texinfo/texinfo.txi(,12384) @item
../texinfo/texinfo.txi(,12385) @code{ie} @tab Interlingue @tab
../texinfo/texinfo.txi(,12386) @code{ik} @tab Inupiak @tab
../texinfo/texinfo.txi(,12387) @code{is} @tab Icelandic
../texinfo/texinfo.txi(,12388) @item
../texinfo/texinfo.txi(,12389) @code{it} @tab Italian @tab
../texinfo/texinfo.txi(,12390) @code{iu} @tab Inuktitut @tab
../texinfo/texinfo.txi(,12391) @code{ja} @tab Japanese
../texinfo/texinfo.txi(,12392) @item
../texinfo/texinfo.txi(,12393) @code{jw} @tab Javanese @tab
../texinfo/texinfo.txi(,12394) @code{ka} @tab Georgian @tab
../texinfo/texinfo.txi(,12395) @code{kk} @tab Kazakh
../texinfo/texinfo.txi(,12396) @item
../texinfo/texinfo.txi(,12397) @code{kl} @tab Greenlandic @tab
../texinfo/texinfo.txi(,12398) @code{km} @tab Cambodian @tab
../texinfo/texinfo.txi(,12399) @code{kn} @tab Kannada
../texinfo/texinfo.txi(,12400) @item
../texinfo/texinfo.txi(,12401) @code{ks} @tab Kashmiri @tab
../texinfo/texinfo.txi(,12402) @code{ko} @tab Korean @tab
../texinfo/texinfo.txi(,12403) @code{ku} @tab Kurdish
../texinfo/texinfo.txi(,12404) @item
../texinfo/texinfo.txi(,12405) @code{ky} @tab Kirghiz @tab
../texinfo/texinfo.txi(,12406) @code{la} @tab Latin @tab
../texinfo/texinfo.txi(,12407) @code{ln} @tab Lingala
../texinfo/texinfo.txi(,12408) @item
../texinfo/texinfo.txi(,12409) @code{lt} @tab Lithuanian @tab
../texinfo/texinfo.txi(,12410) @code{lo} @tab Laothian @tab
../texinfo/texinfo.txi(,12411) @code{lv} @tab Latvian, Lettish
../texinfo/texinfo.txi(,12412) @item
../texinfo/texinfo.txi(,12413) @code{mg} @tab Malagasy @tab
../texinfo/texinfo.txi(,12414) @code{mi} @tab Maori @tab
../texinfo/texinfo.txi(,12415) @code{mk} @tab Macedonian
../texinfo/texinfo.txi(,12416) @item
../texinfo/texinfo.txi(,12417) @code{ml} @tab Malayalam @tab
../texinfo/texinfo.txi(,12418) @code{mn} @tab Mongolian @tab
../texinfo/texinfo.txi(,12419) @code{mo} @tab Moldavian
../texinfo/texinfo.txi(,12420) @item
../texinfo/texinfo.txi(,12421) @code{mr} @tab Marathi @tab
../texinfo/texinfo.txi(,12422) @code{ms} @tab Malay @tab
../texinfo/texinfo.txi(,12423) @code{mt} @tab Maltese
../texinfo/texinfo.txi(,12424) @item
../texinfo/texinfo.txi(,12425) @code{my} @tab Burmese @tab
../texinfo/texinfo.txi(,12426) @code{na} @tab Nauru @tab
../texinfo/texinfo.txi(,12427) @code{ne} @tab Nepali
../texinfo/texinfo.txi(,12428) @item
../texinfo/texinfo.txi(,12429) @code{nl} @tab Dutch @tab
../texinfo/texinfo.txi(,12430) @code{no} @tab Norwegian @tab
../texinfo/texinfo.txi(,12431) @code{oc} @tab Occitan
../texinfo/texinfo.txi(,12432) @item
../texinfo/texinfo.txi(,12433) @code{om} @tab (Afan) Oromo @tab
../texinfo/texinfo.txi(,12434) @code{or} @tab Oriya @tab
../texinfo/texinfo.txi(,12435) @code{pa} @tab Punjabi
../texinfo/texinfo.txi(,12436) @item
../texinfo/texinfo.txi(,12437) @code{pl} @tab Polish @tab
../texinfo/texinfo.txi(,12438) @code{ps} @tab Pashto, Pushto @tab
../texinfo/texinfo.txi(,12439) @code{pt} @tab Portuguese
../texinfo/texinfo.txi(,12440) @item
../texinfo/texinfo.txi(,12441) @code{qu} @tab Quechua @tab
../texinfo/texinfo.txi(,12442) @code{rm} @tab Rhaeto-Romance @tab
../texinfo/texinfo.txi(,12443) @code{rn} @tab Kirundi
../texinfo/texinfo.txi(,12444) @item
../texinfo/texinfo.txi(,12445) @code{ro} @tab Romanian @tab
../texinfo/texinfo.txi(,12446) @code{ru} @tab Russian @tab
../texinfo/texinfo.txi(,12447) @code{rw} @tab Kinyarwanda
../texinfo/texinfo.txi(,12448) @item
../texinfo/texinfo.txi(,12449) @code{sa} @tab Sanskrit @tab
../texinfo/texinfo.txi(,12450) @code{sd} @tab Sindhi @tab
../texinfo/texinfo.txi(,12451) @code{sg} @tab Sangro
../texinfo/texinfo.txi(,12452) @item
../texinfo/texinfo.txi(,12453) @code{sh} @tab Serbo-Croatian @tab
../texinfo/texinfo.txi(,12454) @code{si} @tab Sinhalese @tab
../texinfo/texinfo.txi(,12455) @code{sk} @tab Slovak
../texinfo/texinfo.txi(,12456) @item
../texinfo/texinfo.txi(,12457) @code{sl} @tab Slovenian @tab
../texinfo/texinfo.txi(,12458) @code{sm} @tab Samoan @tab
../texinfo/texinfo.txi(,12459) @code{sn} @tab Shona
../texinfo/texinfo.txi(,12460) @item
../texinfo/texinfo.txi(,12461) @code{so} @tab Somali @tab
../texinfo/texinfo.txi(,12462) @code{sq} @tab Albanian @tab
../texinfo/texinfo.txi(,12463) @code{sr} @tab Serbian
../texinfo/texinfo.txi(,12464) @item
../texinfo/texinfo.txi(,12465) @code{ss} @tab Siswati @tab
../texinfo/texinfo.txi(,12466) @code{st} @tab Sesotho @tab
../texinfo/texinfo.txi(,12467) @code{su} @tab Sundanese
../texinfo/texinfo.txi(,12468) @item
../texinfo/texinfo.txi(,12469) @code{sv} @tab Swedish @tab
../texinfo/texinfo.txi(,12470) @code{sw} @tab Swahili @tab
../texinfo/texinfo.txi(,12471) @code{ta} @tab Tamil
../texinfo/texinfo.txi(,12472) @item
../texinfo/texinfo.txi(,12473) @code{te} @tab Telugu @tab
../texinfo/texinfo.txi(,12474) @code{tg} @tab Tajik @tab
../texinfo/texinfo.txi(,12475) @code{th} @tab Thai
../texinfo/texinfo.txi(,12476) @item
../texinfo/texinfo.txi(,12477) @code{ti} @tab Tigrinya @tab
../texinfo/texinfo.txi(,12478) @code{tk} @tab Turkmen @tab
../texinfo/texinfo.txi(,12479) @code{tl} @tab Tagalog
../texinfo/texinfo.txi(,12480) @item
../texinfo/texinfo.txi(,12481) @code{tn} @tab Setswana @tab
../texinfo/texinfo.txi(,12482) @code{to} @tab Tonga @tab
../texinfo/texinfo.txi(,12483) @code{tr} @tab Turkish
../texinfo/texinfo.txi(,12484) @item
../texinfo/texinfo.txi(,12485) @code{ts} @tab Tsonga @tab
../texinfo/texinfo.txi(,12486) @code{tt} @tab Tatar @tab
../texinfo/texinfo.txi(,12487) @code{tw} @tab Twi
../texinfo/texinfo.txi(,12488) @item
../texinfo/texinfo.txi(,12489) @code{ug} @tab Uighur @tab
../texinfo/texinfo.txi(,12490) @code{uk} @tab Ukrainian @tab
../texinfo/texinfo.txi(,12491) @code{ur} @tab Urdu
../texinfo/texinfo.txi(,12492) @item
../texinfo/texinfo.txi(,12493) @code{uz} @tab Uzbek @tab
../texinfo/texinfo.txi(,12494) @code{vi} @tab Vietnamese @tab
../texinfo/texinfo.txi(,12495) @code{vo} @tab Volapuk
../texinfo/texinfo.txi(,12496) @item
../texinfo/texinfo.txi(,12497) @code{wo} @tab Wolof @tab
../texinfo/texinfo.txi(,12498) @code{xh} @tab Xhosa @tab
../texinfo/texinfo.txi(,12499) @code{yi} @tab Yiddish
../texinfo/texinfo.txi(,12500) @item
../texinfo/texinfo.txi(,12501) @code{yo} @tab Yoruba @tab
../texinfo/texinfo.txi(,12502) @code{za} @tab Zhuang @tab
../texinfo/texinfo.txi(,12503) @code{zh} @tab Chinese
../texinfo/texinfo.txi(,12504) @item
../texinfo/texinfo.txi(,12505) @code{zu} @tab Zulu
../texinfo/texinfo.txi(,12506) @end multitable
../texinfo/texinfo.txi(,12507) 
../texinfo/texinfo.txi(,12508) 
../texinfo/texinfo.txi(,12509) @node documentencoding
../texinfo/texinfo.txi(,12510) @section @code{@@documentencoding @var{enc}}: Set Input Encoding
../texinfo/texinfo.txi(,12511) 
../texinfo/texinfo.txi(,12512) @findex documentencoding
../texinfo/texinfo.txi(,12513) @cindex Encoding, declaring
../texinfo/texinfo.txi(,12514) @cindex Input encoding, declaring
../texinfo/texinfo.txi(,12515) @cindex Document input encoding
../texinfo/texinfo.txi(,12516) 
../texinfo/texinfo.txi(,12517) The @code{@@documentencoding} command declares the input document
../texinfo/texinfo.txi(,12518) encoding.  Write it on a line by itself, with a valid encoding
../texinfo/texinfo.txi(,12519) specification following, such as @samp{ISO-8859-1}.
../texinfo/texinfo.txi(,12520) 
../texinfo/texinfo.txi(,12521) @cindex http-equiv, and charset
../texinfo/texinfo.txi(,12522) @cindex meta HTML tag, and charset
../texinfo/texinfo.txi(,12523) At present, this is used only in HTML output from @code{makeinfo}.  If a
../texinfo/texinfo.txi(,12524) document encoding @var{enc} is specified, it is used in a
../texinfo/texinfo.txi(,12525) @samp{<meta>} tag included in the @samp{<head>} of the output:
../texinfo/texinfo.txi(,12526) 
../texinfo/texinfo.txi(,12527) @example
../texinfo/texinfo.txi(,12528) <meta http-equiv="Content-Type" content="text/html;
../texinfo/texinfo.txi(,12529)       charset=@var{enc}">
../texinfo/texinfo.txi(,12530) @end example
../texinfo/texinfo.txi(,12531) 
../texinfo/texinfo.txi(,12532) 
../texinfo/texinfo.txi(,12533) @node Defining New Texinfo Commands
../texinfo/texinfo.txi(,12534) @chapter Defining New Texinfo Commands
../texinfo/texinfo.txi(,12535) @cindex Macros
../texinfo/texinfo.txi(,12536) @cindex Defining new Texinfo commands
../texinfo/texinfo.txi(,12537) @cindex New Texinfo commands, defining
../texinfo/texinfo.txi(,12538) @cindex Texinfo commands, defining new
../texinfo/texinfo.txi(,12539) @cindex User-defined Texinfo commands
../texinfo/texinfo.txi(,12540) 
../texinfo/texinfo.txi(,12541) Texinfo provides several ways to define new commands:
../texinfo/texinfo.txi(,12542) 
../texinfo/texinfo.txi(,12543) @itemize @bullet
../texinfo/texinfo.txi(,12544) @item
../texinfo/texinfo.txi(,12545) A Texinfo @dfn{macro} allows you to define a new Texinfo command as any
../texinfo/texinfo.txi(,12546) sequence of text and/or existing commands (including other macros).  The
../texinfo/texinfo.txi(,12547) macro can have any number of @dfn{parameters}---text you supply each
../texinfo/texinfo.txi(,12548) time you use the macro.
../texinfo/texinfo.txi(,12549) 
../texinfo/texinfo.txi(,12550) Incidentally, these macros have nothing to do with the @code{@@defmac}
../texinfo/texinfo.txi(,12551) command, which is for documenting macros in the subject of the manual
../texinfo/texinfo.txi(,12552) (@pxref{Def Cmd Template}).
../texinfo/texinfo.txi(,12553) 
../texinfo/texinfo.txi(,12554) @item
../texinfo/texinfo.txi(,12555) @samp{@@alias} is a convenient way to define a new name for an existing
../texinfo/texinfo.txi(,12556) command.
../texinfo/texinfo.txi(,12557) 
../texinfo/texinfo.txi(,12558) @item
../texinfo/texinfo.txi(,12559) @samp{@@definfoenclose} allows you to define new commands with
../texinfo/texinfo.txi(,12560) customized output in the Info file.
../texinfo/texinfo.txi(,12561) 
../texinfo/texinfo.txi(,12562) @end itemize
../texinfo/texinfo.txi(,12563) 
../texinfo/texinfo.txi(,12564) @menu
../texinfo/texinfo.txi(,12565) * Defining Macros::             Defining and undefining new commands.
../texinfo/texinfo.txi(,12566) * Invoking Macros::             Using a macro, once you've defined it.
../texinfo/texinfo.txi(,12567) * Macro Details::               Beyond basic macro usage.
../texinfo/texinfo.txi(,12568) * alias::                       Command aliases.
../texinfo/texinfo.txi(,12569) * definfoenclose::              Customized highlighting.
../texinfo/texinfo.txi(,12570) @end menu
../texinfo/texinfo.txi(,12571) 
../texinfo/texinfo.txi(,12572) 
../texinfo/texinfo.txi(,12573) @node Defining Macros
../texinfo/texinfo.txi(,12574) @section Defining Macros
../texinfo/texinfo.txi(,12575) @cindex Defining macros
../texinfo/texinfo.txi(,12576) @cindex Macro definitions
../texinfo/texinfo.txi(,12577) 
../texinfo/texinfo.txi(,12578) @findex macro
../texinfo/texinfo.txi(,12579) You use the Texinfo @code{@@macro} command to define a macro, like this:
../texinfo/texinfo.txi(,12580) 
../texinfo/texinfo.txi(,12581) @example
../texinfo/texinfo.txi(,12582) @@macro @var{macroname}@{@var{param1}, @var{param2}, @dots{}@}
../texinfo/texinfo.txi(,12583) @var{text} @dots{} \@var{param1}\ @dots{}
../texinfo/texinfo.txi(,12584) @@end macro
../texinfo/texinfo.txi(,12585) @end example
../texinfo/texinfo.txi(,12586) 
../texinfo/texinfo.txi(,12587) The @dfn{parameters} @var{param1}, @var{param2}, @dots{} correspond to
../texinfo/texinfo.txi(,12588) arguments supplied when the macro is subsequently used in the document
../texinfo/texinfo.txi(,12589) (described in the next section).
../texinfo/texinfo.txi(,12590) 
../texinfo/texinfo.txi(,12591) For a macro to work with @TeX{}, @var{macroname} must consist entirely
../texinfo/texinfo.txi(,12592) of letters: no digits, hyphens, underscores, or other special characters.
../texinfo/texinfo.txi(,12593) 
../texinfo/texinfo.txi(,12594) If a macro needs no parameters, you can define it either with an empty
../texinfo/texinfo.txi(,12595) list (@samp{@@macro foo @{@}}) or with no braces at all (@samp{@@macro
../texinfo/texinfo.txi(,12596) foo}).
../texinfo/texinfo.txi(,12597) 
../texinfo/texinfo.txi(,12598) @cindex Body of a macro
../texinfo/texinfo.txi(,12599) @cindex Mutually recursive macros
../texinfo/texinfo.txi(,12600) @cindex Recursion, mutual
../texinfo/texinfo.txi(,12601) The definition or @dfn{body} of the macro can contain most Texinfo
../texinfo/texinfo.txi(,12602) commands, including previously-defined macros.  Not-yet-defined macro
../texinfo/texinfo.txi(,12603) invocations are not allowed; thus, it is not possible to have mutually
../texinfo/texinfo.txi(,12604) recursive Texinfo macros.  Also, a macro definition that defines another
../texinfo/texinfo.txi(,12605) macro does not work in @TeX{} due to limitations in the design of
../texinfo/texinfo.txi(,12606) @code{@@macro}.
../texinfo/texinfo.txi(,12607) 
../texinfo/texinfo.txi(,12608) @cindex Parameters to macros
../texinfo/texinfo.txi(,12609) In the macro body, instances of a parameter name surrounded by
../texinfo/texinfo.txi(,12610) backslashes, as in @samp{\@var{param1}\} in the example above, are
../texinfo/texinfo.txi(,12611) replaced by the corresponding argument from the macro invocation.  You
../texinfo/texinfo.txi(,12612) can use parameter names any number of times in the body, including zero.
../texinfo/texinfo.txi(,12613) 
../texinfo/texinfo.txi(,12614) @cindex Backslash in macros
../texinfo/texinfo.txi(,12615) To get a single @samp{\} in the macro expansion, use @samp{\\}.  Any
../texinfo/texinfo.txi(,12616) other use of @samp{\} in the body yields a warning.
../texinfo/texinfo.txi(,12617) 
../texinfo/texinfo.txi(,12618) @cindex Spaces in macros
../texinfo/texinfo.txi(,12619) @cindex Whitespace in macros
../texinfo/texinfo.txi(,12620) The newlines after the @code{@@macro} line and before the @code{@@end
../texinfo/texinfo.txi(,12621) macro} line are ignored, that is, not included in the macro body.  All
../texinfo/texinfo.txi(,12622) other whitespace is treated according to the usual Texinfo rules.
../texinfo/texinfo.txi(,12623) 
../texinfo/texinfo.txi(,12624) @cindex Recursive macro invocations
../texinfo/texinfo.txi(,12625) @findex rmacro
../texinfo/texinfo.txi(,12626) To allow a macro to be used recursively, that is, in an argument to a
../texinfo/texinfo.txi(,12627) call to itself, you must define it with @samp{@@rmacro}, like this:
../texinfo/texinfo.txi(,12628) 
../texinfo/texinfo.txi(,12629) @example
../texinfo/texinfo.txi(,12630) @@rmacro rmac @{arg@}
../texinfo/texinfo.txi(,12631) a\arg\b
../texinfo/texinfo.txi(,12632) @@end rmacro
../texinfo/texinfo.txi(,12633) @dots{}
../texinfo/texinfo.txi(,12634) @@rmac@{1@@rmac@{text@}2@}
../texinfo/texinfo.txi(,12635) @end example
../texinfo/texinfo.txi(,12636) 
../texinfo/texinfo.txi(,12637) This produces the output `a1atextb2b'.  With @samp{@@macro} instead of
../texinfo/texinfo.txi(,12638) @samp{@@rmacro}, an error message is given.
../texinfo/texinfo.txi(,12639) 
../texinfo/texinfo.txi(,12640) @findex unmacro
../texinfo/texinfo.txi(,12641) @cindex Macros, undefining
../texinfo/texinfo.txi(,12642) @cindex Undefining macros
../texinfo/texinfo.txi(,12643) You can undefine a macro @var{foo} with @code{@@unmacro @var{foo}}.
../texinfo/texinfo.txi(,12644) It is not an error to undefine a macro that is already undefined.
../texinfo/texinfo.txi(,12645) For example:
../texinfo/texinfo.txi(,12646) 
../texinfo/texinfo.txi(,12647) @example
../texinfo/texinfo.txi(,12648) @@unmacro foo
../texinfo/texinfo.txi(,12649) @end example
../texinfo/texinfo.txi(,12650) 
../texinfo/texinfo.txi(,12651) 
../texinfo/texinfo.txi(,12652) @node Invoking Macros
../texinfo/texinfo.txi(,12653) @section Invoking Macros
../texinfo/texinfo.txi(,12654) @cindex Invoking macros
../texinfo/texinfo.txi(,12655) @cindex Expanding macros
../texinfo/texinfo.txi(,12656) @cindex Running macros
../texinfo/texinfo.txi(,12657) @cindex Macro invocation
../texinfo/texinfo.txi(,12658) 
../texinfo/texinfo.txi(,12659) After a macro is defined (see the previous section), you can use
../texinfo/texinfo.txi(,12660) (@dfn{invoke}) it in your document like this:
../texinfo/texinfo.txi(,12661) 
../texinfo/texinfo.txi(,12662) @example
../texinfo/texinfo.txi(,12663) @@@var{macroname} @{@var{arg1}, @var{arg2}, @dots{}@}
../texinfo/texinfo.txi(,12664) @end example
../texinfo/texinfo.txi(,12665) 
../texinfo/texinfo.txi(,12666) @noindent and the result will be just as if you typed the body of
../texinfo/texinfo.txi(,12667) @var{macroname} at that spot.  For example:
../texinfo/texinfo.txi(,12668) 
../texinfo/texinfo.txi(,12669) @example
../texinfo/texinfo.txi(,12670) @@macro foo @{p, q@}
../texinfo/texinfo.txi(,12671) Together: \p\ & \q\.
../texinfo/texinfo.txi(,12672) @@end macro
../texinfo/texinfo.txi(,12673) @@foo@{a, b@}
../texinfo/texinfo.txi(,12674) @end example
../texinfo/texinfo.txi(,12675) 
../texinfo/texinfo.txi(,12676) @noindent produces:
../texinfo/texinfo.txi(,12677) 
../texinfo/texinfo.txi(,12678) @display
../texinfo/texinfo.txi(,12679) Together: a & b.
../texinfo/texinfo.txi(,12680) @end display
../texinfo/texinfo.txi(,12681) 
../texinfo/texinfo.txi(,12682) @cindex Backslash, and macros
../texinfo/texinfo.txi(,12683) Thus, the arguments and parameters are separated by commas and delimited
../texinfo/texinfo.txi(,12684) by braces; any whitespace after (but not before) a comma is ignored.
../texinfo/texinfo.txi(,12685) The braces are required in the invocation (but not the definition), even
../texinfo/texinfo.txi(,12686) when the macro takes no arguments, consistent with all other Texinfo
../texinfo/texinfo.txi(,12687) commands.  For example:
../texinfo/texinfo.txi(,12688) 
../texinfo/texinfo.txi(,12689) @example
../texinfo/texinfo.txi(,12690) @@macro argless @{@}
../texinfo/texinfo.txi(,12691) No arguments here.
../texinfo/texinfo.txi(,12692) @@end macro
../texinfo/texinfo.txi(,12693) @@argless@{@}
../texinfo/texinfo.txi(,12694) @end example
../texinfo/texinfo.txi(,12695) 
../texinfo/texinfo.txi(,12696) @noindent produces:
../texinfo/texinfo.txi(,12697) 
../texinfo/texinfo.txi(,12698) @display
../texinfo/texinfo.txi(,12699) No arguments here.
../texinfo/texinfo.txi(,12700) @end display
../texinfo/texinfo.txi(,12701) 
../texinfo/texinfo.txi(,12702) @cindex Comma, in macro arguments
../texinfo/texinfo.txi(,12703) @cindex Braces, in macro arguments
../texinfo/texinfo.txi(,12704) To insert a comma, brace, or backslash in an argument, prepend a
../texinfo/texinfo.txi(,12705) backslash, as in
../texinfo/texinfo.txi(,12706) 
../texinfo/texinfo.txi(,12707) @example
../texinfo/texinfo.txi(,12708) @@@var{macname} @{\\\@{\@}\,@}
../texinfo/texinfo.txi(,12709) @end example
../texinfo/texinfo.txi(,12710) 
../texinfo/texinfo.txi(,12711) @noindent
../texinfo/texinfo.txi(,12712) which will pass the (almost certainly error-producing) argument
../texinfo/texinfo.txi(,12713) @samp{\@{@},} to @var{macname}.  However, commas in parameters, even
../texinfo/texinfo.txi(,12714) if escaped by a backslash, might cause trouble in @TeX{}.
../texinfo/texinfo.txi(,12715) 
../texinfo/texinfo.txi(,12716) If the macro is defined to take a single argument, and is invoked
../texinfo/texinfo.txi(,12717) without any braces, the entire rest of the line after the macro name is
../texinfo/texinfo.txi(,12718) supplied as the argument.  For example:
../texinfo/texinfo.txi(,12719) 
../texinfo/texinfo.txi(,12720) @example
../texinfo/texinfo.txi(,12721) @@macro bar @{p@}
../texinfo/texinfo.txi(,12722) Twice: \p\ & \p\.
../texinfo/texinfo.txi(,12723) @@end macro
../texinfo/texinfo.txi(,12724) @@bar aah
../texinfo/texinfo.txi(,12725) @end example
../texinfo/texinfo.txi(,12726) 
../texinfo/texinfo.txi(,12727) @noindent produces:
../texinfo/texinfo.txi(,12728) 
../texinfo/texinfo.txi(,12729) @c Sorry for cheating, but let's not require macros to process the manual.
../texinfo/texinfo.txi(,12730) @display
../texinfo/texinfo.txi(,12731) Twice: aah & aah.
../texinfo/texinfo.txi(,12732) @end display
../texinfo/texinfo.txi(,12733) 
../texinfo/texinfo.txi(,12734) If the macro is defined to take a single argument, and is invoked with
../texinfo/texinfo.txi(,12735) braces, the braced text is passed as the argument, regardless of
../texinfo/texinfo.txi(,12736) commas.  For example:
../texinfo/texinfo.txi(,12737) 
../texinfo/texinfo.txi(,12738) @example
../texinfo/texinfo.txi(,12739) @@macro bar @{p@}
../texinfo/texinfo.txi(,12740) Twice: \p\ & \p\.
../texinfo/texinfo.txi(,12741) @@end macro
../texinfo/texinfo.txi(,12742) @@bar@{a,b@}
../texinfo/texinfo.txi(,12743) @end example
../texinfo/texinfo.txi(,12744) 
../texinfo/texinfo.txi(,12745) @noindent produces:
../texinfo/texinfo.txi(,12746) 
../texinfo/texinfo.txi(,12747) @display
../texinfo/texinfo.txi(,12748) Twice: a,b & a,b.
../texinfo/texinfo.txi(,12749) @end display
../texinfo/texinfo.txi(,12750) 
../texinfo/texinfo.txi(,12751) 
../texinfo/texinfo.txi(,12752) @node Macro Details
../texinfo/texinfo.txi(,12753) @section Macro Details
../texinfo/texinfo.txi(,12754) @cindex Macro details
../texinfo/texinfo.txi(,12755) @cindex Details of macro usage
../texinfo/texinfo.txi(,12756) 
../texinfo/texinfo.txi(,12757) Due to unavoidable disparities in the @TeX{} and @command{makeinfo}
../texinfo/texinfo.txi(,12758) implementations, Texinfo macros have the following limitations.
../texinfo/texinfo.txi(,12759) 
../texinfo/texinfo.txi(,12760) @itemize @bullet
../texinfo/texinfo.txi(,12761) @item
../texinfo/texinfo.txi(,12762) All macros are expanded inside at least one @TeX{} group.  This means
../texinfo/texinfo.txi(,12763) that @code{@@set} and other such commands will have no effect inside a
../texinfo/texinfo.txi(,12764) macro.
../texinfo/texinfo.txi(,12765) 
../texinfo/texinfo.txi(,12766) @item
../texinfo/texinfo.txi(,12767) Macros containing a command which must be on a line by itself, such as a
../texinfo/texinfo.txi(,12768) conditional, cannot be invoked in the middle of a line.
../texinfo/texinfo.txi(,12769) 
../texinfo/texinfo.txi(,12770) @item
../texinfo/texinfo.txi(,12771) Commas in macro arguments, even if escaped by a backslash, don't
../texinfo/texinfo.txi(,12772) always work.
../texinfo/texinfo.txi(,12773) 
../texinfo/texinfo.txi(,12774) @item
../texinfo/texinfo.txi(,12775) The @TeX{} implementation cannot construct macros that define macros in
../texinfo/texinfo.txi(,12776) the natural way.  To do this, you must use conditionals and raw @TeX{}.
../texinfo/texinfo.txi(,12777) For example:
../texinfo/texinfo.txi(,12778) 
../texinfo/texinfo.txi(,12779) @example
../texinfo/texinfo.txi(,12780) @@ifnottex
../texinfo/texinfo.txi(,12781) @@macro ctor @{name, arg@}
../texinfo/texinfo.txi(,12782) @@macro \name\
../texinfo/texinfo.txi(,12783) something involving \arg\ somehow
../texinfo/texinfo.txi(,12784) @@end macro
../texinfo/texinfo.txi(,12785) @@end macro
../texinfo/texinfo.txi(,12786) @@end ifnottex
../texinfo/texinfo.txi(,12787) @@tex
../texinfo/texinfo.txi(,12788) \gdef\ctor#1@{\ctorx#1,@}
../texinfo/texinfo.txi(,12789) \gdef\ctorx#1,#2,@{\def#1@{something involving #2 somehow@}@}
../texinfo/texinfo.txi(,12790) @@end tex
../texinfo/texinfo.txi(,12791) @end example
../texinfo/texinfo.txi(,12792) 
../texinfo/texinfo.txi(,12793) @item
../texinfo/texinfo.txi(,12794) It is best to avoid comments inside macro definitions.
../texinfo/texinfo.txi(,12795) 
../texinfo/texinfo.txi(,12796) @end itemize
../texinfo/texinfo.txi(,12797) 
../texinfo/texinfo.txi(,12798) If some macro feature causes errors when producing the printed version
../texinfo/texinfo.txi(,12799) of a manual, try expanding the macros with @command{makeinfo} by
../texinfo/texinfo.txi(,12800) invoking @command{texi2dvi} with the @samp{-e} option; see @ref{Format
../texinfo/texinfo.txi(,12801) with texi2dvi}.
../texinfo/texinfo.txi(,12802) 
../texinfo/texinfo.txi(,12803) @node alias
../texinfo/texinfo.txi(,12804) @section @samp{@@alias @var{new}=@var{existing}}
../texinfo/texinfo.txi(,12805) @cindex Aliases, command
../texinfo/texinfo.txi(,12806) @cindex Command aliases
../texinfo/texinfo.txi(,12807) @findex alias
../texinfo/texinfo.txi(,12808) 
../texinfo/texinfo.txi(,12809) The @samp{@@alias} command defines a new command to be just like an
../texinfo/texinfo.txi(,12810) existing one.  This is useful for defining additional markup names, thus
../texinfo/texinfo.txi(,12811) preserving semantic information in the input even though the output
../texinfo/texinfo.txi(,12812) result may be the same.
../texinfo/texinfo.txi(,12813) 
../texinfo/texinfo.txi(,12814) Write the @samp{@@alias} command on a line by itself, followed by the
../texinfo/texinfo.txi(,12815) new command name, an equals sign, and the existing command name.
../texinfo/texinfo.txi(,12816) Whitespace around the equals sign is ignored.  Thus:
../texinfo/texinfo.txi(,12817) @example
../texinfo/texinfo.txi(,12818) @@alias @var{new} = @var{existing}
../texinfo/texinfo.txi(,12819) @end example
../texinfo/texinfo.txi(,12820) 
../texinfo/texinfo.txi(,12821) For example, if your document contains citations for both books and
../texinfo/texinfo.txi(,12822) some other media (movies, for example), you might like to define a
../texinfo/texinfo.txi(,12823) macro @code{@@moviecite@{@}} that does the same thing as an ordinary
../texinfo/texinfo.txi(,12824) @code{@@cite@{@}} but conveys the extra semantic information as well.
../texinfo/texinfo.txi(,12825) You'd do this as follows:
../texinfo/texinfo.txi(,12826) 
../texinfo/texinfo.txi(,12827) @example
../texinfo/texinfo.txi(,12828) @@alias moviecite = cite
../texinfo/texinfo.txi(,12829) @end example
../texinfo/texinfo.txi(,12830) 
../texinfo/texinfo.txi(,12831) Macros do not always have the same effect due to vagaries of argument
../texinfo/texinfo.txi(,12832) parsing.  Also, aliases are much simpler to define than macros.  So the
../texinfo/texinfo.txi(,12833) command is not redundant.  (It was also heavily used in the Jargon File!)
../texinfo/texinfo.txi(,12834) 
../texinfo/texinfo.txi(,12835) Aliases must not be recursive, directly or indirectly.
../texinfo/texinfo.txi(,12836) 
../texinfo/texinfo.txi(,12837) @node definfoenclose
../texinfo/texinfo.txi(,12838) @section @samp{definfoenclose}: Customized Highlighting
../texinfo/texinfo.txi(,12839) @cindex Highlighting, customized
../texinfo/texinfo.txi(,12840) @cindex Customized highlighting
../texinfo/texinfo.txi(,12841) @findex definfoenclose
../texinfo/texinfo.txi(,12842) 
../texinfo/texinfo.txi(,12843) A @code{@@definfoenclose} command may be used to define a highlighting
../texinfo/texinfo.txi(,12844) command for Info, but not for @TeX{}.  A command defined using
../texinfo/texinfo.txi(,12845) @code{@@definfoenclose} marks text by enclosing it in strings that
../texinfo/texinfo.txi(,12846) precede and follow the text.  You can use this to get closer control of
../texinfo/texinfo.txi(,12847) your Info output.
../texinfo/texinfo.txi(,12848)  
../texinfo/texinfo.txi(,12849) Presumably, if you define a command with @code{@@definfoenclose} for Info,
../texinfo/texinfo.txi(,12850) you will create a corresponding command for @TeX{}, either in
../texinfo/texinfo.txi(,12851) @file{texinfo.tex}, @file{texinfo.cnf}, or within an @samp{@@iftex} in
../texinfo/texinfo.txi(,12852) your document.
../texinfo/texinfo.txi(,12853) 
../texinfo/texinfo.txi(,12854) Write a @code{@@definfoenclose} command on a line and follow it with
../texinfo/texinfo.txi(,12855) three arguments separated by commas.  The first argument to
../texinfo/texinfo.txi(,12856) @code{@@definfoenclose} is the @@-command name (without the @code{@@});
../texinfo/texinfo.txi(,12857) the second argument is the Info start delimiter string; and the third
../texinfo/texinfo.txi(,12858) argument is the Info end delimiter string.  The latter two arguments
../texinfo/texinfo.txi(,12859) enclose the highlighted text in the Info file.  A delimiter string may
../texinfo/texinfo.txi(,12860) contain spaces.  Neither the start nor end delimiter is required.  If
../texinfo/texinfo.txi(,12861) you do not want a start delimiter but do want an end delimiter, you must
../texinfo/texinfo.txi(,12862) follow the command name with two commas in a row; otherwise, the Info
../texinfo/texinfo.txi(,12863) formatting commands will naturally misinterpret the end delimiter string
../texinfo/texinfo.txi(,12864) you intended as the start delimiter string.
../texinfo/texinfo.txi(,12865) 
../texinfo/texinfo.txi(,12866) If you do a @code{@@definfoenclose} on the name of a pre-defined macro
../texinfo/texinfo.txi(,12867) (such as @code{@@emph}, @code{@@strong}, @code{@@t}, or @code{@@i}), the
../texinfo/texinfo.txi(,12868) enclosure definition will override the built-in definition.
../texinfo/texinfo.txi(,12869)  
../texinfo/texinfo.txi(,12870) An enclosure command defined this way takes one argument in braces; this
../texinfo/texinfo.txi(,12871) is intended for new markup commands (@pxref{Marking Text}).
../texinfo/texinfo.txi(,12872) 
../texinfo/texinfo.txi(,12873) @findex phoo
../texinfo/texinfo.txi(,12874) For example, you can write:
../texinfo/texinfo.txi(,12875) 
../texinfo/texinfo.txi(,12876) @example
../texinfo/texinfo.txi(,12877) @@definfoenclose phoo,//,\\
../texinfo/texinfo.txi(,12878) @end example
../texinfo/texinfo.txi(,12879) 
../texinfo/texinfo.txi(,12880) @noindent
../texinfo/texinfo.txi(,12881) near the beginning of a Texinfo file to define @code{@@phoo} as an Info
../texinfo/texinfo.txi(,12882) formatting command that inserts `//' before and `\\' after the argument
../texinfo/texinfo.txi(,12883) to @code{@@phoo}.  You can then write @code{@@phoo@{bar@}} wherever you
../texinfo/texinfo.txi(,12884) want `//bar\\' highlighted in Info.
../texinfo/texinfo.txi(,12885) 
../texinfo/texinfo.txi(,12886) Also, for @TeX{} formatting, you could write 
../texinfo/texinfo.txi(,12887) 
../texinfo/texinfo.txi(,12888) @example
../texinfo/texinfo.txi(,12889) @@iftex
../texinfo/texinfo.txi(,12890) @@global@@let@@phoo=@@i
../texinfo/texinfo.txi(,12891) @@end iftex
../texinfo/texinfo.txi(,12892) @end example
../texinfo/texinfo.txi(,12893) 
../texinfo/texinfo.txi(,12894) @noindent
../texinfo/texinfo.txi(,12895) to define @code{@@phoo} as a command that causes @TeX{} to typeset the
../texinfo/texinfo.txi(,12896) argument to @code{@@phoo} in italics.
../texinfo/texinfo.txi(,12897) 
../texinfo/texinfo.txi(,12898) Each definition applies to its own formatter: one for @TeX{}, the other
../texinfo/texinfo.txi(,12899) for @code{texinfo-format-buffer} or @code{texinfo-format-region}.  The
../texinfo/texinfo.txi(,12900) @code{@@definfoenclose} command need not be within @samp{@@ifinfo}, but
../texinfo/texinfo.txi(,12901) the raw @TeX{} commands do need to be in @samp{@@iftex}.
../texinfo/texinfo.txi(,12902) 
../texinfo/texinfo.txi(,12903) @findex headword
../texinfo/texinfo.txi(,12904) Here is another example: write
../texinfo/texinfo.txi(,12905) 
../texinfo/texinfo.txi(,12906) @example
../texinfo/texinfo.txi(,12907) @@definfoenclose headword, , :
../texinfo/texinfo.txi(,12908) @end example
../texinfo/texinfo.txi(,12909) 
../texinfo/texinfo.txi(,12910) @noindent
../texinfo/texinfo.txi(,12911) near the beginning of the file, to define @code{@@headword} as an Info
../texinfo/texinfo.txi(,12912) formatting command that inserts nothing before and a colon after the
../texinfo/texinfo.txi(,12913) argument to @code{@@headword}.
../texinfo/texinfo.txi(,12914) 
../texinfo/texinfo.txi(,12915) @samp{@@definfoenclose} definitions must not be recursive, directly or
../texinfo/texinfo.txi(,12916) indirectly.
../texinfo/texinfo.txi(,12917) 
../texinfo/texinfo.txi(,12918) 
../texinfo/texinfo.txi(,12919) @node Hardcopy
../texinfo/texinfo.txi(,12920) @chapter Formatting and Printing Hardcopy
../texinfo/texinfo.txi(,12921) @cindex Format and print hardcopy
../texinfo/texinfo.txi(,12922) @cindex Printing hardcopy
../texinfo/texinfo.txi(,12923) @cindex Hardcopy, printing it
../texinfo/texinfo.txi(,12924) @cindex Making a printed manual
../texinfo/texinfo.txi(,12925) @cindex Sorting indices
../texinfo/texinfo.txi(,12926) @cindex Indices, sorting
../texinfo/texinfo.txi(,12927) @cindex @TeX{} index sorting
../texinfo/texinfo.txi(,12928) @pindex texindex
../texinfo/texinfo.txi(,12929) 
../texinfo/texinfo.txi(,12930) There are three major shell commands for making a printed manual from a
../texinfo/texinfo.txi(,12931) Texinfo file: one for converting the Texinfo file into a file that will be
../texinfo/texinfo.txi(,12932) printed, a second for sorting indices, and a third for printing the
../texinfo/texinfo.txi(,12933) formatted document.  When you use the shell commands, you can either
../texinfo/texinfo.txi(,12934) work directly in the operating system shell or work within a shell
../texinfo/texinfo.txi(,12935) inside GNU Emacs.
../texinfo/texinfo.txi(,12936) 
../texinfo/texinfo.txi(,12937) If you are using GNU Emacs, you can use commands provided by Texinfo
../texinfo/texinfo.txi(,12938) mode instead of shell commands.  In addition to the three commands to
../texinfo/texinfo.txi(,12939) format a file, sort the indices, and print the result, Texinfo mode
../texinfo/texinfo.txi(,12940) offers key bindings for commands to recenter the output buffer, show the
../texinfo/texinfo.txi(,12941) print queue, and delete a job from the print queue.
../texinfo/texinfo.txi(,12942) 
../texinfo/texinfo.txi(,12943) @menu
../texinfo/texinfo.txi(,12944) * Use TeX::                     Use @TeX{} to format for hardcopy.
../texinfo/texinfo.txi(,12945) * Format with tex/texindex::    How to format with explicit shell commands.
../texinfo/texinfo.txi(,12946) * Format with texi2dvi::        A simpler way to format.
../texinfo/texinfo.txi(,12947) * Print with lpr::              How to print.
../texinfo/texinfo.txi(,12948) * Within Emacs::                How to format and print from an Emacs shell.
../texinfo/texinfo.txi(,12949) * Texinfo Mode Printing::       How to format and print in Texinfo mode.
../texinfo/texinfo.txi(,12950) * Compile-Command::             How to print using Emacs's compile command.
../texinfo/texinfo.txi(,12951) * Requirements Summary::        @TeX{} formatting requirements summary.
../texinfo/texinfo.txi(,12952) * Preparing for TeX::           What to do before you use @TeX{}.
../texinfo/texinfo.txi(,12953) * Overfull hboxes::             What are and what to do with overfull hboxes.
../texinfo/texinfo.txi(,12954) * smallbook::                   How to print small format books and manuals.
../texinfo/texinfo.txi(,12955) * A4 Paper::                    How to print on A4 or A5 paper.
../texinfo/texinfo.txi(,12956) * pagesizes::                   How to print with customized page sizes.
../texinfo/texinfo.txi(,12957) * Cropmarks and Magnification::  How to print marks to indicate the size
../texinfo/texinfo.txi(,12958)                                 of pages and how to print scaled up output.
../texinfo/texinfo.txi(,12959) * PDF Output::                  Portable Document Format output.
../texinfo/texinfo.txi(,12960) @end menu
../texinfo/texinfo.txi(,12961) 
../texinfo/texinfo.txi(,12962) @node Use TeX
../texinfo/texinfo.txi(,12963) @section Use @TeX{}
../texinfo/texinfo.txi(,12964) 
../texinfo/texinfo.txi(,12965) The typesetting program called @TeX{} is used for formatting a Texinfo
../texinfo/texinfo.txi(,12966) file.  @TeX{} is a very powerful typesetting program and, if used correctly,
../texinfo/texinfo.txi(,12967) does an exceptionally good job.  (@xref{Obtaining TeX, , How to Obtain
../texinfo/texinfo.txi(,12968) @TeX{}}, for information on how to obtain @TeX{}.)
../texinfo/texinfo.txi(,12969) 
../texinfo/texinfo.txi(,12970) The standalone @code{makeinfo} program and Emacs functions
../texinfo/texinfo.txi(,12971) @code{texinfo-format-region} and @code{texinfo-format-buffer} commands
../texinfo/texinfo.txi(,12972) read the very same @@-commands in the Texinfo file as does @TeX{}, but
../texinfo/texinfo.txi(,12973) process them differently to make an Info file (@pxref{Creating an Info
../texinfo/texinfo.txi(,12974) File}).
../texinfo/texinfo.txi(,12975) 
../texinfo/texinfo.txi(,12976) 
../texinfo/texinfo.txi(,12977) @node Format with tex/texindex
../texinfo/texinfo.txi(,12978) @section Format with @code{tex} and @code{texindex}
../texinfo/texinfo.txi(,12979) @cindex Shell formatting with @code{tex} and @code{texindex}
../texinfo/texinfo.txi(,12980) @cindex Formatting with @code{tex} and @code{texindex}
../texinfo/texinfo.txi(,12981) @cindex DVI file
../texinfo/texinfo.txi(,12982) 
../texinfo/texinfo.txi(,12983) Format the Texinfo file with the shell command @code{tex} followed by
../texinfo/texinfo.txi(,12984) the name of the Texinfo file.  For example:
../texinfo/texinfo.txi(,12985) 
../texinfo/texinfo.txi(,12986) @example
../texinfo/texinfo.txi(,12987) tex foo.texi
../texinfo/texinfo.txi(,12988) @end example
../texinfo/texinfo.txi(,12989) 
../texinfo/texinfo.txi(,12990) @noindent @TeX{} will produce a @dfn{DVI file} as well as several auxiliary
../texinfo/texinfo.txi(,12991) files containing information for indices, cross references, etc.  The
../texinfo/texinfo.txi(,12992) DVI file (for @dfn{DeVice Independent} file) can be printed on virtually
../texinfo/texinfo.txi(,12993) any device (see the following sections).
../texinfo/texinfo.txi(,12994) 
../texinfo/texinfo.txi(,12995) @pindex texindex
../texinfo/texinfo.txi(,12996) The @code{tex} formatting command itself does not sort the indices; it
../texinfo/texinfo.txi(,12997) writes an output file of unsorted index data.  (The @code{texi2dvi}
../texinfo/texinfo.txi(,12998) command automatically generates indices; @pxref{Format with texi2dvi,,
../texinfo/texinfo.txi(,12999) Format with @code{texi2dvi}}.)  To generate a printed index after
../texinfo/texinfo.txi(,13000) running the @code{tex} command, you first need a sorted index to work
../texinfo/texinfo.txi(,13001) from.  The @code{texindex} command sorts indices.  (The source file
../texinfo/texinfo.txi(,13002) @file{texindex.c} comes as part of the standard Texinfo distribution,
../texinfo/texinfo.txi(,13003) among other places.)@refill
../texinfo/texinfo.txi(,13004) 
../texinfo/texinfo.txi(,13005) @cindex Names of index files
../texinfo/texinfo.txi(,13006) @cindex Index file names
../texinfo/texinfo.txi(,13007) The @code{tex} formatting command outputs unsorted index files under
../texinfo/texinfo.txi(,13008) names that obey a standard convention: the name of your main input file
../texinfo/texinfo.txi(,13009) with any @samp{.tex} (or similar, @pxref{tex invocation,,, web2c,
../texinfo/texinfo.txi(,13010) Web2c}) extension removed, followed by the two letter names of indices.
../texinfo/texinfo.txi(,13011) For example, the raw index output files for the input file
../texinfo/texinfo.txi(,13012) @file{foo.texinfo} would be @file{foo.cp}, @file{foo.vr}, @file{foo.fn},
../texinfo/texinfo.txi(,13013) @file{foo.tp}, @file{foo.pg} and @file{foo.ky}.  Those are exactly the
../texinfo/texinfo.txi(,13014) arguments to give to @code{texindex}.
../texinfo/texinfo.txi(,13015) 
../texinfo/texinfo.txi(,13016) @need 1000
../texinfo/texinfo.txi(,13017) @cindex Wildcards
../texinfo/texinfo.txi(,13018) @cindex Globbing
../texinfo/texinfo.txi(,13019) Instead of specifying all the unsorted index file names explicitly, you
../texinfo/texinfo.txi(,13020) can use @samp{??} as shell wildcards and give the command in this
../texinfo/texinfo.txi(,13021) form:
../texinfo/texinfo.txi(,13022) 
../texinfo/texinfo.txi(,13023) @example
../texinfo/texinfo.txi(,13024) texindex foo.??
../texinfo/texinfo.txi(,13025) @end example
../texinfo/texinfo.txi(,13026) 
../texinfo/texinfo.txi(,13027) @noindent
../texinfo/texinfo.txi(,13028) This command will run @code{texindex} on all the unsorted index files,
../texinfo/texinfo.txi(,13029) including any that you have defined yourself using @code{@@defindex}
../texinfo/texinfo.txi(,13030) or @code{@@defcodeindex}.  (You may execute @samp{texindex foo.??}
../texinfo/texinfo.txi(,13031) even if there are similarly named files with two letter extensions
../texinfo/texinfo.txi(,13032) that are not index files, such as @samp{foo.el}.  The @code{texindex}
../texinfo/texinfo.txi(,13033) command reports but otherwise ignores such files.)
../texinfo/texinfo.txi(,13034) 
../texinfo/texinfo.txi(,13035) For each file specified, @code{texindex} generates a sorted index file
../texinfo/texinfo.txi(,13036) whose name is made by appending @samp{s} to the input file name.  The
../texinfo/texinfo.txi(,13037) @code{@@printindex} command looks for a file with that name
../texinfo/texinfo.txi(,13038) (@pxref{Printing Indices & Menus}).  @code{texindex} does not alter the
../texinfo/texinfo.txi(,13039) raw index output file.
../texinfo/texinfo.txi(,13040) 
../texinfo/texinfo.txi(,13041) After you have sorted the indices, you need to rerun the @code{tex}
../texinfo/texinfo.txi(,13042) formatting command on the Texinfo file.  This regenerates the DVI file,
../texinfo/texinfo.txi(,13043) this time with up-to-date index entries.
../texinfo/texinfo.txi(,13044) 
../texinfo/texinfo.txi(,13045) Finally, you may need to run @code{tex} one more time, to get the page
../texinfo/texinfo.txi(,13046) numbers in the cross-references correct.
../texinfo/texinfo.txi(,13047) 
../texinfo/texinfo.txi(,13048) To summarize, this is a five step process:
../texinfo/texinfo.txi(,13049) 
../texinfo/texinfo.txi(,13050) @enumerate
../texinfo/texinfo.txi(,13051) @item
../texinfo/texinfo.txi(,13052) Run @code{tex} on your Texinfo file.  This generates a DVI file (with
../texinfo/texinfo.txi(,13053) undefined cross-references and no indices), and the raw index files
../texinfo/texinfo.txi(,13054) (with two letter extensions).
../texinfo/texinfo.txi(,13055) 
../texinfo/texinfo.txi(,13056) @item
../texinfo/texinfo.txi(,13057) Run @code{texindex} on the raw index files.  This creates the
../texinfo/texinfo.txi(,13058) corresponding sorted index files (with three letter extensions).
../texinfo/texinfo.txi(,13059) 
../texinfo/texinfo.txi(,13060) @item
../texinfo/texinfo.txi(,13061) Run @code{tex} again on your Texinfo file.  This regenerates the DVI
../texinfo/texinfo.txi(,13062) file, this time with indices and defined cross-references, but with page
../texinfo/texinfo.txi(,13063) numbers for the cross-references from last time, generally incorrect.
../texinfo/texinfo.txi(,13064) 
../texinfo/texinfo.txi(,13065) @item
../texinfo/texinfo.txi(,13066) Sort the indices again, with @code{texindex}.
../texinfo/texinfo.txi(,13067) 
../texinfo/texinfo.txi(,13068) @item
../texinfo/texinfo.txi(,13069) Run @code{tex} one last time.  This time the correct page numbers are
../texinfo/texinfo.txi(,13070) written for the cross-references.
../texinfo/texinfo.txi(,13071) @end enumerate
../texinfo/texinfo.txi(,13072) 
../texinfo/texinfo.txi(,13073) @pindex texi2dvi
../texinfo/texinfo.txi(,13074) Alternatively, it's a one-step process: run @code{texi2dvi}
../texinfo/texinfo.txi(,13075) (@pxref{Format with texi2dvi}).
../texinfo/texinfo.txi(,13076) 
../texinfo/texinfo.txi(,13077) You need not run @code{texindex} each time after you run @code{tex}.  If
../texinfo/texinfo.txi(,13078) you do not, on the next run, the @code{tex} formatting command will use
../texinfo/texinfo.txi(,13079) whatever sorted index files happen to exist from the previous use of
../texinfo/texinfo.txi(,13080) @code{texindex}.  This is usually ok while you are debugging.
../texinfo/texinfo.txi(,13081) 
../texinfo/texinfo.txi(,13082) @cindex Auxiliary files, avoiding
../texinfo/texinfo.txi(,13083) @findex novalidate
../texinfo/texinfo.txi(,13084) @cindex Pointer validation, suppressing
../texinfo/texinfo.txi(,13085) @cindex Chapters, formatting one at a time
../texinfo/texinfo.txi(,13086) Sometimes you may wish to print a document while you know it is
../texinfo/texinfo.txi(,13087) incomplete, or to print just one chapter of a document.  In that case,
../texinfo/texinfo.txi(,13088) the usual auxiliary files that @TeX{} creates and warnings @TeX{} gives
../texinfo/texinfo.txi(,13089) when cross-references are not satisfied are just nuisances.  You can
../texinfo/texinfo.txi(,13090) avoid them with the @code{@@novalidate} command, which you must give
../texinfo/texinfo.txi(,13091) @emph{before} the @code{@@setfilename} command
../texinfo/texinfo.txi(,13092) (@pxref{setfilename,,@code{@@setfilename}}).  Thus, the beginning of
../texinfo/texinfo.txi(,13093) your file would look approximately like this:
../texinfo/texinfo.txi(,13094) 
../texinfo/texinfo.txi(,13095) @example
../texinfo/texinfo.txi(,13096) \input texinfo
../texinfo/texinfo.txi(,13097) @@novalidate
../texinfo/texinfo.txi(,13098) @@setfilename myfile.info
../texinfo/texinfo.txi(,13099) @dots{}
../texinfo/texinfo.txi(,13100) @end example
../texinfo/texinfo.txi(,13101) 
../texinfo/texinfo.txi(,13102) @noindent @code{@@novalidate} also turns off validation in
../texinfo/texinfo.txi(,13103) @code{makeinfo}, just like its @code{--no-validate} option
../texinfo/texinfo.txi(,13104) (@pxref{Pointer Validation}).
../texinfo/texinfo.txi(,13105) 
../texinfo/texinfo.txi(,13106) 
../texinfo/texinfo.txi(,13107) @node Format with texi2dvi
../texinfo/texinfo.txi(,13108) @section Format with @code{texi2dvi}
../texinfo/texinfo.txi(,13109) @pindex texi2dvi @r{(shell script)}
../texinfo/texinfo.txi(,13110) 
../texinfo/texinfo.txi(,13111) The @code{texi2dvi} command automatically runs both @code{tex} and
../texinfo/texinfo.txi(,13112) @code{texindex} as many times as necessary to produce a DVI file with
../texinfo/texinfo.txi(,13113) sorted indices and all cross-references resolved.  It simplifies the
../texinfo/texinfo.txi(,13114) @code{tex}---@code{texindex}---@code{tex}---@code{tex} sequence
../texinfo/texinfo.txi(,13115) described in the previous section.
../texinfo/texinfo.txi(,13116) 
../texinfo/texinfo.txi(,13117) To run @code{texi2dvi} on an input file @file{foo.texi}, do this (where
../texinfo/texinfo.txi(,13118) @samp{prompt$ } is your shell prompt):
../texinfo/texinfo.txi(,13119) 
../texinfo/texinfo.txi(,13120) @example
../texinfo/texinfo.txi(,13121) prompt$ @kbd{texi2dvi foo.texi}
../texinfo/texinfo.txi(,13122) @end example
../texinfo/texinfo.txi(,13123) 
../texinfo/texinfo.txi(,13124) As shown in this example, the input filenames to @code{texi2dvi} must
../texinfo/texinfo.txi(,13125) include any extension (@samp{.texi}, @samp{.texinfo}, etc.).  Under
../texinfo/texinfo.txi(,13126) MS-DOS and perhaps in other circumstances, you may need to run @samp{sh
../texinfo/texinfo.txi(,13127) texi2dvi foo.texi} instead of relying on the operating system to invoke
../texinfo/texinfo.txi(,13128) the shell on the @samp{texi2dvi} script.
../texinfo/texinfo.txi(,13129) 
../texinfo/texinfo.txi(,13130) Perhaps the most useful option to @code{texi2dvi} is
../texinfo/texinfo.txi(,13131) @samp{--texinfo=@var{cmd}}.  This inserts @var{cmd} on a line by itself
../texinfo/texinfo.txi(,13132) after the @code{@@setfilename} in a temporary copy of the input file
../texinfo/texinfo.txi(,13133) before running @TeX{}.  With this, you can specify different printing
../texinfo/texinfo.txi(,13134) formats, such as @code{@@smallbook} (@pxref{smallbook}),
../texinfo/texinfo.txi(,13135) @code{@@afourpaper} (@pxref{A4 Paper}), or @code{@@pagesizes}
../texinfo/texinfo.txi(,13136) (@pxref{pagesizes}), without actually changing the document source.
../texinfo/texinfo.txi(,13137) (You can also do this on a site-wide basis with @file{texinfo.cnf};
../texinfo/texinfo.txi(,13138) @pxref{Preparing for TeX,,Preparing for @TeX{}}).
../texinfo/texinfo.txi(,13139) 
../texinfo/texinfo.txi(,13140) For a list of other options, run @samp{texi2dvi --help}.
../texinfo/texinfo.txi(,13141) 
../texinfo/texinfo.txi(,13142) 
../texinfo/texinfo.txi(,13143) @node Print with lpr
../texinfo/texinfo.txi(,13144) @section Shell Print Using @code{lpr -d}
../texinfo/texinfo.txi(,13145) @pindex lpr @r{(DVI print command)}
../texinfo/texinfo.txi(,13146) 
../texinfo/texinfo.txi(,13147) The precise command to print a DVI file depends on your system
../texinfo/texinfo.txi(,13148) installation.  Two common ones are @samp{dvips foo.dvi -o} and @samp{lpr
../texinfo/texinfo.txi(,13149) -d foo.dvi}.  
../texinfo/texinfo.txi(,13150) 
../texinfo/texinfo.txi(,13151) For example, the following commands will (perhaps) suffice to sort the
../texinfo/texinfo.txi(,13152) indices, format, and print the @cite{Bison Manual}:
../texinfo/texinfo.txi(,13153) 
../texinfo/texinfo.txi(,13154) @example
../texinfo/texinfo.txi(,13155) @group
../texinfo/texinfo.txi(,13156) tex bison.texinfo
../texinfo/texinfo.txi(,13157) texindex bison.??
../texinfo/texinfo.txi(,13158) tex bison.texinfo
../texinfo/texinfo.txi(,13159) lpr -d bison.dvi
../texinfo/texinfo.txi(,13160) @end group
../texinfo/texinfo.txi(,13161) @end example
../texinfo/texinfo.txi(,13162) 
../texinfo/texinfo.txi(,13163) @noindent
../texinfo/texinfo.txi(,13164) (Remember that the shell commands may be different at your site; but
../texinfo/texinfo.txi(,13165) these are commonly used versions.)
../texinfo/texinfo.txi(,13166) 
../texinfo/texinfo.txi(,13167) Using the @code{texi2dvi} shell script (see the previous section):
../texinfo/texinfo.txi(,13168) 
../texinfo/texinfo.txi(,13169) @example
../texinfo/texinfo.txi(,13170) @group
../texinfo/texinfo.txi(,13171) texi2dvi bison.texinfo
../texinfo/texinfo.txi(,13172) lpr -d bison.dvi
../texinfo/texinfo.txi(,13173) # or perhaps dvips bison.dvi -o
../texinfo/texinfo.txi(,13174) @end group
../texinfo/texinfo.txi(,13175) @end example
../texinfo/texinfo.txi(,13176) 
../texinfo/texinfo.txi(,13177) @cindex Shell printing, on MS-DOS/MS-Windows
../texinfo/texinfo.txi(,13178) @cindex Printing DVI files, on MS-DOS/MS-Windows
../texinfo/texinfo.txi(,13179) @pindex lpr@r{-d, replacements on MS-DOS/MS-Windows}
../texinfo/texinfo.txi(,13180) @code{lpr} is a standard program on Unix systems, but it is usually
../texinfo/texinfo.txi(,13181) absent on MS-DOS/MS-Windows.  Some network packages come with a
../texinfo/texinfo.txi(,13182) program named @code{lpr}, but these are usually limited to sending files
../texinfo/texinfo.txi(,13183) to a print server over the network, and generally don't support the
../texinfo/texinfo.txi(,13184) @samp{-d} option.  If you are unfortunate enough to work on one of these
../texinfo/texinfo.txi(,13185) systems, you have several alternative ways of printing DVI files:
../texinfo/texinfo.txi(,13186) 
../texinfo/texinfo.txi(,13187) @itemize @bullet{}
../texinfo/texinfo.txi(,13188) @item Find and install a Unix-like @code{lpr} program, or its clone.
../texinfo/texinfo.txi(,13189) If you can do that, you will be able to print DVI files just like
../texinfo/texinfo.txi(,13190) described above.
../texinfo/texinfo.txi(,13191) 
../texinfo/texinfo.txi(,13192) @item Send the DVI files to a network printer queue for DVI files.
../texinfo/texinfo.txi(,13193) Some network printers have special queues for printing DVI files.  You
../texinfo/texinfo.txi(,13194) should be able to set up your network software to send files to that
../texinfo/texinfo.txi(,13195) queue.  In some cases, the version of @code{lpr} which comes with your
../texinfo/texinfo.txi(,13196) network software will have a special option to send a file to specific
../texinfo/texinfo.txi(,13197) queues, like this:
../texinfo/texinfo.txi(,13198) 
../texinfo/texinfo.txi(,13199) @example
../texinfo/texinfo.txi(,13200) lpr -Qdvi -hprint.server.domain bison.dvi
../texinfo/texinfo.txi(,13201) @end example
../texinfo/texinfo.txi(,13202) 
../texinfo/texinfo.txi(,13203) @item Convert the DVI file to a Postscript or PCL file and send it to your
../texinfo/texinfo.txi(,13204) local printer.  @xref{dvips invocation,,, dvips, Dvips}, and the man
../texinfo/texinfo.txi(,13205) pages for @code{dvilj}, for detailed description of these tools.  Once
../texinfo/texinfo.txi(,13206) the DVI file is converted to the format your local printer understands
../texinfo/texinfo.txi(,13207) directly, just send it to the appropriate port, usually @samp{PRN}.
../texinfo/texinfo.txi(,13208) @end itemize
../texinfo/texinfo.txi(,13209) 
../texinfo/texinfo.txi(,13210) 
../texinfo/texinfo.txi(,13211) @node Within Emacs
../texinfo/texinfo.txi(,13212) @section From an Emacs Shell
../texinfo/texinfo.txi(,13213) @cindex Print, format from Emacs shell
../texinfo/texinfo.txi(,13214) @cindex Format, print from Emacs shell
../texinfo/texinfo.txi(,13215) @cindex Shell, format, print from
../texinfo/texinfo.txi(,13216) @cindex Emacs shell, format, print from
../texinfo/texinfo.txi(,13217) @cindex GNU Emacs shell, format, print from
../texinfo/texinfo.txi(,13218) 
../texinfo/texinfo.txi(,13219) You can give formatting and printing commands from a shell within GNU
../texinfo/texinfo.txi(,13220) Emacs.  To create a shell within Emacs, type @kbd{M-x shell}.  In this
../texinfo/texinfo.txi(,13221) shell, you can format and print the document.  @xref{Hardcopy, , Format
../texinfo/texinfo.txi(,13222) and Print Hardcopy}, for details.
../texinfo/texinfo.txi(,13223) 
../texinfo/texinfo.txi(,13224) You can switch to and from the shell buffer while @code{tex} is
../texinfo/texinfo.txi(,13225) running and do other editing.  If you are formatting a long document
../texinfo/texinfo.txi(,13226) on a slow machine, this can be very convenient.@refill
../texinfo/texinfo.txi(,13227) 
../texinfo/texinfo.txi(,13228) You can also use @code{texi2dvi} from an Emacs shell.  For example,
../texinfo/texinfo.txi(,13229) here is how to use @code{texi2dvi} to format and print @cite{Using and
../texinfo/texinfo.txi(,13230) Porting GNU CC} from a shell within Emacs:
../texinfo/texinfo.txi(,13231) 
../texinfo/texinfo.txi(,13232) @example
../texinfo/texinfo.txi(,13233) @group
../texinfo/texinfo.txi(,13234) texi2dvi gcc.texinfo
../texinfo/texinfo.txi(,13235) lpr -d gcc.dvi
../texinfo/texinfo.txi(,13236) @end group
../texinfo/texinfo.txi(,13237) @end example
../texinfo/texinfo.txi(,13239) 
../texinfo/texinfo.txi(,13240) @xref{Texinfo Mode Printing}, for more information about formatting
../texinfo/texinfo.txi(,13241) and printing in Texinfo mode.@refill
../texinfo/texinfo.txi(,13243) 
../texinfo/texinfo.txi(,13244) 
../texinfo/texinfo.txi(,13245) @node Texinfo Mode Printing, Compile-Command, Within Emacs, Hardcopy
../texinfo/texinfo.txi(,13246) @section Formatting and Printing in Texinfo Mode
../texinfo/texinfo.txi(,13247) @cindex Region printing in Texinfo mode
../texinfo/texinfo.txi(,13248) @cindex Format and print in Texinfo mode
../texinfo/texinfo.txi(,13249) @cindex Print and format in Texinfo mode
../texinfo/texinfo.txi(,13250) 
../texinfo/texinfo.txi(,13251) Texinfo mode provides several predefined key commands for @TeX{}
../texinfo/texinfo.txi(,13252) formatting and printing.  These include commands for sorting indices,
../texinfo/texinfo.txi(,13253) looking at the printer queue, killing the formatting job, and
../texinfo/texinfo.txi(,13254) recentering the display of the buffer in which the operations
../texinfo/texinfo.txi(,13255) occur.@refill
../texinfo/texinfo.txi(,13256) 
../texinfo/texinfo.txi(,13257) @table @kbd
../texinfo/texinfo.txi(,13258) @item C-c C-t C-b
../texinfo/texinfo.txi(,13259) @itemx M-x texinfo-tex-buffer
../texinfo/texinfo.txi(,13260) Run @code{texi2dvi} on the current buffer.@refill
../texinfo/texinfo.txi(,13261) 
../texinfo/texinfo.txi(,13262) @item C-c C-t C-r
../texinfo/texinfo.txi(,13263) @itemx M-x texinfo-tex-region
../texinfo/texinfo.txi(,13264) Run @TeX{} on the current region.@refill
../texinfo/texinfo.txi(,13265) 
../texinfo/texinfo.txi(,13266) @item C-c C-t C-i
../texinfo/texinfo.txi(,13267) @itemx M-x texinfo-texindex
../texinfo/texinfo.txi(,13268) Sort the indices of a Texinfo file formatted with
../texinfo/texinfo.txi(,13269) @code{texinfo-tex-region}.@refill
../texinfo/texinfo.txi(,13270) 
../texinfo/texinfo.txi(,13271) @item C-c C-t C-p
../texinfo/texinfo.txi(,13272) @itemx M-x texinfo-tex-print
../texinfo/texinfo.txi(,13273) Print a DVI file that was made with @code{texinfo-tex-region} or
../texinfo/texinfo.txi(,13274) @code{texinfo-tex-buffer}.@refill
../texinfo/texinfo.txi(,13275) 
../texinfo/texinfo.txi(,13276) @item C-c C-t C-q
../texinfo/texinfo.txi(,13277) @itemx M-x tex-show-print-queue
../texinfo/texinfo.txi(,13278) Show the print queue.@refill
../texinfo/texinfo.txi(,13279) 
../texinfo/texinfo.txi(,13280) @item C-c C-t C-d
../texinfo/texinfo.txi(,13281) @itemx M-x texinfo-delete-from-print-queue
../texinfo/texinfo.txi(,13282) Delete a job from the print queue; you will be prompted for the job
../texinfo/texinfo.txi(,13283) number shown by a preceding @kbd{C-c C-t C-q} command
../texinfo/texinfo.txi(,13284) (@code{texinfo-show-tex-print-queue}).@refill
../texinfo/texinfo.txi(,13285) 
../texinfo/texinfo.txi(,13286) @item C-c C-t C-k
../texinfo/texinfo.txi(,13287) @itemx M-x tex-kill-job
../texinfo/texinfo.txi(,13288) Kill the currently running @TeX{} job started by either
../texinfo/texinfo.txi(,13289) @code{texinfo-tex-region} or @code{texinfo-tex-buffer}, or any other
../texinfo/texinfo.txi(,13290) process running in the Texinfo shell buffer.@refill
../texinfo/texinfo.txi(,13291) 
../texinfo/texinfo.txi(,13292) @item C-c C-t C-x
../texinfo/texinfo.txi(,13293) @itemx M-x texinfo-quit-job
../texinfo/texinfo.txi(,13294) Quit a @TeX{} formatting job that has stopped because of an error by
../texinfo/texinfo.txi(,13295) sending an @key{x} to it.  When you do this, @TeX{} preserves a record
../texinfo/texinfo.txi(,13296) of what it did in a @file{.log} file.@refill
../texinfo/texinfo.txi(,13297) 
../texinfo/texinfo.txi(,13298) @item C-c C-t C-l
../texinfo/texinfo.txi(,13299) @itemx M-x tex-recenter-output-buffer
../texinfo/texinfo.txi(,13300) Redisplay the shell buffer in which the @TeX{} printing and formatting
../texinfo/texinfo.txi(,13301) commands are run to show its most recent output.@refill
../texinfo/texinfo.txi(,13302) @end table
../texinfo/texinfo.txi(,13303) 
../texinfo/texinfo.txi(,13304) @need 1000
../texinfo/texinfo.txi(,13305) Thus, the usual sequence of commands for formatting a buffer is as
../texinfo/texinfo.txi(,13306) follows (with comments to the right):@refill
../texinfo/texinfo.txi(,13307) 
../texinfo/texinfo.txi(,13308) @example
../texinfo/texinfo.txi(,13309) @group
../texinfo/texinfo.txi(,13310) C-c C-t C-b             @r{Run @code{texi2dvi} on the buffer.}
../texinfo/texinfo.txi(,13311) C-c C-t C-p             @r{Print the DVI file.}
../texinfo/texinfo.txi(,13312) C-c C-t C-q             @r{Display the printer queue.}
../texinfo/texinfo.txi(,13313) @end group
../texinfo/texinfo.txi(,13314) @end example
../texinfo/texinfo.txi(,13315) 
../texinfo/texinfo.txi(,13316) The Texinfo mode @TeX{} formatting commands start a subshell in Emacs
../texinfo/texinfo.txi(,13317) called the @file{*tex-shell*}.  The @code{texinfo-tex-command},
../texinfo/texinfo.txi(,13318) @code{texinfo-texindex-command}, and @code{tex-dvi-print-command}
../texinfo/texinfo.txi(,13319) commands are all run in this shell.
../texinfo/texinfo.txi(,13320) 
../texinfo/texinfo.txi(,13321) You can watch the commands operate in the @samp{*tex-shell*} buffer,
../texinfo/texinfo.txi(,13322) and you can switch to and from and use the @samp{*tex-shell*} buffer
../texinfo/texinfo.txi(,13323) as you would any other shell buffer.@refill
../texinfo/texinfo.txi(,13324) 
../texinfo/texinfo.txi(,13325) @need 1500
../texinfo/texinfo.txi(,13326) The formatting and print commands depend on the values of several variables.
../texinfo/texinfo.txi(,13327) The default values are:@refill
../texinfo/texinfo.txi(,13328) 
../texinfo/texinfo.txi(,13329) @example
../texinfo/texinfo.txi(,13330) @group
../texinfo/texinfo.txi(,13331)      @r{Variable}                              @r{Default value}
../texinfo/texinfo.txi(,13332) 
../texinfo/texinfo.txi(,13333) texinfo-texi2dvi-command                  "texi2dvi"
../texinfo/texinfo.txi(,13334) texinfo-tex-command                       "tex"
../texinfo/texinfo.txi(,13335) texinfo-texindex-command                  "texindex"
../texinfo/texinfo.txi(,13336) texinfo-delete-from-print-queue-command   "lprm"
../texinfo/texinfo.txi(,13337) texinfo-tex-trailer                       "@@bye"
../texinfo/texinfo.txi(,13338) tex-start-of-header                       "%**start"
../texinfo/texinfo.txi(,13339) tex-end-of-header                         "%**end"
../texinfo/texinfo.txi(,13340) tex-dvi-print-command                     "lpr -d"
../texinfo/texinfo.txi(,13341) tex-show-queue-command                    "lpq"
../texinfo/texinfo.txi(,13342) @end group
../texinfo/texinfo.txi(,13343) @end example
../texinfo/texinfo.txi(,13344) 
../texinfo/texinfo.txi(,13345) You can change the values of these variables with the @kbd{M-x
../texinfo/texinfo.txi(,13346) edit-options} command (@pxref{Edit Options, , Editing Variable Values,
../texinfo/texinfo.txi(,13347) emacs, The GNU Emacs Manual}), with the @kbd{M-x set-variable} command
../texinfo/texinfo.txi(,13348) (@pxref{Examining, , Examining and Setting Variables, emacs, The GNU
../texinfo/texinfo.txi(,13349) Emacs Manual}), or with your @file{.emacs} initialization file
../texinfo/texinfo.txi(,13350) (@pxref{Init File, , , emacs, The GNU Emacs Manual}).@refill
../texinfo/texinfo.txi(,13351) 
../texinfo/texinfo.txi(,13352) @cindex Customize Emacs package (@t{Development/Docs/Texinfo})
../texinfo/texinfo.txi(,13353) Beginning with version 20, GNU Emacs offers a user-friendly interface,
../texinfo/texinfo.txi(,13354) called @dfn{Customize}, for changing values of user-definable variables.
../texinfo/texinfo.txi(,13355) @xref{Easy Customization, , Easy Customization Interface, emacs, The GNU
../texinfo/texinfo.txi(,13356) Emacs Manual}, for more details about this.  The Texinfo variables can
../texinfo/texinfo.txi(,13357) be found in the @samp{Development/Docs/Texinfo} group, once you invoke
../texinfo/texinfo.txi(,13358) the @kbd{M-x customize} command.
../texinfo/texinfo.txi(,13359) 
../texinfo/texinfo.txi(,13360) 
../texinfo/texinfo.txi(,13361) @node Compile-Command
../texinfo/texinfo.txi(,13362) @section Using the Local Variables List
../texinfo/texinfo.txi(,13363) @cindex Local variables
../texinfo/texinfo.txi(,13364) @cindex Compile command for formatting
../texinfo/texinfo.txi(,13365) @cindex Format with the compile command
../texinfo/texinfo.txi(,13366) 
../texinfo/texinfo.txi(,13367) Yet another way to apply the @TeX{} formatting command to a Texinfo file
../texinfo/texinfo.txi(,13368) is to put that command in a @dfn{local variables list} at the end of the
../texinfo/texinfo.txi(,13369) Texinfo file.  You can then specify the @code{tex} or @code{texi2dvi}
../texinfo/texinfo.txi(,13370) commands as a @code{compile-command} and have Emacs run it by typing
../texinfo/texinfo.txi(,13371) @kbd{M-x compile}.  This creates a special shell called the
../texinfo/texinfo.txi(,13372) @file{*compilation*} buffer in which Emacs runs the compile command.
../texinfo/texinfo.txi(,13373) For example, at the end of the @file{gdb.texinfo} file, after the
../texinfo/texinfo.txi(,13374) @code{@@bye}, you could put the following:@refill
../texinfo/texinfo.txi(,13375) 
../texinfo/texinfo.txi(,13376) @example
../texinfo/texinfo.txi(,13377) @group
../texinfo/texinfo.txi(,13378) Local Variables:
../texinfo/texinfo.txi(,13379) compile-command: "texi2dvi gdb.texinfo"
../texinfo/texinfo.txi(,13380) End:
../texinfo/texinfo.txi(,13381) @end group
../texinfo/texinfo.txi(,13382) @end example
../texinfo/texinfo.txi(,13383) 
../texinfo/texinfo.txi(,13384) @noindent
../texinfo/texinfo.txi(,13385) This technique is most often used by programmers who also compile programs
../texinfo/texinfo.txi(,13386) this way; see @ref{Compilation, , , emacs, The GNU Emacs Manual}.@refill
../texinfo/texinfo.txi(,13387) 
../texinfo/texinfo.txi(,13388) 
../texinfo/texinfo.txi(,13389) @node Requirements Summary
../texinfo/texinfo.txi(,13390) @section @TeX{} Formatting Requirements Summary
../texinfo/texinfo.txi(,13391) @cindex Requirements for formatting
../texinfo/texinfo.txi(,13392) @cindex Minimal requirements for formatting
../texinfo/texinfo.txi(,13393) @cindex Formatting requirements
../texinfo/texinfo.txi(,13394) 
../texinfo/texinfo.txi(,13395) Every Texinfo file that is to be input to @TeX{} must begin with a
../texinfo/texinfo.txi(,13396) @code{\input} command and must contain an @code{@@setfilename} command:
../texinfo/texinfo.txi(,13397) 
../texinfo/texinfo.txi(,13398) @example
../texinfo/texinfo.txi(,13399) \input texinfo
../texinfo/texinfo.txi(,13400) @@setfilename @var{arg-not-used-by-@TeX{}}
../texinfo/texinfo.txi(,13401) @end example
../texinfo/texinfo.txi(,13402) 
../texinfo/texinfo.txi(,13403) @noindent
../texinfo/texinfo.txi(,13404) The first command instructs @TeX{} to load the macros it needs to
../texinfo/texinfo.txi(,13405) process a Texinfo file and the second command opens auxiliary files.
../texinfo/texinfo.txi(,13406) 
../texinfo/texinfo.txi(,13407) Every Texinfo file must end with a line that terminates @TeX{}'s
../texinfo/texinfo.txi(,13408) processing and forces out unfinished pages:
../texinfo/texinfo.txi(,13409) 
../texinfo/texinfo.txi(,13410) @example
../texinfo/texinfo.txi(,13411) @@bye
../texinfo/texinfo.txi(,13412) @end example
../texinfo/texinfo.txi(,13413) 
../texinfo/texinfo.txi(,13414) Strictly speaking, these lines are all a Texinfo file needs to be
../texinfo/texinfo.txi(,13415) processed successfully by @TeX{}.
../texinfo/texinfo.txi(,13416) 
../texinfo/texinfo.txi(,13417) Usually, however, the beginning includes an @code{@@settitle} command to
../texinfo/texinfo.txi(,13418) define the title of the printed manual, an @code{@@setchapternewpage}
../texinfo/texinfo.txi(,13419) command, a title page, a copyright page, and permissions.  Besides an
../texinfo/texinfo.txi(,13420) @code{@@bye}, the end of a file usually includes indices and a table of
../texinfo/texinfo.txi(,13421) contents.  (And of course most manuals contain a body of text as well.)
../texinfo/texinfo.txi(,13422) 
../texinfo/texinfo.txi(,13423) For more information, see:
../texinfo/texinfo.txi(,13424) @itemize @bullet
../texinfo/texinfo.txi(,13425) @item @ref{settitle, , @code{@@settitle}}
../texinfo/texinfo.txi(,13426) @item @ref{setchapternewpage, , @code{@@setchapternewpage}}
../texinfo/texinfo.txi(,13427) @item @ref{Headings, ,Page Headings}
../texinfo/texinfo.txi(,13428) @item @ref{Titlepage & Copyright Page}
../texinfo/texinfo.txi(,13429) @item @ref{Printing Indices & Menus}
../texinfo/texinfo.txi(,13430) @item @ref{Contents}
../texinfo/texinfo.txi(,13431) @end itemize
../texinfo/texinfo.txi(,13432) 
../texinfo/texinfo.txi(,13433) 
../texinfo/texinfo.txi(,13434) @node Preparing for TeX
../texinfo/texinfo.txi(,13435) @section Preparing for @TeX{}
../texinfo/texinfo.txi(,13436) @cindex Preparing for @TeX{}
../texinfo/texinfo.txi(,13437) @cindex @TeX{} input initialization
../texinfo/texinfo.txi(,13438) @cindex @code{TEXINPUTS} environment variable
../texinfo/texinfo.txi(,13439) @vindex TEXINPUTS
../texinfo/texinfo.txi(,13440) @cindex @b{.profile} initialization file
../texinfo/texinfo.txi(,13441) @cindex @b{.cshrc} initialization file
../texinfo/texinfo.txi(,13442) @cindex Initialization file for @TeX{} input
../texinfo/texinfo.txi(,13443) 
../texinfo/texinfo.txi(,13444) @TeX{} needs to know where to find the @file{texinfo.tex} file that the
../texinfo/texinfo.txi(,13445) @samp{\input texinfo} command on the first line reads.  The
../texinfo/texinfo.txi(,13446) @file{texinfo.tex} file tells @TeX{} how to handle @@-commands; it is
../texinfo/texinfo.txi(,13447) included in all standard GNU distributions.
../texinfo/texinfo.txi(,13448) 
../texinfo/texinfo.txi(,13449) @pindex texinfo.tex@r{, installing}
../texinfo/texinfo.txi(,13450) 
../texinfo/texinfo.txi(,13451) Usually, the installer has put the @file{texinfo.tex} file in the
../texinfo/texinfo.txi(,13452) default directory that contains @TeX{} macros when GNU Texinfo, Emacs or
../texinfo/texinfo.txi(,13453) other GNU software is installed.  In this case, @TeX{} will find the
../texinfo/texinfo.txi(,13454) file and you do not need to do anything special.  If this has not been
../texinfo/texinfo.txi(,13455) done, you can put @file{texinfo.tex} in the current directory when you
../texinfo/texinfo.txi(,13456) run @TeX{}, and @TeX{} will find it there.
../texinfo/texinfo.txi(,13457) 
../texinfo/texinfo.txi(,13458) @pindex epsf.tex@r{, installing}
../texinfo/texinfo.txi(,13459) Also, you should install @file{epsf.tex}, if it is not already installed
../texinfo/texinfo.txi(,13460) from another distribution.  More details are at the end of the description
../texinfo/texinfo.txi(,13461) of the @code{@@image} command (@pxref{Images}).
../texinfo/texinfo.txi(,13462) 
../texinfo/texinfo.txi(,13463) @pindex pdfcolor.tex@r{, installing}
../texinfo/texinfo.txi(,13464) Likewise for @file{pdfcolor.tex}, if it is not already installed and you
../texinfo/texinfo.txi(,13465) use pdftex.
../texinfo/texinfo.txi(,13466) 
../texinfo/texinfo.txi(,13467) @pindex texinfo.cnf @r{installation}
../texinfo/texinfo.txi(,13468) @cindex Customizing of @TeX{} for Texinfo
../texinfo/texinfo.txi(,13469) @cindex Site-wide Texinfo configuration file
../texinfo/texinfo.txi(,13470) Optionally, you may create an additional @file{texinfo.cnf}, and install
../texinfo/texinfo.txi(,13471) it as well.  This file is read by @TeX{} when the @code{@@setfilename}
../texinfo/texinfo.txi(,13472) command is executed (@pxref{setfilename,, @code{@@setfilename}}).  You can put any
../texinfo/texinfo.txi(,13473) commands you like there, according to local site-wide conventions.  They
../texinfo/texinfo.txi(,13474) will be read by @TeX{} when processing any Texinfo document.  For
../texinfo/texinfo.txi(,13475) example, if @file{texinfo.cnf} contains the line @samp{@@afourpaper}
../texinfo/texinfo.txi(,13476) (@pxref{A4 Paper}), then all Texinfo documents will be processed with
../texinfo/texinfo.txi(,13477) that page size in effect.  If you have nothing to put in
../texinfo/texinfo.txi(,13478) @file{texinfo.cnf}, you do not need to create it.
../texinfo/texinfo.txi(,13479) 
../texinfo/texinfo.txi(,13480) @vindex TEXINPUTS
../texinfo/texinfo.txi(,13481) If neither of the above locations for these system files suffice for
../texinfo/texinfo.txi(,13482) you, you can specify the directories explicitly.  For
../texinfo/texinfo.txi(,13483) @file{texinfo.tex}, you can do this by writing the complete path for the
../texinfo/texinfo.txi(,13484) file after the @code{\input} command.  Another way, that works for both
../texinfo/texinfo.txi(,13485) @file{texinfo.tex} and @file{texinfo.cnf} (and any other file @TeX{}
../texinfo/texinfo.txi(,13486) might read), is to set the @code{TEXINPUTS} environment variable in your
../texinfo/texinfo.txi(,13487) @file{.cshrc} or @file{.profile} file.
../texinfo/texinfo.txi(,13488) 
../texinfo/texinfo.txi(,13489) Which you use of @file{.cshrc} or @file{.profile} depends on
../texinfo/texinfo.txi(,13490) whether you use a Bourne shell-compatible (@code{sh}, @code{bash},
../texinfo/texinfo.txi(,13491) @code{ksh}, @dots{}) or C shell-compatible (@code{csh}, @code{tcsh})
../texinfo/texinfo.txi(,13492) command interpreter.  The latter read the @file{.cshrc} file for
../texinfo/texinfo.txi(,13493) initialization information, and the former read @file{.profile}.
../texinfo/texinfo.txi(,13494) 
../texinfo/texinfo.txi(,13495) In a @file{.cshrc} file, you could use the following @code{csh} command
../texinfo/texinfo.txi(,13496) sequence:
../texinfo/texinfo.txi(,13497) 
../texinfo/texinfo.txi(,13498) @example
../texinfo/texinfo.txi(,13499) setenv TEXINPUTS .:/home/me/mylib:/usr/lib/tex/macros
../texinfo/texinfo.txi(,13500) @end example
../texinfo/texinfo.txi(,13501) 
../texinfo/texinfo.txi(,13502) @need 1000
../texinfo/texinfo.txi(,13503) In a @file{.profile} file, you could use the following @code{sh} command
../texinfo/texinfo.txi(,13504) sequence:
../texinfo/texinfo.txi(,13505) 
../texinfo/texinfo.txi(,13506) @example
../texinfo/texinfo.txi(,13507) @group
../texinfo/texinfo.txi(,13508) TEXINPUTS=.:/home/me/mylib:/usr/lib/tex/macros
../texinfo/texinfo.txi(,13509) export TEXINPUTS
../texinfo/texinfo.txi(,13510) @end group
../texinfo/texinfo.txi(,13511) @end example
../texinfo/texinfo.txi(,13512) 
../texinfo/texinfo.txi(,13513) On MS-DOS/MS-Windows, you would say it like this@footnote{Note the use
../texinfo/texinfo.txi(,13514) of the @samp{;} character, instead of @samp{:}, as directory separator
../texinfo/texinfo.txi(,13515) on these systems.}:
../texinfo/texinfo.txi(,13516) 
../texinfo/texinfo.txi(,13517) @example
../texinfo/texinfo.txi(,13518) @group
../texinfo/texinfo.txi(,13519) set TEXINPUTS=.;d:/home/me/mylib;c:/usr/lib/tex/macros
../texinfo/texinfo.txi(,13520) @end group
../texinfo/texinfo.txi(,13521) @end example
../texinfo/texinfo.txi(,13522) 
../texinfo/texinfo.txi(,13523) @noindent
../texinfo/texinfo.txi(,13524) It is customary for DOS/Windows users to put such commands in the
../texinfo/texinfo.txi(,13525) @file{autoexec.bat} file, or in the Windows Registry.@refill
../texinfo/texinfo.txi(,13526) 
../texinfo/texinfo.txi(,13527) @noindent
../texinfo/texinfo.txi(,13528) These settings would cause @TeX{} to look for @file{\input} file first
../texinfo/texinfo.txi(,13529) in the current directory, indicated by the @samp{.}, then in a
../texinfo/texinfo.txi(,13530) hypothetical user's @file{me/mylib} directory, and finally in a system
../texinfo/texinfo.txi(,13531) directory @file{/usr/lib/tex/macros}.
../texinfo/texinfo.txi(,13532) 
../texinfo/texinfo.txi(,13533) @cindex Dumping a .fmt file
../texinfo/texinfo.txi(,13534) @cindex Format file, dumping
../texinfo/texinfo.txi(,13535) Finally, you may wish to dump a @file{.fmt} file (@pxref{Memory dumps,,,
../texinfo/texinfo.txi(,13536) web2c, Web2c}) so that @TeX{} can load Texinfo faster.  (The
../texinfo/texinfo.txi(,13537) disadvantage is that then updating @file{texinfo.tex} requires
../texinfo/texinfo.txi(,13538) redumping.)  You can do this by running this command, assuming
../texinfo/texinfo.txi(,13539) @file{epsf.tex} is findable by @TeX{}:
../texinfo/texinfo.txi(,13540) 
../texinfo/texinfo.txi(,13541) @example
../texinfo/texinfo.txi(,13542) initex texinfo @@dump
../texinfo/texinfo.txi(,13543) @end example
../texinfo/texinfo.txi(,13544) 
../texinfo/texinfo.txi(,13545) (@code{dump} is a @TeX{} primitive.)  Then, move @file{texinfo.fmt} to
../texinfo/texinfo.txi(,13546) wherever your @code{.fmt} files are found; typically, this will be in the
../texinfo/texinfo.txi(,13547) subdirectory @file{web2c} of your @TeX{} installation.
../texinfo/texinfo.txi(,13548) 
../texinfo/texinfo.txi(,13549) 
../texinfo/texinfo.txi(,13550) @node Overfull hboxes
../texinfo/texinfo.txi(,13551) @section Overfull ``hboxes''
../texinfo/texinfo.txi(,13552) @cindex Overfull @samp{hboxes}
../texinfo/texinfo.txi(,13553) @cindex @samp{hboxes}, overfull
../texinfo/texinfo.txi(,13554) @cindex Final output
../texinfo/texinfo.txi(,13555) 
../texinfo/texinfo.txi(,13556) @TeX{} is sometimes unable to typeset a line without extending it into
../texinfo/texinfo.txi(,13557) the right margin.  This can occur when @TeX{} comes upon what it
../texinfo/texinfo.txi(,13558) interprets as a long word that it cannot hyphenate, such as an
../texinfo/texinfo.txi(,13559) electronic mail network address or a very long title.  When this
../texinfo/texinfo.txi(,13560) happens, @TeX{} prints an error message like this:
../texinfo/texinfo.txi(,13561) 
../texinfo/texinfo.txi(,13562) @example
../texinfo/texinfo.txi(,13563) Overfull @@hbox (20.76302pt too wide)
../texinfo/texinfo.txi(,13564) @end example
../texinfo/texinfo.txi(,13565) 
../texinfo/texinfo.txi(,13566) @findex hbox
../texinfo/texinfo.txi(,13567) @noindent
../texinfo/texinfo.txi(,13568) (In @TeX{}, lines are in ``horizontal boxes'', hence the term, ``hbox''.
../texinfo/texinfo.txi(,13569) @samp{@@hbox} is a @TeX{} primitive not needed in the Texinfo language.)
../texinfo/texinfo.txi(,13570) 
../texinfo/texinfo.txi(,13571) @TeX{} also provides the line number in the Texinfo source file and
../texinfo/texinfo.txi(,13572) the text of the offending line, which is marked at all the places that
../texinfo/texinfo.txi(,13573) @TeX{} considered hyphenation.
../texinfo/texinfo.txi(,13574) @xref{Debugging with TeX, , Catching Errors with @TeX{} Formatting},
../texinfo/texinfo.txi(,13575) for more information about typesetting errors.
../texinfo/texinfo.txi(,13576) 
../texinfo/texinfo.txi(,13577) If the Texinfo file has an overfull hbox, you can rewrite the sentence
../texinfo/texinfo.txi(,13578) so the overfull hbox does not occur, or you can decide to leave it.  A
../texinfo/texinfo.txi(,13579) small excursion into the right margin often does not matter and may not
../texinfo/texinfo.txi(,13580) even be noticeable.
../texinfo/texinfo.txi(,13581) 
../texinfo/texinfo.txi(,13582) If you have many overfull boxes and/or an antipathy to rewriting, you
../texinfo/texinfo.txi(,13583) can coerce @TeX{} into greatly increasing the allowable interword
../texinfo/texinfo.txi(,13584) spacing, thus (if you're lucky) avoiding many of the bad line breaks,
../texinfo/texinfo.txi(,13585) like this:
../texinfo/texinfo.txi(,13586) 
../texinfo/texinfo.txi(,13587) @findex \emergencystretch
../texinfo/texinfo.txi(,13588) @example
../texinfo/texinfo.txi(,13589) @@tex
../texinfo/texinfo.txi(,13590) \global\emergencystretch = .9\hsize
../texinfo/texinfo.txi(,13591) @@end tex
../texinfo/texinfo.txi(,13592) @end example
../texinfo/texinfo.txi(,13593) 
../texinfo/texinfo.txi(,13594) @noindent
../texinfo/texinfo.txi(,13595) (You should adjust the fraction as needed.)  This huge value for
../texinfo/texinfo.txi(,13596) @code{\emergencystretch} cannot be the default, since then the typeset
../texinfo/texinfo.txi(,13597) output would generally be of noticeably lower quality; the default
../texinfo/texinfo.txi(,13598) is @samp{.15\hsize}.  @code{\hsize} is the @TeX{} dimension
../texinfo/texinfo.txi(,13599) containing the current line width.
../texinfo/texinfo.txi(,13600) 
../texinfo/texinfo.txi(,13601) @cindex Black rectangle in hardcopy
../texinfo/texinfo.txi(,13602) @cindex Rectangle, black in hardcopy
../texinfo/texinfo.txi(,13603) @cindex Box, ugly black in hardcopy
../texinfo/texinfo.txi(,13604) @cindex Ugly black rectangles in hardcopy
../texinfo/texinfo.txi(,13605) For what overfull boxes you have, however, @TeX{} will print a large,
../texinfo/texinfo.txi(,13606) ugly, black rectangle beside the line that contains the overfull hbox
../texinfo/texinfo.txi(,13607) unless told otherwise.  This is so you will notice the location of the
../texinfo/texinfo.txi(,13608) problem if you are correcting a draft.
../texinfo/texinfo.txi(,13609) 
../texinfo/texinfo.txi(,13610) @findex finalout
../texinfo/texinfo.txi(,13611) To prevent such a monstrosity from marring your final printout, write
../texinfo/texinfo.txi(,13612) the following in the beginning of the Texinfo file on a line of its own,
../texinfo/texinfo.txi(,13613) before the @code{@@titlepage} command:
../texinfo/texinfo.txi(,13614) 
../texinfo/texinfo.txi(,13615) @example
../texinfo/texinfo.txi(,13616) @@finalout
../texinfo/texinfo.txi(,13617) @end example
../texinfo/texinfo.txi(,13618) 
../texinfo/texinfo.txi(,13619) 
../texinfo/texinfo.txi(,13620) @node smallbook
../texinfo/texinfo.txi(,13621) @section Printing ``Small'' Books
../texinfo/texinfo.txi(,13622) @findex smallbook
../texinfo/texinfo.txi(,13623) @cindex Small book size
../texinfo/texinfo.txi(,13624) @cindex Book, printing small
../texinfo/texinfo.txi(,13625) @cindex Page sizes for books
../texinfo/texinfo.txi(,13626) @cindex Size of printed book
../texinfo/texinfo.txi(,13627) 
../texinfo/texinfo.txi(,13628) By default, @TeX{} typesets pages for printing in an 8.5 by 11 inch
../texinfo/texinfo.txi(,13629) format.  However, you can direct @TeX{} to typeset a document in a 7 by
../texinfo/texinfo.txi(,13630) 9.25 inch format that is suitable for bound books by inserting the
../texinfo/texinfo.txi(,13631) following command on a line by itself at the beginning of the Texinfo
../texinfo/texinfo.txi(,13632) file, before the title page:@refill
../texinfo/texinfo.txi(,13633) 
../texinfo/texinfo.txi(,13634) @example
../texinfo/texinfo.txi(,13635) @@smallbook
../texinfo/texinfo.txi(,13636) @end example
../texinfo/texinfo.txi(,13637) 
../texinfo/texinfo.txi(,13638) @noindent
../texinfo/texinfo.txi(,13639) (Since many books are about 7 by 9.25 inches, this command might better
../texinfo/texinfo.txi(,13640) have been called the @code{@@regularbooksize} command, but it came to be
../texinfo/texinfo.txi(,13641) called the @code{@@smallbook} command by comparison to the 8.5 by 11 inch format.)
../texinfo/texinfo.txi(,13642) 
../texinfo/texinfo.txi(,13643) If you write the @code{@@smallbook} command between the
../texinfo/texinfo.txi(,13644) start-of-header and end-of-header lines, the Texinfo mode @TeX{}
../texinfo/texinfo.txi(,13645) region formatting command, @code{texinfo-tex-region}, will format the
../texinfo/texinfo.txi(,13646) region in ``small'' book size (@pxref{Start of Header}).@refill
../texinfo/texinfo.txi(,13647) 
../texinfo/texinfo.txi(,13648) @xref{small}, for information about
../texinfo/texinfo.txi(,13649) commands that make it easier to produce examples for a smaller manual.
../texinfo/texinfo.txi(,13650) 
../texinfo/texinfo.txi(,13651) @xref{Format with texi2dvi}, and @ref{Preparing for TeX,,Preparing for
../texinfo/texinfo.txi(,13652) @TeX{}}, for other ways to format with @code{@@smallbook} that do not
../texinfo/texinfo.txi(,13653) require changing the source file.
../texinfo/texinfo.txi(,13654) 
../texinfo/texinfo.txi(,13655) 
../texinfo/texinfo.txi(,13656) @node A4 Paper
../texinfo/texinfo.txi(,13657) @section Printing on A4 Paper
../texinfo/texinfo.txi(,13658) @cindex A4 paper, printing on
../texinfo/texinfo.txi(,13659) @cindex A5 paper, printing on
../texinfo/texinfo.txi(,13660) @cindex Paper size, A4
../texinfo/texinfo.txi(,13661) @cindex European A4 paper
../texinfo/texinfo.txi(,13662) @findex afourpaper
../texinfo/texinfo.txi(,13663) 
../texinfo/texinfo.txi(,13664) You can tell @TeX{} to format a document for printing on European size
../texinfo/texinfo.txi(,13665) A4 paper (or A5) with the @code{@@afourpaper} (or @code{@@afivepaper})
../texinfo/texinfo.txi(,13666) command.  Write the command on a line by itself near the beginning of
../texinfo/texinfo.txi(,13667) the Texinfo file, before the title page.  For example, this is how you
../texinfo/texinfo.txi(,13668) would write the header for this manual:
../texinfo/texinfo.txi(,13669) 
../texinfo/texinfo.txi(,13670) @example
../texinfo/texinfo.txi(,13671) @group
../texinfo/texinfo.txi(,13672) \input texinfo    @@c -*-texinfo-*-
../texinfo/texinfo.txi(,13673) @@c %**start of header
../texinfo/texinfo.txi(,13674) @@setfilename texinfo
../texinfo/texinfo.txi(,13675) @@settitle Texinfo
../texinfo/texinfo.txi(,13676) @@afourpaper
../texinfo/texinfo.txi(,13677) @@c %**end of header
../texinfo/texinfo.txi(,13678) @end group
../texinfo/texinfo.txi(,13679) @end example
../texinfo/texinfo.txi(,13680) 
../texinfo/texinfo.txi(,13681) @xref{Format with texi2dvi}, and @ref{Preparing for TeX,,Preparing for
../texinfo/texinfo.txi(,13682) @TeX{}}, for other ways to format for different paper sizes that do not
../texinfo/texinfo.txi(,13683) require changing the source file.
../texinfo/texinfo.txi(,13684) 
../texinfo/texinfo.txi(,13685) @findex afourlatex
../texinfo/texinfo.txi(,13686) @findex afourwide
../texinfo/texinfo.txi(,13687) You may or may not prefer the formatting that results from the command
../texinfo/texinfo.txi(,13688) @code{@@afourlatex}.  There's also @code{@@afourwide} for A4 paper in
../texinfo/texinfo.txi(,13689) wide format.
../texinfo/texinfo.txi(,13690) 
../texinfo/texinfo.txi(,13691) @node pagesizes
../texinfo/texinfo.txi(,13692) @section @code{@@pagesizes} [@var{width}][, @var{height}]: Custom page sizes
../texinfo/texinfo.txi(,13693) @findex pagesizes
../texinfo/texinfo.txi(,13694) @cindex Custom page sizes
../texinfo/texinfo.txi(,13695) @cindex Page sizes, customized
../texinfo/texinfo.txi(,13696) @cindex Text width and height
../texinfo/texinfo.txi(,13697) @cindex Width of text area
../texinfo/texinfo.txi(,13698) @cindex Height of text area
../texinfo/texinfo.txi(,13699) @cindex Depth of text area
../texinfo/texinfo.txi(,13700) 
../texinfo/texinfo.txi(,13701) You can explicitly specify the height and (optionally) width of the main
../texinfo/texinfo.txi(,13702) text area on the page with the @code{@@pagesizes} command.  Write this
../texinfo/texinfo.txi(,13703) on a line by itself near the beginning of the Texinfo file, before the
../texinfo/texinfo.txi(,13704) title page.  The height comes first, then the width if desired,
../texinfo/texinfo.txi(,13705) separated by a comma.  Examples:
../texinfo/texinfo.txi(,13706) 
../texinfo/texinfo.txi(,13707) @example
../texinfo/texinfo.txi(,13708) @@pagesizes 200mm,150mm  @c for b5 paper
../texinfo/texinfo.txi(,13709) @end example
../texinfo/texinfo.txi(,13710) @noindent and
../texinfo/texinfo.txi(,13711) @example
../texinfo/texinfo.txi(,13712) @@pagesizes 11.5in      @c for legal paper
../texinfo/texinfo.txi(,13713) @end example
../texinfo/texinfo.txi(,13714) 
../texinfo/texinfo.txi(,13715) @cindex B5 paper, printing on
../texinfo/texinfo.txi(,13716) @cindex Legal paper, printing on
../texinfo/texinfo.txi(,13717) This would be reasonable for printing on B5-size paper.  To emphasize,
../texinfo/texinfo.txi(,13718) this command specifies the size of the @emph{text area}, not the size of
../texinfo/texinfo.txi(,13719) the paper (which is 250@dmn{mm} by 177@dmn{mm} for B5, 14@dmn{in} by
../texinfo/texinfo.txi(,13720) 8.5@dmn{in} for legal).
../texinfo/texinfo.txi(,13721) 
../texinfo/texinfo.txi(,13722) @cindex Margins on page, not controllable
../texinfo/texinfo.txi(,13723) To make more elaborate changes, such as changing any of the page
../texinfo/texinfo.txi(,13724) margins, you must define a new command in @file{texinfo.tex} (or
../texinfo/texinfo.txi(,13725) @file{texinfo.cnf}, @pxref{Preparing for TeX,,Preparing for @TeX{}}).
../texinfo/texinfo.txi(,13726) 
../texinfo/texinfo.txi(,13727) @xref{Format with texi2dvi}, and @ref{Preparing for TeX,,Preparing for
../texinfo/texinfo.txi(,13728) @TeX{}}, for other ways to specify @code{@@pagesizes} that do not
../texinfo/texinfo.txi(,13729) require changing the source file.
../texinfo/texinfo.txi(,13730) 
../texinfo/texinfo.txi(,13731) @code{@@pagesizes} is ignored by @code{makeinfo}.
../texinfo/texinfo.txi(,13732) 
../texinfo/texinfo.txi(,13733) 
../texinfo/texinfo.txi(,13734) @node Cropmarks and Magnification
../texinfo/texinfo.txi(,13735) @section Cropmarks and Magnification
../texinfo/texinfo.txi(,13736) @findex cropmarks
../texinfo/texinfo.txi(,13737) @cindex Cropmarks for printing
../texinfo/texinfo.txi(,13738) @cindex Printing cropmarks
../texinfo/texinfo.txi(,13739) You can (attempt to) direct @TeX{} to print cropmarks at the corners of
../texinfo/texinfo.txi(,13740) pages with the @code{@@cropmarks} command.  Write the @code{@@cropmarks}
../texinfo/texinfo.txi(,13741) command on a line by itself between @code{@@iftex} and @code{@@end
../texinfo/texinfo.txi(,13742) iftex} lines near the beginning of the Texinfo file, before the title
../texinfo/texinfo.txi(,13743) page, like this:@refill
../texinfo/texinfo.txi(,13744) 
../texinfo/texinfo.txi(,13745) @example
../texinfo/texinfo.txi(,13746) @group
../texinfo/texinfo.txi(,13747) @@iftex
../texinfo/texinfo.txi(,13748) @@cropmarks
../texinfo/texinfo.txi(,13749) @@end iftex
../texinfo/texinfo.txi(,13750) @end group
../texinfo/texinfo.txi(,13751) @end example
../texinfo/texinfo.txi(,13752) 
../texinfo/texinfo.txi(,13753) This command is mainly for printers that typeset several pages on one
../texinfo/texinfo.txi(,13754) sheet of film; but you can attempt to use it to mark the corners of a
../texinfo/texinfo.txi(,13755) book set to 7 by 9.25 inches with the @code{@@smallbook} command.
../texinfo/texinfo.txi(,13756) (Printers will not produce cropmarks for regular sized output that is
../texinfo/texinfo.txi(,13757) printed on regular sized paper.)  Since different printing machines work
../texinfo/texinfo.txi(,13758) in different ways, you should explore the use of this command with a
../texinfo/texinfo.txi(,13759) spirit of adventure.  You may have to redefine the command in
../texinfo/texinfo.txi(,13760) @file{texinfo.tex}.
../texinfo/texinfo.txi(,13761) 
../texinfo/texinfo.txi(,13762) @findex \mag @r{(raw @TeX{} magnification)}
../texinfo/texinfo.txi(,13763) @cindex Magnified printing
../texinfo/texinfo.txi(,13764) @cindex Larger or smaller pages
../texinfo/texinfo.txi(,13765) You can attempt to direct @TeX{} to typeset pages larger or smaller than
../texinfo/texinfo.txi(,13766) usual with the @code{\mag} @TeX{} command.  Everything that is typeset
../texinfo/texinfo.txi(,13767) is scaled proportionally larger or smaller.  (@code{\mag} stands for
../texinfo/texinfo.txi(,13768) ``magnification''.)  This is @emph{not} a Texinfo @@-command, but is a
../texinfo/texinfo.txi(,13769) plain @TeX{} command that is prefixed with a backslash.  You have to
../texinfo/texinfo.txi(,13770) write this command between @code{@@tex} and @code{@@end tex}
../texinfo/texinfo.txi(,13771) (@pxref{Raw Formatter Commands}).
../texinfo/texinfo.txi(,13772) 
../texinfo/texinfo.txi(,13773) Follow the @code{\mag} command with an @samp{=} and then a number that
../texinfo/texinfo.txi(,13774) is 1000 times the magnification you desire.  For example, to print pages
../texinfo/texinfo.txi(,13775) at 1.2 normal size, write the following near the beginning of the
../texinfo/texinfo.txi(,13776) Texinfo file, before the title page:
../texinfo/texinfo.txi(,13777) 
../texinfo/texinfo.txi(,13778) @example
../texinfo/texinfo.txi(,13779) @group
../texinfo/texinfo.txi(,13780) @@tex
../texinfo/texinfo.txi(,13781) \mag=1200
../texinfo/texinfo.txi(,13782) @@end tex
../texinfo/texinfo.txi(,13783) @end group
../texinfo/texinfo.txi(,13784) @end example
../texinfo/texinfo.txi(,13785) 
../texinfo/texinfo.txi(,13786) With some printing technologies, you can print normal-sized copies that
../texinfo/texinfo.txi(,13787) look better than usual by giving a larger-than-normal master to your
../texinfo/texinfo.txi(,13788) print shop.  They do the reduction, thus effectively increasing the
../texinfo/texinfo.txi(,13789) resolution.
../texinfo/texinfo.txi(,13790) 
../texinfo/texinfo.txi(,13791) Depending on your system, DVI files prepared with a
../texinfo/texinfo.txi(,13792) nonstandard-@code{\mag} may not print or may print only with certain
../texinfo/texinfo.txi(,13793) magnifications.  Be prepared to experiment.
../texinfo/texinfo.txi(,13794) 
../texinfo/texinfo.txi(,13795) 
../texinfo/texinfo.txi(,13796) @node PDF Output
../texinfo/texinfo.txi(,13797) @section PDF Output
../texinfo/texinfo.txi(,13798) @cindex PDF output
../texinfo/texinfo.txi(,13799) 
../texinfo/texinfo.txi(,13800) @pindex pdftex
../texinfo/texinfo.txi(,13801) You can generate a PDF output file from Texinfo source by using the
../texinfo/texinfo.txi(,13802) @command{pdftex} program to process your file instead of plain
../texinfo/texinfo.txi(,13803) @command{tex}.  Just run @samp{pdftex foo.texi} instead of @samp{tex
../texinfo/texinfo.txi(,13804) foo.texi}, or give the @samp{--pdf} option to @command{texi2dvi}.
../texinfo/texinfo.txi(,13805) 
../texinfo/texinfo.txi(,13806) @dfn{PDF} stands for `Portable Document Format'. It was invented by
../texinfo/texinfo.txi(,13807) Adobe Systems some years ago for document interchange, based on their
../texinfo/texinfo.txi(,13808) PostScript language.  A @uref{http://www.foolabs.com/xpdf/, PDF reader}
../texinfo/texinfo.txi(,13809) for the X window system is freely available, as is the
../texinfo/texinfo.txi(,13810) @uref{http://partners.adobe.com/asn/developer/technotes/, definition of
../texinfo/texinfo.txi(,13811) the file format}.  Since PDF is a binary format, there are no
../texinfo/texinfo.txi(,13812) @samp{@@ifpdf} or @samp{@@pdf} commands as with the other output
../texinfo/texinfo.txi(,13813) formats.
../texinfo/texinfo.txi(,13814) 
../texinfo/texinfo.txi(,13815) Despite the `portable' in the name, PDF files are nowhere near as
../texinfo/texinfo.txi(,13816) portable in practice as the plain ASCII formats (Info, HTML) that
../texinfo/texinfo.txi(,13817) Texinfo supports (DVI portability is arguable).  They also tend to be
../texinfo/texinfo.txi(,13818) much larger and do not support the bitmap fonts used by @TeX{} (by
../texinfo/texinfo.txi(,13819) default) very well.  Nevertheless, a PDF file does preserve an actual
../texinfo/texinfo.txi(,13820) printed document on a screen as faithfully as possible, so it has its place.
../texinfo/texinfo.txi(,13821) 
../texinfo/texinfo.txi(,13822) PDF support in Texinfo is fairly rudimentary.
../texinfo/texinfo.txi(,13823) 
../texinfo/texinfo.txi(,13824) 
../texinfo/texinfo.txi(,13825) @node Creating and Installing Info Files
../texinfo/texinfo.txi(,13826) @chapter Creating and Installing Info Files
../texinfo/texinfo.txi(,13827) 
../texinfo/texinfo.txi(,13828) This chapter describes how to create and install Info files.  @xref{Info
../texinfo/texinfo.txi(,13829) Files}, for general information about the file format itself.
../texinfo/texinfo.txi(,13830) 
../texinfo/texinfo.txi(,13831) @menu
../texinfo/texinfo.txi(,13832) * Creating an Info File::       
../texinfo/texinfo.txi(,13833) * Installing an Info File::     
../texinfo/texinfo.txi(,13834) @end menu
../texinfo/texinfo.txi(,13835) 
../texinfo/texinfo.txi(,13836) 
../texinfo/texinfo.txi(,13837) @node Creating an Info File
../texinfo/texinfo.txi(,13838) @section Creating an Info File
../texinfo/texinfo.txi(,13839) @cindex Creating an Info file
../texinfo/texinfo.txi(,13840) @cindex Info, creating an online file
../texinfo/texinfo.txi(,13841) @cindex Formatting a file for Info
../texinfo/texinfo.txi(,13842) 
../texinfo/texinfo.txi(,13843) @code{makeinfo} is a program that converts a Texinfo file into an Info
../texinfo/texinfo.txi(,13844) file, HTML file, or plain text.  @code{texinfo-format-region} and
../texinfo/texinfo.txi(,13845) @code{texinfo-format-buffer} are GNU Emacs functions that convert
../texinfo/texinfo.txi(,13846) Texinfo to Info.
../texinfo/texinfo.txi(,13847) 
../texinfo/texinfo.txi(,13848) For information on installing the Info file in the Info system,
../texinfo/texinfo.txi(,13849) @pxref{Installing an Info File}.
../texinfo/texinfo.txi(,13850) 
../texinfo/texinfo.txi(,13851) @menu
../texinfo/texinfo.txi(,13852) * makeinfo advantages::         @code{makeinfo} provides better error checking.
../texinfo/texinfo.txi(,13853) * Invoking makeinfo::           How to run @code{makeinfo} from a shell.
../texinfo/texinfo.txi(,13854) * makeinfo options::            Specify fill-column and other options.
../texinfo/texinfo.txi(,13855) * Pointer Validation::          How to check that pointers point somewhere.
../texinfo/texinfo.txi(,13856) * makeinfo in Emacs::           How to run @code{makeinfo} from Emacs.
../texinfo/texinfo.txi(,13857) * texinfo-format commands::     Two Info formatting commands written
../texinfo/texinfo.txi(,13858)                                   in Emacs Lisp are an alternative
../texinfo/texinfo.txi(,13859)                                   to @code{makeinfo}.
../texinfo/texinfo.txi(,13860) * Batch Formatting::            How to format for Info in Emacs Batch mode.
../texinfo/texinfo.txi(,13861) * Tag and Split Files::         How tagged and split files help Info
../texinfo/texinfo.txi(,13862)                                   to run better.
../texinfo/texinfo.txi(,13863) * makeinfo html::               Generating HTML output.
../texinfo/texinfo.txi(,13864) @end menu
../texinfo/texinfo.txi(,13865) 
../texinfo/texinfo.txi(,13866) 
../texinfo/texinfo.txi(,13867) @node makeinfo advantages
../texinfo/texinfo.txi(,13868) @subsection @code{makeinfo} Preferred
../texinfo/texinfo.txi(,13869) 
../texinfo/texinfo.txi(,13870) The @code{makeinfo} utility creates an Info file from a Texinfo source
../texinfo/texinfo.txi(,13871) file more quickly than either of the Emacs formatting commands and
../texinfo/texinfo.txi(,13872) provides better error messages.  We recommend it.  @code{makeinfo} is a
../texinfo/texinfo.txi(,13873) C program that is independent of Emacs.  You do not need to run Emacs to
../texinfo/texinfo.txi(,13874) use @code{makeinfo}, which means you can use @code{makeinfo} on machines
../texinfo/texinfo.txi(,13875) that are too small to run Emacs.  You can run @code{makeinfo} in any one
../texinfo/texinfo.txi(,13876) of three ways: from an operating system shell, from a shell inside
../texinfo/texinfo.txi(,13877) Emacs, or by typing the @kbd{C-c C-m C-r} or the @kbd{C-c C-m C-b}
../texinfo/texinfo.txi(,13878) command in Texinfo mode in Emacs.
../texinfo/texinfo.txi(,13879) @refill
../texinfo/texinfo.txi(,13880) 
../texinfo/texinfo.txi(,13881) The @code{texinfo-format-region} and the @code{texinfo-format-buffer}
../texinfo/texinfo.txi(,13882) commands are useful if you cannot run @code{makeinfo}.  Also, in some
../texinfo/texinfo.txi(,13883) circumstances, they format short regions or buffers more quickly than
../texinfo/texinfo.txi(,13884) @code{makeinfo}.@refill
../texinfo/texinfo.txi(,13885) 
../texinfo/texinfo.txi(,13886) @node Invoking makeinfo
../texinfo/texinfo.txi(,13887) @subsection Running @code{makeinfo} from a Shell
../texinfo/texinfo.txi(,13888) 
../texinfo/texinfo.txi(,13889) To create an Info file from a Texinfo file, type @code{makeinfo}
../texinfo/texinfo.txi(,13890) followed by the name of the Texinfo file.  Thus, to create the Info
../texinfo/texinfo.txi(,13891) file for Bison, type the following to the shell:
../texinfo/texinfo.txi(,13892) 
../texinfo/texinfo.txi(,13893) @example
../texinfo/texinfo.txi(,13894) makeinfo bison.texinfo
../texinfo/texinfo.txi(,13895) @end example
../texinfo/texinfo.txi(,13896) 
../texinfo/texinfo.txi(,13897) (You can run a shell inside Emacs by typing @kbd{M-x shell}.)@refill
../texinfo/texinfo.txi(,13898) 
../texinfo/texinfo.txi(,13900) Sometimes you will want to specify options.  For example, if you wish
../texinfo/texinfo.txi(,13901) to discover which version of @code{makeinfo} you are using,
../texinfo/texinfo.txi(,13902) type:@refill
../texinfo/texinfo.txi(,13903) 
../texinfo/texinfo.txi(,13904) @example
../texinfo/texinfo.txi(,13905) makeinfo --version
../texinfo/texinfo.txi(,13906) @end example
../texinfo/texinfo.txi(,13907) 
../texinfo/texinfo.txi(,13908) @xref{makeinfo options}, for more information.
../texinfo/texinfo.txi(,13910) 
../texinfo/texinfo.txi(,13911) 
../texinfo/texinfo.txi(,13912) @node makeinfo options
../texinfo/texinfo.txi(,13913) @subsection Options for @code{makeinfo}
../texinfo/texinfo.txi(,13914) @cindex @code{makeinfo} options
../texinfo/texinfo.txi(,13915) @cindex Options for @code{makeinfo}
../texinfo/texinfo.txi(,13916) 
../texinfo/texinfo.txi(,13917) The @code{makeinfo} command takes a number of options.  Most often,
../texinfo/texinfo.txi(,13918) options are used to set the value of the fill column and specify the
../texinfo/texinfo.txi(,13919) footnote style.  Each command line option is a word preceded by
../texinfo/texinfo.txi(,13920) @samp{--} or a letter preceded by @samp{-}.  You can use abbreviations
../texinfo/texinfo.txi(,13921) for the long option names as long as they are unique.@refill
../texinfo/texinfo.txi(,13922) 
../texinfo/texinfo.txi(,13923) For example, you could use the following shell command to create an Info
../texinfo/texinfo.txi(,13924) file for @file{bison.texinfo} in which each line is filled to only 68
../texinfo/texinfo.txi(,13925) columns:@refill
../texinfo/texinfo.txi(,13926) 
../texinfo/texinfo.txi(,13927) @example
../texinfo/texinfo.txi(,13928) makeinfo --fill-column=68 bison.texinfo
../texinfo/texinfo.txi(,13929) @end example
../texinfo/texinfo.txi(,13930) 
../texinfo/texinfo.txi(,13931) You can write two or more options in sequence, like this:@refill
../texinfo/texinfo.txi(,13932) 
../texinfo/texinfo.txi(,13933) @example
../texinfo/texinfo.txi(,13934) makeinfo --no-split --fill-column=70 @dots{}
../texinfo/texinfo.txi(,13935) @end example
../texinfo/texinfo.txi(,13936) 
../texinfo/texinfo.txi(,13937) @noindent
../texinfo/texinfo.txi(,13938) This would keep the Info file together as one possibly very long
../texinfo/texinfo.txi(,13939) file and would also set the fill column to 70.@refill
../texinfo/texinfo.txi(,13940) 
../texinfo/texinfo.txi(,13941) The options are:
../texinfo/texinfo.txi(,13942) 
../texinfo/texinfo.txi(,13943) @table @code
../texinfo/texinfo.txi(,13944) 
../texinfo/texinfo.txi(,13945) @item -D @var{var}
../texinfo/texinfo.txi(,13946) @opindex -D @var{var}
../texinfo/texinfo.txi(,13947) Cause the variable @var{var} to be defined.  This is equivalent to
../texinfo/texinfo.txi(,13948) @code{@@set @var{var}} in the Texinfo file (@pxref{set clear value}).
../texinfo/texinfo.txi(,13949) 
../texinfo/texinfo.txi(,13950) @item --commands-in-node-names
../texinfo/texinfo.txi(,13951) @opindex --commands-in-node-names
../texinfo/texinfo.txi(,13952) Allow @code{@@}-commands in node names.  This is not recommended, as it
../texinfo/texinfo.txi(,13953) can probably never be implemented in @TeX{}.  It also makes
../texinfo/texinfo.txi(,13954) @code{makeinfo} much slower.  Also, this option is ignored when
../texinfo/texinfo.txi(,13955) @samp{--no-validate} is used.  @xref{Pointer Validation}, for more
../texinfo/texinfo.txi(,13956) details.
../texinfo/texinfo.txi(,13957) 
../texinfo/texinfo.txi(,13958) @item --docbook
../texinfo/texinfo.txi(,13959) @opindex --docbook
../texinfo/texinfo.txi(,13960) Generate DocBook output rather than Info.  
../texinfo/texinfo.txi(,13961) 
../texinfo/texinfo.txi(,13962) @item --error-limit=@var{limit}
../texinfo/texinfo.txi(,13963) @itemx -e @var{limit}
../texinfo/texinfo.txi(,13964) @opindex --error-limit=@var{limit}
../texinfo/texinfo.txi(,13965) @opindex -e @var{limit}
../texinfo/texinfo.txi(,13966) Set the maximum number of errors that @code{makeinfo} will report
../texinfo/texinfo.txi(,13967) before exiting (on the assumption that continuing would be useless);
../texinfo/texinfo.txi(,13968) default 100.
../texinfo/texinfo.txi(,13969) 
../texinfo/texinfo.txi(,13970) @item --fill-column=@var{width}
../texinfo/texinfo.txi(,13971) @itemx -f @var{width}
../texinfo/texinfo.txi(,13972) @opindex --fill-column=@var{width}
../texinfo/texinfo.txi(,13973) @opindex -f @var{width}
../texinfo/texinfo.txi(,13974) Specify the maximum number of columns in a line; this is the right-hand
../texinfo/texinfo.txi(,13975) edge of a line.  Paragraphs that are filled will be filled to this
../texinfo/texinfo.txi(,13976) width.  (Filling is the process of breaking up and connecting lines so
../texinfo/texinfo.txi(,13977) that lines are the same length as or shorter than the number specified
../texinfo/texinfo.txi(,13978) as the fill column.  Lines are broken between words.) The default value
../texinfo/texinfo.txi(,13979) is 72.  Ignored with @samp{--html}.
../texinfo/texinfo.txi(,13980) 
../texinfo/texinfo.txi(,13981) @item --footnote-style=@var{style}
../texinfo/texinfo.txi(,13982) @itemx -s @var{style}
../texinfo/texinfo.txi(,13983) @opindex --footnote-style=@var{style}
../texinfo/texinfo.txi(,13984) @opindex -s @var{style}
../texinfo/texinfo.txi(,13985) Set the footnote style to @var{style}, either @samp{end} for the end
../texinfo/texinfo.txi(,13986) node style (the default) or @samp{separate} for the separate node style.
../texinfo/texinfo.txi(,13987) The value set by this option overrides the value set in a Texinfo file
../texinfo/texinfo.txi(,13988) by an @code{@@footnotestyle} command (@pxref{Footnotes}).  When the
../texinfo/texinfo.txi(,13989) footnote style is @samp{separate}, @code{makeinfo} makes a new node
../texinfo/texinfo.txi(,13990) containing the footnotes found in the current node.  When the footnote
../texinfo/texinfo.txi(,13991) style is @samp{end}, @code{makeinfo} places the footnote references at
../texinfo/texinfo.txi(,13992) the end of the current node.  Ignored with @samp{--html}.
../texinfo/texinfo.txi(,13993) 
../texinfo/texinfo.txi(,13994) @item --force
../texinfo/texinfo.txi(,13995) @itemx -F
../texinfo/texinfo.txi(,13996) @opindex --force
../texinfo/texinfo.txi(,13997) @opindex -F
../texinfo/texinfo.txi(,13998) Ordinarily, if the input file has errors, the output files are not
../texinfo/texinfo.txi(,13999) created.  With this option, they are preserved.
../texinfo/texinfo.txi(,14000) 
../texinfo/texinfo.txi(,14001) @item --help
../texinfo/texinfo.txi(,14002) @itemx -h
../texinfo/texinfo.txi(,14003) @opindex --help
../texinfo/texinfo.txi(,14004) @opindex -h
../texinfo/texinfo.txi(,14005) Print a usage message listing all available options, then exit successfully.
../texinfo/texinfo.txi(,14006) 
../texinfo/texinfo.txi(,14007) @item --html
../texinfo/texinfo.txi(,14008) @opindex --html
../texinfo/texinfo.txi(,14009) Generate HTML output rather than Info.  @xref{makeinfo html}.  By
../texinfo/texinfo.txi(,14010) default, the HTML output is split into one output file per source node,
../texinfo/texinfo.txi(,14011) and the split output is written into a subdirectory with the name of the
../texinfo/texinfo.txi(,14012) top-level info file.
../texinfo/texinfo.txi(,14013) 
../texinfo/texinfo.txi(,14014) @item -I @var{dir}
../texinfo/texinfo.txi(,14015) @opindex -I @var{dir}
../texinfo/texinfo.txi(,14016) Append @var{dir} to the directory search list for finding files that
../texinfo/texinfo.txi(,14017) are included using the @code{@@include} command.  By default,
../texinfo/texinfo.txi(,14018) @code{makeinfo} searches only the current directory.  If @var{dir} is
../texinfo/texinfo.txi(,14019) not given, the current directory @file{.} is appended.  Note that
../texinfo/texinfo.txi(,14020) @var{dir} can actually be a list of several directories separated by the
../texinfo/texinfo.txi(,14021) usual path separator character (@samp{:} on Unix, @samp{;} on
../texinfo/texinfo.txi(,14022) MS-DOS/MS-Windows).
../texinfo/texinfo.txi(,14023) 
../texinfo/texinfo.txi(,14024) @item --macro-expand=@var{file}
../texinfo/texinfo.txi(,14025) @itemx -E @var{file}
../texinfo/texinfo.txi(,14026) Output the Texinfo source with all the macros expanded to the named
../texinfo/texinfo.txi(,14027) file.  Normally, the results of macro expansion are used internally by
../texinfo/texinfo.txi(,14028) @code{makeinfo} and then discarded.  This option is used by
../texinfo/texinfo.txi(,14029) @command{texi2dvi} if you are using an old version of @file{texinfo.tex}
../texinfo/texinfo.txi(,14030) that does not support @code{@@macro}.
../texinfo/texinfo.txi(,14031) 
../texinfo/texinfo.txi(,14032) @item --no-headers
../texinfo/texinfo.txi(,14033) @opindex --no-headers
../texinfo/texinfo.txi(,14034) @cindex Plain text output
../texinfo/texinfo.txi(,14035) @cindex ASCII text output
../texinfo/texinfo.txi(,14036) @cindex Generating plain text files
../texinfo/texinfo.txi(,14037) @cindex @file{INSTALL} file, generating
../texinfo/texinfo.txi(,14038) @cindex Node separators, omitting
../texinfo/texinfo.txi(,14039) @cindex Menus, omitting
../texinfo/texinfo.txi(,14040) For Info output, do not include menus or node separator lines in the
../texinfo/texinfo.txi(,14041) output.  This results in a simple plain text file that you can (for
../texinfo/texinfo.txi(,14042) example) send in email without complications, or include in a
../texinfo/texinfo.txi(,14043) distribution (as in an @file{INSTALL} file).
../texinfo/texinfo.txi(,14044) 
../texinfo/texinfo.txi(,14045) @cindex Navigation links, omitting
../texinfo/texinfo.txi(,14046) For HTML output, likewise omit menus.  And if @samp{--no-split} is also
../texinfo/texinfo.txi(,14047) specified, do not include a navigation links at the top of each node
../texinfo/texinfo.txi(,14048) (these are never included in the default case of split output).
../texinfo/texinfo.txi(,14049) @xref{makeinfo html}.
../texinfo/texinfo.txi(,14050) 
../texinfo/texinfo.txi(,14051) In both cases, write to standard output by default (can still be
../texinfo/texinfo.txi(,14052) overridden by @option{-o}).
../texinfo/texinfo.txi(,14053) 
../texinfo/texinfo.txi(,14054) @item --no-split
../texinfo/texinfo.txi(,14055) @opindex --no-split
../texinfo/texinfo.txi(,14056) @cindex Splitting of output files
../texinfo/texinfo.txi(,14057) @cindex Output file splitting
../texinfo/texinfo.txi(,14058) Suppress the splitting stage of @code{makeinfo}.  By default, large
../texinfo/texinfo.txi(,14059) output files (where the size is greater than 70k bytes) are split into
../texinfo/texinfo.txi(,14060) smaller subfiles.  For Info output, each one is approximately 50k bytes.
../texinfo/texinfo.txi(,14061) For HTML output, each file contains one node (@pxref{makeinfo html}).
../texinfo/texinfo.txi(,14062) 
../texinfo/texinfo.txi(,14063) @item --no-pointer-validate
../texinfo/texinfo.txi(,14064) @itemx --no-validate
../texinfo/texinfo.txi(,14065) @opindex --no-pointer-validate
../texinfo/texinfo.txi(,14066) @opindex --no-validate
../texinfo/texinfo.txi(,14067) @cindex Pointer validation, suppressing
../texinfo/texinfo.txi(,14068) Suppress the pointer-validation phase of @code{makeinfo}.  This can also
../texinfo/texinfo.txi(,14069) be done with the @code{@@novalidate} command (@pxref{Use TeX,,Use
../texinfo/texinfo.txi(,14070) @TeX{}}).  Normally, after a Texinfo file is processed, some consistency
../texinfo/texinfo.txi(,14071) checks are made to ensure that cross references can be resolved, etc.
../texinfo/texinfo.txi(,14072) @xref{Pointer Validation}.
../texinfo/texinfo.txi(,14073) 
../texinfo/texinfo.txi(,14074) @item --no-warn
../texinfo/texinfo.txi(,14075) @opindex --no-warn
../texinfo/texinfo.txi(,14076) Suppress warning messages (but @emph{not} error messages).  You might
../texinfo/texinfo.txi(,14077) want this if the file you are creating has examples of Texinfo cross
../texinfo/texinfo.txi(,14078) references within it, and the nodes that are referenced do not actually
../texinfo/texinfo.txi(,14079) exist.
../texinfo/texinfo.txi(,14080) 
../texinfo/texinfo.txi(,14081) @item --number-sections
../texinfo/texinfo.txi(,14082) @opindex --number-sections
../texinfo/texinfo.txi(,14083) Output chapter, section, and appendix numbers as in printed manuals.
../texinfo/texinfo.txi(,14084) 
../texinfo/texinfo.txi(,14085) @item --no-number-footnotes
../texinfo/texinfo.txi(,14086) @opindex --no-number-footnotes
../texinfo/texinfo.txi(,14087) Suppress automatic footnote numbering.  By default, @code{makeinfo}
../texinfo/texinfo.txi(,14088) numbers each footnote sequentially in a single node, resetting the
../texinfo/texinfo.txi(,14089) current footnote number to 1 at the start of each node.
../texinfo/texinfo.txi(,14090) 
../texinfo/texinfo.txi(,14091) @item --output=@var{file}
../texinfo/texinfo.txi(,14092) @itemx -o @var{file}
../texinfo/texinfo.txi(,14093) @opindex --output=@var{file}
../texinfo/texinfo.txi(,14094) @opindex -o @var{file}
../texinfo/texinfo.txi(,14095) Specify that the output should be directed to @var{file} and not to the
../texinfo/texinfo.txi(,14096) file name specified in the @code{@@setfilename} command found in the
../texinfo/texinfo.txi(,14097) Texinfo source (@pxref{setfilename}).  If @var{file} is @samp{-}, output
../texinfo/texinfo.txi(,14098) goes to standard output and @samp{--no-split} is implied.  For split
../texinfo/texinfo.txi(,14099) HTML output, @var{file} is the name for the directory into which all
../texinfo/texinfo.txi(,14100) HTML nodes are written (@pxref{makeinfo html}).
../texinfo/texinfo.txi(,14101) 
../texinfo/texinfo.txi(,14102) @item -P @var{dir}
../texinfo/texinfo.txi(,14103) @opindex -P @var{dir}
../texinfo/texinfo.txi(,14104) Prepend @var{dir} to the directory search list for @code{@@include}.
../texinfo/texinfo.txi(,14105) If @var{dir} is not given, the current directory @file{.} is prepended.
../texinfo/texinfo.txi(,14106) See @samp{-I} for more details.
../texinfo/texinfo.txi(,14107) 
../texinfo/texinfo.txi(,14108) @item --paragraph-indent=@var{indent}
../texinfo/texinfo.txi(,14109) @itemx -p @var{indent}
../texinfo/texinfo.txi(,14110) @opindex --paragraph-indent=@var{indent}
../texinfo/texinfo.txi(,14111) @opindex -p @var{indent}
../texinfo/texinfo.txi(,14112) Set the paragraph indentation style to @var{indent}.  The value set by
../texinfo/texinfo.txi(,14113) this option overrides the value set in a Texinfo file by an
../texinfo/texinfo.txi(,14114) @code{@@paragraphindent} command (@pxref{paragraphindent}).  The value
../texinfo/texinfo.txi(,14115) of @var{indent} is interpreted as follows:
../texinfo/texinfo.txi(,14116) 
../texinfo/texinfo.txi(,14117) @table @asis
../texinfo/texinfo.txi(,14118) @item @samp{asis}
../texinfo/texinfo.txi(,14119) Preserve any existing indentation at the starts of paragraphs.
../texinfo/texinfo.txi(,14120) 
../texinfo/texinfo.txi(,14121) @item @samp{0} or @samp{none}
../texinfo/texinfo.txi(,14122) Delete any existing indentation.
../texinfo/texinfo.txi(,14123) 
../texinfo/texinfo.txi(,14124) @item @var{num}
../texinfo/texinfo.txi(,14125) Indent each paragraph by @var{num} spaces.
../texinfo/texinfo.txi(,14126) @end table
../texinfo/texinfo.txi(,14127) 
../texinfo/texinfo.txi(,14128) @item --reference-limit=@var{limit}
../texinfo/texinfo.txi(,14129) @itemx -r @var{limit}
../texinfo/texinfo.txi(,14130) @opindex --reference-limit=@var{limit}
../texinfo/texinfo.txi(,14131) @opindex -r @var{limit}
../texinfo/texinfo.txi(,14132) Set the value of the number of references to a node that
../texinfo/texinfo.txi(,14133) @code{makeinfo} will make without reporting a warning.  If a node has more
../texinfo/texinfo.txi(,14134) than this number of references in it, @code{makeinfo} will make the
../texinfo/texinfo.txi(,14135) references but also report a warning.  The default is 1000.
../texinfo/texinfo.txi(,14136) 
../texinfo/texinfo.txi(,14137) @item -U @var{var}
../texinfo/texinfo.txi(,14138) Cause @var{var} to be undefined.  This is equivalent to
../texinfo/texinfo.txi(,14139) @code{@@clear @var{var}} in the Texinfo file (@pxref{set clear value}).
../texinfo/texinfo.txi(,14140) 
../texinfo/texinfo.txi(,14141) @item --verbose
../texinfo/texinfo.txi(,14142) @opindex --verbose
../texinfo/texinfo.txi(,14143) Cause @code{makeinfo} to display messages saying what it is doing.
../texinfo/texinfo.txi(,14144) Normally, @code{makeinfo} only outputs messages if there are errors or
../texinfo/texinfo.txi(,14145) warnings.
../texinfo/texinfo.txi(,14146) 
../texinfo/texinfo.txi(,14147) @item --version
../texinfo/texinfo.txi(,14148) @itemx -V
../texinfo/texinfo.txi(,14149) @opindex --version
../texinfo/texinfo.txi(,14150) @opindex -V
../texinfo/texinfo.txi(,14151) Print the version number, then exit successfully.
../texinfo/texinfo.txi(,14152) 
../texinfo/texinfo.txi(,14153) @item --xml
../texinfo/texinfo.txi(,14154) @opindex --xml
../texinfo/texinfo.txi(,14155) Generate XML output rather than Info.  
../texinfo/texinfo.txi(,14156) 
../texinfo/texinfo.txi(,14157) @end table
../texinfo/texinfo.txi(,14158) 
../texinfo/texinfo.txi(,14159) 
../texinfo/texinfo.txi(,14160) @node Pointer Validation
../texinfo/texinfo.txi(,14161) @subsection Pointer Validation
../texinfo/texinfo.txi(,14162) @cindex Pointer validation with @code{makeinfo}
../texinfo/texinfo.txi(,14163) @cindex Validation of pointers
../texinfo/texinfo.txi(,14164) 
../texinfo/texinfo.txi(,14165) If you do not suppress pointer validation with the @samp{--no-validate}
../texinfo/texinfo.txi(,14166) option or the @code{@@novalidate} command in the source file (@pxref{Use
../texinfo/texinfo.txi(,14167) TeX,,Use @TeX{}}), @code{makeinfo} will check the validity of the final
../texinfo/texinfo.txi(,14168) Info file.  Mostly, this means ensuring that nodes you have referenced
../texinfo/texinfo.txi(,14169) really exist.  Here is a complete list of what is checked:
../texinfo/texinfo.txi(,14170) 
../texinfo/texinfo.txi(,14171) @enumerate
../texinfo/texinfo.txi(,14172) @item
../texinfo/texinfo.txi(,14173) If a `Next', `Previous', or `Up' node reference is a reference to a
../texinfo/texinfo.txi(,14174) node in the current file and is not an external reference such as to
../texinfo/texinfo.txi(,14175) @file{(dir)}, then the referenced node must exist.@refill
../texinfo/texinfo.txi(,14176) 
../texinfo/texinfo.txi(,14177) @item
../texinfo/texinfo.txi(,14178) In every node, if the `Previous' node is different from the `Up' node,
../texinfo/texinfo.txi(,14179) then the node pointed to by the `Previous' field must have a `Next'
../texinfo/texinfo.txi(,14180) field which points back to this node.@refill
../texinfo/texinfo.txi(,14181) 
../texinfo/texinfo.txi(,14182) @item
../texinfo/texinfo.txi(,14183) Every node except the `Top' node must have an `Up' pointer.@refill
../texinfo/texinfo.txi(,14184) 
../texinfo/texinfo.txi(,14185) @item
../texinfo/texinfo.txi(,14186) The node referenced by an `Up' pointer must itself reference the current
../texinfo/texinfo.txi(,14187) node through a menu item, unless the node referenced by `Up'
../texinfo/texinfo.txi(,14188) has the form `(@var{file})'.
../texinfo/texinfo.txi(,14189) 
../texinfo/texinfo.txi(,14190) @item
../texinfo/texinfo.txi(,14191) If the `Next' reference of a node is not the same as the `Next' reference
../texinfo/texinfo.txi(,14192) of the `Up' reference, then the node referenced by the `Next' pointer
../texinfo/texinfo.txi(,14193) must have a `Previous' pointer that points back to the current node.
../texinfo/texinfo.txi(,14194) This rule allows the last node in a section to point to the first node
../texinfo/texinfo.txi(,14195) of the next chapter.@refill
../texinfo/texinfo.txi(,14196) 
../texinfo/texinfo.txi(,14197) @item
../texinfo/texinfo.txi(,14198) Every node except `Top' should be referenced by at least one other node,
../texinfo/texinfo.txi(,14199) either via the `Previous' or `Next' links, or via a menu or a
../texinfo/texinfo.txi(,14200) cross-reference.@refill
../texinfo/texinfo.txi(,14201) @end enumerate
../texinfo/texinfo.txi(,14202) 
../texinfo/texinfo.txi(,14203) @cindex @@-commands in @@node, limited support
../texinfo/texinfo.txi(,14204) Some Texinfo documents might fail during the validation phase because
../texinfo/texinfo.txi(,14205) they use commands like @code{@@value} and @code{@@definfoenclose} in
../texinfo/texinfo.txi(,14206) node definitions and cross-references inconsistently.  Consider the
../texinfo/texinfo.txi(,14207) following example:
../texinfo/texinfo.txi(,14208) 
../texinfo/texinfo.txi(,14209) @example
../texinfo/texinfo.txi(,14210) @group
../texinfo/texinfo.txi(,14211) @@set nodename Node 1
../texinfo/texinfo.txi(,14212) 
../texinfo/texinfo.txi(,14213) @@node @@value@{nodename@}, Node 2, Top, Top
../texinfo/texinfo.txi(,14214) 
../texinfo/texinfo.txi(,14215) This is node 1.
../texinfo/texinfo.txi(,14216) 
../texinfo/texinfo.txi(,14217) @@node Node 2, , Node 1, Top
../texinfo/texinfo.txi(,14218) 
../texinfo/texinfo.txi(,14219) This is node 2.
../texinfo/texinfo.txi(,14220) @end group
../texinfo/texinfo.txi(,14221) @end example
../texinfo/texinfo.txi(,14222) 
../texinfo/texinfo.txi(,14223) @noindent
../texinfo/texinfo.txi(,14224) Here, the node ``Node 1'' was referenced both verbatim and through
../texinfo/texinfo.txi(,14225) @code{@@value}.
../texinfo/texinfo.txi(,14226) 
../texinfo/texinfo.txi(,14227) By default, @code{makeinfo} fails such cases, because node names are not
../texinfo/texinfo.txi(,14228) fully expanded until they are written to the output file.  You should
../texinfo/texinfo.txi(,14229) always try to reference nodes consistently; e.g., in the above example,
../texinfo/texinfo.txi(,14230) the second @code{@@node} line should have also used @code{@@value}.
../texinfo/texinfo.txi(,14231) However, if, for some reason, you @emph{must} reference node names
../texinfo/texinfo.txi(,14232) inconsistently, and @code{makeinfo} fails to validate the file, you can
../texinfo/texinfo.txi(,14233) use the @samp{--commands-in-node-names} option to force @code{makeinfo}
../texinfo/texinfo.txi(,14234) to perform the expensive expansion of all node names it finds in the
../texinfo/texinfo.txi(,14235) document.  This might considerably slow down the program, though;
../texinfo/texinfo.txi(,14236) twofold increase in conversion time was measured for large documents
../texinfo/texinfo.txi(,14237) such as the Jargon file.
../texinfo/texinfo.txi(,14238) 
../texinfo/texinfo.txi(,14239) @cindex @@value in @@node lines
../texinfo/texinfo.txi(,14240) The support for @code{@@}-commands in @code{@@node} directives is not
../texinfo/texinfo.txi(,14241) general enough to be freely used.  For example, if the example above
../texinfo/texinfo.txi(,14242) redefined @code{nodename} somewhere in the document, @code{makeinfo}
../texinfo/texinfo.txi(,14243) will fail to convert it, even if invoked with the
../texinfo/texinfo.txi(,14244) @samp{--commands-in-node-names} option.
../texinfo/texinfo.txi(,14245) 
../texinfo/texinfo.txi(,14246) @samp{--commands-in-node-names} has no effect if the @samp{--no-validate}
../texinfo/texinfo.txi(,14247) option is given.
../texinfo/texinfo.txi(,14248) 
../texinfo/texinfo.txi(,14249) 
../texinfo/texinfo.txi(,14250) @node makeinfo in Emacs
../texinfo/texinfo.txi(,14251) @subsection Running @code{makeinfo} inside Emacs
../texinfo/texinfo.txi(,14252) @cindex Running @code{makeinfo} in Emacs
../texinfo/texinfo.txi(,14253) @cindex @code{makeinfo} inside Emacs
../texinfo/texinfo.txi(,14254) @cindex Shell, running @code{makeinfo} in
../texinfo/texinfo.txi(,14255) 
../texinfo/texinfo.txi(,14256) You can run @code{makeinfo} in GNU Emacs Texinfo mode by using either the
../texinfo/texinfo.txi(,14257) @code{makeinfo-region} or the @code{makeinfo-buffer} commands.  In
../texinfo/texinfo.txi(,14258) Texinfo mode, the commands are bound to @kbd{C-c C-m C-r} and @kbd{C-c
../texinfo/texinfo.txi(,14259) C-m C-b} by default.@refill
../texinfo/texinfo.txi(,14260) 
../texinfo/texinfo.txi(,14261) @table @kbd
../texinfo/texinfo.txi(,14262) @item C-c C-m C-r
../texinfo/texinfo.txi(,14263) @itemx M-x makeinfo-region
../texinfo/texinfo.txi(,14264) Format the current region for Info.@refill
../texinfo/texinfo.txi(,14265) @findex makeinfo-region
../texinfo/texinfo.txi(,14266) 
../texinfo/texinfo.txi(,14267) @item C-c C-m C-b
../texinfo/texinfo.txi(,14268) @itemx M-x makeinfo-buffer
../texinfo/texinfo.txi(,14269) Format the current buffer for Info.@refill
../texinfo/texinfo.txi(,14270) @findex makeinfo-buffer
../texinfo/texinfo.txi(,14271) @end table
../texinfo/texinfo.txi(,14272) 
../texinfo/texinfo.txi(,14273) When you invoke either @code{makeinfo-region} or
../texinfo/texinfo.txi(,14274) @code{makeinfo-buffer}, Emacs prompts for a file name, offering the
../texinfo/texinfo.txi(,14275) name of the visited file as the default.  You can edit the default
../texinfo/texinfo.txi(,14276) file name in the minibuffer if you wish, before pressing @key{RET} to
../texinfo/texinfo.txi(,14277) start the @code{makeinfo} process.@refill
../texinfo/texinfo.txi(,14278) 
../texinfo/texinfo.txi(,14279) The Emacs @code{makeinfo-region} and @code{makeinfo-buffer} commands
../texinfo/texinfo.txi(,14280) run the @code{makeinfo} program in a temporary shell buffer.  If
../texinfo/texinfo.txi(,14281) @code{makeinfo} finds any errors, Emacs displays the error messages in
../texinfo/texinfo.txi(,14282) the temporary buffer.@refill
../texinfo/texinfo.txi(,14283) 
../texinfo/texinfo.txi(,14284) @cindex Errors, parsing
../texinfo/texinfo.txi(,14285) @cindex Parsing errors
../texinfo/texinfo.txi(,14286) @findex next-error
../texinfo/texinfo.txi(,14287) You can parse the error messages by typing @kbd{C-x `}
../texinfo/texinfo.txi(,14288) (@code{next-error}).  This causes Emacs to go to and position the
../texinfo/texinfo.txi(,14289) cursor on the line in the Texinfo source that @code{makeinfo} thinks
../texinfo/texinfo.txi(,14290) caused the error.  @xref{Compilation, , Running @code{make} or
../texinfo/texinfo.txi(,14291) Compilers Generally, emacs, The GNU Emacs Manual}, for more
../texinfo/texinfo.txi(,14292) information about using the @code{next-error} command.@refill
../texinfo/texinfo.txi(,14293) 
../texinfo/texinfo.txi(,14294) In addition, you can kill the shell in which the @code{makeinfo}
../texinfo/texinfo.txi(,14295) command is running or make the shell buffer display its most recent
../texinfo/texinfo.txi(,14296) output.@refill
../texinfo/texinfo.txi(,14297) 
../texinfo/texinfo.txi(,14298) @table @kbd
../texinfo/texinfo.txi(,14299) @item C-c C-m C-k
../texinfo/texinfo.txi(,14300) @itemx M-x makeinfo-kill-job
../texinfo/texinfo.txi(,14301) @findex makeinfo-kill-job
../texinfo/texinfo.txi(,14302) Kill the current running @code{makeinfo} job
../texinfo/texinfo.txi(,14303) (from @code{makeinfo-region} or @code{makeinfo-buffer}).@refill
../texinfo/texinfo.txi(,14304) 
../texinfo/texinfo.txi(,14305) @item C-c C-m C-l
../texinfo/texinfo.txi(,14306) @itemx M-x makeinfo-recenter-output-buffer
../texinfo/texinfo.txi(,14307) @findex makeinfo-recenter-output-buffer
../texinfo/texinfo.txi(,14308) Redisplay the @code{makeinfo} shell buffer to display its most recent
../texinfo/texinfo.txi(,14309) output.@refill
../texinfo/texinfo.txi(,14310) @end table
../texinfo/texinfo.txi(,14311) 
../texinfo/texinfo.txi(,14312) @noindent
../texinfo/texinfo.txi(,14313) (Note that the parallel commands for killing and recentering a @TeX{}
../texinfo/texinfo.txi(,14314) job are @kbd{C-c C-t C-k} and @kbd{C-c C-t C-l}.  @xref{Texinfo Mode
../texinfo/texinfo.txi(,14315) Printing}.)@refill
../texinfo/texinfo.txi(,14316) 
../texinfo/texinfo.txi(,14317) You can specify options for @code{makeinfo} by setting the
../texinfo/texinfo.txi(,14318) @code{makeinfo-options} variable with either the @kbd{M-x
../texinfo/texinfo.txi(,14319) edit-options} or the @kbd{M-x set-variable} command, or by setting the
../texinfo/texinfo.txi(,14320) variable in your @file{.emacs} initialization file.@refill
../texinfo/texinfo.txi(,14321) 
../texinfo/texinfo.txi(,14322) For example, you could write the following in your @file{.emacs} file:@refill
../texinfo/texinfo.txi(,14323) 
../texinfo/texinfo.txi(,14324) @example
../texinfo/texinfo.txi(,14325) @group
../texinfo/texinfo.txi(,14326) (setq makeinfo-options
../texinfo/texinfo.txi(,14327)       "--paragraph-indent=0 --no-split
../texinfo/texinfo.txi(,14328)        --fill-column=70 --verbose")
../texinfo/texinfo.txi(,14329) @end group
../texinfo/texinfo.txi(,14330) @end example
../texinfo/texinfo.txi(,14331) 
../texinfo/texinfo.txi(,14332) @c If you write these three cross references using xref, you see
../texinfo/texinfo.txi(,14333) @c three references to the same named manual, which looks strange.
../texinfo/texinfo.txi(,14340) @noindent
../texinfo/texinfo.txi(,14342) For more information, see@*
../texinfo/texinfo.txi(,14343) @ref{Edit Options, , Editing Variable Values, emacs, The GNU Emacs Manual},@*
../texinfo/texinfo.txi(,14344) @ref{Examining, , Examining and Setting Variables, emacs, The GNU Emacs Manual},@*
../texinfo/texinfo.txi(,14345) @ref{Init File, , , emacs, The GNU Emacs Manual}, and@*
../texinfo/texinfo.txi(,14346) @ref{makeinfo options, , Options for @code{makeinfo}}.
../texinfo/texinfo.txi(,14348) 
../texinfo/texinfo.txi(,14349) @node texinfo-format commands
../texinfo/texinfo.txi(,14350) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,14351) @subsection The @code{texinfo-format@dots{}} Commands
../texinfo/texinfo.txi(,14352) @findex texinfo-format-region
../texinfo/texinfo.txi(,14353) @findex texinfo-format-buffer
../texinfo/texinfo.txi(,14354) 
../texinfo/texinfo.txi(,14355) In GNU Emacs in Texinfo mode, you can format part or all of a Texinfo
../texinfo/texinfo.txi(,14356) file with the @code{texinfo-format-region} command.  This formats the
../texinfo/texinfo.txi(,14357) current region and displays the formatted text in a temporary buffer
../texinfo/texinfo.txi(,14358) called @samp{*Info Region*}.@refill
../texinfo/texinfo.txi(,14359) 
../texinfo/texinfo.txi(,14360) Similarly, you can format a buffer with the
../texinfo/texinfo.txi(,14361) @code{texinfo-format-buffer} command.  This command creates a new
../texinfo/texinfo.txi(,14362) buffer and generates the Info file in it.  Typing @kbd{C-x C-s} will
../texinfo/texinfo.txi(,14363) save the Info file under the name specified by the
../texinfo/texinfo.txi(,14364) @code{@@setfilename} line which must be near the beginning of the
../texinfo/texinfo.txi(,14365) Texinfo file.@refill
../texinfo/texinfo.txi(,14366) 
../texinfo/texinfo.txi(,14367) @table @kbd
../texinfo/texinfo.txi(,14368) @item C-c C-e C-r
../texinfo/texinfo.txi(,14369) @itemx @code{texinfo-format-region}
../texinfo/texinfo.txi(,14370) Format the current region for Info.
../texinfo/texinfo.txi(,14371) @findex texinfo-format-region
../texinfo/texinfo.txi(,14372) 
../texinfo/texinfo.txi(,14373) @item C-c C-e C-b
../texinfo/texinfo.txi(,14374) @itemx @code{texinfo-format-buffer}
../texinfo/texinfo.txi(,14375) Format the current buffer for Info.
../texinfo/texinfo.txi(,14376) @findex texinfo-format-buffer
../texinfo/texinfo.txi(,14377) @end table
../texinfo/texinfo.txi(,14378) 
../texinfo/texinfo.txi(,14379) The @code{texinfo-format-region} and @code{texinfo-format-buffer}
../texinfo/texinfo.txi(,14380) commands provide you with some error checking, and other functions can
../texinfo/texinfo.txi(,14381) provide you with further help in finding formatting errors.  These
../texinfo/texinfo.txi(,14382) procedures are described in an appendix; see @ref{Catching Mistakes}.
../texinfo/texinfo.txi(,14383) However, the @code{makeinfo} program is often faster and
../texinfo/texinfo.txi(,14384) provides better error checking (@pxref{makeinfo in Emacs}).@refill
../texinfo/texinfo.txi(,14385) 
../texinfo/texinfo.txi(,14386) @node Batch Formatting
../texinfo/texinfo.txi(,14387) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,14388) @subsection Batch Formatting
../texinfo/texinfo.txi(,14389) @cindex Batch formatting for Info
../texinfo/texinfo.txi(,14390) @cindex Info batch formatting
../texinfo/texinfo.txi(,14391) 
../texinfo/texinfo.txi(,14392) You can format Texinfo files for Info using @code{batch-texinfo-format}
../texinfo/texinfo.txi(,14393) and Emacs Batch mode.  You can run Emacs in Batch mode from any shell,
../texinfo/texinfo.txi(,14394) including a shell inside of Emacs.  (@xref{Command Switches, , Command
../texinfo/texinfo.txi(,14395) Line Switches and Arguments, emacs, The GNU Emacs Manual}.)@refill
../texinfo/texinfo.txi(,14396) 
../texinfo/texinfo.txi(,14397) Here is a shell command to format all the files that end in
../texinfo/texinfo.txi(,14398) @file{.texinfo} in the current directory:
../texinfo/texinfo.txi(,14399) 
../texinfo/texinfo.txi(,14400) @example
../texinfo/texinfo.txi(,14401) emacs -batch -funcall batch-texinfo-format *.texinfo
../texinfo/texinfo.txi(,14402) @end example
../texinfo/texinfo.txi(,14403) 
../texinfo/texinfo.txi(,14404) @noindent
../texinfo/texinfo.txi(,14405) Emacs processes all the files listed on the command line, even if an
../texinfo/texinfo.txi(,14406) error occurs while attempting to format some of them.@refill
../texinfo/texinfo.txi(,14407) 
../texinfo/texinfo.txi(,14408) Run @code{batch-texinfo-format} only with Emacs in Batch mode as shown;
../texinfo/texinfo.txi(,14409) it is not interactive.  It kills the Batch mode Emacs on completion.@refill
../texinfo/texinfo.txi(,14410) 
../texinfo/texinfo.txi(,14411) @code{batch-texinfo-format} is convenient if you lack @code{makeinfo}
../texinfo/texinfo.txi(,14412) and want to format several Texinfo files at once.  When you use Batch
../texinfo/texinfo.txi(,14413) mode, you create a new Emacs process.  This frees your current Emacs, so
../texinfo/texinfo.txi(,14414) you can continue working in it.  (When you run
../texinfo/texinfo.txi(,14415) @code{texinfo-format-region} or @code{texinfo-format-buffer}, you cannot
../texinfo/texinfo.txi(,14416) use that Emacs for anything else until the command finishes.)@refill
../texinfo/texinfo.txi(,14417) 
../texinfo/texinfo.txi(,14418) @node Tag and Split Files
../texinfo/texinfo.txi(,14419) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,14420) @subsection Tag Files and Split Files
../texinfo/texinfo.txi(,14421) @cindex Making a tag table automatically
../texinfo/texinfo.txi(,14422) @cindex Tag table, making automatically
../texinfo/texinfo.txi(,14423) 
../texinfo/texinfo.txi(,14424) If a Texinfo file has more than 30,000 bytes,
../texinfo/texinfo.txi(,14425) @code{texinfo-format-buffer} automatically creates a tag table
../texinfo/texinfo.txi(,14426) for its Info file;  @code{makeinfo} always creates a tag table.  With
../texinfo/texinfo.txi(,14427) a @dfn{tag table}, Info can jump to new nodes more quickly than it can
../texinfo/texinfo.txi(,14428) otherwise.@refill
../texinfo/texinfo.txi(,14429) 
../texinfo/texinfo.txi(,14430) @cindex Indirect subfiles
../texinfo/texinfo.txi(,14431) In addition, if the Texinfo file contains more than about 70,000
../texinfo/texinfo.txi(,14432) bytes, @code{texinfo-format-buffer} and @code{makeinfo} split the
../texinfo/texinfo.txi(,14433) large Info file into shorter @dfn{indirect} subfiles of about 50,000
../texinfo/texinfo.txi(,14434) bytes each.  Big files are split into smaller files so that Emacs does
../texinfo/texinfo.txi(,14435) not need to make a large buffer to hold the whole of a large Info
../texinfo/texinfo.txi(,14436) file; instead, Emacs allocates just enough memory for the small, split-off
../texinfo/texinfo.txi(,14437) file that is needed at the time.  This way, Emacs avoids wasting
../texinfo/texinfo.txi(,14438) memory when you run Info.  (Before splitting was implemented, Info
../texinfo/texinfo.txi(,14439) files were always kept short and @dfn{include files} were designed as
../texinfo/texinfo.txi(,14440) a way to create a single, large printed manual out of the smaller Info
../texinfo/texinfo.txi(,14441) files.  @xref{Include Files}, for more information.  Include files are
../texinfo/texinfo.txi(,14442) still used for very large documents, such as @cite{The Emacs Lisp
../texinfo/texinfo.txi(,14443) Reference Manual}, in which each chapter is a separate file.)@refill
../texinfo/texinfo.txi(,14444) 
../texinfo/texinfo.txi(,14445) When a file is split, Info itself makes use of a shortened version of
../texinfo/texinfo.txi(,14446) the original file that contains just the tag table and references to
../texinfo/texinfo.txi(,14447) the files that were split off.  The split-off files are called
../texinfo/texinfo.txi(,14448) @dfn{indirect} files.@refill
../texinfo/texinfo.txi(,14449) 
../texinfo/texinfo.txi(,14450) The split-off files have names that are created by appending @w{@samp{-1}},
../texinfo/texinfo.txi(,14451) @w{@samp{-2}}, @w{@samp{-3}} and so on to the file name specified by the
../texinfo/texinfo.txi(,14452) @code{@@setfilename} command.  The shortened version of the original file
../texinfo/texinfo.txi(,14453) continues to have the name specified by @code{@@setfilename}.@refill
../texinfo/texinfo.txi(,14454) 
../texinfo/texinfo.txi(,14455) At one stage in writing this document, for example, the Info file was saved
../texinfo/texinfo.txi(,14456) as the file @file{test-texinfo} and that file looked like this:@refill
../texinfo/texinfo.txi(,14457) 
../texinfo/texinfo.txi(,14458) @example
../texinfo/texinfo.txi(,14459) @group
../texinfo/texinfo.txi(,14460) Info file: test-texinfo,    -*-Text-*-
../texinfo/texinfo.txi(,14461) produced by texinfo-format-buffer
../texinfo/texinfo.txi(,14462) from file: new-texinfo-manual.texinfo
../texinfo/texinfo.txi(,14463) 
../texinfo/texinfo.txi(,14464) ^_
../texinfo/texinfo.txi(,14465) Indirect:
../texinfo/texinfo.txi(,14466) test-texinfo-1: 102
../texinfo/texinfo.txi(,14467) test-texinfo-2: 50422
../texinfo/texinfo.txi(,14468) @end group
../texinfo/texinfo.txi(,14469) @group
../texinfo/texinfo.txi(,14470) test-texinfo-3: 101300
../texinfo/texinfo.txi(,14471) ^_^L
../texinfo/texinfo.txi(,14472) Tag table:
../texinfo/texinfo.txi(,14473) (Indirect)
../texinfo/texinfo.txi(,14474) Node: overview^?104
../texinfo/texinfo.txi(,14475) Node: info file^?1271
../texinfo/texinfo.txi(,14476) @end group
../texinfo/texinfo.txi(,14477) @group
../texinfo/texinfo.txi(,14478) Node: printed manual^?4853
../texinfo/texinfo.txi(,14479) Node: conventions^?6855
../texinfo/texinfo.txi(,14480) @dots{}
../texinfo/texinfo.txi(,14481) @end group
../texinfo/texinfo.txi(,14482) @end example
../texinfo/texinfo.txi(,14483) 
../texinfo/texinfo.txi(,14484) @noindent
../texinfo/texinfo.txi(,14485) (But @file{test-texinfo} had far more nodes than are shown here.)  Each of
../texinfo/texinfo.txi(,14486) the split-off, indirect files, @file{test-texinfo-1},
../texinfo/texinfo.txi(,14487) @file{test-texinfo-2}, and @file{test-texinfo-3}, is listed in this file
../texinfo/texinfo.txi(,14488) after the line that says @samp{Indirect:}.  The tag table is listed after
../texinfo/texinfo.txi(,14489) the line that says @samp{Tag table:}. @refill
../texinfo/texinfo.txi(,14490) 
../texinfo/texinfo.txi(,14491) In the list of indirect files, the number following the file name
../texinfo/texinfo.txi(,14492) records the cumulative number of bytes in the preceding indirect files,
../texinfo/texinfo.txi(,14493) not counting the file list itself, the tag table, or the permissions
../texinfo/texinfo.txi(,14494) text in each file.  In the tag table, the number following the node name
../texinfo/texinfo.txi(,14495) records the location of the beginning of the node, in bytes from the
../texinfo/texinfo.txi(,14496) beginning of the (unsplit) output.
../texinfo/texinfo.txi(,14497) 
../texinfo/texinfo.txi(,14498) If you are using @code{texinfo-format-buffer} to create Info files,
../texinfo/texinfo.txi(,14499) you may want to run the @code{Info-validate} command.  (The
../texinfo/texinfo.txi(,14500) @code{makeinfo} command does such a good job on its own, you do not
../texinfo/texinfo.txi(,14501) need @code{Info-validate}.)  However, you cannot run the @kbd{M-x
../texinfo/texinfo.txi(,14502) Info-validate} node-checking command on indirect files.  For
../texinfo/texinfo.txi(,14503) information on how to prevent files from being split and how to
../texinfo/texinfo.txi(,14504) validate the structure of the nodes, see @ref{Using
../texinfo/texinfo.txi(,14505) Info-validate}.@refill
../texinfo/texinfo.txi(,14506) 
../texinfo/texinfo.txi(,14507) 
../texinfo/texinfo.txi(,14508) @node makeinfo html
../texinfo/texinfo.txi(,14509) @subsection Generating HTML
../texinfo/texinfo.txi(,14510) @cindex HTML
../texinfo/texinfo.txi(,14511) 
../texinfo/texinfo.txi(,14512) Besides generating output in the Info format, you can use the
../texinfo/texinfo.txi(,14513) @samp{--html} option to generate output in HTML format, for installation
../texinfo/texinfo.txi(,14514) on a web site (for example).  By default, the HTML output is split at
../texinfo/texinfo.txi(,14515) node level.
../texinfo/texinfo.txi(,14516) 
../texinfo/texinfo.txi(,14517) When splitting, the HTML output files are written into a subdirectory.
../texinfo/texinfo.txi(,14518) The subdirectory is named according to the name from
../texinfo/texinfo.txi(,14519) @code{@@setfilename} with any extension removed; for example, HTML
../texinfo/texinfo.txi(,14520) output for @code{@@setfilename emacs.info} would be written into a
../texinfo/texinfo.txi(,14521) subdirectory named @samp{emacs}.  If that directory cannot be created
../texinfo/texinfo.txi(,14522) for any reason, then @samp{.html} is appended to the directory name, as
../texinfo/texinfo.txi(,14523) in @samp{emacs.html} (this is necessary because sometimes the info file
../texinfo/texinfo.txi(,14524) is named without an extension, e.g., @samp{texinfo}).  If the
../texinfo/texinfo.txi(,14525) @samp{@var{name}.html} directory can't be created either,
../texinfo/texinfo.txi(,14526) @code{makeinfo} gives up.  In any case, the top-level output file within
../texinfo/texinfo.txi(,14527) the directory is always named @samp{index.html}.
../texinfo/texinfo.txi(,14528) 
../texinfo/texinfo.txi(,14529) Monolithic output (@code{--no-split}) is named according to
../texinfo/texinfo.txi(,14530) @code{@@setfilename} or @code{--outfile}.  Cross-document node
../texinfo/texinfo.txi(,14531) references are not supported in monolithic HTML.
../texinfo/texinfo.txi(,14532) 
../texinfo/texinfo.txi(,14533) Texinfo input marked up with the @code{@@ifhtml} command will produce
../texinfo/texinfo.txi(,14534) output only with the @samp{--html} option supplied.  Input marked up
../texinfo/texinfo.txi(,14535) with the @code{@@html} is passed literally to the output (suppressing
../texinfo/texinfo.txi(,14536) the normal escaping of input @samp{<}, @samp{>} and @samp{&} characters
../texinfo/texinfo.txi(,14537) which have special significance in HTML).
../texinfo/texinfo.txi(,14538) 
../texinfo/texinfo.txi(,14539) The @samp{--footnote-style} option is currently ignored for HTML output;
../texinfo/texinfo.txi(,14540) footnotes are linked to the end of the output file.
../texinfo/texinfo.txi(,14541) 
../texinfo/texinfo.txi(,14542) The HTML generated is mostly standard (i.e., HTML 2.0, RFC-1866).  The
../texinfo/texinfo.txi(,14543) exception is that HTML 3.2 tables are generated from the
../texinfo/texinfo.txi(,14544) @code{@@multitable} command, but tagged to degrade as well as possible
../texinfo/texinfo.txi(,14545) in browsers without table support.  The HTML 4 @samp{lang} attribute on
../texinfo/texinfo.txi(,14546) the @samp{<html>} attribute is also used.  Please report output from an
../texinfo/texinfo.txi(,14547) error-free run of @code{makeinfo} which has browser portability problems
../texinfo/texinfo.txi(,14548) as a bug.
../texinfo/texinfo.txi(,14549) 
../texinfo/texinfo.txi(,14550) Navigation bars are inserted at the start of nodes, similarly to Info
../texinfo/texinfo.txi(,14551) output.  The @samp{--no-headers} option will suppress this if used with
../texinfo/texinfo.txi(,14552) @samp{--no-split}.  Header @code{<link>} elements in split output can
../texinfo/texinfo.txi(,14553) support info-like navigation with browsers like Lynx and @w{Emacs W3}
../texinfo/texinfo.txi(,14554) which implement this @w{HTML 1.0} feature.  @samp{@@xref} commands to
../texinfo/texinfo.txi(,14555) other documents are generated assuming the other document is available
../texinfo/texinfo.txi(,14556) in split HTML form, and installed in the same HTML documentation tree,
../texinfo/texinfo.txi(,14557) at @file{../<info-document>/}.
../texinfo/texinfo.txi(,14558) 
../texinfo/texinfo.txi(,14559) 
../texinfo/texinfo.txi(,14560) @node Installing an Info File
../texinfo/texinfo.txi(,14561) @section Installing an Info File
../texinfo/texinfo.txi(,14562) @cindex Installing an Info file
../texinfo/texinfo.txi(,14563) @cindex Info file installation
../texinfo/texinfo.txi(,14564) @cindex @file{dir} directory for Info installation
../texinfo/texinfo.txi(,14565) 
../texinfo/texinfo.txi(,14566) Info files are usually kept in the @file{info} directory.  You can read
../texinfo/texinfo.txi(,14567) Info files using the standalone Info program or the Info reader built
../texinfo/texinfo.txi(,14568) into Emacs.  (@inforef{Top, info, info}, for an introduction to Info.)
../texinfo/texinfo.txi(,14569) 
../texinfo/texinfo.txi(,14570) @menu
../texinfo/texinfo.txi(,14571) * Directory File::              The top level menu for all Info files.
../texinfo/texinfo.txi(,14572) * New Info File::               Listing a new Info file.
../texinfo/texinfo.txi(,14573) * Other Info Directories::      How to specify Info files that are
../texinfo/texinfo.txi(,14574)                                   located in other directories.
../texinfo/texinfo.txi(,14575) * Installing Dir Entries::      How to specify what menu entry to add
../texinfo/texinfo.txi(,14576)                                   to the Info directory.
../texinfo/texinfo.txi(,14577) * Invoking install-info::       @code{install-info} options.
../texinfo/texinfo.txi(,14578) @end menu
../texinfo/texinfo.txi(,14579) 
../texinfo/texinfo.txi(,14580) 
../texinfo/texinfo.txi(,14581) @node Directory File
../texinfo/texinfo.txi(,14582) @subsection The Directory File @file{dir}
../texinfo/texinfo.txi(,14583) 
../texinfo/texinfo.txi(,14584) For Info to work, the @file{info} directory must contain a file that
../texinfo/texinfo.txi(,14585) serves as a top level directory for the Info system.  By convention,
../texinfo/texinfo.txi(,14586) this file is called @file{dir}.  (You can find the location of this file
../texinfo/texinfo.txi(,14587) within Emacs by typing @kbd{C-h i} to enter Info and then typing
../texinfo/texinfo.txi(,14588) @kbd{C-x C-f} to see the pathname to the @file{info} directory.)
../texinfo/texinfo.txi(,14589) 
../texinfo/texinfo.txi(,14590) The @file{dir} file is itself an Info file.  It contains the top level
../texinfo/texinfo.txi(,14591) menu for all the Info files in the system.  The menu looks like
../texinfo/texinfo.txi(,14592) this:@refill
../texinfo/texinfo.txi(,14593) 
../texinfo/texinfo.txi(,14594) @example
../texinfo/texinfo.txi(,14595) @group
../texinfo/texinfo.txi(,14596) * Menu:
../texinfo/texinfo.txi(,14597) * Info:    (info).     Documentation browsing system.
../texinfo/texinfo.txi(,14598) * Emacs:   (emacs).    The extensible, self-documenting
../texinfo/texinfo.txi(,14599)                        text editor.
../texinfo/texinfo.txi(,14600) * Texinfo: (texinfo).  With one source file, make
../texinfo/texinfo.txi(,14601)                        either a printed manual using
../texinfo/texinfo.txi(,14602)                        @@TeX@{@} or an Info file.
../texinfo/texinfo.txi(,14603) @dots{}
../texinfo/texinfo.txi(,14604) @end group
../texinfo/texinfo.txi(,14605) @end example
../texinfo/texinfo.txi(,14606) 
../texinfo/texinfo.txi(,14607) Each of these menu entries points to the `Top' node of the Info file
../texinfo/texinfo.txi(,14608) that is named in parentheses.  (The menu entry does not need to
../texinfo/texinfo.txi(,14609) specify the `Top' node, since Info goes to the `Top' node if no node
../texinfo/texinfo.txi(,14610) name is mentioned.  @xref{Other Info Files, , Nodes in Other Info
../texinfo/texinfo.txi(,14611) Files}.)@refill
../texinfo/texinfo.txi(,14612) 
../texinfo/texinfo.txi(,14613) Thus, the @samp{Info} entry points to the `Top' node of the
../texinfo/texinfo.txi(,14614) @file{info} file and the @samp{Emacs} entry points to the `Top' node
../texinfo/texinfo.txi(,14615) of the @file{emacs} file.@refill
../texinfo/texinfo.txi(,14616) 
../texinfo/texinfo.txi(,14617) In each of the Info files, the `Up' pointer of the `Top' node refers
../texinfo/texinfo.txi(,14618) back to the @code{dir} file.  For example, the line for the `Top'
../texinfo/texinfo.txi(,14619) node of the Emacs manual looks like this in Info:@refill
../texinfo/texinfo.txi(,14620) 
../texinfo/texinfo.txi(,14621) @example
../texinfo/texinfo.txi(,14622) File: emacs  Node: Top, Up: (DIR), Next: Distrib
../texinfo/texinfo.txi(,14623) @end example
../texinfo/texinfo.txi(,14624) 
../texinfo/texinfo.txi(,14625) @noindent
../texinfo/texinfo.txi(,14626) In this case, the @file{dir} file name is written in upper case
../texinfo/texinfo.txi(,14627) letters---it can be written in either upper or lower case.  This is not
../texinfo/texinfo.txi(,14628) true in general, it is a special case for @file{dir}.
../texinfo/texinfo.txi(,14629) 
../texinfo/texinfo.txi(,14630) 
../texinfo/texinfo.txi(,14631) @node New Info File
../texinfo/texinfo.txi(,14632) @subsection Listing a New Info File
../texinfo/texinfo.txi(,14633) @cindex Adding a new Info file
../texinfo/texinfo.txi(,14634) @cindex Listing a new Info file
../texinfo/texinfo.txi(,14635) @cindex New Info file, listing it in @file{dir} file
../texinfo/texinfo.txi(,14636) @cindex Info file, listing a new
../texinfo/texinfo.txi(,14637) @cindex @file{dir} file listing
../texinfo/texinfo.txi(,14638) 
../texinfo/texinfo.txi(,14639) To add a new Info file to your system, you must write a menu entry to
../texinfo/texinfo.txi(,14640) add to the menu in the @file{dir} file in the @file{info} directory.
../texinfo/texinfo.txi(,14641) For example, if you were adding documentation for GDB, you would write
../texinfo/texinfo.txi(,14642) the following new entry:@refill
../texinfo/texinfo.txi(,14643) 
../texinfo/texinfo.txi(,14644) @example
../texinfo/texinfo.txi(,14645) * GDB: (gdb).           The source-level C debugger.
../texinfo/texinfo.txi(,14646) @end example
../texinfo/texinfo.txi(,14647) 
../texinfo/texinfo.txi(,14648) @noindent
../texinfo/texinfo.txi(,14649) The first part of the menu entry is the menu entry name, followed by a
../texinfo/texinfo.txi(,14650) colon.  The second part is the name of the Info file, in parentheses,
../texinfo/texinfo.txi(,14651) followed by a period.  The third part is the description.
../texinfo/texinfo.txi(,14652) 
../texinfo/texinfo.txi(,14653) The name of an Info file often has a @file{.info} extension.  Thus, the
../texinfo/texinfo.txi(,14654) Info file for GDB might be called either @file{gdb} or @file{gdb.info}.
../texinfo/texinfo.txi(,14655) The Info reader programs automatically try the file name both with and
../texinfo/texinfo.txi(,14656) without @file{.info}@footnote{On MS-DOS/MS-Windows systems, Info will
../texinfo/texinfo.txi(,14657) try the @file{.inf} extension as well.}; so it is better to avoid
../texinfo/texinfo.txi(,14658) clutter and not to write @samp{.info} explicitly in the menu entry.  For
../texinfo/texinfo.txi(,14659) example, the GDB menu entry should use just @samp{gdb} for the file
../texinfo/texinfo.txi(,14660) name, not @samp{gdb.info}.
../texinfo/texinfo.txi(,14661) 
../texinfo/texinfo.txi(,14662) 
../texinfo/texinfo.txi(,14663) @node Other Info Directories
../texinfo/texinfo.txi(,14664) @subsection Info Files in Other Directories
../texinfo/texinfo.txi(,14665) @cindex Installing Info in another directory
../texinfo/texinfo.txi(,14666) @cindex Info installed in another directory
../texinfo/texinfo.txi(,14667) @cindex Another Info directory
../texinfo/texinfo.txi(,14668) @cindex @file{dir} files and Info directories
../texinfo/texinfo.txi(,14669) 
../texinfo/texinfo.txi(,14670) If an Info file is not in the @file{info} directory, there are three
../texinfo/texinfo.txi(,14671) ways to specify its location:@refill
../texinfo/texinfo.txi(,14672) 
../texinfo/texinfo.txi(,14673) @enumerate
../texinfo/texinfo.txi(,14674) @item
../texinfo/texinfo.txi(,14675) Write the pathname in the @file{dir} file as the second part of the menu.
../texinfo/texinfo.txi(,14676) 
../texinfo/texinfo.txi(,14677) @item
../texinfo/texinfo.txi(,14678) If you are using Emacs, list the name of the file in a second @file{dir}
../texinfo/texinfo.txi(,14679) file, in its directory; and then add the name of that directory to the
../texinfo/texinfo.txi(,14680) @code{Info-directory-list} variable in your personal or site
../texinfo/texinfo.txi(,14681) initialization file.
../texinfo/texinfo.txi(,14682) 
../texinfo/texinfo.txi(,14683) This variable tells Emacs where to look for @file{dir} files (the files
../texinfo/texinfo.txi(,14684) must be named @file{dir}).  Emacs merges the files named @file{dir} from
../texinfo/texinfo.txi(,14685) each of the listed directories.  (In Emacs version 18, you can set the
../texinfo/texinfo.txi(,14686) @code{Info-directory} variable to the name of only one
../texinfo/texinfo.txi(,14687) directory.)@refill
../texinfo/texinfo.txi(,14688) 
../texinfo/texinfo.txi(,14689) @item
../texinfo/texinfo.txi(,14690) Specify the Info directory name in the @code{INFOPATH} environment
../texinfo/texinfo.txi(,14691) variable in your @file{.profile} or @file{.cshrc} initialization file.
../texinfo/texinfo.txi(,14692) (Only you and others who set this environment variable will be able to
../texinfo/texinfo.txi(,14693) find Info files whose location is specified this way.)
../texinfo/texinfo.txi(,14694) @end enumerate
../texinfo/texinfo.txi(,14695) 
../texinfo/texinfo.txi(,14696) For example, to reach a test file in the @file{/home/bob/info}
../texinfo/texinfo.txi(,14697) directory, you could add an entry like this to the menu in the
../texinfo/texinfo.txi(,14698) standard @file{dir} file:@refill
../texinfo/texinfo.txi(,14699) 
../texinfo/texinfo.txi(,14700) @example
../texinfo/texinfo.txi(,14701) * Test: (/home/bob/info/info-test).  Bob's own test file.
../texinfo/texinfo.txi(,14702) @end example
../texinfo/texinfo.txi(,14703) 
../texinfo/texinfo.txi(,14704) @noindent
../texinfo/texinfo.txi(,14705) In this case, the absolute file name of the @file{info-test} file is
../texinfo/texinfo.txi(,14706) written as the second part of the menu entry.@refill
../texinfo/texinfo.txi(,14707) 
../texinfo/texinfo.txi(,14708) Alternatively, you could write the following in your @file{.emacs} file:
../texinfo/texinfo.txi(,14709) 
../texinfo/texinfo.txi(,14710) @vindex Info-directory-list
../texinfo/texinfo.txi(,14711) @example
../texinfo/texinfo.txi(,14712) @group
../texinfo/texinfo.txi(,14713) (require 'info)
../texinfo/texinfo.txi(,14714) (setq Info-directory-list
../texinfo/texinfo.txi(,14715)   (cons (expand-file-name "/home/bob/info")
../texinfo/texinfo.txi(,14716)         Info-directory-list))
../texinfo/texinfo.txi(,14717) @end group
../texinfo/texinfo.txi(,14718) @end example
../texinfo/texinfo.txi(,14719) 
../texinfo/texinfo.txi(,14720) This tells Emacs to merge the system @file{dir} file with the @file{dir}
../texinfo/texinfo.txi(,14721) file in @file{/home/bob/info}.  Thus, Info will list the
../texinfo/texinfo.txi(,14722) @file{/home/bob/info/info-test} file as a menu entry in the
../texinfo/texinfo.txi(,14723) @file{/home/bob/info/dir} file.  Emacs does the merging only when
../texinfo/texinfo.txi(,14724) @kbd{M-x info} is first run, so if you want to set
../texinfo/texinfo.txi(,14725) @code{Info-directory-list} in an Emacs session where you've already run
../texinfo/texinfo.txi(,14726) @code{info}, you must @code{(setq Info-dir-contents nil)} to force Emacs
../texinfo/texinfo.txi(,14727) to recompose the @file{dir} file.
../texinfo/texinfo.txi(,14728) 
../texinfo/texinfo.txi(,14729) @vindex INFOPATH
../texinfo/texinfo.txi(,14730) Finally, you can tell Info where to look by setting the @code{INFOPATH}
../texinfo/texinfo.txi(,14731) environment variable in your shell startup file, such as @file{.cshrc},
../texinfo/texinfo.txi(,14732) @file{.profile} or @file{autoexec.bat}.  If you use a Bourne-compatible
../texinfo/texinfo.txi(,14733) shell such as @code{sh} or @code{bash} for your shell command
../texinfo/texinfo.txi(,14734) interpreter, you set the @code{INFOPATH} environment variable in the
../texinfo/texinfo.txi(,14735) @file{.profile} initialization file; but if you use @code{csh} or
../texinfo/texinfo.txi(,14736) @code{tcsh}, you set the variable in the @file{.cshrc} initialization
../texinfo/texinfo.txi(,14737) file.  On MS-DOS/MS-Windows systems, you must set @code{INFOPATH} in
../texinfo/texinfo.txi(,14738) your @file{autoexec.bat} file or in the Registry.  Each type of shell
../texinfo/texinfo.txi(,14739) uses a different syntax.
../texinfo/texinfo.txi(,14740) 
../texinfo/texinfo.txi(,14741) @itemize @bullet
../texinfo/texinfo.txi(,14742) @item
../texinfo/texinfo.txi(,14743) In a @file{.cshrc} file, you could set the @code{INFOPATH}
../texinfo/texinfo.txi(,14744) variable as follows:@refill
../texinfo/texinfo.txi(,14745) 
../texinfo/texinfo.txi(,14746) @smallexample
../texinfo/texinfo.txi(,14747) setenv INFOPATH .:~/info:/usr/local/emacs/info
../texinfo/texinfo.txi(,14748) @end smallexample
../texinfo/texinfo.txi(,14749) 
../texinfo/texinfo.txi(,14750) @item
../texinfo/texinfo.txi(,14751) In a @file{.profile} file, you would achieve the same effect by
../texinfo/texinfo.txi(,14752) writing:@refill
../texinfo/texinfo.txi(,14753) 
../texinfo/texinfo.txi(,14754) @smallexample
../texinfo/texinfo.txi(,14755) INFOPATH=.:$HOME/info:/usr/local/emacs/info
../texinfo/texinfo.txi(,14756) export INFOPATH
../texinfo/texinfo.txi(,14757) @end smallexample
../texinfo/texinfo.txi(,14758) 
../texinfo/texinfo.txi(,14759) @item
../texinfo/texinfo.txi(,14760) @pindex autoexec.bat
../texinfo/texinfo.txi(,14761) In a @file{autoexec.bat} file, you write this command@footnote{Note the
../texinfo/texinfo.txi(,14762) use of @samp{;} as the directory separator, and a different syntax for
../texinfo/texinfo.txi(,14763) using values of other environment variables.}:
../texinfo/texinfo.txi(,14764) 
../texinfo/texinfo.txi(,14765) @smallexample
../texinfo/texinfo.txi(,14766) set INFOPATH=.;%HOME%/info;c:/usr/local/emacs/info
../texinfo/texinfo.txi(,14767) @end smallexample
../texinfo/texinfo.txi(,14768) @end itemize
../texinfo/texinfo.txi(,14769) 
../texinfo/texinfo.txi(,14770) @noindent
../texinfo/texinfo.txi(,14771) The @samp{.} indicates the current directory as usual.  Emacs uses the
../texinfo/texinfo.txi(,14772) @code{INFOPATH} environment variable to initialize the value of Emacs's
../texinfo/texinfo.txi(,14773) own @code{Info-directory-list} variable.  The stand-alone Info reader
../texinfo/texinfo.txi(,14774) merges any files named @file{dir} in any directory listed in the
../texinfo/texinfo.txi(,14775) @env{INFOPATH} variable into a single menu presented to you in the node
../texinfo/texinfo.txi(,14776) called @samp{(dir)Top}.
../texinfo/texinfo.txi(,14777) 
../texinfo/texinfo.txi(,14778) @cindex colon, last in @env{INFOPATH}
../texinfo/texinfo.txi(,14779) However you set @env{INFOPATH}, if its last character is a
../texinfo/texinfo.txi(,14780) colon@footnote{On MS-DOS/MS-Windows systems, use semi-colon instead.}, this
../texinfo/texinfo.txi(,14781) is replaced by the default (compiled-in) path.  This gives you a way to
../texinfo/texinfo.txi(,14782) augment the default path with new directories without having to list all
../texinfo/texinfo.txi(,14783) the standard places.  For example (using @code{sh} syntax):
../texinfo/texinfo.txi(,14784) 
../texinfo/texinfo.txi(,14785) @example
../texinfo/texinfo.txi(,14786) INFOPATH=/local/info:
../texinfo/texinfo.txi(,14787) export INFOPATH
../texinfo/texinfo.txi(,14788) @end example
../texinfo/texinfo.txi(,14789) 
../texinfo/texinfo.txi(,14790) @noindent
../texinfo/texinfo.txi(,14791) will search @file{/local/info} first, then the standard directories.
../texinfo/texinfo.txi(,14792) Leading or doubled colons are not treated specially.
../texinfo/texinfo.txi(,14793) 
../texinfo/texinfo.txi(,14794) @cindex @file{dir} file, creating your own
../texinfo/texinfo.txi(,14795) When you create your own @file{dir} file for use with
../texinfo/texinfo.txi(,14796) @code{Info-directory-list} or @env{INFOPATH}, it's easiest to start by
../texinfo/texinfo.txi(,14797) copying an existing @file{dir} file and replace all the text after the
../texinfo/texinfo.txi(,14798) @samp{* Menu:} with your desired entries.  That way, the punctuation and
../texinfo/texinfo.txi(,14799) special CTRL-_ characters that Info needs will be present.
../texinfo/texinfo.txi(,14800) 
../texinfo/texinfo.txi(,14801) 
../texinfo/texinfo.txi(,14802) @node Installing Dir Entries
../texinfo/texinfo.txi(,14803) @subsection Installing Info Directory Files
../texinfo/texinfo.txi(,14804) 
../texinfo/texinfo.txi(,14805) When you install an Info file onto your system, you can use the program
../texinfo/texinfo.txi(,14806) @code{install-info} to update the Info directory file @file{dir}.
../texinfo/texinfo.txi(,14807) Normally the makefile for the package runs @code{install-info}, just
../texinfo/texinfo.txi(,14808) after copying the Info file into its proper installed location.
../texinfo/texinfo.txi(,14809) 
../texinfo/texinfo.txi(,14810) @findex dircategory
../texinfo/texinfo.txi(,14811) @findex direntry
../texinfo/texinfo.txi(,14812) In order for the Info file to work with @code{install-info}, you include
../texinfo/texinfo.txi(,14813) the commands @code{@@dircategory} and
../texinfo/texinfo.txi(,14814) @code{@@direntry}@dots{}@code{@@end direntry} in the Texinfo source
../texinfo/texinfo.txi(,14815) file.  Use @code{@@direntry} to specify the menu entries to add to the
../texinfo/texinfo.txi(,14816) Info directory file, and use @code{@@dircategory} to specify which part
../texinfo/texinfo.txi(,14817) of the Info directory to put it in.  Here is how these commands are used
../texinfo/texinfo.txi(,14818) in this manual:
../texinfo/texinfo.txi(,14819) 
../texinfo/texinfo.txi(,14820) @smallexample
../texinfo/texinfo.txi(,14821) @@dircategory Texinfo documentation system
../texinfo/texinfo.txi(,14822) @@direntry
../texinfo/texinfo.txi(,14823) * Texinfo: (texinfo).           The GNU documentation format.
../texinfo/texinfo.txi(,14824) * install-info: (texinfo)Invoking install-info. @dots{}
../texinfo/texinfo.txi(,14825) @dots{}
../texinfo/texinfo.txi(,14826) @@end direntry
../texinfo/texinfo.txi(,14827) @end smallexample
../texinfo/texinfo.txi(,14828) 
../texinfo/texinfo.txi(,14829) Here's what this produces in the Info file:
../texinfo/texinfo.txi(,14830) 
../texinfo/texinfo.txi(,14831) @smallexample
../texinfo/texinfo.txi(,14832) INFO-DIR-SECTION Texinfo documentation system
../texinfo/texinfo.txi(,14833) START-INFO-DIR-ENTRY
../texinfo/texinfo.txi(,14834) * Texinfo: (texinfo).           The GNU documentation format.
../texinfo/texinfo.txi(,14835) * install-info: (texinfo)Invoking install-info. @dots{}
../texinfo/texinfo.txi(,14836) @dots{}
../texinfo/texinfo.txi(,14837) END-INFO-DIR-ENTRY
../texinfo/texinfo.txi(,14838) @end smallexample
../texinfo/texinfo.txi(,14839) 
../texinfo/texinfo.txi(,14840) @noindent
../texinfo/texinfo.txi(,14841) The @code{install-info} program sees these lines in the Info file, and
../texinfo/texinfo.txi(,14842) that is how it knows what to do.
../texinfo/texinfo.txi(,14843) 
../texinfo/texinfo.txi(,14844) Always use the @code{@@direntry} and @code{@@dircategory} commands near
../texinfo/texinfo.txi(,14845) the beginning of the Texinfo input, before the first @code{@@node}
../texinfo/texinfo.txi(,14846) command.  If you use them later on in the input, @code{install-info}
../texinfo/texinfo.txi(,14847) will not notice them.
../texinfo/texinfo.txi(,14848) 
../texinfo/texinfo.txi(,14849) If you use @code{@@dircategory} more than once in the Texinfo source,
../texinfo/texinfo.txi(,14850) each usage specifies the `current' category; any subsequent
../texinfo/texinfo.txi(,14851) @code{@@direntry} commands will add to that category.  
../texinfo/texinfo.txi(,14852) 
../texinfo/texinfo.txi(,14853) Here are some recommended @code{@@dircategory} categories:
../texinfo/texinfo.txi(,14854) 
../texinfo/texinfo.txi(,14855) @display
../texinfo/texinfo.txi(,14856) GNU packages
../texinfo/texinfo.txi(,14857) GNU programming tools
../texinfo/texinfo.txi(,14858) GNU programming documentation
../texinfo/texinfo.txi(,14859) GNU Emacs Lisp
../texinfo/texinfo.txi(,14860) GNU libraries
../texinfo/texinfo.txi(,14861) TeX
../texinfo/texinfo.txi(,14862) Individual utilities
../texinfo/texinfo.txi(,14863) @end display
../texinfo/texinfo.txi(,14864) 
../texinfo/texinfo.txi(,14865) The idea is to include the `Invoking' node for every program installed
../texinfo/texinfo.txi(,14866) by a package under `Individual utilities', and an entry for the manual
../texinfo/texinfo.txi(,14867) as a whole in the appropriate other category.
../texinfo/texinfo.txi(,14868) 
../texinfo/texinfo.txi(,14869) 
../texinfo/texinfo.txi(,14870) @node Invoking install-info
../texinfo/texinfo.txi(,14871) @subsection Invoking install-info
../texinfo/texinfo.txi(,14872) 
../texinfo/texinfo.txi(,14873) @pindex install-info
../texinfo/texinfo.txi(,14874) 
../texinfo/texinfo.txi(,14875) @code{install-info} inserts menu entries from an Info file into the
../texinfo/texinfo.txi(,14876) top-level @file{dir} file in the Info system (see the previous sections
../texinfo/texinfo.txi(,14877) for an explanation of how the @file{dir} file works).  It's most often
../texinfo/texinfo.txi(,14878) run as part of software installation, or when constructing a @file{dir} file
../texinfo/texinfo.txi(,14879) for all manuals on a system.  Synopsis:
../texinfo/texinfo.txi(,14880) 
../texinfo/texinfo.txi(,14881) @example
../texinfo/texinfo.txi(,14882) install-info [@var{option}]@dots{} [@var{info-file} [@var{dir-file}]]
../texinfo/texinfo.txi(,14883) @end example
../texinfo/texinfo.txi(,14884) 
../texinfo/texinfo.txi(,14885) If @var{info-file} or @var{dir-file} are not specified, the options
../texinfo/texinfo.txi(,14886) (described below) that define them must be.  There are no compile-time
../texinfo/texinfo.txi(,14887) defaults, and standard input is never used.  @code{install-info} can
../texinfo/texinfo.txi(,14888) read only one Info file and write only one @file{dir} file per invocation.
../texinfo/texinfo.txi(,14889) 
../texinfo/texinfo.txi(,14890) @cindex @file{dir}, created by @code{install-info}
../texinfo/texinfo.txi(,14891) If @var{dir-file} (however specified) does not exist,
../texinfo/texinfo.txi(,14892) @code{install-info} creates it if possible (with no entries).
../texinfo/texinfo.txi(,14893) 
../texinfo/texinfo.txi(,14894) @cindex Compressed files, reading
../texinfo/texinfo.txi(,14895) @cindex Dir files, compressed
../texinfo/texinfo.txi(,14896) If any input file is compressed with @code{gzip} (@pxref{Invoking
../texinfo/texinfo.txi(,14897) gzip,,,gzip, Gzip}), @code{install-info} automatically uncompresses it
../texinfo/texinfo.txi(,14898) for reading.  And if @var{dir-file} is compressed, @code{install-info}
../texinfo/texinfo.txi(,14899) also automatically leaves it compressed after writing any changes.
../texinfo/texinfo.txi(,14900) If @var{dir-file} itself does not exist, @code{install-info} tries to
../texinfo/texinfo.txi(,14901) open @file{@var{dir-file}.gz}.
../texinfo/texinfo.txi(,14902) 
../texinfo/texinfo.txi(,14903) Options:
../texinfo/texinfo.txi(,14904) 
../texinfo/texinfo.txi(,14905) @table @code
../texinfo/texinfo.txi(,14906) @item --delete
../texinfo/texinfo.txi(,14907) @opindex --delete
../texinfo/texinfo.txi(,14908) Delete the entries in @var{info-file} from @var{dir-file}.  The file
../texinfo/texinfo.txi(,14909) name in the entry in @var{dir-file} must be @var{info-file} (except for
../texinfo/texinfo.txi(,14910) an optional @samp{.info} in either one).  Don't insert any new entries.
../texinfo/texinfo.txi(,14911) 
../texinfo/texinfo.txi(,14912) @item --dir-file=@var{name}
../texinfo/texinfo.txi(,14913) @itemx -d @var{name}
../texinfo/texinfo.txi(,14914) @opindex --dir-file=@var{name}
../texinfo/texinfo.txi(,14915) @opindex -d @var{name}
../texinfo/texinfo.txi(,14916) Specify file name of the Info directory file.  This is equivalent to
../texinfo/texinfo.txi(,14917) using the @var{dir-file} argument.
../texinfo/texinfo.txi(,14918) 
../texinfo/texinfo.txi(,14919) @item --entry=@var{text}
../texinfo/texinfo.txi(,14920) @itemx -e @var{text}
../texinfo/texinfo.txi(,14921) @opindex --entry=@var{text}
../texinfo/texinfo.txi(,14922) @opindex -e @var{text}
../texinfo/texinfo.txi(,14923) Insert @var{text} as an Info directory entry; @var{text} should have the
../texinfo/texinfo.txi(,14924) form of an Info menu item line plus zero or more extra lines starting
../texinfo/texinfo.txi(,14925) with whitespace.  If you specify more than one entry, they are all
../texinfo/texinfo.txi(,14926) added.  If you don't specify any entries, they are determined from
../texinfo/texinfo.txi(,14927) information in the Info file itself.
../texinfo/texinfo.txi(,14928) 
../texinfo/texinfo.txi(,14929) @item --help
../texinfo/texinfo.txi(,14930) @itemx -h
../texinfo/texinfo.txi(,14931) @opindex --help
../texinfo/texinfo.txi(,14932) @opindex -h
../texinfo/texinfo.txi(,14933) Display a usage message listing basic usage and all available options,
../texinfo/texinfo.txi(,14934) then exit successfully.
../texinfo/texinfo.txi(,14935) 
../texinfo/texinfo.txi(,14936) @item --info-file=@var{file}
../texinfo/texinfo.txi(,14937) @itemx -i @var{file}
../texinfo/texinfo.txi(,14938) @opindex --info-file=@var{file}
../texinfo/texinfo.txi(,14939) @opindex -i @var{file}
../texinfo/texinfo.txi(,14940) Specify Info file to install in the directory.
../texinfo/texinfo.txi(,14941) Equivalent to using the @var{info-file} argument.
../texinfo/texinfo.txi(,14942) 
../texinfo/texinfo.txi(,14943) @item --info-dir=@var{dir}
../texinfo/texinfo.txi(,14944) @itemx -D @var{dir}
../texinfo/texinfo.txi(,14945) @opindex --info-dir=@var{dir}
../texinfo/texinfo.txi(,14946) @opindex -D @var{dir}
../texinfo/texinfo.txi(,14947) Specify the directory where @file{dir} resides.
../texinfo/texinfo.txi(,14948) Equivalent to @samp{--dir-file=@var{dir}/dir}.
../texinfo/texinfo.txi(,14949) 
../texinfo/texinfo.txi(,14950) @item --item=@var{text}
../texinfo/texinfo.txi(,14951) @opindex --item=@var{text}
../texinfo/texinfo.txi(,14952) Same as @samp{--entry=@var{text}}.  An Info directory entry is actually
../texinfo/texinfo.txi(,14953) a menu item.
../texinfo/texinfo.txi(,14954) 
../texinfo/texinfo.txi(,14955) @item --quiet
../texinfo/texinfo.txi(,14956) @opindex --quiet
../texinfo/texinfo.txi(,14957) Suppress warnings.
../texinfo/texinfo.txi(,14958) 
../texinfo/texinfo.txi(,14959) @item --remove
../texinfo/texinfo.txi(,14960) @itemx -r
../texinfo/texinfo.txi(,14961) @opindex --remove
../texinfo/texinfo.txi(,14962) @opindex -r
../texinfo/texinfo.txi(,14963) Same as @samp{--delete}.
../texinfo/texinfo.txi(,14964) 
../texinfo/texinfo.txi(,14965) @item --section=@var{sec}
../texinfo/texinfo.txi(,14966) @itemx -s @var{sec}
../texinfo/texinfo.txi(,14967) @opindex --section=@var{sec}
../texinfo/texinfo.txi(,14968) @opindex -s @var{sec}
../texinfo/texinfo.txi(,14969) Put this file's entries in section @var{sec} of the directory.  If you
../texinfo/texinfo.txi(,14970) specify more than one section, all the entries are added in each of the
../texinfo/texinfo.txi(,14971) sections.  If you don't specify any sections, they are determined from
../texinfo/texinfo.txi(,14972) information in the Info file itself.
../texinfo/texinfo.txi(,14973) 
../texinfo/texinfo.txi(,14974) @item --version
../texinfo/texinfo.txi(,14975) @itemx -V
../texinfo/texinfo.txi(,14976) @opindex --version
../texinfo/texinfo.txi(,14977) @opindex -V
../texinfo/texinfo.txi(,14978) @cindex version number, finding
../texinfo/texinfo.txi(,14979) Display version information and exit successfully.
../texinfo/texinfo.txi(,14980) 
../texinfo/texinfo.txi(,14981) @end table
../texinfo/texinfo.txi(,14982) 
../texinfo/texinfo.txi(,14983) 
../texinfo/texinfo.txi(,14984) @node Command List
../texinfo/texinfo.txi(,14985) @appendix @@-Command List
../texinfo/texinfo.txi(,14986) @cindex Alphabetical @@-command list
../texinfo/texinfo.txi(,14987) @cindex List of  @@-commands
../texinfo/texinfo.txi(,14988) @cindex @@-command list
../texinfo/texinfo.txi(,14989) @cindex Reference to @@-commands
../texinfo/texinfo.txi(,14990) 
../texinfo/texinfo.txi(,14991) Here is an alphabetical list of the @@-commands in Texinfo.  Square
../texinfo/texinfo.txi(,14992) brackets, @t{[}@w{ }@t{]}, indicate optional arguments; an ellipsis,
../texinfo/texinfo.txi(,14993) @samp{@dots{}}, indicates repeated text.
../texinfo/texinfo.txi(,14994) 
../texinfo/texinfo.txi(,14995) @sp 1
../texinfo/texinfo.txi(,14996) @table @code
../texinfo/texinfo.txi(,14997) @item @@@var{whitespace}
../texinfo/texinfo.txi(,14998) An @code{@@} followed by a space, tab, or newline produces a normal,
../texinfo/texinfo.txi(,14999) stretchable, interword space.  @xref{Multiple Spaces}.
../texinfo/texinfo.txi(,15000) 
../texinfo/texinfo.txi(,15001) @item @@!
../texinfo/texinfo.txi(,15002) Generate an exclamation point that really does end a sentence (usually
../texinfo/texinfo.txi(,15003) after an end-of-sentence capital letter).  @xref{Ending a Sentence}.
../texinfo/texinfo.txi(,15004) 
../texinfo/texinfo.txi(,15005) @item @@"
../texinfo/texinfo.txi(,15006) @itemx @@'
../texinfo/texinfo.txi(,15007) Generate an umlaut or acute accent, respectively, over the next
../texinfo/texinfo.txi(,15008) character, as in @"o and @'o.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15009) 
../texinfo/texinfo.txi(,15010) @item @@*
../texinfo/texinfo.txi(,15011) Force a line break. Do not end a paragraph that uses @code{@@*} with
../texinfo/texinfo.txi(,15012) an @code{@@refill} command.  @xref{Line Breaks}.
../texinfo/texinfo.txi(,15013) 
../texinfo/texinfo.txi(,15014) @item @@,@{@var{c}@}
../texinfo/texinfo.txi(,15015) Generate a cedilla accent under @var{c}, as in @,{c}.  @xref{Inserting
../texinfo/texinfo.txi(,15016) Accents}.
../texinfo/texinfo.txi(,15017) 
../texinfo/texinfo.txi(,15018) @item @@-
../texinfo/texinfo.txi(,15019) Insert a discretionary hyphenation point.  @xref{- and hyphenation}.
../texinfo/texinfo.txi(,15020) 
../texinfo/texinfo.txi(,15021) @item @@.
../texinfo/texinfo.txi(,15022) Produce a period that really does end a sentence (usually after an
../texinfo/texinfo.txi(,15023) end-of-sentence capital letter).  @xref{Ending a Sentence}.
../texinfo/texinfo.txi(,15024) 
../texinfo/texinfo.txi(,15025) @item @@:
../texinfo/texinfo.txi(,15026) Indicate to @TeX{} that an immediately preceding period, question
../texinfo/texinfo.txi(,15027) mark, exclamation mark, or colon does not end a sentence.  Prevent
../texinfo/texinfo.txi(,15028) @TeX{} from inserting extra whitespace as it does at the end of a
../texinfo/texinfo.txi(,15029) sentence.  The command has no effect on the Info file output.
../texinfo/texinfo.txi(,15030) @xref{Not Ending a Sentence}.
../texinfo/texinfo.txi(,15031) 
../texinfo/texinfo.txi(,15032) @item @@=
../texinfo/texinfo.txi(,15033) Generate a macron (bar) accent over the next character, as in @=o.
../texinfo/texinfo.txi(,15034) @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15035) 
../texinfo/texinfo.txi(,15036) @item @@?
../texinfo/texinfo.txi(,15037) Generate a question mark that really does end a sentence (usually after
../texinfo/texinfo.txi(,15038) an end-of-sentence capital letter).  @xref{Ending a Sentence}.
../texinfo/texinfo.txi(,15039) 
../texinfo/texinfo.txi(,15040) @item @@@@
../texinfo/texinfo.txi(,15041) Stands for an at sign, @samp{@@}.
../texinfo/texinfo.txi(,15042) @xref{Braces Atsigns, , Inserting @@ and braces}.
../texinfo/texinfo.txi(,15043) 
../texinfo/texinfo.txi(,15044) @item @@\
../texinfo/texinfo.txi(,15045) Stands for a backslash (@samp{\}) inside @code{@@math}.
../texinfo/texinfo.txi(,15046) @xref{math,,@code{math}}.
../texinfo/texinfo.txi(,15047) 
../texinfo/texinfo.txi(,15048) @item @@^
../texinfo/texinfo.txi(,15049) @itemx @@`
../texinfo/texinfo.txi(,15050) Generate a circumflex (hat) or grave accent, respectively, over the next
../texinfo/texinfo.txi(,15051) character, as in @^o and @`e.
../texinfo/texinfo.txi(,15052) @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15053) 
../texinfo/texinfo.txi(,15054) @item @@@{
../texinfo/texinfo.txi(,15055) Stands for a left brace, @samp{@{}.
../texinfo/texinfo.txi(,15056) @xref{Braces Atsigns, , Inserting @@ and braces}.
../texinfo/texinfo.txi(,15057) 
../texinfo/texinfo.txi(,15058) @item @@@}
../texinfo/texinfo.txi(,15059) Stands for a right-hand brace, @samp{@}}.@*
../texinfo/texinfo.txi(,15060) @xref{Braces Atsigns, , Inserting @@ and braces}.
../texinfo/texinfo.txi(,15061) 
../texinfo/texinfo.txi(,15062) @item @@~
../texinfo/texinfo.txi(,15063) Generate a tilde accent over the next character, as in @~N.
../texinfo/texinfo.txi(,15064) @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15065) 
../texinfo/texinfo.txi(,15066) @item @@AA@{@}
../texinfo/texinfo.txi(,15067) @itemx @@aa@{@}
../texinfo/texinfo.txi(,15068) Generate the uppercase and lowercase Scandinavian A-ring letters,
../texinfo/texinfo.txi(,15069) respectively: @AA{}, @aa{}.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15070) 
../texinfo/texinfo.txi(,15071) @item @@acronym@{@var{abbrev}@}
../texinfo/texinfo.txi(,15072) Tag @var{abbrev} as an acronym, that is, an abbreviation written in all
../texinfo/texinfo.txi(,15073) capital letters, such as `NASA'.  @xref{acronym,, @code{acronym}}.
../texinfo/texinfo.txi(,15074) 
../texinfo/texinfo.txi(,15075) @item @@AE@{@}
../texinfo/texinfo.txi(,15076) @itemx @@ae@{@}
../texinfo/texinfo.txi(,15077) Generate the uppercase and lowercase AE ligatures, respectively:
../texinfo/texinfo.txi(,15078) @AE{}, @ae{}.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15079) 
../texinfo/texinfo.txi(,15080) @itemx @@afivepaper
../texinfo/texinfo.txi(,15081) Change page dimensions for the A5 paper size.  @xref{A4 Paper}.
../texinfo/texinfo.txi(,15082) 
../texinfo/texinfo.txi(,15083) @item @@afourlatex
../texinfo/texinfo.txi(,15084) @itemx @@afourpaper
../texinfo/texinfo.txi(,15085) @itemx @@afourwide
../texinfo/texinfo.txi(,15086) Change page dimensions for the A4 paper size.  @xref{A4 Paper}.
../texinfo/texinfo.txi(,15087) 
../texinfo/texinfo.txi(,15088) @item @@alias @var{new}=@var{existing}
../texinfo/texinfo.txi(,15089) Make the command @samp{@@@var{new}} an alias for the existing command
../texinfo/texinfo.txi(,15090) @samp{@@@var{existing}}.  @xref{alias}.
../texinfo/texinfo.txi(,15091) 
../texinfo/texinfo.txi(,15092) @item @@anchor@{@var{name}@}
../texinfo/texinfo.txi(,15093) Define @var{name} as the current location for use as a cross-reference
../texinfo/texinfo.txi(,15094) target.  @xref{anchor,, @code{@@anchor}}.
../texinfo/texinfo.txi(,15095) 
../texinfo/texinfo.txi(,15096) @item @@appendix @var{title}
../texinfo/texinfo.txi(,15097) Begin an appendix.  The title appears in the table
../texinfo/texinfo.txi(,15098) of contents of a printed manual.  In Info, the title is
../texinfo/texinfo.txi(,15099) underlined with asterisks.  @xref{unnumbered & appendix, , The
../texinfo/texinfo.txi(,15100) @code{@@unnumbered} and @code{@@appendix} Commands}.@refill
../texinfo/texinfo.txi(,15101) 
../texinfo/texinfo.txi(,15102) @item @@appendixsec @var{title}
../texinfo/texinfo.txi(,15103) @itemx @@appendixsection @var{title}
../texinfo/texinfo.txi(,15104) Begin an appendix section within an appendix.  The section title appears
../texinfo/texinfo.txi(,15105) in the table of contents of a printed manual.  In Info, the title is
../texinfo/texinfo.txi(,15106) underlined with equal signs.  @code{@@appendixsection} is a longer
../texinfo/texinfo.txi(,15107) spelling of the @code{@@appendixsec} command.  @xref{unnumberedsec
../texinfo/texinfo.txi(,15108) appendixsec heading, , Section Commands}.@refill
../texinfo/texinfo.txi(,15109) 
../texinfo/texinfo.txi(,15110) @item @@appendixsubsec @var{title}
../texinfo/texinfo.txi(,15111) Begin an appendix subsection within an appendix.  The title appears
../texinfo/texinfo.txi(,15112) in the table of contents of a printed manual.  In Info, the title is
../texinfo/texinfo.txi(,15113) underlined with hyphens.  @xref{unnumberedsubsec appendixsubsec
../texinfo/texinfo.txi(,15114) subheading, , Subsection Commands}.@refill
../texinfo/texinfo.txi(,15115) 
../texinfo/texinfo.txi(,15116) @item @@appendixsubsubsec @var{title}
../texinfo/texinfo.txi(,15117) Begin an appendix subsubsection within an appendix subsection.  The
../texinfo/texinfo.txi(,15118) title appears in the table of contents of a printed manual.  In Info,
../texinfo/texinfo.txi(,15119) the title is underlined with periods.  @xref{subsubsection,, The
../texinfo/texinfo.txi(,15120) `subsub' Commands}.@refill
../texinfo/texinfo.txi(,15121) 
../texinfo/texinfo.txi(,15122) @item @@asis
../texinfo/texinfo.txi(,15123) Used following @code{@@table}, @code{@@ftable}, and @code{@@vtable} to
../texinfo/texinfo.txi(,15124) print the table's first column without highlighting (``as is'').
../texinfo/texinfo.txi(,15125) @xref{Two-column Tables, , Making a Two-column Table}.@refill
../texinfo/texinfo.txi(,15126) 
../texinfo/texinfo.txi(,15127) @item @@author @var{author}
../texinfo/texinfo.txi(,15128) Typeset @var{author} flushleft and underline it.  @xref{title
../texinfo/texinfo.txi(,15129) subtitle author, , The @code{@@title} and @code{@@author}
../texinfo/texinfo.txi(,15130) Commands}.@refill
../texinfo/texinfo.txi(,15131) 
../texinfo/texinfo.txi(,15132) @item @@b@{@var{text}@}
../texinfo/texinfo.txi(,15133) Print @var{text} in @b{bold} font.  No effect in Info.  @xref{Fonts}.@refill
../texinfo/texinfo.txi(,15134) 
../texinfo/texinfo.txi(,15140) 
../texinfo/texinfo.txi(,15141) @item @@bullet@{@}
../texinfo/texinfo.txi(,15142) Generate a large round dot, or the closest possible
../texinfo/texinfo.txi(,15143) thing to one.  @xref{bullet, , @code{@@bullet}}.@refill
../texinfo/texinfo.txi(,15144) 
../texinfo/texinfo.txi(,15145) @item @@bye
../texinfo/texinfo.txi(,15146) Stop formatting a file.  The formatters do not see the contents of a
../texinfo/texinfo.txi(,15147) file following an @code{@@bye} command.  @xref{Ending a File}.@refill
../texinfo/texinfo.txi(,15148) 
../texinfo/texinfo.txi(,15149) @item @@c @var{comment}
../texinfo/texinfo.txi(,15150) Begin a comment in Texinfo.  The rest of the line does not appear in
../texinfo/texinfo.txi(,15151) either the Info file or the printed manual.  A synonym for
../texinfo/texinfo.txi(,15152) @code{@@comment}.  @xref{Comments, , Comments}.@refill
../texinfo/texinfo.txi(,15153) 
../texinfo/texinfo.txi(,15154) @item @@cartouche
../texinfo/texinfo.txi(,15155) Highlight an example or quotation by drawing a box with rounded
../texinfo/texinfo.txi(,15156) corners around it.  Pair with @code{@@end cartouche}.  No effect in
../texinfo/texinfo.txi(,15157) Info.  @xref{cartouche, , Drawing Cartouches Around Examples}.)@refill
../texinfo/texinfo.txi(,15158) 
../texinfo/texinfo.txi(,15159) @item @@center @var{line-of-text}
../texinfo/texinfo.txi(,15160) Center the line of text following the command.
../texinfo/texinfo.txi(,15161) @xref{titlefont center sp, , @code{@@center}}.@refill
../texinfo/texinfo.txi(,15162) 
../texinfo/texinfo.txi(,15163) @item @@centerchap @var{line-of-text}
../texinfo/texinfo.txi(,15164) Like @code{@@chapter}, but centers the chapter title.  @xref{chapter,,
../texinfo/texinfo.txi(,15165) @code{@@chapter}}.
../texinfo/texinfo.txi(,15166) 
../texinfo/texinfo.txi(,15167) @item @@chapheading @var{title}
../texinfo/texinfo.txi(,15168) Print a chapter-like heading in the text, but not in the table of
../texinfo/texinfo.txi(,15169) contents of a printed manual.  In Info, the title is underlined with
../texinfo/texinfo.txi(,15170) asterisks.  @xref{majorheading & chapheading, , @code{@@majorheading}
../texinfo/texinfo.txi(,15171) and @code{@@chapheading}}.@refill
../texinfo/texinfo.txi(,15172) 
../texinfo/texinfo.txi(,15173) @item @@chapter @var{title}
../texinfo/texinfo.txi(,15174) Begin a chapter.  The chapter title appears in the table of
../texinfo/texinfo.txi(,15175) contents of a printed manual.  In Info, the title is underlined with
../texinfo/texinfo.txi(,15176) asterisks.  @xref{chapter, , @code{@@chapter}}.@refill
../texinfo/texinfo.txi(,15177) 
../texinfo/texinfo.txi(,15178) @item @@cindex @var{entry}
../texinfo/texinfo.txi(,15179) Add @var{entry} to the index of concepts.  @xref{Index Entries, ,
../texinfo/texinfo.txi(,15180) Defining the Entries of an Index}.@refill
../texinfo/texinfo.txi(,15181) 
../texinfo/texinfo.txi(,15182) @item @@cite@{@var{reference}@}
../texinfo/texinfo.txi(,15183) Highlight the name of a book or other reference that lacks a
../texinfo/texinfo.txi(,15184) companion Info file.  @xref{cite, , @code{@@cite}}.@refill
../texinfo/texinfo.txi(,15185) 
../texinfo/texinfo.txi(,15186) @item @@clear @var{flag}
../texinfo/texinfo.txi(,15187) Unset @var{flag}, preventing the Texinfo formatting commands from
../texinfo/texinfo.txi(,15188) formatting text between subsequent pairs of @code{@@ifset @var{flag}}
../texinfo/texinfo.txi(,15189) and @code{@@end ifset} commands, and preventing
../texinfo/texinfo.txi(,15190) @code{@@value@{@var{flag}@}} from expanding to the value to which
../texinfo/texinfo.txi(,15191) @var{flag} is set.
../texinfo/texinfo.txi(,15192) @xref{set clear value, , @code{@@set} @code{@@clear} @code{@@value}}.@refill
../texinfo/texinfo.txi(,15193) 
../texinfo/texinfo.txi(,15194) @item @@code@{@var{sample-code}@}
../texinfo/texinfo.txi(,15195) Highlight text that is an expression, a syntactically complete token
../texinfo/texinfo.txi(,15196) of a program, or a program name.  @xref{code, , @code{@@code}}.@refill
../texinfo/texinfo.txi(,15197) 
../texinfo/texinfo.txi(,15198) @item @@command@{@var{command-name}@}
../texinfo/texinfo.txi(,15199) Indicate a command name, such as @command{ls}.
../texinfo/texinfo.txi(,15200) @xref{command,, @code{@@command}}.
../texinfo/texinfo.txi(,15201) 
../texinfo/texinfo.txi(,15202) @item @@comment @var{comment}
../texinfo/texinfo.txi(,15203) Begin a comment in Texinfo.  The rest of the line does not appear in
../texinfo/texinfo.txi(,15204) either the Info file or the printed manual.  A synonym for @code{@@c}.
../texinfo/texinfo.txi(,15205) @xref{Comments}.
../texinfo/texinfo.txi(,15206) 
../texinfo/texinfo.txi(,15207) @item @@contents
../texinfo/texinfo.txi(,15208) Print a complete table of contents.  Has no effect in Info, which uses
../texinfo/texinfo.txi(,15209) menus instead.  @xref{Contents, , Generating a Table of
../texinfo/texinfo.txi(,15210) Contents}.@refill
../texinfo/texinfo.txi(,15211) 
../texinfo/texinfo.txi(,15212) @item @@copyright@{@}
../texinfo/texinfo.txi(,15213) Generate a copyright symbol.  @xref{copyright symbol, ,
../texinfo/texinfo.txi(,15214) @code{@@copyright}}.@refill
../texinfo/texinfo.txi(,15215) 
../texinfo/texinfo.txi(,15221) 
../texinfo/texinfo.txi(,15222) @item @@defcodeindex @var{index-name}
../texinfo/texinfo.txi(,15223) Define a new index and its indexing command.  Print entries in an
../texinfo/texinfo.txi(,15224) @code{@@code} font.  @xref{New Indices, , Defining New
../texinfo/texinfo.txi(,15225) Indices}.@refill
../texinfo/texinfo.txi(,15226) 
../texinfo/texinfo.txi(,15227) @item @@defcv @var{category} @var{class} @var{name}
../texinfo/texinfo.txi(,15228) @itemx @@defcvx @var{category} @var{class} @var{name}
../texinfo/texinfo.txi(,15229) Format a description for a variable associated with a class in
../texinfo/texinfo.txi(,15230) object-oriented programming.  Takes three arguments: the category of
../texinfo/texinfo.txi(,15231) thing being defined, the class to which it belongs, and its name.
../texinfo/texinfo.txi(,15232) @xref{Definition Commands}, and @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15233) 
../texinfo/texinfo.txi(,15234) @item @@deffn @var{category} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15235) @itemx @@deffnx @var{category} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15236) Format a description for a function, interactive command, or similar
../texinfo/texinfo.txi(,15237) entity that may take arguments.  @code{@@deffn} takes as arguments the
../texinfo/texinfo.txi(,15238) category of entity being described, the name of this particular
../texinfo/texinfo.txi(,15239) entity, and its arguments, if any.  @xref{Definition Commands}.@refill
../texinfo/texinfo.txi(,15240) 
../texinfo/texinfo.txi(,15241) @item @@defindex @var{index-name}
../texinfo/texinfo.txi(,15242) Define a new index and its indexing command.  Print entries in a roman
../texinfo/texinfo.txi(,15243) font.  @xref{New Indices, , Defining New Indices}.@refill
../texinfo/texinfo.txi(,15244) 
../texinfo/texinfo.txi(,15245) @item @@definfoenclose @var{newcmd}, @var{before}, @var{after},
../texinfo/texinfo.txi(,15246) Create new @@-command @var{newcmd} for Info that marks text by enclosing
../texinfo/texinfo.txi(,15247) it in strings that precede and follow the text.  @xref{definfoenclose}.
../texinfo/texinfo.txi(,15248) 
../texinfo/texinfo.txi(,15249) @item @@defivar @var{class} @var{instance-variable-name}
../texinfo/texinfo.txi(,15250) @itemx @@defivarx @var{class} @var{instance-variable-name}
../texinfo/texinfo.txi(,15251) This command formats a description for an instance variable in
../texinfo/texinfo.txi(,15252) object-oriented programming.  The command is equivalent to @samp{@@defcv
../texinfo/texinfo.txi(,15253) @{Instance Variable@} @dots{}}.  @xref{Definition Commands}, and
../texinfo/texinfo.txi(,15254) @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15255) 
../texinfo/texinfo.txi(,15256) @item @@defmac @var{macroname} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15257) @itemx @@defmacx @var{macroname} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15258) Format a description for a macro.  The command is equivalent to
../texinfo/texinfo.txi(,15259) @samp{@@deffn Macro @dots{}}.  @xref{Definition Commands}, and
../texinfo/texinfo.txi(,15260) @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15261) 
../texinfo/texinfo.txi(,15262) @item @@defmethod @var{class} @var{method-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15263) @itemx @@defmethodx @var{class} @var{method-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15264) Format a description for a method in object-oriented programming.  The
../texinfo/texinfo.txi(,15265) command is equivalent to @samp{@@defop Method @dots{}}.  Takes as
../texinfo/texinfo.txi(,15266) arguments the name of the class of the method, the name of the
../texinfo/texinfo.txi(,15267) method, and its arguments, if any.  @xref{Definition Commands}, and
../texinfo/texinfo.txi(,15268) @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15269) 
../texinfo/texinfo.txi(,15270) @item @@defop @var{category} @var{class} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15271) @itemx @@defopx @var{category} @var{class} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15272) Format a description for an operation in object-oriented programming.
../texinfo/texinfo.txi(,15273) @code{@@defop} takes as arguments the overall name of the category of
../texinfo/texinfo.txi(,15274) operation, the name of the class of the operation, the name of the
../texinfo/texinfo.txi(,15275) operation, and its arguments, if any.  @xref{Definition
../texinfo/texinfo.txi(,15276) Commands}, and @ref{Abstract Objects}.
../texinfo/texinfo.txi(,15277) 
../texinfo/texinfo.txi(,15278) @item @@defopt @var{option-name}
../texinfo/texinfo.txi(,15279) @itemx @@defoptx @var{option-name}
../texinfo/texinfo.txi(,15280) Format a description for a user option.  The command is equivalent to
../texinfo/texinfo.txi(,15281) @samp{@@defvr @{User Option@} @dots{}}.  @xref{Definition Commands}, and
../texinfo/texinfo.txi(,15282) @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15283) 
../texinfo/texinfo.txi(,15284) @item @@defspec @var{special-form-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15285) @itemx @@defspecx @var{special-form-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15286) Format a description for a special form.  The command is equivalent to
../texinfo/texinfo.txi(,15287) @samp{@@deffn @{Special Form@} @dots{}}.  @xref{Definition Commands},
../texinfo/texinfo.txi(,15288) and @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15289) 
../texinfo/texinfo.txi(,15290) @item @@deftp @var{category} @var{name-of-type} @var{attributes}@dots{}
../texinfo/texinfo.txi(,15291) @itemx @@deftpx @var{category} @var{name-of-type} @var{attributes}@dots{}
../texinfo/texinfo.txi(,15292) Format a description for a data type.  @code{@@deftp} takes as arguments
../texinfo/texinfo.txi(,15293) the category, the name of the type (which is a word like @samp{int} or
../texinfo/texinfo.txi(,15294) @samp{float}), and then the names of attributes of objects of that type.
../texinfo/texinfo.txi(,15295) @xref{Definition Commands}, and @ref{Data Types}.
../texinfo/texinfo.txi(,15296) 
../texinfo/texinfo.txi(,15297) @item @@deftypefn @var{classification} @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15298) @itemx @@deftypefnx @var{classification} @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15299) Format a description for a function or similar entity that may take
../texinfo/texinfo.txi(,15300) arguments and that is typed.  @code{@@deftypefn} takes as arguments the
../texinfo/texinfo.txi(,15301) classification of entity being described, the type, the name of the
../texinfo/texinfo.txi(,15302) entity, and its arguments, if any.  @xref{Definition Commands}, and
../texinfo/texinfo.txi(,15303) @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15304) 
../texinfo/texinfo.txi(,15305) @item @@deftypefun @var{data-type} @var{function-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15306) @itemx @@deftypefunx @var{data-type} @var{function-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15307) Format a description for a function in a typed language.
../texinfo/texinfo.txi(,15308) The command is equivalent to @samp{@@deftypefn Function @dots{}}.
../texinfo/texinfo.txi(,15309) @xref{Definition Commands}, and @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15310) 
../texinfo/texinfo.txi(,15311) @item @@deftypeivar @var{class} @var{data-type} @var{variable-name}
../texinfo/texinfo.txi(,15312) @itemx @@deftypeivarx @var{class} @var{data-type} @var{variable-name}
../texinfo/texinfo.txi(,15313) Format a description for a typed instance variable in object-oriented
../texinfo/texinfo.txi(,15314) programming. @xref{Definition Commands}, and @ref{Abstract Objects}.
../texinfo/texinfo.txi(,15315) 
../texinfo/texinfo.txi(,15316) @item @@deftypemethod @var{class} @var{data-type} @var{method-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15317) @itemx @@deftypemethodx @var{class} @var{data-type} @var{method-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15318) Format a description for a typed method in object-oriented programming.
../texinfo/texinfo.txi(,15319) @xref{Definition Commands}, and @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15320) 
../texinfo/texinfo.txi(,15321) @item @@deftypeop @var{category} @var{class} @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15322) @itemx @@deftypeopx @var{category} @var{class} @var{data-type} @var{name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15323) Format a description for a typed operation in object-oriented programming.
../texinfo/texinfo.txi(,15324) @xref{Definition Commands}, and @ref{Abstract Objects}.
../texinfo/texinfo.txi(,15325) 
../texinfo/texinfo.txi(,15326) @item @@deftypevar @var{data-type} @var{variable-name}
../texinfo/texinfo.txi(,15327) @itemx @@deftypevarx @var{data-type} @var{variable-name}
../texinfo/texinfo.txi(,15328) Format a description for a variable in a typed language.  The command is
../texinfo/texinfo.txi(,15329) equivalent to @samp{@@deftypevr Variable @dots{}}.  @xref{Definition
../texinfo/texinfo.txi(,15330) Commands}, and @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15331) 
../texinfo/texinfo.txi(,15332) @item @@deftypevr @var{classification} @var{data-type} @var{name}
../texinfo/texinfo.txi(,15333) @itemx @@deftypevrx @var{classification} @var{data-type} @var{name}
../texinfo/texinfo.txi(,15334) Format a description for something like a variable in a typed
../texinfo/texinfo.txi(,15335) language---an entity that records a value.  Takes as arguments the
../texinfo/texinfo.txi(,15336) classification of entity being described, the type, and the name of the
../texinfo/texinfo.txi(,15337) entity.  @xref{Definition Commands}, and @ref{deffnx,, Def Cmds in
../texinfo/texinfo.txi(,15338) Detail}.
../texinfo/texinfo.txi(,15339) 
../texinfo/texinfo.txi(,15340) @item @@defun @var{function-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15341) @itemx @@defunx @var{function-name} @var{arguments}@dots{}
../texinfo/texinfo.txi(,15342) Format a description for functions.  The command is equivalent to
../texinfo/texinfo.txi(,15343) @samp{@@deffn Function @dots{}}.  @xref{Definition Commands}, and
../texinfo/texinfo.txi(,15344) @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15345) 
../texinfo/texinfo.txi(,15346) @item @@defvar @var{variable-name}
../texinfo/texinfo.txi(,15347) @itemx @@defvarx @var{variable-name}
../texinfo/texinfo.txi(,15348) Format a description for variables.  The command is equivalent to
../texinfo/texinfo.txi(,15349) @samp{@@defvr Variable @dots{}}.  @xref{Definition Commands}, and
../texinfo/texinfo.txi(,15350) @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15351) 
../texinfo/texinfo.txi(,15352) @item @@defvr @var{category} @var{name}
../texinfo/texinfo.txi(,15353) @itemx @@defvrx @var{category} @var{name}
../texinfo/texinfo.txi(,15354) Format a description for any kind of variable.  @code{@@defvr} takes
../texinfo/texinfo.txi(,15355) as arguments the category of the entity and the name of the entity.
../texinfo/texinfo.txi(,15356) @xref{Definition Commands},
../texinfo/texinfo.txi(,15357) and @ref{deffnx,, Def Cmds in Detail}.
../texinfo/texinfo.txi(,15358) 
../texinfo/texinfo.txi(,15359) @item @@detailmenu
../texinfo/texinfo.txi(,15360) Avoid @code{makeinfo} confusion stemming from the detailed node listing
../texinfo/texinfo.txi(,15361) in a master menu.  @xref{Master Menu Parts}.
../texinfo/texinfo.txi(,15362) 
../texinfo/texinfo.txi(,15363) @item @@dfn@{@var{term}@}
../texinfo/texinfo.txi(,15364) Highlight the introductory or defining use of a term.
../texinfo/texinfo.txi(,15365) @xref{dfn, , @code{@@dfn}}.@refill
../texinfo/texinfo.txi(,15366) 
../texinfo/texinfo.txi(,15367) @item @@dircategory @var{dirpart}
../texinfo/texinfo.txi(,15368) Specify a part of the Info directory menu where this file's entry should
../texinfo/texinfo.txi(,15369) go.  @xref{Installing Dir Entries}.
../texinfo/texinfo.txi(,15370) 
../texinfo/texinfo.txi(,15371) @item @@direntry
../texinfo/texinfo.txi(,15372) Begin the Info directory menu entry for this file.  Pair with
../texinfo/texinfo.txi(,15373) @code{@@end direntry}.  @xref{Installing Dir Entries}.
../texinfo/texinfo.txi(,15374) 
../texinfo/texinfo.txi(,15375) @item @@display
../texinfo/texinfo.txi(,15376) Begin a kind of example.  Like @code{@@example} (indent text, do not
../texinfo/texinfo.txi(,15377) fill), but do not select a new font.  Pair with @code{@@end display}.
../texinfo/texinfo.txi(,15378) @xref{display, , @code{@@display}}.
../texinfo/texinfo.txi(,15379) 
../texinfo/texinfo.txi(,15380) @item @@dmn@{@var{dimension}@}
../texinfo/texinfo.txi(,15381) Format a unit of measure, as in 12@dmn{pt}.  Causes @TeX{} to insert a
../texinfo/texinfo.txi(,15382) thin space before @var{dimension}.  No effect in Info.
../texinfo/texinfo.txi(,15383) @xref{dmn, , @code{@@dmn}}.
../texinfo/texinfo.txi(,15384) 
../texinfo/texinfo.txi(,15385) @item @@documentdescription
../texinfo/texinfo.txi(,15386) Set the document description text, included in the HTML output.  Pair
../texinfo/texinfo.txi(,15387) with @code{@@end documentdescription}.  @xref{documentdescription,,
../texinfo/texinfo.txi(,15388) @code{@@documentdescription}}.
../texinfo/texinfo.txi(,15389) 
../texinfo/texinfo.txi(,15390) @item @@documentencoding @var{enc}
../texinfo/texinfo.txi(,15391) Declare the input encoding to be @var{enc}.
../texinfo/texinfo.txi(,15392) @xref{documentencoding,, @code{@@documentencoding}}.
../texinfo/texinfo.txi(,15393) 
../texinfo/texinfo.txi(,15394) @item @@documentlanguage @var{CC}
../texinfo/texinfo.txi(,15395) Declare the document language as the two-character ISO-639 abbreviation
../texinfo/texinfo.txi(,15396) @var{CC}.  @xref{documentlanguage,, @code{@@documentlanguage}}.
../texinfo/texinfo.txi(,15397) 
../texinfo/texinfo.txi(,15398) @item @@dotaccent@{@var{c}@}
../texinfo/texinfo.txi(,15399) Generate a dot accent over the character @var{c}, as in @dotaccent{o}.
../texinfo/texinfo.txi(,15400) @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15401) 
../texinfo/texinfo.txi(,15402) @item @@dots@{@}
../texinfo/texinfo.txi(,15403) Insert an ellipsis: @samp{@dots{}}.
../texinfo/texinfo.txi(,15404) @xref{dots, , @code{@@dots}}.@refill
../texinfo/texinfo.txi(,15405) 
../texinfo/texinfo.txi(,15406) @item @@email@{@var{address}[, @var{displayed-text}]@}
../texinfo/texinfo.txi(,15407) Indicate an electronic mail address.
../texinfo/texinfo.txi(,15408) @xref{email, , @code{@@email}}.
../texinfo/texinfo.txi(,15409) 
../texinfo/texinfo.txi(,15410) @item @@emph@{@var{text}@}
../texinfo/texinfo.txi(,15411) Highlight @var{text}; text is displayed in @emph{italics} in printed
../texinfo/texinfo.txi(,15412) output, and surrounded by asterisks in Info.  @xref{Emphasis, ,
../texinfo/texinfo.txi(,15413) Emphasizing Text}.
../texinfo/texinfo.txi(,15414) 
../texinfo/texinfo.txi(,15415) @item @@end @var{environment}
../texinfo/texinfo.txi(,15416) Ends @var{environment}, as in @samp{@@end example}.  @xref{Formatting
../texinfo/texinfo.txi(,15417) Commands,,@@-commands}.
../texinfo/texinfo.txi(,15418) 
../texinfo/texinfo.txi(,15419) @item @@env@{@var{environment-variable}@}
../texinfo/texinfo.txi(,15420) Indicate an environment variable name, such as @env{PATH}.
../texinfo/texinfo.txi(,15421) @xref{env,, @code{@@env}}.
../texinfo/texinfo.txi(,15422) 
../texinfo/texinfo.txi(,15423) @item @@enddots@{@}
../texinfo/texinfo.txi(,15424) Generate an end-of-sentence of ellipsis, like this @enddots{}
../texinfo/texinfo.txi(,15425) @xref{dots,,@code{@@dots@{@}}}.
../texinfo/texinfo.txi(,15426) 
../texinfo/texinfo.txi(,15427) @item @@enumerate [@var{number-or-letter}]
../texinfo/texinfo.txi(,15428) Begin a numbered list, using @code{@@item} for each entry.
../texinfo/texinfo.txi(,15429) Optionally, start list with @var{number-or-letter}.  Pair with
../texinfo/texinfo.txi(,15430) @code{@@end enumerate}.  @xref{enumerate, ,
../texinfo/texinfo.txi(,15431) @code{@@enumerate}}.@refill
../texinfo/texinfo.txi(,15432) 
../texinfo/texinfo.txi(,15433) @item @@equiv@{@}
../texinfo/texinfo.txi(,15434) Indicate to the reader the exact equivalence of two forms with a
../texinfo/texinfo.txi(,15435) glyph: @samp{@equiv{}}.  @xref{Equivalence}.@refill
../texinfo/texinfo.txi(,15436) 
../texinfo/texinfo.txi(,15437) @item @@error@{@}
../texinfo/texinfo.txi(,15438) Indicate to the reader with a glyph that the following text is
../texinfo/texinfo.txi(,15439) an error message: @samp{@error{}}.  @xref{Error Glyph}.@refill
../texinfo/texinfo.txi(,15440) 
../texinfo/texinfo.txi(,15441) @item  @@evenfooting [@var{left}] @@| [@var{center}] @@| [@var{right}]
../texinfo/texinfo.txi(,15442) @itemx @@evenheading [@var{left}] @@| [@var{center}] @@| [@var{right}]
../texinfo/texinfo.txi(,15443) Specify page footings resp.@: headings for even-numbered (left-hand)
../texinfo/texinfo.txi(,15444) pages.  @xref{Custom Headings, ,
../texinfo/texinfo.txi(,15445) How to Make Your Own Headings}.@refill
../texinfo/texinfo.txi(,15446) 
../texinfo/texinfo.txi(,15447) @item @@everyfooting [@var{left}] @@| [@var{center}] @@| [@var{right}]
../texinfo/texinfo.txi(,15448) @itemx @@everyheading [@var{left}] @@| [@var{center}] @@| [@var{right}]
../texinfo/texinfo.txi(,15449) Specify page footings resp.@: headings for every page.  Not relevant to
../texinfo/texinfo.txi(,15450) Info.  @xref{Custom Headings, , How to Make Your Own Headings}.@refill
../texinfo/texinfo.txi(,15451) 
../texinfo/texinfo.txi(,15452) @item @@example
../texinfo/texinfo.txi(,15453) Begin an example.  Indent text, do not fill, and select fixed-width font.
../texinfo/texinfo.txi(,15454) Pair with @code{@@end example}.  @xref{example, ,
../texinfo/texinfo.txi(,15455) @code{@@example}}.@refill
../texinfo/texinfo.txi(,15456) 
../texinfo/texinfo.txi(,15457) @item @@exampleindent @var{indent}
../texinfo/texinfo.txi(,15458) Indent example-like environments by @var{indent} number of spaces
../texinfo/texinfo.txi(,15459) (perhaps 0).  @xref{exampleindent,, Paragraph Indenting}.
../texinfo/texinfo.txi(,15460) 
../texinfo/texinfo.txi(,15461) @item @@exclamdown@{@}
../texinfo/texinfo.txi(,15462) Produce an upside-down exclamation point.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15463) 
../texinfo/texinfo.txi(,15464) @item @@exdent @var{line-of-text}
../texinfo/texinfo.txi(,15465) Remove any indentation a line might have.  @xref{exdent, ,
../texinfo/texinfo.txi(,15466) Undoing the Indentation of a Line}.@refill
../texinfo/texinfo.txi(,15467) 
../texinfo/texinfo.txi(,15468) @item @@expansion@{@}
../texinfo/texinfo.txi(,15469) Indicate the result of a macro expansion to the reader with a special
../texinfo/texinfo.txi(,15470) glyph: @samp{@expansion{}}.
../texinfo/texinfo.txi(,15471) @xref{expansion, , @expansion{} Indicating an Expansion}.@refill
../texinfo/texinfo.txi(,15472) 
../texinfo/texinfo.txi(,15473) @item @@file@{@var{filename}@}
../texinfo/texinfo.txi(,15474) Highlight the name of a file, buffer, node, or directory.  @xref{file, ,
../texinfo/texinfo.txi(,15475) @code{@@file}}.@refill
../texinfo/texinfo.txi(,15476) 
../texinfo/texinfo.txi(,15477) @item @@finalout
../texinfo/texinfo.txi(,15478) Prevent @TeX{} from printing large black warning rectangles beside
../texinfo/texinfo.txi(,15479) over-wide lines.  @xref{Overfull hboxes}.@refill
../texinfo/texinfo.txi(,15480) 
../texinfo/texinfo.txi(,15481) @item @@findex @var{entry}
../texinfo/texinfo.txi(,15482) Add @var{entry} to the index of functions.  @xref{Index Entries, ,
../texinfo/texinfo.txi(,15483) Defining the Entries of an Index}.@refill
../texinfo/texinfo.txi(,15484) 
../texinfo/texinfo.txi(,15485) @item @@flushleft
../texinfo/texinfo.txi(,15486) @itemx @@flushright
../texinfo/texinfo.txi(,15487) Left justify every line but leave the right end ragged.
../texinfo/texinfo.txi(,15488) Leave font as is.  Pair with @code{@@end flushleft}.
../texinfo/texinfo.txi(,15489) @code{@@flushright} analogous.
../texinfo/texinfo.txi(,15490) @xref{flushleft & flushright, , @code{@@flushleft} and
../texinfo/texinfo.txi(,15491) @code{@@flushright}}.@refill
../texinfo/texinfo.txi(,15492) 
../texinfo/texinfo.txi(,15493) @item @@footnote@{@var{text-of-footnote}@}
../texinfo/texinfo.txi(,15494) Enter a footnote.  Footnote text is printed at the bottom of the page
../texinfo/texinfo.txi(,15495) by @TeX{}; Info may format in either `End' node or `Separate' node style.
../texinfo/texinfo.txi(,15496) @xref{Footnotes}.@refill
../texinfo/texinfo.txi(,15497) 
../texinfo/texinfo.txi(,15498) @item @@footnotestyle @var{style}
../texinfo/texinfo.txi(,15499) Specify an Info file's footnote style, either @samp{end} for the end
../texinfo/texinfo.txi(,15500) node style or @samp{separate} for the separate node style.
../texinfo/texinfo.txi(,15501) @xref{Footnotes}.@refill
../texinfo/texinfo.txi(,15502) 
../texinfo/texinfo.txi(,15503) @item @@format
../texinfo/texinfo.txi(,15504) Begin a kind of example.  Like @code{@@display}, but do not narrow the
../texinfo/texinfo.txi(,15505) margins.  Pair with @code{@@end format}.  @xref{example,,
../texinfo/texinfo.txi(,15506) @code{@@example}}.
../texinfo/texinfo.txi(,15507) 
../texinfo/texinfo.txi(,15508) @item @@ftable @var{formatting-command}
../texinfo/texinfo.txi(,15509) Begin a two-column table, using @code{@@item} for each entry.
../texinfo/texinfo.txi(,15510) Automatically enter each of the items in the first column into the
../texinfo/texinfo.txi(,15511) index of functions.  Pair with @code{@@end ftable}.  The same as
../texinfo/texinfo.txi(,15512) @code{@@table}, except for indexing.  @xref{ftable vtable, ,
../texinfo/texinfo.txi(,15513) @code{@@ftable} and @code{@@vtable}}.@refill
../texinfo/texinfo.txi(,15514) 
../texinfo/texinfo.txi(,15515) @item @@group
../texinfo/texinfo.txi(,15516) Hold text together that must appear on one printed page.  Pair with
../texinfo/texinfo.txi(,15517) @code{@@end group}.  Not relevant to Info.  @xref{group, ,
../texinfo/texinfo.txi(,15518) @code{@@group}}.@refill
../texinfo/texinfo.txi(,15519) 
../texinfo/texinfo.txi(,15520) @item @@H@{@var{c}@}
../texinfo/texinfo.txi(,15521) Generate the long Hungarian umlaut accent over @var{c}, as in @H{o}.
../texinfo/texinfo.txi(,15522) 
../texinfo/texinfo.txi(,15523) @item @@heading @var{title}
../texinfo/texinfo.txi(,15524) Print an unnumbered section-like heading in the text, but not in the
../texinfo/texinfo.txi(,15525) table of contents of a printed manual.  In Info, the title is
../texinfo/texinfo.txi(,15526) underlined with equal signs.  @xref{unnumberedsec appendixsec heading,
../texinfo/texinfo.txi(,15527) , Section Commands}.@refill
../texinfo/texinfo.txi(,15528) 
../texinfo/texinfo.txi(,15529) @item @@headings @var{on-off-single-double}
../texinfo/texinfo.txi(,15530) Turn page headings on or off, and/or specify single-sided or double-sided
../texinfo/texinfo.txi(,15531) page headings for printing.  @xref{headings on off, , The
../texinfo/texinfo.txi(,15532) @code{@@headings} Command}.
../texinfo/texinfo.txi(,15533) 
../texinfo/texinfo.txi(,15534) @item @@html
../texinfo/texinfo.txi(,15535) Enter HTML completely.  Pair with @code{@@end html}.  @xref{Raw
../texinfo/texinfo.txi(,15536) Formatter Commands}.
../texinfo/texinfo.txi(,15537) 
../texinfo/texinfo.txi(,15538) @item @@hyphenation@{@var{hy-phen-a-ted words}@}
../texinfo/texinfo.txi(,15539) Explicitly define hyphenation points.  @xref{- and hyphenation,,
../texinfo/texinfo.txi(,15540) @code{@@-} and @code{@@hyphenation}}.
../texinfo/texinfo.txi(,15541) 
../texinfo/texinfo.txi(,15542) @item @@i@{@var{text}@}
../texinfo/texinfo.txi(,15543) Print @var{text} in @i{italic} font.  No effect in Info.  @xref{Fonts}.
../texinfo/texinfo.txi(,15544) 
../texinfo/texinfo.txi(,15545) @item @@ifclear @var{flag}
../texinfo/texinfo.txi(,15546) If @var{flag} is cleared, the Texinfo formatting commands format text
../texinfo/texinfo.txi(,15547) between @code{@@ifclear @var{flag}} and the following @code{@@end
../texinfo/texinfo.txi(,15548) ifclear} command.
../texinfo/texinfo.txi(,15549) @xref{set clear value, , @code{@@set} @code{@@clear} @code{@@value}}.@refill
../texinfo/texinfo.txi(,15550) 
../texinfo/texinfo.txi(,15551) @item @@ifhtml
../texinfo/texinfo.txi(,15552) @itemx @@ifinfo
../texinfo/texinfo.txi(,15553) Begin a stretch of text that will be ignored by @TeX{} when it typesets
../texinfo/texinfo.txi(,15554) the printed manual.  @code{@@ifhtml} text appears only in the HTML
../texinfo/texinfo.txi(,15555) output.  @code{@@ifinfo} output appears in both Info and (for historical
../texinfo/texinfo.txi(,15556) compatibility) plain text output .  Pair with @code{@@end ifhtml}
../texinfo/texinfo.txi(,15557) resp.@: @code{@@end ifinfo}.  @xref{Conditionals}.
../texinfo/texinfo.txi(,15558) 
../texinfo/texinfo.txi(,15559) @item @@ifnothtml
../texinfo/texinfo.txi(,15560) @itemx @@ifnotinfo
../texinfo/texinfo.txi(,15561) @itemx @@ifnotplaintext
../texinfo/texinfo.txi(,15562) @itemx @@ifnottex
../texinfo/texinfo.txi(,15563) Begin a stretch of text that will be ignored in one output format but
../texinfo/texinfo.txi(,15564) not the others.  The text appears in the formats not specified:
../texinfo/texinfo.txi(,15565) @code{@@ifnothtml} text is omitted from html output, etc.  The exception
../texinfo/texinfo.txi(,15566) is @code{@@ifnotinfo} text, which is omitted from plain text output as
../texinfo/texinfo.txi(,15567) well as Info output.  Pair with @code{@@end ifnothtml} resp.@:
../texinfo/texinfo.txi(,15568) @code{@@end ifnotinfo} resp.@: @code{@@end ifnotplaintext} resp.@:
../texinfo/texinfo.txi(,15569) @code{@@end ifnottex}.  @xref{Conditionals}.
../texinfo/texinfo.txi(,15570) 
../texinfo/texinfo.txi(,15571) @item @@ifplaintext
../texinfo/texinfo.txi(,15572) Begin a stretch of text that appears only in the plain text output.
../texinfo/texinfo.txi(,15573) Pair with @code{@@end ifplaintext}.  @xref{Conditionals}.
../texinfo/texinfo.txi(,15574) 
../texinfo/texinfo.txi(,15575) @item @@ifset @var{flag}
../texinfo/texinfo.txi(,15576) If @var{flag} is set, the Texinfo formatting commands format text
../texinfo/texinfo.txi(,15577) between @code{@@ifset @var{flag}} and the following @code{@@end ifset}
../texinfo/texinfo.txi(,15578) command.
../texinfo/texinfo.txi(,15579) @xref{set clear value, , @code{@@set} @code{@@clear} @code{@@value}}.@refill
../texinfo/texinfo.txi(,15580) 
../texinfo/texinfo.txi(,15581) @item @@iftex
../texinfo/texinfo.txi(,15582) Begin a stretch of text that will not appear in the Info file, but
../texinfo/texinfo.txi(,15583) will be processed only by @TeX{}.  Pair with @code{@@end iftex}.
../texinfo/texinfo.txi(,15584) @xref{Conditionals, , Conditionally Visible Text}.@refill
../texinfo/texinfo.txi(,15585) 
../texinfo/texinfo.txi(,15586) @item @@ignore
../texinfo/texinfo.txi(,15587) Begin a stretch of text that will not appear in either the Info file
../texinfo/texinfo.txi(,15588) or the printed output.  Pair with @code{@@end ignore}.
../texinfo/texinfo.txi(,15589) @xref{Comments, , Comments and Ignored Text}.@refill
../texinfo/texinfo.txi(,15590) 
../texinfo/texinfo.txi(,15591) @item @@image@{@var{filename}, [@var{width}], [@var{height}], [@var{alt}], [@var{ext}]@}
../texinfo/texinfo.txi(,15592) Include graphics image in external @var{filename} scaled to the given
../texinfo/texinfo.txi(,15593) @var{width} and/or @var{height}, using @var{alt} text and looking for
../texinfo/texinfo.txi(,15594) @samp{@var{filename}.@var{ext}} in HTML.  @xref{Images}.
../texinfo/texinfo.txi(,15595) 
../texinfo/texinfo.txi(,15596) @item @@include @var{filename}
../texinfo/texinfo.txi(,15597) Incorporate the contents of the file @var{filename} into the Info file
../texinfo/texinfo.txi(,15598) or printed document.  @xref{Include Files}.@refill
../texinfo/texinfo.txi(,15599) 
../texinfo/texinfo.txi(,15600) @item @@inforef@{@var{node-name}, [@var{entry-name}], @var{info-file-name}@}
../texinfo/texinfo.txi(,15601) Make a cross reference to an Info file for which there is no printed
../texinfo/texinfo.txi(,15602) manual.  @xref{inforef, , Cross references using
../texinfo/texinfo.txi(,15603) @code{@@inforef}}.@refill
../texinfo/texinfo.txi(,15604) 
../texinfo/texinfo.txi(,15605) @item \input @var{macro-definitions-file}
../texinfo/texinfo.txi(,15606) Use the specified macro definitions file.  This command is used only
../texinfo/texinfo.txi(,15607) in the first line of a Texinfo file to cause @TeX{} to make use of the
../texinfo/texinfo.txi(,15608) @file{texinfo} macro definitions file.  The backslash in @code{\input}
../texinfo/texinfo.txi(,15609) is used instead of an @code{@@} because @TeX{} does not
../texinfo/texinfo.txi(,15610) recognize @code{@@} until after it has read the definitions file.
../texinfo/texinfo.txi(,15611) @xref{Texinfo File Header}.
../texinfo/texinfo.txi(,15612) 
../texinfo/texinfo.txi(,15613) @item @@item
../texinfo/texinfo.txi(,15614) Indicate the beginning of a marked paragraph for @code{@@itemize} and
../texinfo/texinfo.txi(,15615) @code{@@enumerate}; indicate the beginning of the text of a first column
../texinfo/texinfo.txi(,15616) entry for @code{@@table}, @code{@@ftable}, and @code{@@vtable}.
../texinfo/texinfo.txi(,15617) @xref{Lists and Tables}.@refill
../texinfo/texinfo.txi(,15618) 
../texinfo/texinfo.txi(,15619) @item @@itemize  @var{mark-generating-character-or-command}
../texinfo/texinfo.txi(,15620) Produce a sequence of indented paragraphs, with a mark inside the left
../texinfo/texinfo.txi(,15621) margin at the beginning of each paragraph.  Pair with @code{@@end
../texinfo/texinfo.txi(,15622) itemize}.  @xref{itemize, , @code{@@itemize}}.@refill
../texinfo/texinfo.txi(,15623) 
../texinfo/texinfo.txi(,15624) @item @@itemx
../texinfo/texinfo.txi(,15625) Like @code{@@item} but do not generate extra vertical space above the
../texinfo/texinfo.txi(,15626) item text.  @xref{itemx, , @code{@@itemx}}.@refill
../texinfo/texinfo.txi(,15627) 
../texinfo/texinfo.txi(,15628) @item @@kbd@{@var{keyboard-characters}@}
../texinfo/texinfo.txi(,15629) Indicate text that is characters of input to be typed by
../texinfo/texinfo.txi(,15630) users.  @xref{kbd, , @code{@@kbd}}.@refill
../texinfo/texinfo.txi(,15631) 
../texinfo/texinfo.txi(,15632) @item @@kbdinputstyle @var{style}
../texinfo/texinfo.txi(,15633) Specify when @code{@@kbd} should use a font distinct from @code{@@code}.
../texinfo/texinfo.txi(,15634) @xref{kbd, , @code{@@kbd}}.@refill
../texinfo/texinfo.txi(,15635) 
../texinfo/texinfo.txi(,15636) @item @@key@{@var{key-name}@}
../texinfo/texinfo.txi(,15637) Indicate a name for a key on a keyboard.
../texinfo/texinfo.txi(,15638) @xref{key, , @code{@@key}}.@refill
../texinfo/texinfo.txi(,15639) 
../texinfo/texinfo.txi(,15640) @item @@kindex @var{entry}
../texinfo/texinfo.txi(,15641) Add @var{entry} to the index of keys.
../texinfo/texinfo.txi(,15642) @xref{Index Entries, , Defining the Entries of an Index}.@refill
../texinfo/texinfo.txi(,15643) 
../texinfo/texinfo.txi(,15644) @item @@L@{@}
../texinfo/texinfo.txi(,15645) @itemx @@l@{@}
../texinfo/texinfo.txi(,15646) Generate the uppercase and lowercase Polish suppressed-L letters,
../texinfo/texinfo.txi(,15647) respectively: @L{}, @l{}.
../texinfo/texinfo.txi(,15648) 
../texinfo/texinfo.txi(,15649) @c Possibly this can be tossed now that we have macros.  --karl, 16sep96.
../texinfo/texinfo.txi(,15650) @c Yes, let's toss it, it's pretty weird.  --karl, 15jun97.
../texinfo/texinfo.txi(,15651) @c @item @@global@@let@var{new-command}=@var{existing-command}
../texinfo/texinfo.txi(,15652) @c Equate a new highlighting command with an existing one.  Only for
../texinfo/texinfo.txi(,15653) @c @TeX{}.  Write definition inside of @code{@@iftex} @dots{} @code{@@end
../texinfo/texinfo.txi(,15654) @c iftex}.  @xref{Customized Highlighting}.@refill
../texinfo/texinfo.txi(,15655) 
../texinfo/texinfo.txi(,15656) @item @@lisp
../texinfo/texinfo.txi(,15657) Begin an example of Lisp code.  Indent text, do not fill, and select
../texinfo/texinfo.txi(,15658) fixed-width font.  Pair with @code{@@end lisp}.  @xref{lisp, , @code{@@lisp}}.
../texinfo/texinfo.txi(,15659) 
../texinfo/texinfo.txi(,15660) @item @@lowersections
../texinfo/texinfo.txi(,15661) Change subsequent chapters to sections, sections to subsections, and so
../texinfo/texinfo.txi(,15662) on. @xref{Raise/lower sections, , @code{@@raisesections} and
../texinfo/texinfo.txi(,15663) @code{@@lowersections}}.@refill
../texinfo/texinfo.txi(,15664) 
../texinfo/texinfo.txi(,15665) @item @@macro @var{macroname} @{@var{params}@}
../texinfo/texinfo.txi(,15666) Define a new Texinfo command @code{@@@var{macroname}@{@var{params}@}}.
../texinfo/texinfo.txi(,15667) Only supported by @code{makeinfo} and @code{texi2dvi}.  @xref{Defining
../texinfo/texinfo.txi(,15668) Macros}.
../texinfo/texinfo.txi(,15669) 
../texinfo/texinfo.txi(,15670) @item @@majorheading @var{title}
../texinfo/texinfo.txi(,15671) Print a chapter-like heading in the text, but not in the table of
../texinfo/texinfo.txi(,15672) contents of a printed manual.  Generate more vertical whitespace before
../texinfo/texinfo.txi(,15673) the heading than the @code{@@chapheading} command.  In Info, the chapter
../texinfo/texinfo.txi(,15674) heading line is underlined with asterisks.  @xref{majorheading &
../texinfo/texinfo.txi(,15675) chapheading, , @code{@@majorheading} and @code{@@chapheading}}.@refill
../texinfo/texinfo.txi(,15676) 
../texinfo/texinfo.txi(,15677) @item @@math@{@var{mathematical-expression}@}
../texinfo/texinfo.txi(,15678) Format a mathematical expression.
../texinfo/texinfo.txi(,15679) @xref{math, , @code{@@math}: Inserting Mathematical Expressions}.
../texinfo/texinfo.txi(,15680) 
../texinfo/texinfo.txi(,15681) @item @@menu
../texinfo/texinfo.txi(,15682) Mark the beginning of a menu of nodes in Info.  No effect in a printed
../texinfo/texinfo.txi(,15683) manual.  Pair with @code{@@end menu}.  @xref{Menus}.@refill
../texinfo/texinfo.txi(,15684) 
../texinfo/texinfo.txi(,15685) @item @@minus@{@}
../texinfo/texinfo.txi(,15686) Generate a minus sign, `@minus{}'.  @xref{minus, , @code{@@minus}}.@refill
../texinfo/texinfo.txi(,15687) 
../texinfo/texinfo.txi(,15688) @item @@multitable @var{column-width-spec}
../texinfo/texinfo.txi(,15689) Begin a multi-column table.  Pair with @code{@@end multitable}.
../texinfo/texinfo.txi(,15690) @xref{Multitable Column Widths}.
../texinfo/texinfo.txi(,15691) 
../texinfo/texinfo.txi(,15692) @item @@need @var{n}
../texinfo/texinfo.txi(,15693) Start a new page in a printed manual if fewer than @var{n} mils
../texinfo/texinfo.txi(,15694) (thousandths of an inch) remain on the current page.  @xref{need, ,
../texinfo/texinfo.txi(,15695) @code{@@need}}.@refill
../texinfo/texinfo.txi(,15696) 
../texinfo/texinfo.txi(,15697) @item @@node @var{name}, @var{next}, @var{previous}, @var{up}
../texinfo/texinfo.txi(,15698) Define the beginning of a new node in Info, and serve as a locator for
../texinfo/texinfo.txi(,15699) references for @TeX{}.  @xref{node, , @code{@@node}}.@refill
../texinfo/texinfo.txi(,15700) 
../texinfo/texinfo.txi(,15701) @item @@noindent
../texinfo/texinfo.txi(,15702) Prevent text from being indented as if it were a new paragraph.
../texinfo/texinfo.txi(,15703) @xref{noindent, , @code{@@noindent}}.@refill
../texinfo/texinfo.txi(,15704) 
../texinfo/texinfo.txi(,15705) @item @@novalidate
../texinfo/texinfo.txi(,15706) Suppress validation of node references, omit creation of auxiliary files
../texinfo/texinfo.txi(,15707) with @TeX{}.  Use before @code{@@setfilename}.  @xref{Pointer Validation}.
../texinfo/texinfo.txi(,15708) 
../texinfo/texinfo.txi(,15709) @item @@O@{@}
../texinfo/texinfo.txi(,15710) @itemx @@o@{@}
../texinfo/texinfo.txi(,15711) Generate the uppercase and lowercase O-with-slash letters, respectively:
../texinfo/texinfo.txi(,15712) @O{}, @o{}.
../texinfo/texinfo.txi(,15713) 
../texinfo/texinfo.txi(,15714) @item  @@oddfooting [@var{left}] @@| [@var{center}] @@| [@var{right}]
../texinfo/texinfo.txi(,15715) @itemx @@oddheading [@var{left}] @@| [@var{center}] @@| [@var{right}]
../texinfo/texinfo.txi(,15716) Specify page footings resp.@: headings for odd-numbered (right-hand)
../texinfo/texinfo.txi(,15717) pages.  @xref{Custom Headings, ,
../texinfo/texinfo.txi(,15718) How to Make Your Own Headings}.@refill
../texinfo/texinfo.txi(,15719) 
../texinfo/texinfo.txi(,15720) @item @@OE@{@}
../texinfo/texinfo.txi(,15721) @itemx @@oe@{@}
../texinfo/texinfo.txi(,15722) Generate the uppercase and lowercase OE ligatures, respectively:
../texinfo/texinfo.txi(,15723) @OE{}, @oe{}.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15724) 
../texinfo/texinfo.txi(,15725) @item @@option@{@var{option-name}@}
../texinfo/texinfo.txi(,15726) Indicate a command-line option, such as @option{-l} or @option{--help}.
../texinfo/texinfo.txi(,15727) @xref{option,, @code{@@option}}.
../texinfo/texinfo.txi(,15728) 
../texinfo/texinfo.txi(,15729) @item @@page
../texinfo/texinfo.txi(,15730) Start a new page in a printed manual.  No effect in Info.
../texinfo/texinfo.txi(,15731) @xref{page, , @code{@@page}}.@refill
../texinfo/texinfo.txi(,15732) 
../texinfo/texinfo.txi(,15733) @item @@pagesizes [@var{width}][, @var{height}]
../texinfo/texinfo.txi(,15734) Change page dimensions.  @xref{pagesizes}.
../texinfo/texinfo.txi(,15735) 
../texinfo/texinfo.txi(,15736) @item @@paragraphindent @var{indent}
../texinfo/texinfo.txi(,15737) Indent paragraphs by @var{indent} number of spaces (perhaps 0); preserve
../texinfo/texinfo.txi(,15738) source file indentation if @var{indent} is @code{asis}.
../texinfo/texinfo.txi(,15739) @xref{paragraphindent,, Paragraph Indenting}.
../texinfo/texinfo.txi(,15740) 
../texinfo/texinfo.txi(,15741) @item @@pindex @var{entry}
../texinfo/texinfo.txi(,15742) Add @var{entry} to the index of programs.  @xref{Index Entries, , Defining
../texinfo/texinfo.txi(,15743) the Entries of an Index}.@refill
../texinfo/texinfo.txi(,15744) 
../texinfo/texinfo.txi(,15745) @item @@point@{@}
../texinfo/texinfo.txi(,15746) Indicate the position of point in a buffer to the reader with a
../texinfo/texinfo.txi(,15747) glyph: @samp{@point{}}.  @xref{Point Glyph, , Indicating
../texinfo/texinfo.txi(,15748) Point in a Buffer}.@refill
../texinfo/texinfo.txi(,15749) 
../texinfo/texinfo.txi(,15750) @item @@pounds@{@}
../texinfo/texinfo.txi(,15751) Generate the pounds sterling currency sign.
../texinfo/texinfo.txi(,15752) @xref{pounds,,@code{@@pounds@{@}}}.
../texinfo/texinfo.txi(,15753) 
../texinfo/texinfo.txi(,15754) @item @@print@{@}
../texinfo/texinfo.txi(,15755) Indicate printed output to the reader with a glyph:
../texinfo/texinfo.txi(,15756) @samp{@print{}}.  @xref{Print Glyph}.@refill
../texinfo/texinfo.txi(,15757) 
../texinfo/texinfo.txi(,15758) @item @@printindex @var{index-name}
../texinfo/texinfo.txi(,15759) Print an alphabetized two-column index in a printed manual or generate
../texinfo/texinfo.txi(,15760) an alphabetized menu of index entries for Info.  @xref{Printing
../texinfo/texinfo.txi(,15761) Indices & Menus}.@refill
../texinfo/texinfo.txi(,15762) 
../texinfo/texinfo.txi(,15763) @item @@pxref@{@var{node-name}, [@var{entry}], [@var{topic-or-title}], [@var{info-file}], [@var{manual}]@}
../texinfo/texinfo.txi(,15764) Make a reference that starts with a lower case `see' in a printed
../texinfo/texinfo.txi(,15765) manual.  Use within parentheses only.  Do not follow command with a
../texinfo/texinfo.txi(,15766) punctuation mark---the Info formatting commands automatically insert
../texinfo/texinfo.txi(,15767) terminating punctuation as needed.  Only the first argument is mandatory.
../texinfo/texinfo.txi(,15768) @xref{pxref, , @code{@@pxref}}.@refill
../texinfo/texinfo.txi(,15769) 
../texinfo/texinfo.txi(,15770) @item @@questiondown@{@}
../texinfo/texinfo.txi(,15771) Generate an upside-down question mark.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15772) 
../texinfo/texinfo.txi(,15773) @item @@quotation
../texinfo/texinfo.txi(,15774) Narrow the margins to indicate text that is quoted from another real
../texinfo/texinfo.txi(,15775) or imaginary work.  Write command on a line of its own.  Pair with
../texinfo/texinfo.txi(,15776) @code{@@end quotation}.  @xref{quotation, ,
../texinfo/texinfo.txi(,15777) @code{@@quotation}}.@refill
../texinfo/texinfo.txi(,15778) 
../texinfo/texinfo.txi(,15779) @item @@r@{@var{text}@}
../texinfo/texinfo.txi(,15780) Print @var{text} in @r{roman} font.  No effect in Info.
../texinfo/texinfo.txi(,15781) @xref{Fonts}.@refill
../texinfo/texinfo.txi(,15782) 
../texinfo/texinfo.txi(,15783) @item @@raisesections
../texinfo/texinfo.txi(,15784) Change subsequent sections to chapters, subsections to sections, and so
../texinfo/texinfo.txi(,15785) on.  @xref{Raise/lower sections, , @code{@@raisesections} and
../texinfo/texinfo.txi(,15786) @code{@@lowersections}}.@refill
../texinfo/texinfo.txi(,15787) 
../texinfo/texinfo.txi(,15788) @item @@ref@{@var{node-name}, [@var{entry}], [@var{topic-or-title}], [@var{info-file}], [@var{manual}]@}
../texinfo/texinfo.txi(,15789) Make a reference.  In a printed manual, the reference does not start
../texinfo/texinfo.txi(,15790) with a `See'.  Follow command with a punctuation mark.  Only the first
../texinfo/texinfo.txi(,15791) argument is mandatory.  @xref{ref, , @code{@@ref}}.@refill
../texinfo/texinfo.txi(,15792) 
../texinfo/texinfo.txi(,15793) @item @@refill
../texinfo/texinfo.txi(,15794) In Info, refill and indent the paragraph after all the other processing
../texinfo/texinfo.txi(,15795) has been done.  No effect on @TeX{}, which always refills.  This command
../texinfo/texinfo.txi(,15796) is no longer needed, since all formatters now automatically refill.
../texinfo/texinfo.txi(,15797) @xref{Refilling Paragraphs}.@refill
../texinfo/texinfo.txi(,15798) 
../texinfo/texinfo.txi(,15799) @item @@result@{@}
../texinfo/texinfo.txi(,15800) Indicate the result of an expression to the reader with a special
../texinfo/texinfo.txi(,15801) glyph: @samp{@result{}}.  @xref{result, , @code{@@result}}.@refill
../texinfo/texinfo.txi(,15802) 
../texinfo/texinfo.txi(,15803) @item @@ringaccent@{@var{c}@}
../texinfo/texinfo.txi(,15804) Generate a ring accent over the next character, as in @ringaccent{o}.
../texinfo/texinfo.txi(,15805) @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15806) 
../texinfo/texinfo.txi(,15807) @item @@samp@{@var{text}@}
../texinfo/texinfo.txi(,15808) Highlight @var{text} that is a literal example of a sequence of
../texinfo/texinfo.txi(,15809) characters.  Used for single characters, for statements, and often for
../texinfo/texinfo.txi(,15810) entire shell commands.  @xref{samp, , @code{@@samp}}.@refill
../texinfo/texinfo.txi(,15811) 
../texinfo/texinfo.txi(,15812) @item @@sc@{@var{text}@}
../texinfo/texinfo.txi(,15813) Set @var{text} in a printed output in @sc{the small caps font} and
../texinfo/texinfo.txi(,15814) set text in the Info file in uppercase letters.
../texinfo/texinfo.txi(,15815) @xref{Smallcaps}.@refill
../texinfo/texinfo.txi(,15816) 
../texinfo/texinfo.txi(,15817) @item @@section @var{title}
../texinfo/texinfo.txi(,15818) Begin a section within a chapter.  In a printed manual, the section
../texinfo/texinfo.txi(,15819) title is numbered and appears in the table of contents.  In Info, the
../texinfo/texinfo.txi(,15820) title is underlined with equal signs.  @xref{section, ,
../texinfo/texinfo.txi(,15821) @code{@@section}}.@refill
../texinfo/texinfo.txi(,15822) 
../texinfo/texinfo.txi(,15823) @item @@set @var{flag} [@var{string}]
../texinfo/texinfo.txi(,15824) Make @var{flag} active, causing the Texinfo formatting commands to
../texinfo/texinfo.txi(,15825) format text between subsequent pairs of @code{@@ifset @var{flag}} and
../texinfo/texinfo.txi(,15826) @code{@@end ifset} commands.  Optionally, set value of @var{flag} to
../texinfo/texinfo.txi(,15827) @var{string}.
../texinfo/texinfo.txi(,15828) @xref{set clear value, , @code{@@set} @code{@@clear} @code{@@value}}.
../texinfo/texinfo.txi(,15829) 
../texinfo/texinfo.txi(,15830) @item @@setchapternewpage @var{on-off-odd}
../texinfo/texinfo.txi(,15831) Specify whether chapters start on new pages, and if so, whether on
../texinfo/texinfo.txi(,15832) odd-numbered (right-hand) new pages.  @xref{setchapternewpage, ,
../texinfo/texinfo.txi(,15833) @code{@@setchapternewpage}}.
../texinfo/texinfo.txi(,15834) 
../texinfo/texinfo.txi(,15835) @item @@setcontentsaftertitlepage
../texinfo/texinfo.txi(,15836) Put the table of contents after the @samp{@@end titlepage} even if the
../texinfo/texinfo.txi(,15837) @code{@@contents} command is not there.  @xref{Contents}.
../texinfo/texinfo.txi(,15838) 
../texinfo/texinfo.txi(,15839) @item @@setfilename @var{info-file-name}
../texinfo/texinfo.txi(,15840) Provide a name to be used by the Info file.  This command is essential
../texinfo/texinfo.txi(,15841) for @TeX{} formatting as well, even though it produces no output.
../texinfo/texinfo.txi(,15842) @xref{setfilename, , @code{@@setfilename}}.
../texinfo/texinfo.txi(,15843) 
../texinfo/texinfo.txi(,15844) @item @@setshortcontentsaftertitlepage
../texinfo/texinfo.txi(,15845) Place the short table of contents after the @samp{@@end titlepage}
../texinfo/texinfo.txi(,15846) command even if the @code{@@shortcontents} command is not there.
../texinfo/texinfo.txi(,15847) @xref{Contents}.
../texinfo/texinfo.txi(,15848) 
../texinfo/texinfo.txi(,15849) @item @@settitle @var{title}
../texinfo/texinfo.txi(,15850) Provide a title for page headers in a printed manual, and the default
../texinfo/texinfo.txi(,15851) document description for HTML @samp{<head>}.
../texinfo/texinfo.txi(,15852) @xref{settitle, , @code{@@settitle}}.@refill
../texinfo/texinfo.txi(,15853) 
../texinfo/texinfo.txi(,15854) @item @@shortcontents
../texinfo/texinfo.txi(,15855) Print a short table of contents.  Not relevant to Info, which uses
../texinfo/texinfo.txi(,15856) menus rather than tables of contents.  A synonym for
../texinfo/texinfo.txi(,15857) @code{@@summarycontents}.  @xref{Contents, , Generating a Table of
../texinfo/texinfo.txi(,15858) Contents}.@refill
../texinfo/texinfo.txi(,15859) 
../texinfo/texinfo.txi(,15860) @item @@shorttitlepage @var{title}
../texinfo/texinfo.txi(,15861) Generate a minimal title page.  @xref{titlepage,,@code{@@titlepage}}.
../texinfo/texinfo.txi(,15862) 
../texinfo/texinfo.txi(,15863) @item @@smallbook
../texinfo/texinfo.txi(,15864) Cause @TeX{} to produce a printed manual in a 7 by 9.25 inch format
../texinfo/texinfo.txi(,15865) rather than the regular 8.5 by 11 inch format.  @xref{smallbook, ,
../texinfo/texinfo.txi(,15866) Printing Small Books}.  Also, see @ref{small}.
../texinfo/texinfo.txi(,15867) 
../texinfo/texinfo.txi(,15868) @item @@smalldisplay
../texinfo/texinfo.txi(,15869) Begin a kind of example.  Like @code{@@smallexample} (narrow margins, no
../texinfo/texinfo.txi(,15870) filling), but do not select the fixed-width font.  Pair with @code{@@end
../texinfo/texinfo.txi(,15871) smalldisplay}.  @xref{small}.
../texinfo/texinfo.txi(,15872) 
../texinfo/texinfo.txi(,15873) @item @@smallexample
../texinfo/texinfo.txi(,15874) Indent text to indicate an example.  Do not fill, select fixed-width
../texinfo/texinfo.txi(,15875) font, narrow the margins.  In printed manuals, print text in a smaller
../texinfo/texinfo.txi(,15876) font than with @code{@@example}.  Pair with @code{@@end smallexample}.
../texinfo/texinfo.txi(,15877) @xref{small}.
../texinfo/texinfo.txi(,15878) 
../texinfo/texinfo.txi(,15879) @item @@smallformat
../texinfo/texinfo.txi(,15880) Begin a kind of example.  Like @code{@@smalldisplay}, but do not narrow
../texinfo/texinfo.txi(,15881) the margins.  Pair with @code{@@end smallformat}.  @xref{small}.
../texinfo/texinfo.txi(,15882) 
../texinfo/texinfo.txi(,15883) @item @@smalllisp
../texinfo/texinfo.txi(,15884) Begin an example of Lisp code.  Same as @code{@@smallexample}.  Pair
../texinfo/texinfo.txi(,15885) with @code{@@end smalllisp}.  @xref{small}.
../texinfo/texinfo.txi(,15886) 
../texinfo/texinfo.txi(,15887) @item @@sp @var{n}
../texinfo/texinfo.txi(,15888) Skip @var{n} blank lines.  @xref{sp, , @code{@@sp}}.@refill
../texinfo/texinfo.txi(,15889) 
../texinfo/texinfo.txi(,15890) @item @@ss@{@}
../texinfo/texinfo.txi(,15891) Generate the German sharp-S es-zet letter, @ss{}.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15892) 
../texinfo/texinfo.txi(,15893) @item @@strong @{@var{text}@}
../texinfo/texinfo.txi(,15894) Emphasize @var{text} by typesetting it in a @strong{bold} font for the
../texinfo/texinfo.txi(,15895) printed manual and by surrounding it with asterisks for Info.
../texinfo/texinfo.txi(,15896) @xref{emph & strong, , Emphasizing Text}.@refill
../texinfo/texinfo.txi(,15897) 
../texinfo/texinfo.txi(,15898) @item @@subheading @var{title}
../texinfo/texinfo.txi(,15899) Print an unnumbered subsection-like heading in the text, but not in
../texinfo/texinfo.txi(,15900) the table of contents of a printed manual.  In Info, the title is
../texinfo/texinfo.txi(,15901) underlined with hyphens.  @xref{unnumberedsubsec appendixsubsec
../texinfo/texinfo.txi(,15902) subheading, , @code{@@unnumberedsubsec} @code{@@appendixsubsec}
../texinfo/texinfo.txi(,15903) @code{@@subheading}}.@refill
../texinfo/texinfo.txi(,15904) 
../texinfo/texinfo.txi(,15905) @item @@subsection @var{title}
../texinfo/texinfo.txi(,15906) Begin a subsection within a section.  In a printed manual, the
../texinfo/texinfo.txi(,15907) subsection title is numbered and appears in the table of contents.  In
../texinfo/texinfo.txi(,15908) Info, the title is underlined with hyphens.  @xref{subsection, ,
../texinfo/texinfo.txi(,15909) @code{@@subsection}}.@refill
../texinfo/texinfo.txi(,15910) 
../texinfo/texinfo.txi(,15911) @item @@subsubheading @var{title}
../texinfo/texinfo.txi(,15912) Print an unnumbered subsubsection-like heading in the text, but not in
../texinfo/texinfo.txi(,15913) the table of contents of a printed manual.  In Info, the title is
../texinfo/texinfo.txi(,15914) underlined with periods.  @xref{subsubsection, , The `subsub'
../texinfo/texinfo.txi(,15915) Commands}.@refill
../texinfo/texinfo.txi(,15916) 
../texinfo/texinfo.txi(,15917) @item @@subsubsection @var{title}
../texinfo/texinfo.txi(,15918) Begin a subsubsection within a subsection.  In a printed manual,
../texinfo/texinfo.txi(,15919) the subsubsection title is numbered and appears in the table of
../texinfo/texinfo.txi(,15920) contents.  In Info, the title is underlined with periods.
../texinfo/texinfo.txi(,15921) @xref{subsubsection, , The `subsub' Commands}.@refill
../texinfo/texinfo.txi(,15922) 
../texinfo/texinfo.txi(,15923) @item @@subtitle @var{title}
../texinfo/texinfo.txi(,15924) In a printed manual, set a subtitle in a normal sized font flush to
../texinfo/texinfo.txi(,15925) the right-hand side of the page.  Not relevant to Info, which does not
../texinfo/texinfo.txi(,15926) have title pages.  @xref{title subtitle author, , @code{@@title}
../texinfo/texinfo.txi(,15927) @code{@@subtitle} and @code{@@author} Commands}.@refill
../texinfo/texinfo.txi(,15928) 
../texinfo/texinfo.txi(,15929) @item @@summarycontents
../texinfo/texinfo.txi(,15930) Print a short table of contents.  Not relevant to Info, which uses
../texinfo/texinfo.txi(,15931) menus rather than tables of contents.  A synonym for
../texinfo/texinfo.txi(,15932) @code{@@shortcontents}.  @xref{Contents, , Generating a Table of
../texinfo/texinfo.txi(,15933) Contents}.@refill
../texinfo/texinfo.txi(,15934) 
../texinfo/texinfo.txi(,15935) @item @@syncodeindex @var{from-index} @var{into-index}
../texinfo/texinfo.txi(,15936) Merge the index named in the first argument into the index named in
../texinfo/texinfo.txi(,15937) the second argument, printing the entries from the first index in
../texinfo/texinfo.txi(,15938) @code{@@code} font.  @xref{Combining Indices}.@refill
../texinfo/texinfo.txi(,15939) 
../texinfo/texinfo.txi(,15940) @item @@synindex @var{from-index} @var{into-index}
../texinfo/texinfo.txi(,15941) Merge the index named in the first argument into the index named in
../texinfo/texinfo.txi(,15942) the second argument.  Do not change the font of @var{from-index}
../texinfo/texinfo.txi(,15943) entries.  @xref{Combining Indices}.@refill
../texinfo/texinfo.txi(,15944) 
../texinfo/texinfo.txi(,15945) @item @@t@{@var{text}@}
../texinfo/texinfo.txi(,15946) Print @var{text} in a @t{fixed-width}, typewriter-like font.
../texinfo/texinfo.txi(,15947) No effect in Info.  @xref{Fonts}.@refill
../texinfo/texinfo.txi(,15948) 
../texinfo/texinfo.txi(,15949) @item @@tab
../texinfo/texinfo.txi(,15950) Separate columns in a multitable.  @xref{Multitable Rows}.
../texinfo/texinfo.txi(,15951) 
../texinfo/texinfo.txi(,15952) @item @@table @var{formatting-command}
../texinfo/texinfo.txi(,15953) Begin a two-column table, using @code{@@item} for each entry.  Write
../texinfo/texinfo.txi(,15954) each first column entry on the same line as @code{@@item}.  First
../texinfo/texinfo.txi(,15955) column entries are printed in the font resulting from
../texinfo/texinfo.txi(,15956) @var{formatting-command}.  Pair with @code{@@end table}.
../texinfo/texinfo.txi(,15957) @xref{Two-column Tables, , Making a Two-column Table}.
../texinfo/texinfo.txi(,15958) Also see @ref{ftable vtable, , @code{@@ftable} and @code{@@vtable}},
../texinfo/texinfo.txi(,15959) and @ref{itemx, , @code{@@itemx}}.@refill
../texinfo/texinfo.txi(,15960) 
../texinfo/texinfo.txi(,15961) @item @@TeX@{@}
../texinfo/texinfo.txi(,15962) Insert the logo @TeX{}.  @xref{TeX and copyright, , Inserting @TeX{}
../texinfo/texinfo.txi(,15963) and @copyright{}}.@refill
../texinfo/texinfo.txi(,15964) 
../texinfo/texinfo.txi(,15965) @item @@tex
../texinfo/texinfo.txi(,15966) Enter @TeX{} completely.  Pair with @code{@@end tex}.  @xref{Raw
../texinfo/texinfo.txi(,15967) Formatter Commands}.
../texinfo/texinfo.txi(,15968) 
../texinfo/texinfo.txi(,15969) @item @@thischapter
../texinfo/texinfo.txi(,15970) @itemx @@thischaptername
../texinfo/texinfo.txi(,15971) @itemx @@thisfile
../texinfo/texinfo.txi(,15972) @itemx @@thispage
../texinfo/texinfo.txi(,15973) @itemx @@thistitle
../texinfo/texinfo.txi(,15974) Only allowed in a heading or footing.  Stands for the number and name of
../texinfo/texinfo.txi(,15975) the current chapter (in the format `Chapter 1: Title'), the chapter name
../texinfo/texinfo.txi(,15976) only, the filename, the current page number, and the title of the
../texinfo/texinfo.txi(,15977) document, respectively.  @xref{Custom Headings, , How to Make Your Own
../texinfo/texinfo.txi(,15978) Headings}.@refill
../texinfo/texinfo.txi(,15979) 
../texinfo/texinfo.txi(,15980) @item @@tieaccent@{@var{cc}@}
../texinfo/texinfo.txi(,15981) Generate a tie-after accent over the next two characters @var{cc}, as in
../texinfo/texinfo.txi(,15982) `@tieaccent{oo}'.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,15983) 
../texinfo/texinfo.txi(,15984) @item @@tindex @var{entry}
../texinfo/texinfo.txi(,15985) Add @var{entry} to the index of data types.  @xref{Index Entries, ,
../texinfo/texinfo.txi(,15986) Defining the Entries of an Index}.@refill
../texinfo/texinfo.txi(,15987) 
../texinfo/texinfo.txi(,15988) @item @@title @var{title}
../texinfo/texinfo.txi(,15989) In a printed manual, set a title flush to the left-hand side of the
../texinfo/texinfo.txi(,15990) page in a larger than normal font and underline it with a black rule.
../texinfo/texinfo.txi(,15991) Not relevant to Info, which does not have title pages.  @xref{title
../texinfo/texinfo.txi(,15992) subtitle author, , The @code{@@title} @code{@@subtitle} and
../texinfo/texinfo.txi(,15993) @code{@@author} Commands}.@refill
../texinfo/texinfo.txi(,15994) 
../texinfo/texinfo.txi(,15995) @item @@titlefont@{@var{text}@}
../texinfo/texinfo.txi(,15996) In a printed manual, print @var{text} in a larger than normal font.
../texinfo/texinfo.txi(,15997) Not relevant to Info, which does not have title pages.
../texinfo/texinfo.txi(,15998) @xref{titlefont center sp, , The @code{@@titlefont} @code{@@center}
../texinfo/texinfo.txi(,15999) and @code{@@sp} Commands}.@refill
../texinfo/texinfo.txi(,16000) 
../texinfo/texinfo.txi(,16001) @item @@titlepage
../texinfo/texinfo.txi(,16002) Indicate to Texinfo the beginning of the title page.  Write command on
../texinfo/texinfo.txi(,16003) a line of its own.  Pair with @code{@@end titlepage}.  Nothing between
../texinfo/texinfo.txi(,16004) @code{@@titlepage} and @code{@@end titlepage} appears in Info.
../texinfo/texinfo.txi(,16005) @xref{titlepage, , @code{@@titlepage}}.@refill
../texinfo/texinfo.txi(,16006) 
../texinfo/texinfo.txi(,16007) @item @@today@{@}
../texinfo/texinfo.txi(,16008) Insert the current date, in `1 Jan 1900' style.  @xref{Custom
../texinfo/texinfo.txi(,16009) Headings, , How to Make Your Own Headings}.@refill
../texinfo/texinfo.txi(,16010) 
../texinfo/texinfo.txi(,16011) @item @@top @var{title}
../texinfo/texinfo.txi(,16012) In a Texinfo file to be formatted with @code{makeinfo}, identify the
../texinfo/texinfo.txi(,16013) topmost @code{@@node} in the file, which must be written on the line
../texinfo/texinfo.txi(,16014) immediately preceding the @code{@@top} command.  Used for
../texinfo/texinfo.txi(,16015) @code{makeinfo}'s node pointer insertion feature.  The title is
../texinfo/texinfo.txi(,16016) underlined with asterisks.  Both the @code{@@node} line and the @code{@@top}
../texinfo/texinfo.txi(,16017) line normally should be enclosed by @code{@@ifnottex} and @code{@@end
../texinfo/texinfo.txi(,16018) ifnottex}.  In @TeX{} and @code{texinfo-format-buffer}, the @code{@@top}
../texinfo/texinfo.txi(,16019) command is merely a synonym for @code{@@unnumbered}.  @xref{makeinfo
../texinfo/texinfo.txi(,16020) Pointer Creation, , Creating Pointers with @code{makeinfo}}.
../texinfo/texinfo.txi(,16021) 
../texinfo/texinfo.txi(,16022) @item @@u@{@var{c}@}
../texinfo/texinfo.txi(,16023) @itemx @@ubaraccent@{@var{c}@}
../texinfo/texinfo.txi(,16024) @itemx @@udotaccent@{@var{c}@}
../texinfo/texinfo.txi(,16025) Generate a breve, underbar, or underdot accent, respectively, over or
../texinfo/texinfo.txi(,16026) under the character @var{c}, as in @u{o}, @ubaraccent{o},
../texinfo/texinfo.txi(,16027) @udotaccent{o}.  @xref{Inserting Accents}.
../texinfo/texinfo.txi(,16028) 
../texinfo/texinfo.txi(,16029) @item @@unnumbered @var{title}
../texinfo/texinfo.txi(,16030) In a printed manual, begin a chapter that appears without chapter
../texinfo/texinfo.txi(,16031) numbers of any kind.  The title appears in the table of contents of a
../texinfo/texinfo.txi(,16032) printed manual.  In Info, the title is underlined with asterisks.
../texinfo/texinfo.txi(,16033) @xref{unnumbered & appendix, , @code{@@unnumbered} and
../texinfo/texinfo.txi(,16034) @code{@@appendix}}.@refill
../texinfo/texinfo.txi(,16035) 
../texinfo/texinfo.txi(,16036) @item @@unnumberedsec @var{title}
../texinfo/texinfo.txi(,16037) In a printed manual, begin a section that appears without section
../texinfo/texinfo.txi(,16038) numbers of any kind.  The title appears in the table of contents of a
../texinfo/texinfo.txi(,16039) printed manual.  In Info, the title is underlined with equal signs.
../texinfo/texinfo.txi(,16040) @xref{unnumberedsec appendixsec heading, , Section Commands}.@refill
../texinfo/texinfo.txi(,16041) 
../texinfo/texinfo.txi(,16042) @item @@unnumberedsubsec @var{title}
../texinfo/texinfo.txi(,16043) In a printed manual, begin an unnumbered subsection within a
../texinfo/texinfo.txi(,16044) chapter.  The title appears in the table of contents of a printed
../texinfo/texinfo.txi(,16045) manual.  In Info, the title is underlined with hyphens.
../texinfo/texinfo.txi(,16046) @xref{unnumberedsubsec appendixsubsec subheading, ,
../texinfo/texinfo.txi(,16047) @code{@@unnumberedsubsec} @code{@@appendixsubsec}
../texinfo/texinfo.txi(,16048) @code{@@subheading}}.@refill
../texinfo/texinfo.txi(,16049) 
../texinfo/texinfo.txi(,16050) @item @@unnumberedsubsubsec @var{title}
../texinfo/texinfo.txi(,16051) In a printed manual, begin an unnumbered subsubsection within a
../texinfo/texinfo.txi(,16052) chapter.  The title appears in the table of contents of a printed
../texinfo/texinfo.txi(,16053) manual.  In Info, the title is underlined with periods.
../texinfo/texinfo.txi(,16054) @xref{subsubsection, , The `subsub' Commands}.@refill
../texinfo/texinfo.txi(,16055) 
../texinfo/texinfo.txi(,16056) @item @@uref@{@var{url}[, @var{displayed-text}][, @var{replacement}@}
../texinfo/texinfo.txi(,16057) Define a cross reference to an external uniform resource locator for the
../texinfo/texinfo.txi(,16058) World Wide Web.  @xref{uref, , @code{@@uref}}.@refill
../texinfo/texinfo.txi(,16059) 
../texinfo/texinfo.txi(,16060) @item @@url@{@var{url}@}
../texinfo/texinfo.txi(,16061) Indicate text that is a uniform resource locator for the World Wide
../texinfo/texinfo.txi(,16062) Web.  @xref{url, , @code{@@url}}.@refill
../texinfo/texinfo.txi(,16063) 
../texinfo/texinfo.txi(,16064) @item @@v@{@var{c}@}
../texinfo/texinfo.txi(,16065) Generate check accent over the character @var{c}, as in @v{o}.
../texinfo/texinfo.txi(,16066) @xref{Inserting Accents}.
../texinfo/texinfo.txi(,16067) 
../texinfo/texinfo.txi(,16068) @item @@value@{@var{flag}@}
../texinfo/texinfo.txi(,16069) Replace @var{flag} with the value to which it is set by @code{@@set
../texinfo/texinfo.txi(,16070) @var{flag}}.
../texinfo/texinfo.txi(,16071) @xref{set clear value, , @code{@@set} @code{@@clear} @code{@@value}}.@refill
../texinfo/texinfo.txi(,16072) 
../texinfo/texinfo.txi(,16073) @item @@var@{@var{metasyntactic-variable}@}
../texinfo/texinfo.txi(,16074) Highlight a metasyntactic variable, which is something that stands for
../texinfo/texinfo.txi(,16075) another piece of text.  @xref{var, , Indicating Metasyntactic
../texinfo/texinfo.txi(,16076) Variables}.@refill
../texinfo/texinfo.txi(,16077) 
../texinfo/texinfo.txi(,16078) @item @@verb@{@var{delim} @var{literal} @var{delim}@}
../texinfo/texinfo.txi(,16079) Output @var{literal}, delimited by the single character @var{delim},
../texinfo/texinfo.txi(,16080) exactly as is (in the fixed-width font), including any whitespace or
../texinfo/texinfo.txi(,16081) Texinfo special characters.  @xref{verb,,@code{verb}}.
../texinfo/texinfo.txi(,16082) 
../texinfo/texinfo.txi(,16083) @item @@verbatim
../texinfo/texinfo.txi(,16084) Output the text of the environment exactly as is (in the fixed-width
../texinfo/texinfo.txi(,16085) font).  Pair with @code{@@end verbatim}.  @xref{verbatim,,@code{verbatim}}.
../texinfo/texinfo.txi(,16086) 
../texinfo/texinfo.txi(,16087) @item @@verbatiminclude @var{filename}
../texinfo/texinfo.txi(,16088) Output the contents of @var{filename} exactly as is (in the fixed-width font).
../texinfo/texinfo.txi(,16089) @xref{verbatiminclude,,@code{verbatiminclude}}.
../texinfo/texinfo.txi(,16090) 
../texinfo/texinfo.txi(,16091) @item @@vindex @var{entry}
../texinfo/texinfo.txi(,16092) Add @var{entry} to the index of variables.  @xref{Index Entries, ,
../texinfo/texinfo.txi(,16093) Defining the Entries of an Index}.@refill
../texinfo/texinfo.txi(,16094) 
../texinfo/texinfo.txi(,16095) @item @@vskip @var{amount}
../texinfo/texinfo.txi(,16096) In a printed manual, insert whitespace so as to push text on the
../texinfo/texinfo.txi(,16097) remainder of the page towards the bottom of the page.  Used in
../texinfo/texinfo.txi(,16098) formatting the copyright page with the argument @samp{0pt plus
../texinfo/texinfo.txi(,16099) 1filll}.  (Note spelling of @samp{filll}.)  @code{@@vskip} may be used
../texinfo/texinfo.txi(,16100) only in contexts ignored for Info.  @xref{Copyright}.
../texinfo/texinfo.txi(,16101) 
../texinfo/texinfo.txi(,16102) @item @@vtable @var{formatting-command}
../texinfo/texinfo.txi(,16103) Begin a two-column table, using @code{@@item} for each entry.
../texinfo/texinfo.txi(,16104) Automatically enter each of the items in the first column into the
../texinfo/texinfo.txi(,16105) index of variables.  Pair with @code{@@end vtable}.  The same as
../texinfo/texinfo.txi(,16106) @code{@@table}, except for indexing.  @xref{ftable vtable, ,
../texinfo/texinfo.txi(,16107) @code{@@ftable} and @code{@@vtable}}.@refill
../texinfo/texinfo.txi(,16108) 
../texinfo/texinfo.txi(,16109) @item @@w@{@var{text}@}
../texinfo/texinfo.txi(,16110) Prevent @var{text} from being split across two lines.  Do not end a
../texinfo/texinfo.txi(,16111) paragraph that uses @code{@@w} with an @code{@@refill} command.
../texinfo/texinfo.txi(,16112) @xref{w, , @code{@@w}}.@refill
../texinfo/texinfo.txi(,16113) 
../texinfo/texinfo.txi(,16114) @item @@xref@{@var{node-name}, [@var{entry}], [@var{topic-or-title}], [@var{info-file}], [@var{manual}]@}
../texinfo/texinfo.txi(,16115) Make a reference that starts with `See' in a printed manual.  Follow
../texinfo/texinfo.txi(,16116) command with a punctuation mark.  Only the first argument is
../texinfo/texinfo.txi(,16117) mandatory.  @xref{xref, , @code{@@xref}}.@refill
../texinfo/texinfo.txi(,16118) @end table
../texinfo/texinfo.txi(,16119) 
../texinfo/texinfo.txi(,16120) 
../texinfo/texinfo.txi(,16121) @node Tips
../texinfo/texinfo.txi(,16122) @appendix Tips and Hints
../texinfo/texinfo.txi(,16123) 
../texinfo/texinfo.txi(,16124) Here are some tips for writing Texinfo documentation:@refill
../texinfo/texinfo.txi(,16125) 
../texinfo/texinfo.txi(,16126) @cindex Tips
../texinfo/texinfo.txi(,16127) @cindex Usage tips
../texinfo/texinfo.txi(,16128) @cindex Hints
../texinfo/texinfo.txi(,16129) @itemize @bullet
../texinfo/texinfo.txi(,16130) @item
../texinfo/texinfo.txi(,16131) Write in the present tense, not in the past or the future.
../texinfo/texinfo.txi(,16132) 
../texinfo/texinfo.txi(,16133) @item
../texinfo/texinfo.txi(,16134) Write actively!  For example, write ``We recommend that @dots{}'' rather
../texinfo/texinfo.txi(,16135) than ``It is recommended that @dots{}''.
../texinfo/texinfo.txi(,16136) 
../texinfo/texinfo.txi(,16137) @item
../texinfo/texinfo.txi(,16138) Use 70 or 72 as your fill column.  Longer lines are hard to read.
../texinfo/texinfo.txi(,16139) 
../texinfo/texinfo.txi(,16140) @item
../texinfo/texinfo.txi(,16141) Include a copyright notice and copying permissions.
../texinfo/texinfo.txi(,16142) @end itemize
../texinfo/texinfo.txi(,16143) 
../texinfo/texinfo.txi(,16144) @subsubheading Index, Index, Index!
../texinfo/texinfo.txi(,16145) 
../texinfo/texinfo.txi(,16146) Write many index entries, in different ways.
../texinfo/texinfo.txi(,16147) Readers like indices; they are helpful and convenient.
../texinfo/texinfo.txi(,16148) 
../texinfo/texinfo.txi(,16149) Although it is easiest to write index entries as you write the body of
../texinfo/texinfo.txi(,16150) the text, some people prefer to write entries afterwards.  In either
../texinfo/texinfo.txi(,16151) case, write an entry before the paragraph to which it applies.  This
../texinfo/texinfo.txi(,16152) way, an index entry points to the first page of a paragraph that is
../texinfo/texinfo.txi(,16153) split across pages.
../texinfo/texinfo.txi(,16154) 
../texinfo/texinfo.txi(,16155) Here are more hints we have found valuable:
../texinfo/texinfo.txi(,16156) 
../texinfo/texinfo.txi(,16157) @itemize @bullet
../texinfo/texinfo.txi(,16158) @item
../texinfo/texinfo.txi(,16159) Write each index entry differently, so each entry refers to a different
../texinfo/texinfo.txi(,16160) place in the document.
../texinfo/texinfo.txi(,16161) 
../texinfo/texinfo.txi(,16162) @item
../texinfo/texinfo.txi(,16163) Write index entries only where a topic is discussed significantly.  For
../texinfo/texinfo.txi(,16164) example, it is not useful to index ``debugging information'' in a
../texinfo/texinfo.txi(,16165) chapter on reporting bugs.  Someone who wants to know about debugging
../texinfo/texinfo.txi(,16166) information will certainly not find it in that chapter.
../texinfo/texinfo.txi(,16167) 
../texinfo/texinfo.txi(,16168) @item
../texinfo/texinfo.txi(,16169) Consistently capitalize the first word of every concept index entry,
../texinfo/texinfo.txi(,16170) or else consistently use lower case.  Terse entries often call for
../texinfo/texinfo.txi(,16171) lower case; longer entries for capitalization.  Whichever case
../texinfo/texinfo.txi(,16172) convention you use, please use one or the other consistently!  Mixing
../texinfo/texinfo.txi(,16173) the two styles looks bad.
../texinfo/texinfo.txi(,16174) 
../texinfo/texinfo.txi(,16175) @item
../texinfo/texinfo.txi(,16176) Always capitalize or use upper case for those words in an index for
../texinfo/texinfo.txi(,16177) which this is proper, such as names of countries or acronyms.  Always
../texinfo/texinfo.txi(,16178) use the appropriate case for case-sensitive names, such as those in C or
../texinfo/texinfo.txi(,16179) Lisp.
../texinfo/texinfo.txi(,16180) 
../texinfo/texinfo.txi(,16181) @item
../texinfo/texinfo.txi(,16182) Write the indexing commands that refer to a whole section immediately
../texinfo/texinfo.txi(,16183) after the section command, and write the indexing commands that refer to
../texinfo/texinfo.txi(,16184) a paragraph before that paragraph.
../texinfo/texinfo.txi(,16185) 
../texinfo/texinfo.txi(,16186) In the example that follows, a blank line comes after the index
../texinfo/texinfo.txi(,16187) entry for ``Leaping'':
../texinfo/texinfo.txi(,16188) 
../texinfo/texinfo.txi(,16189) @example
../texinfo/texinfo.txi(,16190) @group
../texinfo/texinfo.txi(,16191) @@section The Dog and the Fox
../texinfo/texinfo.txi(,16192) @@cindex Jumping, in general
../texinfo/texinfo.txi(,16193) @@cindex Leaping
../texinfo/texinfo.txi(,16194) 
../texinfo/texinfo.txi(,16195) @@cindex Dog, lazy, jumped over
../texinfo/texinfo.txi(,16196) @@cindex Lazy dog jumped over
../texinfo/texinfo.txi(,16197) @@cindex Fox, jumps over dog
../texinfo/texinfo.txi(,16198) @@cindex Quick fox jumps over dog
../texinfo/texinfo.txi(,16199) The quick brown fox jumps over the lazy dog.
../texinfo/texinfo.txi(,16200) @end group
../texinfo/texinfo.txi(,16201) @end example
../texinfo/texinfo.txi(,16202) 
../texinfo/texinfo.txi(,16203) @noindent
../texinfo/texinfo.txi(,16204) (Note that the example shows entries for the same concept that are
../texinfo/texinfo.txi(,16205) written in different ways---@samp{Lazy dog}, and @samp{Dog, lazy}---so
../texinfo/texinfo.txi(,16206) readers can look up the concept in different ways.)
../texinfo/texinfo.txi(,16207) @end itemize
../texinfo/texinfo.txi(,16208) 
../texinfo/texinfo.txi(,16209) @subsubheading Blank Lines
../texinfo/texinfo.txi(,16210) 
../texinfo/texinfo.txi(,16211) @itemize @bullet
../texinfo/texinfo.txi(,16212) @item
../texinfo/texinfo.txi(,16213) Insert a blank line between a sectioning command and the first following
../texinfo/texinfo.txi(,16214) sentence or paragraph, or between the indexing commands associated with
../texinfo/texinfo.txi(,16215) the sectioning command and the first following sentence or paragraph, as
../texinfo/texinfo.txi(,16216) shown in the tip on indexing.  Otherwise, a formatter may fold title and
../texinfo/texinfo.txi(,16217) paragraph together.
../texinfo/texinfo.txi(,16218) 
../texinfo/texinfo.txi(,16219) @item
../texinfo/texinfo.txi(,16220) Always insert a blank line before an @code{@@table} command and after an
../texinfo/texinfo.txi(,16221) @code{@@end table} command; but never insert a blank line after an
../texinfo/texinfo.txi(,16222) @code{@@table} command or before an @code{@@end table} command.
../texinfo/texinfo.txi(,16223) 
../texinfo/texinfo.txi(,16224) @need 1000
../texinfo/texinfo.txi(,16225) For example,
../texinfo/texinfo.txi(,16226) 
../texinfo/texinfo.txi(,16227) @example
../texinfo/texinfo.txi(,16228) @group
../texinfo/texinfo.txi(,16229) Types of fox:
../texinfo/texinfo.txi(,16230) 
../texinfo/texinfo.txi(,16231) @@table @@samp
../texinfo/texinfo.txi(,16232) @@item Quick
../texinfo/texinfo.txi(,16233) Jump over lazy dogs.
../texinfo/texinfo.txi(,16234) @end group
../texinfo/texinfo.txi(,16235) 
../texinfo/texinfo.txi(,16236) @group
../texinfo/texinfo.txi(,16237) @@item Brown
../texinfo/texinfo.txi(,16238) Also jump over lazy dogs.
../texinfo/texinfo.txi(,16239) @@end table
../texinfo/texinfo.txi(,16240) 
../texinfo/texinfo.txi(,16241) @end group
../texinfo/texinfo.txi(,16242) @group
../texinfo/texinfo.txi(,16243) @@noindent
../texinfo/texinfo.txi(,16244) On the other hand, @dots{}
../texinfo/texinfo.txi(,16245) @end group
../texinfo/texinfo.txi(,16246) @end example
../texinfo/texinfo.txi(,16247) 
../texinfo/texinfo.txi(,16248) Insert blank lines before and after @code{@@itemize} @dots{} @code{@@end
../texinfo/texinfo.txi(,16249) itemize} and @code{@@enumerate} @dots{} @code{@@end enumerate} in the
../texinfo/texinfo.txi(,16250) same way.
../texinfo/texinfo.txi(,16251) @end itemize
../texinfo/texinfo.txi(,16252) 
../texinfo/texinfo.txi(,16253) @subsubheading Complete Phrases
../texinfo/texinfo.txi(,16254) 
../texinfo/texinfo.txi(,16255) Complete phrases are easier to read than @dots{}
../texinfo/texinfo.txi(,16256) 
../texinfo/texinfo.txi(,16257) @itemize @bullet
../texinfo/texinfo.txi(,16258) @item
../texinfo/texinfo.txi(,16259) Write entries in an itemized list as complete sentences; or at least, as
../texinfo/texinfo.txi(,16260) complete phrases.  Incomplete expressions @dots{} awkward @dots{} like
../texinfo/texinfo.txi(,16261) this.
../texinfo/texinfo.txi(,16262) 
../texinfo/texinfo.txi(,16263) @item
../texinfo/texinfo.txi(,16264) Write the prefatory sentence or phrase for a multi-item list or table as
../texinfo/texinfo.txi(,16265) a complete expression.  Do not write ``You can set:''; instead, write
../texinfo/texinfo.txi(,16266) ``You can set these variables:''.  The former expression sounds cut off.
../texinfo/texinfo.txi(,16267) @end itemize
../texinfo/texinfo.txi(,16268) 
../texinfo/texinfo.txi(,16269) @subsubheading Editions, Dates and Versions
../texinfo/texinfo.txi(,16270) 
../texinfo/texinfo.txi(,16271) Include edition numbers, version numbers, and dates in the
../texinfo/texinfo.txi(,16272) @code{@@copying} text (for people reading the Texinfo file, and for the
../texinfo/texinfo.txi(,16273) legal copyright in the output files).  Then use @code{@@insertcopying}
../texinfo/texinfo.txi(,16274) in the @code{@@titlepage} section (for people reading the printed
../texinfo/texinfo.txi(,16275) output) and the Top node (for people reading the online output).
../texinfo/texinfo.txi(,16276) 
../texinfo/texinfo.txi(,16277) It is easiest to do this using @code{@@set} and @code{@@value}.
../texinfo/texinfo.txi(,16278) @xref{value Example, , @code{@@value} Example}, and @ref{GNU Sample Texts}.
../texinfo/texinfo.txi(,16279) 
../texinfo/texinfo.txi(,16280) 
../texinfo/texinfo.txi(,16281) @subsubheading Definition Commands
../texinfo/texinfo.txi(,16282) 
../texinfo/texinfo.txi(,16283) Definition commands are @code{@@deffn}, @code{@@defun},
../texinfo/texinfo.txi(,16284) @code{@@defmac}, and the like, and enable you to write descriptions in
../texinfo/texinfo.txi(,16285) a uniform format.@refill
../texinfo/texinfo.txi(,16286) 
../texinfo/texinfo.txi(,16287) @itemize @bullet
../texinfo/texinfo.txi(,16288) @item
../texinfo/texinfo.txi(,16289) Write just one definition command for each entity you define with a
../texinfo/texinfo.txi(,16290) definition command.  The automatic indexing feature creates an index
../texinfo/texinfo.txi(,16291) entry that leads the reader to the definition.
../texinfo/texinfo.txi(,16292) 
../texinfo/texinfo.txi(,16293) @item
../texinfo/texinfo.txi(,16294) Use @code{@@table} @dots{} @code{@@end table} in an appendix that
../texinfo/texinfo.txi(,16295) contains a summary of functions, not @code{@@deffn} or other definition
../texinfo/texinfo.txi(,16296) commands.
../texinfo/texinfo.txi(,16297) @end itemize
../texinfo/texinfo.txi(,16298) 
../texinfo/texinfo.txi(,16299) @subsubheading Capitalization
../texinfo/texinfo.txi(,16300) 
../texinfo/texinfo.txi(,16301) @itemize @bullet
../texinfo/texinfo.txi(,16302) @item
../texinfo/texinfo.txi(,16303) Capitalize ``Texinfo''; it is a name.  Do not write the @samp{x} or
../texinfo/texinfo.txi(,16304) @samp{i} in upper case.
../texinfo/texinfo.txi(,16305) 
../texinfo/texinfo.txi(,16306) @item
../texinfo/texinfo.txi(,16307) Capitalize ``Info''; it is a name.
../texinfo/texinfo.txi(,16308) 
../texinfo/texinfo.txi(,16309) @item
../texinfo/texinfo.txi(,16310) Write @TeX{} using the @code{@@TeX@{@}} command.  Note the uppercase
../texinfo/texinfo.txi(,16311) @samp{T} and @samp{X}.  This command causes the formatters to
../texinfo/texinfo.txi(,16312) typeset the name according to the wishes of Donald Knuth, who wrote
../texinfo/texinfo.txi(,16313) @TeX{}.
../texinfo/texinfo.txi(,16314) @end itemize
../texinfo/texinfo.txi(,16315) 
../texinfo/texinfo.txi(,16316) @subsubheading Spaces
../texinfo/texinfo.txi(,16317) 
../texinfo/texinfo.txi(,16318) Do not use spaces to format a Texinfo file, except inside of
../texinfo/texinfo.txi(,16319) @code{@@example} @dots{} @code{@@end example} and similar commands.
../texinfo/texinfo.txi(,16320) 
../texinfo/texinfo.txi(,16321) @need 700
../texinfo/texinfo.txi(,16322) For example, @TeX{} fills the following:
../texinfo/texinfo.txi(,16323) 
../texinfo/texinfo.txi(,16324) @example
../texinfo/texinfo.txi(,16325) @group
../texinfo/texinfo.txi(,16326)     @@kbd@{C-x v@}
../texinfo/texinfo.txi(,16327)     @@kbd@{M-x vc-next-action@}
../texinfo/texinfo.txi(,16328)        Perform the next logical operation
../texinfo/texinfo.txi(,16329)        on the version-controlled file
../texinfo/texinfo.txi(,16330)        corresponding to the current buffer.
../texinfo/texinfo.txi(,16331) @end group
../texinfo/texinfo.txi(,16332) @end example
../texinfo/texinfo.txi(,16333) 
../texinfo/texinfo.txi(,16334) @need 950
../texinfo/texinfo.txi(,16335) @noindent
../texinfo/texinfo.txi(,16336) so it looks like this:
../texinfo/texinfo.txi(,16337) 
../texinfo/texinfo.txi(,16347) @quotation
../texinfo/texinfo.txi(,16348) `C-x v' `M-x vc-next-action' Perform the next logical operation on the
../texinfo/texinfo.txi(,16349) version-controlled file corresponding to the current buffer.
../texinfo/texinfo.txi(,16350) @end quotation
../texinfo/texinfo.txi(,16352) 
../texinfo/texinfo.txi(,16353) @noindent
../texinfo/texinfo.txi(,16354) In this case, the text should be formatted with
../texinfo/texinfo.txi(,16355) @code{@@table}, @code{@@item}, and @code{@@itemx}, to create a table.
../texinfo/texinfo.txi(,16356) 
../texinfo/texinfo.txi(,16357) @subsubheading @@code, @@samp, @@var, and @samp{---}
../texinfo/texinfo.txi(,16358) 
../texinfo/texinfo.txi(,16359) @itemize @bullet
../texinfo/texinfo.txi(,16360) @item
../texinfo/texinfo.txi(,16361) Use @code{@@code} around Lisp symbols, including command names.
../texinfo/texinfo.txi(,16362) For example,
../texinfo/texinfo.txi(,16363) 
../texinfo/texinfo.txi(,16364) @example
../texinfo/texinfo.txi(,16365) The main function is @@code@{vc-next-action@}, @dots{}
../texinfo/texinfo.txi(,16366) @end example
../texinfo/texinfo.txi(,16367) 
../texinfo/texinfo.txi(,16368) @item
../texinfo/texinfo.txi(,16369) Avoid putting letters such as @samp{s} immediately after an
../texinfo/texinfo.txi(,16370) @samp{@@code}.  Such letters look bad.
../texinfo/texinfo.txi(,16371) 
../texinfo/texinfo.txi(,16372) @item
../texinfo/texinfo.txi(,16373) Use @code{@@var} around meta-variables.  Do not write angle brackets
../texinfo/texinfo.txi(,16374) around them.
../texinfo/texinfo.txi(,16375) 
../texinfo/texinfo.txi(,16376) @item
../texinfo/texinfo.txi(,16377) Use three hyphens in a row, @samp{---}, to indicate a long dash.  @TeX{}
../texinfo/texinfo.txi(,16378) typesets these as a long dash and the Info formatters reduce three
../texinfo/texinfo.txi(,16379) hyphens to two.
../texinfo/texinfo.txi(,16380) @end itemize
../texinfo/texinfo.txi(,16381) 
../texinfo/texinfo.txi(,16382) @subsubheading Periods Outside of Quotes
../texinfo/texinfo.txi(,16383) 
../texinfo/texinfo.txi(,16384) Place periods and other punctuation marks @emph{outside} of quotations,
../texinfo/texinfo.txi(,16385) unless the punctuation is part of the quotation.  This practice goes
../texinfo/texinfo.txi(,16386) against publishing conventions in the United States, but enables the
../texinfo/texinfo.txi(,16387) reader to distinguish between the contents of the quotation and the
../texinfo/texinfo.txi(,16388) whole passage.
../texinfo/texinfo.txi(,16389) 
../texinfo/texinfo.txi(,16390) For example, you should write the following sentence with the period
../texinfo/texinfo.txi(,16391) outside the end quotation marks:
../texinfo/texinfo.txi(,16392) 
../texinfo/texinfo.txi(,16393) @example
../texinfo/texinfo.txi(,16394) Evidently, @samp{au} is an abbreviation for ``author''.
../texinfo/texinfo.txi(,16395) @end example
../texinfo/texinfo.txi(,16396) 
../texinfo/texinfo.txi(,16397) @noindent
../texinfo/texinfo.txi(,16398) since @samp{au} does @emph{not} serve as an  abbreviation for
../texinfo/texinfo.txi(,16399) @samp{author.} (with a period following the word).
../texinfo/texinfo.txi(,16400) 
../texinfo/texinfo.txi(,16401) @subsubheading Introducing New Terms
../texinfo/texinfo.txi(,16402) 
../texinfo/texinfo.txi(,16403) @itemize @bullet
../texinfo/texinfo.txi(,16404) @item
../texinfo/texinfo.txi(,16405) Introduce new terms so that a reader who does not know them can
../texinfo/texinfo.txi(,16406) understand them from context; or write a definition for the term.
../texinfo/texinfo.txi(,16407) 
../texinfo/texinfo.txi(,16408) For example, in the following, the terms ``check in'', ``register'' and
../texinfo/texinfo.txi(,16409) ``delta'' are all appearing for the first time; the example sentence should be
../texinfo/texinfo.txi(,16410) rewritten so they are understandable.
../texinfo/texinfo.txi(,16411) 
../texinfo/texinfo.txi(,16412) @quotation
../texinfo/texinfo.txi(,16413) The major function assists you in checking in a file to your
../texinfo/texinfo.txi(,16414) version control system and registering successive sets of changes to
../texinfo/texinfo.txi(,16415) it as deltas.
../texinfo/texinfo.txi(,16416) @end quotation
../texinfo/texinfo.txi(,16417) 
../texinfo/texinfo.txi(,16418) @item
../texinfo/texinfo.txi(,16419) Use the @code{@@dfn} command around a word being introduced, to indicate
../texinfo/texinfo.txi(,16420) that the reader should not expect to know the meaning already, and
../texinfo/texinfo.txi(,16421) should expect to learn the meaning from this passage.
../texinfo/texinfo.txi(,16422) @end itemize
../texinfo/texinfo.txi(,16423) 
../texinfo/texinfo.txi(,16424) @subsubheading @@pxref
../texinfo/texinfo.txi(,16425) 
../texinfo/texinfo.txi(,16426) @c !!! maybe include this in the tips on pxref
../texinfo/texinfo.txi(,16434) Absolutely never use @code{@@pxref} except in the special context for
../texinfo/texinfo.txi(,16435) which it is designed: inside parentheses, with the closing parenthesis
../texinfo/texinfo.txi(,16436) following immediately after the closing brace.  One formatter
../texinfo/texinfo.txi(,16437) automatically inserts closing punctuation and the other does not.  This
../texinfo/texinfo.txi(,16438) means that the output looks right both in printed output and in an Info
../texinfo/texinfo.txi(,16439) file, but only when the command is used inside parentheses.
../texinfo/texinfo.txi(,16440) 
../texinfo/texinfo.txi(,16441) @subsubheading Invoking from a Shell
../texinfo/texinfo.txi(,16442) 
../texinfo/texinfo.txi(,16443) You can invoke programs such as Emacs, GCC, and @code{gawk} from a
../texinfo/texinfo.txi(,16444) shell.  The documentation for each program should contain a section that
../texinfo/texinfo.txi(,16445) describes this.  Unfortunately, if the node names and titles for these
../texinfo/texinfo.txi(,16446) sections are all different, they are difficult for users to find.
../texinfo/texinfo.txi(,16447) 
../texinfo/texinfo.txi(,16448) So, there is a convention to name such sections with a phrase beginning
../texinfo/texinfo.txi(,16449) with the word `Invoking', as in `Invoking Emacs'; this way, users can
../texinfo/texinfo.txi(,16450) find the section easily.
../texinfo/texinfo.txi(,16451) 
../texinfo/texinfo.txi(,16452) 
../texinfo/texinfo.txi(,16453) @subsubheading ANSI C Syntax
../texinfo/texinfo.txi(,16454) 
../texinfo/texinfo.txi(,16455) When you use @code{@@example} to describe a C function's calling
../texinfo/texinfo.txi(,16456) conventions, use the ANSI C syntax, like this:@refill
../texinfo/texinfo.txi(,16457) 
../texinfo/texinfo.txi(,16458) @example
../texinfo/texinfo.txi(,16459) void dld_init (char *@@var@{path@});
../texinfo/texinfo.txi(,16460) @end example
../texinfo/texinfo.txi(,16461) 
../texinfo/texinfo.txi(,16462) @noindent
../texinfo/texinfo.txi(,16463) And in the subsequent discussion, refer to the argument values by
../texinfo/texinfo.txi(,16464) writing the same argument names, again highlighted with
../texinfo/texinfo.txi(,16465) @code{@@var}.@refill
../texinfo/texinfo.txi(,16466) 
../texinfo/texinfo.txi(,16467) @need 800
../texinfo/texinfo.txi(,16468) Avoid the obsolete style that looks like this:@refill
../texinfo/texinfo.txi(,16469) 
../texinfo/texinfo.txi(,16470) @example
../texinfo/texinfo.txi(,16471) #include <dld.h>
../texinfo/texinfo.txi(,16472) 
../texinfo/texinfo.txi(,16473) dld_init (path)
../texinfo/texinfo.txi(,16474) char *path;
../texinfo/texinfo.txi(,16475) @end example
../texinfo/texinfo.txi(,16476) 
../texinfo/texinfo.txi(,16477) Also, it is best to avoid writing @code{#include} above the
../texinfo/texinfo.txi(,16478) declaration just to indicate that the function is declared in a
../texinfo/texinfo.txi(,16479) header file.  The practice may give the misimpression that the
../texinfo/texinfo.txi(,16480) @code{#include} belongs near the declaration of the function.  Either
../texinfo/texinfo.txi(,16481) state explicitly which header file holds the declaration or, better
../texinfo/texinfo.txi(,16482) yet, name the header file used for a group of functions at the
../texinfo/texinfo.txi(,16483) beginning of the section that describes the functions.@refill
../texinfo/texinfo.txi(,16484) 
../texinfo/texinfo.txi(,16485) @subsubheading Bad Examples
../texinfo/texinfo.txi(,16486) 
../texinfo/texinfo.txi(,16487) Here are several examples of bad writing to avoid:
../texinfo/texinfo.txi(,16488) 
../texinfo/texinfo.txi(,16489) In this example, say, `` @dots{} you must @code{@@dfn}@{check
../texinfo/texinfo.txi(,16490) in@} the new version.''  That flows better.
../texinfo/texinfo.txi(,16491) 
../texinfo/texinfo.txi(,16492) @quotation
../texinfo/texinfo.txi(,16493) When you are done editing the file, you must perform a
../texinfo/texinfo.txi(,16494) @code{@@dfn}@{check in@}.
../texinfo/texinfo.txi(,16495) @end quotation
../texinfo/texinfo.txi(,16496) 
../texinfo/texinfo.txi(,16497) In the following example, say, ``@dots{} makes a unified interface such as VC
../texinfo/texinfo.txi(,16498) mode possible.''
../texinfo/texinfo.txi(,16499) 
../texinfo/texinfo.txi(,16500) @quotation
../texinfo/texinfo.txi(,16501) SCCS, RCS and other version-control systems all perform similar
../texinfo/texinfo.txi(,16502) functions in broadly similar ways (it is this resemblance which makes
../texinfo/texinfo.txi(,16503) a unified control mode like this possible).
../texinfo/texinfo.txi(,16504) @end quotation
../texinfo/texinfo.txi(,16505) 
../texinfo/texinfo.txi(,16506) And in this example, you should specify what `it' refers to:
../texinfo/texinfo.txi(,16507) 
../texinfo/texinfo.txi(,16508) @quotation
../texinfo/texinfo.txi(,16509) If you are working with other people, it assists in coordinating
../texinfo/texinfo.txi(,16510) everyone's changes so they do not step on each other.
../texinfo/texinfo.txi(,16511) @end quotation
../texinfo/texinfo.txi(,16512) 
../texinfo/texinfo.txi(,16513) @subsubheading And Finally @dots{}
../texinfo/texinfo.txi(,16514) 
../texinfo/texinfo.txi(,16515) @itemize @bullet
../texinfo/texinfo.txi(,16516) @item
../texinfo/texinfo.txi(,16517) Pronounce @TeX{} as if the @samp{X} were a Greek `chi', as the last
../texinfo/texinfo.txi(,16518) sound in the name `Bach'.  But pronounce Texinfo as in `speck':
../texinfo/texinfo.txi(,16519) ``teckinfo''.
../texinfo/texinfo.txi(,16520) 
../texinfo/texinfo.txi(,16521) @item
../texinfo/texinfo.txi(,16522) Write notes for yourself at the very end of a Texinfo file after the
../texinfo/texinfo.txi(,16523) @code{@@bye}.  None of the formatters process text after the
../texinfo/texinfo.txi(,16524) @code{@@bye}; it is as if the text were within @code{@@ignore} @dots{}
../texinfo/texinfo.txi(,16525) @code{@@end ignore}.
../texinfo/texinfo.txi(,16526) @end itemize
../texinfo/texinfo.txi(,16527) 
../texinfo/texinfo.txi(,16528) 
../texinfo/texinfo.txi(,16529) @node Sample Texinfo Files
../texinfo/texinfo.txi(,16530) @appendix Sample Texinfo Files
../texinfo/texinfo.txi(,16531) @cindex Sample Texinfo files
../texinfo/texinfo.txi(,16532) 
../texinfo/texinfo.txi(,16533) The first example is from the first chapter (@pxref{Short Sample}),
../texinfo/texinfo.txi(,16534) given here in its entirety, without commentary.  The second sample
../texinfo/texinfo.txi(,16535) includes the full texts to be used in GNU manuals.
../texinfo/texinfo.txi(,16536) 
../texinfo/texinfo.txi(,16537) @menu
../texinfo/texinfo.txi(,16538) * Short Sample Texinfo File::   
../texinfo/texinfo.txi(,16539) * GNU Sample Texts::            
../texinfo/texinfo.txi(,16540) @end menu
../texinfo/texinfo.txi(,16541) 
../texinfo/texinfo.txi(,16542) 
../texinfo/texinfo.txi(,16543) @node Short Sample Texinfo File
../texinfo/texinfo.txi(,16544) @section Short Sample
../texinfo/texinfo.txi(,16545) @cindex Sample Texinfo file, no comments
../texinfo/texinfo.txi(,16546) 
../texinfo/texinfo.txi(,16547) Here is a complete, short sample Texinfo file, without any commentary.
../texinfo/texinfo.txi(,16548) You can see this file, with comments, in the first chapter.  @xref{Short
../texinfo/texinfo.txi(,16549) Sample}.
../texinfo/texinfo.txi(,16550) 
../texinfo/texinfo.txi(,16551) In a nutshell: The @command{makeinfo} program transforms a Texinfo
../texinfo/texinfo.txi(,16552) source file such as this into an Info file or HTML; and @TeX{} typesets
../texinfo/texinfo.txi(,16553) it for a printed manual.
../texinfo/texinfo.txi(,16554) 
../texinfo/texinfo.txi(,16555) 
../texinfo/texinfo.txi(,16556) @sp 1
../texinfo/texinfo.txi(,16557) @example
../texinfo/texinfo.txi(,16558) \input texinfo   @@c -*-texinfo-*-
../texinfo/texinfo.txi(,16559) @@c %**start of header
../texinfo/texinfo.txi(,16560) @@setfilename sample.info
../texinfo/texinfo.txi(,16561) @@settitle Sample Manual 1.0
../texinfo/texinfo.txi(,16562) @@c %**end of header
../texinfo/texinfo.txi(,16563) 
../texinfo/texinfo.txi(,16564) @@copying
../texinfo/texinfo.txi(,16565) This is a short example of a complete Texinfo file.
../texinfo/texinfo.txi(,16566) 
../texinfo/texinfo.txi(,16567) Copyright (C) 2002 Free Software Foundation, Inc.
../texinfo/texinfo.txi(,16568) @@end copying
../texinfo/texinfo.txi(,16569) 
../texinfo/texinfo.txi(,16570) @@titlepage
../texinfo/texinfo.txi(,16571) @@title Sample Title
../texinfo/texinfo.txi(,16572) @@page
../texinfo/texinfo.txi(,16573) @@vskip 0pt plus 1filll
../texinfo/texinfo.txi(,16574) @@insertcopying
../texinfo/texinfo.txi(,16575) @@end titlepage
../texinfo/texinfo.txi(,16576) 
../texinfo/texinfo.txi(,16577) @@c Output the table of the contents at the beginning.
../texinfo/texinfo.txi(,16578) @@contents
../texinfo/texinfo.txi(,16579) 
../texinfo/texinfo.txi(,16580) @@ifnottex
../texinfo/texinfo.txi(,16581) @@node Top
../texinfo/texinfo.txi(,16582) 
../texinfo/texinfo.txi(,16583) @@insertcopying
../texinfo/texinfo.txi(,16584) @@end ifnottex
../texinfo/texinfo.txi(,16585) 
../texinfo/texinfo.txi(,16586) @@menu
../texinfo/texinfo.txi(,16587) * First Chapter::    The first chapter is the
../texinfo/texinfo.txi(,16588)                        only chapter in this sample.
../texinfo/texinfo.txi(,16589) * Index::            Complete index.
../texinfo/texinfo.txi(,16590) @@end menu
../texinfo/texinfo.txi(,16591) 
../texinfo/texinfo.txi(,16592) 
../texinfo/texinfo.txi(,16593) @@node First Chapter
../texinfo/texinfo.txi(,16594) @@chapter First Chapter
../texinfo/texinfo.txi(,16595) 
../texinfo/texinfo.txi(,16596) @@cindex chapter, first
../texinfo/texinfo.txi(,16597) 
../texinfo/texinfo.txi(,16598) This is the first chapter.
../texinfo/texinfo.txi(,16599) @@cindex index entry, another
../texinfo/texinfo.txi(,16600) 
../texinfo/texinfo.txi(,16601) Here is a numbered list.
../texinfo/texinfo.txi(,16602) 
../texinfo/texinfo.txi(,16603) @@enumerate
../texinfo/texinfo.txi(,16604) @@item
../texinfo/texinfo.txi(,16605) This is the first item.
../texinfo/texinfo.txi(,16606) 
../texinfo/texinfo.txi(,16607) @@item
../texinfo/texinfo.txi(,16608) This is the second item.
../texinfo/texinfo.txi(,16609) @@end enumerate
../texinfo/texinfo.txi(,16610) 
../texinfo/texinfo.txi(,16611) 
../texinfo/texinfo.txi(,16612) @@node Index
../texinfo/texinfo.txi(,16613) @@unnumbered Index
../texinfo/texinfo.txi(,16614) 
../texinfo/texinfo.txi(,16615) @@printindex cp
../texinfo/texinfo.txi(,16616) 
../texinfo/texinfo.txi(,16617) @@bye
../texinfo/texinfo.txi(,16618) @end example
../texinfo/texinfo.txi(,16619) 
../texinfo/texinfo.txi(,16620) 
../texinfo/texinfo.txi(,16621) @node GNU Sample Texts
../texinfo/texinfo.txi(,16622) @section GNU Sample Texts
../texinfo/texinfo.txi(,16623) 
../texinfo/texinfo.txi(,16624) @cindex GNU sample texts
../texinfo/texinfo.txi(,16625) @cindex Sample texts, GNU
../texinfo/texinfo.txi(,16626) @cindex Full texts, GNU
../texinfo/texinfo.txi(,16627) 
../texinfo/texinfo.txi(,16628) Here is a sample Texinfo document with the full texts that should be
../texinfo/texinfo.txi(,16629) used in GNU manuals.
../texinfo/texinfo.txi(,16630) 
../texinfo/texinfo.txi(,16631) As well as the legal texts, it also serves as a practical example of how
../texinfo/texinfo.txi(,16632) many elements in a GNU system can affect the manual.  If you're not
../texinfo/texinfo.txi(,16633) familiar with all these different elements, don't worry.  They're not
../texinfo/texinfo.txi(,16634) required and a perfectly good manual can be written without them.
../texinfo/texinfo.txi(,16635) They're included here nonetheless because many manuals do (or could)
../texinfo/texinfo.txi(,16636) benefit from them.
../texinfo/texinfo.txi(,16637) 
../texinfo/texinfo.txi(,16638) @xref{Short Sample}, for a minimal example of a Texinfo file.
../texinfo/texinfo.txi(,16639) @xref{Beginning a File}, for a full explanation of that minimal
../texinfo/texinfo.txi(,16640) example.
../texinfo/texinfo.txi(,16641) 
../texinfo/texinfo.txi(,16642) Here are some notes on the example:
../texinfo/texinfo.txi(,16643) 
../texinfo/texinfo.txi(,16644) @itemize @bullet
../texinfo/texinfo.txi(,16645) @item
../texinfo/texinfo.txi(,16646) @cindex $ @c Id: texinfo.txi,v 1.2 2003/02/24 18:17:06 pertusus Exp $ comment
../texinfo/texinfo.txi(,16647) @cindex CVS Id: texinfo.txi,v 1.2 2003/02/24 18:17:06 pertusus Exp $, in Texinfo
../texinfo/texinfo.txi(,16648) @cindex RCS Id: texinfo.txi,v 1.2 2003/02/24 18:17:06 pertusus Exp $, in Texinfo
../texinfo/texinfo.txi(,16649) The @samp{Id: texinfo.txi,v 1.2 2003/02/24 18:17:06 pertusus Exp $} comment is for CVS (@pxref{Top,, Overview, cvs,
../texinfo/texinfo.txi(,16650) Concurrent Versions System}) or RCS (see rcsintro(1)) version control
../texinfo/texinfo.txi(,16651) systems, which expand it into a string such as:
../texinfo/texinfo.txi(,16652) @example
../texinfo/texinfo.txi(,16653) Id: texinfo.txi,v 1.2 2003/02/24 18:17:06 pertusus Exp $
../texinfo/texinfo.txi(,16654) @end example
../texinfo/texinfo.txi(,16655) (This is useful in all sources that use version control, not just manuals.)
../texinfo/texinfo.txi(,16656) 
../texinfo/texinfo.txi(,16657) @item
../texinfo/texinfo.txi(,16658) @pindex automake@r{, and version info}
../texinfo/texinfo.txi(,16659) The @file{version.texi} in the @code{@@include} command is maintained
../texinfo/texinfo.txi(,16660) automatically by Automake (@pxref{Top,, Introduction, automake, GNU
../texinfo/texinfo.txi(,16661) Automake}).  It sets the @samp{VERSION} and @samp{UPDATED} values used
../texinfo/texinfo.txi(,16662) elsewhere.  If your distribution doesn't use Automake, you can mimic
../texinfo/texinfo.txi(,16663) these or equivalent settings.
../texinfo/texinfo.txi(,16664) 
../texinfo/texinfo.txi(,16665) @item
../texinfo/texinfo.txi(,16666) The @code{@@syncodeindex} command reflects the recommendation to use only
../texinfo/texinfo.txi(,16667) one index if at all possible, to make it easier for readers.
../texinfo/texinfo.txi(,16668) 
../texinfo/texinfo.txi(,16669) @item
../texinfo/texinfo.txi(,16670) The @code{@@dircategory} is for constructing the Info directory.
../texinfo/texinfo.txi(,16671) @xref{Installing Dir Entries}, which includes a variety of recommended
../texinfo/texinfo.txi(,16672) category names.
../texinfo/texinfo.txi(,16673) 
../texinfo/texinfo.txi(,16674) @item
../texinfo/texinfo.txi(,16675) The `Invoking' node is a GNU standard to help users find the basic
../texinfo/texinfo.txi(,16676) information about command-line usage of a given program.  @xref{Manual
../texinfo/texinfo.txi(,16677) Structure Details,,,standards, GNU Coding Standards}.
../texinfo/texinfo.txi(,16678) 
../texinfo/texinfo.txi(,16679) @item
../texinfo/texinfo.txi(,16680) It is best to include the entire GNU Free Documentation License in a GNU
../texinfo/texinfo.txi(,16681) manual, unless the manual is only a few pages long.  Of course this
../texinfo/texinfo.txi(,16682) sample is even shorter than that, but it includes the FDL anyway in
../texinfo/texinfo.txi(,16683) order to show one conventional way of doing so.  The @file{fdl.texi}
../texinfo/texinfo.txi(,16684) file is available on the GNU machines (and in the Texinfo and other GNU
../texinfo/texinfo.txi(,16685) distributions).
../texinfo/texinfo.txi(,16686) 
../texinfo/texinfo.txi(,16687) The FDL provides for omitting itself under certain conditions, but in
../texinfo/texinfo.txi(,16688) that case the sample texts given here have to be modified.  @xref{GNU
../texinfo/texinfo.txi(,16689) Free Documentation License}.
../texinfo/texinfo.txi(,16690) 
../texinfo/texinfo.txi(,16691) @item
../texinfo/texinfo.txi(,16692) If your manual has invariant sections (again, see the license itself for
../texinfo/texinfo.txi(,16693) details), then don't forget to include them.
../texinfo/texinfo.txi(,16694) @end itemize
../texinfo/texinfo.txi(,16695) 
../texinfo/texinfo.txi(,16696) Here is the sample document:
../texinfo/texinfo.txi(,16697) 
../texinfo/texinfo.txi(,16698) @c We do the first part of this with @example instead of @verbatim
../texinfo/texinfo.txi(,16699) @c because the literal @setfilename and @include confuse Automake.  Argh.
../texinfo/texinfo.txi(,16700) @example
../texinfo/texinfo.txi(,16701) \input texinfo    @@c -*-texinfo-*-
../texinfo/texinfo.txi(,16702) @@comment Id: texinfo.txi,v 1.2 2003/02/24 18:17:06 pertusus Exp $
../texinfo/texinfo.txi(,16703) @@comment %**start of header
../texinfo/texinfo.txi(,16704) @@setfilename sample.info
../texinfo/texinfo.txi(,16705) @@include version.texi
../texinfo/texinfo.txi(,16706) @@settitle GNU Sample @@value@{VERSION@}
../texinfo/texinfo.txi(,16707) @@syncodeindex pg cp
../texinfo/texinfo.txi(,16708) @@comment %**end of header
../texinfo/texinfo.txi(,16709) @@copying
../texinfo/texinfo.txi(,16710) This manual is for GNU Sample
../texinfo/texinfo.txi(,16711) (version @@value@{VERSION@}, @@value@{UPDATED@}),
../texinfo/texinfo.txi(,16712) which is an example in the Texinfo documentation.
../texinfo/texinfo.txi(,16713) 
../texinfo/texinfo.txi(,16714) Copyright @@copyright@{@} 2002 Free Software Foundation, Inc.
../texinfo/texinfo.txi(,16715) 
../texinfo/texinfo.txi(,16716) @@quotation
../texinfo/texinfo.txi(,16717) Permission is granted to copy, distribute and/or modify this document
../texinfo/texinfo.txi(,16718) under the terms of the GNU Free Documentation License, Version 1.1 or
../texinfo/texinfo.txi(,16719) any later version published by the Free Software Foundation; with no
../texinfo/texinfo.txi(,16720) Invariant Sections, with the Front-Cover texts being ``A GNU Manual,''
../texinfo/texinfo.txi(,16721) and with the Back-Cover Texts as in (a) below.  A copy of the
../texinfo/texinfo.txi(,16722) license is included in the section entitled ``GNU Free Documentation
../texinfo/texinfo.txi(,16723) License.''
../texinfo/texinfo.txi(,16724) 
../texinfo/texinfo.txi(,16725) (a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
../texinfo/texinfo.txi(,16726) this GNU Manual, like GNU software.  Copies published by the Free
../texinfo/texinfo.txi(,16727) Software Foundation raise funds for GNU development.''
../texinfo/texinfo.txi(,16728) @@end quotation
../texinfo/texinfo.txi(,16729) @@end copying
../texinfo/texinfo.txi(,16730) 
../texinfo/texinfo.txi(,16731) @@dircategory Texinfo documentation system
../texinfo/texinfo.txi(,16732) @@direntry
../texinfo/texinfo.txi(,16733) * sample: (sample)Invoking sample.    
../texinfo/texinfo.txi(,16734) @@end direntry
../texinfo/texinfo.txi(,16735) 
../texinfo/texinfo.txi(,16736) @@titlepage
../texinfo/texinfo.txi(,16737) @@title GNU Sample
../texinfo/texinfo.txi(,16738) @@subtitle for version @@value@{VERSION@}, @@value@{UPDATED@}
../texinfo/texinfo.txi(,16739) @@author A.U. Thor (@@email@{bug-texinfo@@@@gnu.org@})
../texinfo/texinfo.txi(,16740) @@page
../texinfo/texinfo.txi(,16741) @@vskip 0pt plus 1filll
../texinfo/texinfo.txi(,16742) @@insertcopying
../texinfo/texinfo.txi(,16743) @@end titlepage
../texinfo/texinfo.txi(,16744) 
../texinfo/texinfo.txi(,16745) @@contents
../texinfo/texinfo.txi(,16746) 
../texinfo/texinfo.txi(,16747) @@ifnottex
../texinfo/texinfo.txi(,16748) @@node Top
../texinfo/texinfo.txi(,16749) @@top GNU Sample
../texinfo/texinfo.txi(,16750) 
../texinfo/texinfo.txi(,16751) @@insertcopying
../texinfo/texinfo.txi(,16752) @@end ifnottex
../texinfo/texinfo.txi(,16753) 
../texinfo/texinfo.txi(,16754) @@menu
../texinfo/texinfo.txi(,16755) * Invoking sample::
../texinfo/texinfo.txi(,16756) * Copying This Manual::
../texinfo/texinfo.txi(,16757) * Index::
../texinfo/texinfo.txi(,16758) @@end menu
../texinfo/texinfo.txi(,16759) 
../texinfo/texinfo.txi(,16760) 
../texinfo/texinfo.txi(,16761) @@node Invoking sample
../texinfo/texinfo.txi(,16762) @@chapter Invoking sample
../texinfo/texinfo.txi(,16763) 
../texinfo/texinfo.txi(,16764) @@pindex sample
../texinfo/texinfo.txi(,16765) @@cindex invoking @@command@{sample@}
../texinfo/texinfo.txi(,16766) 
../texinfo/texinfo.txi(,16767) This is a sample manual.  There is no sample program to
../texinfo/texinfo.txi(,16768) invoke, but if there was, you could see its basic usage
../texinfo/texinfo.txi(,16769) and command line options here.
../texinfo/texinfo.txi(,16770) 
../texinfo/texinfo.txi(,16771) 
../texinfo/texinfo.txi(,16772) @@node Copying This Manual
../texinfo/texinfo.txi(,16773) @@appendix Copying This Manual
../texinfo/texinfo.txi(,16774) 
../texinfo/texinfo.txi(,16775) @@menu
../texinfo/texinfo.txi(,16776) * GNU Free Documentation License::  License for copying this manual.
../texinfo/texinfo.txi(,16777) @@end menu
../texinfo/texinfo.txi(,16778) 
../texinfo/texinfo.txi(,16779) @@include fdl.texi
../texinfo/texinfo.txi(,16780) 
../texinfo/texinfo.txi(,16781) 
../texinfo/texinfo.txi(,16782) @@node Index
../texinfo/texinfo.txi(,16783) @@unnumbered Index
../texinfo/texinfo.txi(,16784) 
../texinfo/texinfo.txi(,16785) @@printindex cp
../texinfo/texinfo.txi(,16786) 
../texinfo/texinfo.txi(,16787) @@bye
../texinfo/texinfo.txi(,16788) @end example
../texinfo/texinfo.txi(,16789) 
../texinfo/texinfo.txi(,16790) 
../texinfo/texinfo.txi(,16791) @node Include Files
../texinfo/texinfo.txi(,16792) @appendix Include Files
../texinfo/texinfo.txi(,16793) @cindex Include files
../texinfo/texinfo.txi(,16794) 
../texinfo/texinfo.txi(,16795) When @TeX{} or an Info formatting command sees an @code{@@include}
../texinfo/texinfo.txi(,16796) command in a Texinfo file, it processes the contents of the file named
../texinfo/texinfo.txi(,16797) by the command and incorporates them into the DVI or Info file being
../texinfo/texinfo.txi(,16798) created.  Index entries from the included file are incorporated into
../texinfo/texinfo.txi(,16799) the indices of the output file.
../texinfo/texinfo.txi(,16800) 
../texinfo/texinfo.txi(,16801) Include files let you keep a single large document as a collection of
../texinfo/texinfo.txi(,16802) conveniently small parts.
../texinfo/texinfo.txi(,16803) 
../texinfo/texinfo.txi(,16804) @menu
../texinfo/texinfo.txi(,16805) * Using Include Files::         How to use the @code{@@include} command.
../texinfo/texinfo.txi(,16806) * texinfo-multiple-files-update::  How to create and update nodes and
../texinfo/texinfo.txi(,16807)                                   menus when using included files.
../texinfo/texinfo.txi(,16808) * Include File Requirements::   What @code{texinfo-multiple-files-update} expects.
../texinfo/texinfo.txi(,16809) * Sample Include File::         A sample outer file with included files
../texinfo/texinfo.txi(,16810)                                   within it; and a sample included file.
../texinfo/texinfo.txi(,16811) * Include Files Evolution::     How use of the @code{@@include} command
../texinfo/texinfo.txi(,16812)                                   has changed over time.
../texinfo/texinfo.txi(,16813) @end menu
../texinfo/texinfo.txi(,16814) 
../texinfo/texinfo.txi(,16815) @node Using Include Files, texinfo-multiple-files-update, Include Files, Include Files
../texinfo/texinfo.txi(,16816) @section How to Use Include Files
../texinfo/texinfo.txi(,16817) @findex include
../texinfo/texinfo.txi(,16818) 
../texinfo/texinfo.txi(,16819) To include another file within a Texinfo file, write the
../texinfo/texinfo.txi(,16820) @code{@@include} command at the beginning of a line and follow it on
../texinfo/texinfo.txi(,16821) the same line by the name of a file to be included.  For
../texinfo/texinfo.txi(,16822) example:@refill
../texinfo/texinfo.txi(,16823) 
../texinfo/texinfo.txi(,16824) @example
../texinfo/texinfo.txi(,16825) @@include buffers.texi
../texinfo/texinfo.txi(,16826) @end example
../texinfo/texinfo.txi(,16827) 
../texinfo/texinfo.txi(,16828) An included file should simply be a segment of text that you expect to
../texinfo/texinfo.txi(,16829) be included as is into the overall or @dfn{outer} Texinfo file; it
../texinfo/texinfo.txi(,16830) should not contain the standard beginning and end parts of a Texinfo
../texinfo/texinfo.txi(,16831) file.  In particular, you should not start an included file with a
../texinfo/texinfo.txi(,16832) line saying @samp{\input texinfo}; if you do, that phrase is inserted
../texinfo/texinfo.txi(,16833) into the output file as is.  Likewise, you should not end an included
../texinfo/texinfo.txi(,16834) file with an @code{@@bye} command; nothing after @code{@@bye} is
../texinfo/texinfo.txi(,16835) formatted.@refill
../texinfo/texinfo.txi(,16836) 
../texinfo/texinfo.txi(,16837) In the past, you were required to write an @code{@@setfilename} line at the
../texinfo/texinfo.txi(,16838) beginning of an included file, but no longer.  Now, it does not matter
../texinfo/texinfo.txi(,16839) whether you write such a line.  If an @code{@@setfilename} line exists
../texinfo/texinfo.txi(,16840) in an included file, it is ignored.@refill
../texinfo/texinfo.txi(,16841) 
../texinfo/texinfo.txi(,16842) Conventionally, an included file begins with an @code{@@node} line that
../texinfo/texinfo.txi(,16843) is followed by an @code{@@chapter} line.  Each included file is one
../texinfo/texinfo.txi(,16844) chapter.  This makes it easy to use the regular node and menu creating
../texinfo/texinfo.txi(,16845) and updating commands to create the node pointers and menus within the
../texinfo/texinfo.txi(,16846) included file.  However, the simple Emacs node and menu creating and
../texinfo/texinfo.txi(,16847) updating commands do not work with multiple Texinfo files.  Thus you
../texinfo/texinfo.txi(,16848) cannot use these commands to fill in the `Next', `Previous', and `Up'
../texinfo/texinfo.txi(,16849) pointers of the @code{@@node} line that begins the included file.  Also,
../texinfo/texinfo.txi(,16850) you cannot use the regular commands to create a master menu for the
../texinfo/texinfo.txi(,16851) whole file.  Either you must insert the menus and the `Next',
../texinfo/texinfo.txi(,16852) `Previous', and `Up' pointers by hand, or you must use the GNU Emacs
../texinfo/texinfo.txi(,16853) Texinfo mode command, @code{texinfo-multiple-files-update}, that is
../texinfo/texinfo.txi(,16854) designed for @code{@@include} files.@refill
../texinfo/texinfo.txi(,16855) 
../texinfo/texinfo.txi(,16856) @node texinfo-multiple-files-update, Include File Requirements, Using Include Files, Include Files
../texinfo/texinfo.txi(,16857) @section @code{texinfo-multiple-files-update}
../texinfo/texinfo.txi(,16858) @findex texinfo-multiple-files-update
../texinfo/texinfo.txi(,16859) 
../texinfo/texinfo.txi(,16860) GNU Emacs Texinfo mode provides the @code{texinfo-multiple-files-update}
../texinfo/texinfo.txi(,16861) command.  This command creates or updates `Next', `Previous', and `Up'
../texinfo/texinfo.txi(,16862) pointers of included files as well as those in the outer or overall
../texinfo/texinfo.txi(,16863) Texinfo file, and it creates or updates a main menu in the outer file.
../texinfo/texinfo.txi(,16864) Depending whether you call it with optional arguments, the command
../texinfo/texinfo.txi(,16865) updates only the pointers in the first @code{@@node} line of the
../texinfo/texinfo.txi(,16866) included files or all of them:@refill
../texinfo/texinfo.txi(,16867) 
../texinfo/texinfo.txi(,16868) @table @kbd
../texinfo/texinfo.txi(,16869) @item M-x texinfo-multiple-files-update
../texinfo/texinfo.txi(,16870) Called without any arguments:@refill
../texinfo/texinfo.txi(,16871) 
../texinfo/texinfo.txi(,16872) @itemize @minus
../texinfo/texinfo.txi(,16873) @item
../texinfo/texinfo.txi(,16874) Create or update the `Next', `Previous', and `Up' pointers of the
../texinfo/texinfo.txi(,16875) first @code{@@node} line in each file included in an outer or overall
../texinfo/texinfo.txi(,16876) Texinfo file.@refill
../texinfo/texinfo.txi(,16877) 
../texinfo/texinfo.txi(,16878) @item
../texinfo/texinfo.txi(,16879) Create or update the `Top' level node pointers of the outer or
../texinfo/texinfo.txi(,16880) overall file.@refill
../texinfo/texinfo.txi(,16881) 
../texinfo/texinfo.txi(,16882) @item
../texinfo/texinfo.txi(,16883) Create or update a main menu in the outer file.@refill
../texinfo/texinfo.txi(,16884) @end itemize
../texinfo/texinfo.txi(,16885) 
../texinfo/texinfo.txi(,16886) @item C-u M-x texinfo-multiple-files-update
../texinfo/texinfo.txi(,16887) Called with @kbd{C-u} as a prefix argument:
../texinfo/texinfo.txi(,16888) 
../texinfo/texinfo.txi(,16889) @itemize @minus{}
../texinfo/texinfo.txi(,16890) @item
../texinfo/texinfo.txi(,16891) Create or update pointers in the first @code{@@node} line in each
../texinfo/texinfo.txi(,16892) included file.
../texinfo/texinfo.txi(,16893) 
../texinfo/texinfo.txi(,16894) @item
../texinfo/texinfo.txi(,16895) Create or update the `Top' level node pointers of the outer file.
../texinfo/texinfo.txi(,16896) 
../texinfo/texinfo.txi(,16897) @item
../texinfo/texinfo.txi(,16898) Create and insert a master menu in the outer file.  The master menu
../texinfo/texinfo.txi(,16899) is made from all the menus in all the included files.@refill
../texinfo/texinfo.txi(,16900) @end itemize
../texinfo/texinfo.txi(,16901) 
../texinfo/texinfo.txi(,16902) @item C-u 8 M-x texinfo-multiple-files-update
../texinfo/texinfo.txi(,16903) Called with a numeric prefix argument, such as @kbd{C-u 8}:
../texinfo/texinfo.txi(,16904) 
../texinfo/texinfo.txi(,16905) @itemize @minus
../texinfo/texinfo.txi(,16906) @item
../texinfo/texinfo.txi(,16907) Create or update @strong{all} the `Next', `Previous', and `Up' pointers
../texinfo/texinfo.txi(,16908) of all the included files.@refill
../texinfo/texinfo.txi(,16909) 
../texinfo/texinfo.txi(,16910) @item
../texinfo/texinfo.txi(,16911) Create or update @strong{all} the menus of all the included
../texinfo/texinfo.txi(,16912) files.@refill
../texinfo/texinfo.txi(,16913) 
../texinfo/texinfo.txi(,16914) @item
../texinfo/texinfo.txi(,16915) Create or update the `Top' level node pointers of the outer or
../texinfo/texinfo.txi(,16916) overall file.@refill
../texinfo/texinfo.txi(,16917) 
../texinfo/texinfo.txi(,16918) @item
../texinfo/texinfo.txi(,16919) And then create a master menu in the outer file.  This is similar to
../texinfo/texinfo.txi(,16920) invoking @code{texinfo-master-menu} with an argument when you are
../texinfo/texinfo.txi(,16921) working with just one file.@refill
../texinfo/texinfo.txi(,16922) @end itemize
../texinfo/texinfo.txi(,16923) @end table
../texinfo/texinfo.txi(,16924) 
../texinfo/texinfo.txi(,16925) Note the use of the prefix argument in interactive use: with a regular
../texinfo/texinfo.txi(,16926) prefix argument, just @w{@kbd{C-u}}, the
../texinfo/texinfo.txi(,16927) @code{texinfo-multiple-files-update} command inserts a master menu;
../texinfo/texinfo.txi(,16928) with a numeric prefix argument, such as @kbd{C-u 8}, the command
../texinfo/texinfo.txi(,16929) updates @strong{every} pointer and menu in @strong{all} the files and then inserts a
../texinfo/texinfo.txi(,16930) master menu.@refill
../texinfo/texinfo.txi(,16931) 
../texinfo/texinfo.txi(,16932) 
../texinfo/texinfo.txi(,16933) @node Include File Requirements
../texinfo/texinfo.txi(,16934) @section Include File Requirements
../texinfo/texinfo.txi(,16935) @cindex Include file requirements
../texinfo/texinfo.txi(,16936) @cindex Requirements for include files
../texinfo/texinfo.txi(,16937) 
../texinfo/texinfo.txi(,16938) If you plan to use the @code{texinfo-multiple-files-update} command,
../texinfo/texinfo.txi(,16939) the outer Texinfo file that lists included files within it should
../texinfo/texinfo.txi(,16940) contain nothing but the beginning and end parts of a Texinfo file, and
../texinfo/texinfo.txi(,16941) a number of @code{@@include} commands listing the included files.  It
../texinfo/texinfo.txi(,16942) should not even include indices, which should be listed in an included
../texinfo/texinfo.txi(,16943) file of their own.@refill
../texinfo/texinfo.txi(,16944) 
../texinfo/texinfo.txi(,16945) Moreover, each of the included files must contain exactly one highest
../texinfo/texinfo.txi(,16946) level node (conventionally, @code{@@chapter} or equivalent),
../texinfo/texinfo.txi(,16947) and this node must be the first node in the included file.
../texinfo/texinfo.txi(,16948) Furthermore, each of these highest level nodes in each included file
../texinfo/texinfo.txi(,16949) must be at the same hierarchical level in the file structure.
../texinfo/texinfo.txi(,16950) Usually, each is an @code{@@chapter}, an @code{@@appendix}, or an
../texinfo/texinfo.txi(,16951) @code{@@unnumbered} node.  Thus, normally, each included file contains
../texinfo/texinfo.txi(,16952) one, and only one, chapter or equivalent-level node.@refill
../texinfo/texinfo.txi(,16953) 
../texinfo/texinfo.txi(,16954) The outer file should contain only @emph{one} node, the `Top' node.  It
../texinfo/texinfo.txi(,16955) should @emph{not} contain any nodes besides the single `Top' node.  The
../texinfo/texinfo.txi(,16956) @code{texinfo-multiple-files-update} command will not process
../texinfo/texinfo.txi(,16957) them.@refill
../texinfo/texinfo.txi(,16958) 
../texinfo/texinfo.txi(,16959) @node Sample Include File, Include Files Evolution, Include File Requirements, Include Files
../texinfo/texinfo.txi(,16960) @section Sample File with @code{@@include}
../texinfo/texinfo.txi(,16961) @cindex Sample @code{@@include} file
../texinfo/texinfo.txi(,16962) @cindex Include file sample
../texinfo/texinfo.txi(,16963) @cindex @code{@@include} file sample
../texinfo/texinfo.txi(,16964) 
../texinfo/texinfo.txi(,16965) Here is an example of a complete outer Texinfo file with @code{@@include} files
../texinfo/texinfo.txi(,16966) within it before running @code{texinfo-multiple-files-update}, which
../texinfo/texinfo.txi(,16967) would insert a main or master menu:@refill
../texinfo/texinfo.txi(,16968) 
../texinfo/texinfo.txi(,16969) @example
../texinfo/texinfo.txi(,16970) @group
../texinfo/texinfo.txi(,16971) \input texinfo @@c -*-texinfo-*-
../texinfo/texinfo.txi(,16972) @c %**start of header
../texinfo/texinfo.txi(,16973) @@setfilename  include-example.info
../texinfo/texinfo.txi(,16974) @@settitle Include Example
../texinfo/texinfo.txi(,16975) @c %**end of header
../texinfo/texinfo.txi(,16976) @end group
../texinfo/texinfo.txi(,16977) 
../texinfo/texinfo.txi(,16978) @group
../texinfo/texinfo.txi(,16979) @@setchapternewpage odd
../texinfo/texinfo.txi(,16980) @@titlepage
../texinfo/texinfo.txi(,16981) @@sp 12
../texinfo/texinfo.txi(,16982) @@center @@titlefont@{Include Example@}
../texinfo/texinfo.txi(,16983) @@sp 2
../texinfo/texinfo.txi(,16984) @@center by Whom Ever
../texinfo/texinfo.txi(,16985) @end group
../texinfo/texinfo.txi(,16986) 
../texinfo/texinfo.txi(,16987) @group
../texinfo/texinfo.txi(,16988) @@page
../texinfo/texinfo.txi(,16989) @@vskip 0pt plus 1filll
../texinfo/texinfo.txi(,16990) Copyright @@copyright@{@} 2002 Free Software Foundation, Inc.
../texinfo/texinfo.txi(,16991) @@end titlepage
../texinfo/texinfo.txi(,16992) @end group
../texinfo/texinfo.txi(,16993) 
../texinfo/texinfo.txi(,16994) @group
../texinfo/texinfo.txi(,16995) @@ifinfo
../texinfo/texinfo.txi(,16996) @@node Top, First, , (dir)
../texinfo/texinfo.txi(,16997) @@top Master Menu
../texinfo/texinfo.txi(,16998) @@end ifinfo
../texinfo/texinfo.txi(,16999) @end group
../texinfo/texinfo.txi(,17000) 
../texinfo/texinfo.txi(,17001) @group
../texinfo/texinfo.txi(,17002) @@include foo.texinfo
../texinfo/texinfo.txi(,17003) @@include bar.texinfo
../texinfo/texinfo.txi(,17004) @@include concept-index.texinfo
../texinfo/texinfo.txi(,17005) @end group
../texinfo/texinfo.txi(,17006) 
../texinfo/texinfo.txi(,17007) @group
../texinfo/texinfo.txi(,17008) @@summarycontents
../texinfo/texinfo.txi(,17009) @@contents
../texinfo/texinfo.txi(,17010) 
../texinfo/texinfo.txi(,17011) @@bye
../texinfo/texinfo.txi(,17012) @end group
../texinfo/texinfo.txi(,17013) @end example
../texinfo/texinfo.txi(,17014) 
../texinfo/texinfo.txi(,17015) An included file, such as @file{foo.texinfo}, might look like this:
../texinfo/texinfo.txi(,17016) 
../texinfo/texinfo.txi(,17017) @example
../texinfo/texinfo.txi(,17018) @group
../texinfo/texinfo.txi(,17019) @@node First, Second, , Top
../texinfo/texinfo.txi(,17020) @@chapter First Chapter
../texinfo/texinfo.txi(,17021) 
../texinfo/texinfo.txi(,17022) Contents of first chapter @dots{}
../texinfo/texinfo.txi(,17023) @end group
../texinfo/texinfo.txi(,17024) @end example
../texinfo/texinfo.txi(,17025) 
../texinfo/texinfo.txi(,17026) The full contents of @file{concept-index.texinfo} might be as simple as this:
../texinfo/texinfo.txi(,17027) 
../texinfo/texinfo.txi(,17028) @example
../texinfo/texinfo.txi(,17029) @group
../texinfo/texinfo.txi(,17030) @@node Concept Index
../texinfo/texinfo.txi(,17031) @@unnumbered Concept Index
../texinfo/texinfo.txi(,17032) 
../texinfo/texinfo.txi(,17033) @@printindex cp
../texinfo/texinfo.txi(,17034) @end group
../texinfo/texinfo.txi(,17035) @end example
../texinfo/texinfo.txi(,17036) 
../texinfo/texinfo.txi(,17037) The outer Texinfo source file for @cite{The GNU Emacs Lisp Reference
../texinfo/texinfo.txi(,17038) Manual} is named @file{elisp.texi}.  This outer file contains a master
../texinfo/texinfo.txi(,17039) menu with 417 entries and a list of 41 @code{@@include}
../texinfo/texinfo.txi(,17040) files.@refill
../texinfo/texinfo.txi(,17041) 
../texinfo/texinfo.txi(,17042) 
../texinfo/texinfo.txi(,17043) @node Include Files Evolution
../texinfo/texinfo.txi(,17044) @section Evolution of Include Files
../texinfo/texinfo.txi(,17045) 
../texinfo/texinfo.txi(,17046) When Info was first created, it was customary to create many small
../texinfo/texinfo.txi(,17047) Info files on one subject.  Each Info file was formatted from its own
../texinfo/texinfo.txi(,17048) Texinfo source file.  This custom meant that Emacs did not need to
../texinfo/texinfo.txi(,17049) make a large buffer to hold the whole of a large Info file when
../texinfo/texinfo.txi(,17050) someone wanted information; instead, Emacs allocated just enough
../texinfo/texinfo.txi(,17051) memory for the small Info file that contained the particular
../texinfo/texinfo.txi(,17052) information sought.  This way, Emacs could avoid wasting memory.@refill
../texinfo/texinfo.txi(,17053) 
../texinfo/texinfo.txi(,17054) References from one file to another were made by referring to the file
../texinfo/texinfo.txi(,17055) name as well as the node name. (@xref{Other Info Files, , Referring to
../texinfo/texinfo.txi(,17056) Other Info Files}.  Also, see @ref{Four and Five Arguments, ,
../texinfo/texinfo.txi(,17057) @code{@@xref} with Four and Five Arguments}.)@refill
../texinfo/texinfo.txi(,17058) 
../texinfo/texinfo.txi(,17059) Include files were designed primarily as a way to create a single,
../texinfo/texinfo.txi(,17060) large printed manual out of several smaller Info files.  In a printed
../texinfo/texinfo.txi(,17061) manual, all the references were within the same document, so @TeX{}
../texinfo/texinfo.txi(,17062) could automatically determine the references' page numbers.  The Info
../texinfo/texinfo.txi(,17063) formatting commands used include files only for creating joint
../texinfo/texinfo.txi(,17064) indices; each of the individual Texinfo files had to be formatted for
../texinfo/texinfo.txi(,17065) Info individually.  (Each, therefore, required its own
../texinfo/texinfo.txi(,17066) @code{@@setfilename} line.)@refill
../texinfo/texinfo.txi(,17067) 
../texinfo/texinfo.txi(,17068) However, because large Info files are now split automatically, it is
../texinfo/texinfo.txi(,17069) no longer necessary to keep them small.@refill
../texinfo/texinfo.txi(,17070) 
../texinfo/texinfo.txi(,17071) Nowadays, multiple Texinfo files are used mostly for large documents,
../texinfo/texinfo.txi(,17072) such as @cite{The GNU Emacs Lisp Reference Manual}, and for projects
../texinfo/texinfo.txi(,17073) in which several different people write different sections of a
../texinfo/texinfo.txi(,17074) document simultaneously.@refill
../texinfo/texinfo.txi(,17075) 
../texinfo/texinfo.txi(,17076) In addition, the Info formatting commands have been extended to work
../texinfo/texinfo.txi(,17077) with the @code{@@include} command so as to create a single large Info
../texinfo/texinfo.txi(,17078) file that is split into smaller files if necessary.  This means that
../texinfo/texinfo.txi(,17079) you can write menus and cross references without naming the different
../texinfo/texinfo.txi(,17080) Texinfo files.@refill
../texinfo/texinfo.txi(,17081) 
../texinfo/texinfo.txi(,17082) 
../texinfo/texinfo.txi(,17083) @node Headings
../texinfo/texinfo.txi(,17084) @appendix Page Headings
../texinfo/texinfo.txi(,17085) @cindex Headings
../texinfo/texinfo.txi(,17086) @cindex Footings
../texinfo/texinfo.txi(,17087) @cindex Page numbering
../texinfo/texinfo.txi(,17088) @cindex Page headings
../texinfo/texinfo.txi(,17089) @cindex Formatting headings and footings
../texinfo/texinfo.txi(,17090) 
../texinfo/texinfo.txi(,17091) Most printed manuals contain headings along the top of every page
../texinfo/texinfo.txi(,17092) except the title and copyright pages.  Some manuals also contain
../texinfo/texinfo.txi(,17093) footings.  (Headings and footings have no meaning to Info, which is
../texinfo/texinfo.txi(,17094) not paginated.)@refill
../texinfo/texinfo.txi(,17095) 
../texinfo/texinfo.txi(,17096) @menu
../texinfo/texinfo.txi(,17097) * Headings Introduced::         Conventions for using page headings.
../texinfo/texinfo.txi(,17098) * Heading Format::              Standard page heading formats.
../texinfo/texinfo.txi(,17099) * Heading Choice::              How to specify the type of page heading.
../texinfo/texinfo.txi(,17100) * Custom Headings::             How to create your own headings and footings.
../texinfo/texinfo.txi(,17101) @end menu
../texinfo/texinfo.txi(,17102) 
../texinfo/texinfo.txi(,17103) @node Headings Introduced, Heading Format, Headings, Headings
../texinfo/texinfo.txi(,17105) @heading Headings Introduced
../texinfo/texinfo.txi(,17107) 
../texinfo/texinfo.txi(,17108) Texinfo provides standard page heading formats for manuals that are
../texinfo/texinfo.txi(,17109) printed on one side of each sheet of paper and for manuals that are
../texinfo/texinfo.txi(,17110) printed on both sides of the paper.  Typically, you will use these
../texinfo/texinfo.txi(,17111) formats, but you can specify your own format if you wish.@refill
../texinfo/texinfo.txi(,17112) 
../texinfo/texinfo.txi(,17113) In addition, you can specify whether chapters should begin on a new
../texinfo/texinfo.txi(,17114) page, or merely continue the same page as the previous chapter; and if
../texinfo/texinfo.txi(,17115) chapters begin on new pages, you can specify whether they must be
../texinfo/texinfo.txi(,17116) odd-numbered pages.@refill
../texinfo/texinfo.txi(,17117) 
../texinfo/texinfo.txi(,17118) By convention, a book is printed on both sides of each sheet of paper.
../texinfo/texinfo.txi(,17119) When you open a book, the right-hand page is odd-numbered, and
../texinfo/texinfo.txi(,17120) chapters begin on right-hand pages---a preceding left-hand page is
../texinfo/texinfo.txi(,17121) left blank if necessary.  Reports, however, are often printed on just
../texinfo/texinfo.txi(,17122) one side of paper, and chapters begin on a fresh page immediately
../texinfo/texinfo.txi(,17123) following the end of the preceding chapter.  In short or informal
../texinfo/texinfo.txi(,17124) reports, chapters often do not begin on a new page at all, but are
../texinfo/texinfo.txi(,17125) separated from the preceding text by a small amount of whitespace.@refill
../texinfo/texinfo.txi(,17126) 
../texinfo/texinfo.txi(,17127) The @code{@@setchapternewpage} command controls whether chapters begin
../texinfo/texinfo.txi(,17128) on new pages, and whether one of the standard heading formats is used.
../texinfo/texinfo.txi(,17129) In addition, Texinfo has several heading and footing commands that you
../texinfo/texinfo.txi(,17130) can use to generate your own heading and footing formats.@refill
../texinfo/texinfo.txi(,17131) 
../texinfo/texinfo.txi(,17132) In Texinfo, headings and footings are single lines at the tops and
../texinfo/texinfo.txi(,17133) bottoms of pages; you cannot create multiline headings or footings.
../texinfo/texinfo.txi(,17134) Each header or footer line is divided into three parts: a left part, a
../texinfo/texinfo.txi(,17135) middle part, and a right part.  Any part, or a whole line, may be left
../texinfo/texinfo.txi(,17136) blank.  Text for the left part of a header or footer line is set
../texinfo/texinfo.txi(,17137) flushleft; text for the middle part is centered; and, text for the
../texinfo/texinfo.txi(,17138) right part is set flushright.@refill
../texinfo/texinfo.txi(,17139) 
../texinfo/texinfo.txi(,17140) @node Heading Format, Heading Choice, Headings Introduced, Headings
../texinfo/texinfo.txi(,17141) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17142) @section Standard Heading Formats
../texinfo/texinfo.txi(,17143) 
../texinfo/texinfo.txi(,17144) Texinfo provides two standard heading formats, one for manuals printed
../texinfo/texinfo.txi(,17145) on one side of each sheet of paper, and the other for manuals printed
../texinfo/texinfo.txi(,17146) on both sides of the paper.
../texinfo/texinfo.txi(,17147) 
../texinfo/texinfo.txi(,17148) By default, nothing is specified for the footing of a Texinfo file,
../texinfo/texinfo.txi(,17149) so the footing remains blank.@refill
../texinfo/texinfo.txi(,17150) 
../texinfo/texinfo.txi(,17151) The standard format for single-sided printing consists of a header
../texinfo/texinfo.txi(,17152) line in which the left-hand part contains the name of the chapter, the
../texinfo/texinfo.txi(,17153) central part is blank, and the right-hand part contains the page
../texinfo/texinfo.txi(,17154) number.@refill
../texinfo/texinfo.txi(,17155) 
../texinfo/texinfo.txi(,17156) @need 950
../texinfo/texinfo.txi(,17157) A single-sided page looks like this:
../texinfo/texinfo.txi(,17158) 
../texinfo/texinfo.txi(,17159) @example
../texinfo/texinfo.txi(,17160) @group
../texinfo/texinfo.txi(,17161)    _______________________
../texinfo/texinfo.txi(,17162)   |                       |
../texinfo/texinfo.txi(,17163)   | chapter   page number |
../texinfo/texinfo.txi(,17164)   |                       |
../texinfo/texinfo.txi(,17165)   | Start of text ...     |
../texinfo/texinfo.txi(,17166)   | ...                   |
../texinfo/texinfo.txi(,17167)   |                       |
../texinfo/texinfo.txi(,17168) 
../texinfo/texinfo.txi(,17169) @end group
../texinfo/texinfo.txi(,17170) @end example
../texinfo/texinfo.txi(,17171) 
../texinfo/texinfo.txi(,17172) The standard format for two-sided printing depends on whether the page
../texinfo/texinfo.txi(,17173) number is even or odd.  By convention, even-numbered pages are on the
../texinfo/texinfo.txi(,17174) left- and odd-numbered pages are on the right.  (@TeX{} will adjust the
../texinfo/texinfo.txi(,17175) widths of the left- and right-hand margins.  Usually, widths are
../texinfo/texinfo.txi(,17176) correct, but during double-sided printing, it is wise to check that
../texinfo/texinfo.txi(,17177) pages will bind properly---sometimes a printer will produce output in
../texinfo/texinfo.txi(,17178) which the even-numbered pages have a larger right-hand margin than the
../texinfo/texinfo.txi(,17179) odd-numbered pages.)@refill
../texinfo/texinfo.txi(,17180) 
../texinfo/texinfo.txi(,17181) In the standard double-sided format, the left part of the left-hand
../texinfo/texinfo.txi(,17182) (even-numbered) page contains the page number, the central part is
../texinfo/texinfo.txi(,17183) blank, and the right part contains the title (specified by the
../texinfo/texinfo.txi(,17184) @code{@@settitle} command).  The left part of the right-hand
../texinfo/texinfo.txi(,17185) (odd-numbered) page contains the name of the chapter, the central part
../texinfo/texinfo.txi(,17186) is blank, and the right part contains the page number.@refill
../texinfo/texinfo.txi(,17187) 
../texinfo/texinfo.txi(,17188) @need 750
../texinfo/texinfo.txi(,17189) Two pages, side by side as in an open book, look like this:@refill
../texinfo/texinfo.txi(,17190) 
../texinfo/texinfo.txi(,17191) @example
../texinfo/texinfo.txi(,17192) @group
../texinfo/texinfo.txi(,17193)    _______________________     _______________________
../texinfo/texinfo.txi(,17194)   |                       |   |                       |
../texinfo/texinfo.txi(,17195)   | page number     title |   | chapter   page number |
../texinfo/texinfo.txi(,17196)   |                       |   |                       |
../texinfo/texinfo.txi(,17197)   | Start of text ...     |   | More  text ...        |
../texinfo/texinfo.txi(,17198)   | ...                   |   | ...                   |
../texinfo/texinfo.txi(,17199)   |                       |   |                       |
../texinfo/texinfo.txi(,17200) 
../texinfo/texinfo.txi(,17201) @end group
../texinfo/texinfo.txi(,17202) @end example
../texinfo/texinfo.txi(,17203) 
../texinfo/texinfo.txi(,17204) @noindent
../texinfo/texinfo.txi(,17205) The chapter name is preceded by the word ``Chapter'', the chapter number
../texinfo/texinfo.txi(,17206) and a colon.  This makes it easier to keep track of where you are in the
../texinfo/texinfo.txi(,17207) manual.@refill
../texinfo/texinfo.txi(,17208) 
../texinfo/texinfo.txi(,17209) @node Heading Choice, Custom Headings, Heading Format, Headings
../texinfo/texinfo.txi(,17210) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17211) @section Specifying the Type of Heading
../texinfo/texinfo.txi(,17212) 
../texinfo/texinfo.txi(,17213) @TeX{} does not begin to generate page headings for a standard Texinfo
../texinfo/texinfo.txi(,17214) file until it reaches the @code{@@end titlepage} command.  Thus, the
../texinfo/texinfo.txi(,17215) title and copyright pages are not numbered.  The @code{@@end
../texinfo/texinfo.txi(,17216) titlepage} command causes @TeX{} to begin to generate page headings
../texinfo/texinfo.txi(,17217) according to a standard format specified by the
../texinfo/texinfo.txi(,17218) @code{@@setchapternewpage} command that precedes the
../texinfo/texinfo.txi(,17219) @code{@@titlepage} section.@refill
../texinfo/texinfo.txi(,17220) 
../texinfo/texinfo.txi(,17221) @need 1000
../texinfo/texinfo.txi(,17222) There are four possibilities:@refill
../texinfo/texinfo.txi(,17223) 
../texinfo/texinfo.txi(,17224) @table @asis
../texinfo/texinfo.txi(,17225) @item No @code{@@setchapternewpage} command
../texinfo/texinfo.txi(,17226) Cause @TeX{} to specify the single-sided heading format, with chapters
../texinfo/texinfo.txi(,17227) on new pages. This is the same as @code{@@setchapternewpage on}.@refill
../texinfo/texinfo.txi(,17228) 
../texinfo/texinfo.txi(,17229) @item @code{@@setchapternewpage on}
../texinfo/texinfo.txi(,17230) Specify the single-sided heading format, with chapters on new pages.@refill
../texinfo/texinfo.txi(,17231) 
../texinfo/texinfo.txi(,17232) @item @code{@@setchapternewpage off}
../texinfo/texinfo.txi(,17233) Cause @TeX{} to start a new chapter on the same page as the last page of
../texinfo/texinfo.txi(,17234) the preceding chapter, after skipping some vertical whitespace.  Also
../texinfo/texinfo.txi(,17235) cause @TeX{} to typeset for single-sided printing.  (You can override
../texinfo/texinfo.txi(,17236) the headers format with the @code{@@headings double} command; see
../texinfo/texinfo.txi(,17237) @ref{headings on off, , The @code{@@headings} Command}.)@refill
../texinfo/texinfo.txi(,17238) 
../texinfo/texinfo.txi(,17239) @item @code{@@setchapternewpage odd}
../texinfo/texinfo.txi(,17240) Specify the double-sided heading format, with chapters on new pages.@refill
../texinfo/texinfo.txi(,17241) @end table
../texinfo/texinfo.txi(,17242) 
../texinfo/texinfo.txi(,17243) @noindent
../texinfo/texinfo.txi(,17244) Texinfo lacks an @code{@@setchapternewpage even} command.@refill
../texinfo/texinfo.txi(,17245) 
../texinfo/texinfo.txi(,17246) @node Custom Headings,  , Heading Choice, Headings
../texinfo/texinfo.txi(,17247) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17248) @section How to Make Your Own Headings
../texinfo/texinfo.txi(,17249) 
../texinfo/texinfo.txi(,17250) You can use the standard headings provided with Texinfo or specify
../texinfo/texinfo.txi(,17251) your own.  By default, Texinfo has no footers, so if you specify them,
../texinfo/texinfo.txi(,17252) the available page size for the main text will be slightly reduced.
../texinfo/texinfo.txi(,17253) 
../texinfo/texinfo.txi(,17254) Texinfo provides six commands for specifying headings and
../texinfo/texinfo.txi(,17255) footings:
../texinfo/texinfo.txi(,17256) @itemize @bullet
../texinfo/texinfo.txi(,17257) @item
../texinfo/texinfo.txi(,17258) @code{@@everyheading} @code{@@everyfooting} generate page headers and
../texinfo/texinfo.txi(,17259) footers that are the same for both even- and odd-numbered pages.
../texinfo/texinfo.txi(,17260) @item
../texinfo/texinfo.txi(,17261) @code{@@evenheading} and @code{@@evenfooting} command generate headers
../texinfo/texinfo.txi(,17262) and footers for even-numbered (left-hand) pages.
../texinfo/texinfo.txi(,17263) @item
../texinfo/texinfo.txi(,17264) @code{@@oddheading} and @code{@@oddfooting} generate headers and footers
../texinfo/texinfo.txi(,17265) for odd-numbered (right-hand) pages.
../texinfo/texinfo.txi(,17266) @end itemize
../texinfo/texinfo.txi(,17267) 
../texinfo/texinfo.txi(,17268) Write custom heading specifications in the Texinfo file immediately
../texinfo/texinfo.txi(,17269) after the @code{@@end titlepage} command.
../texinfo/texinfo.txi(,17270) You must cancel the predefined heading commands with the
../texinfo/texinfo.txi(,17271) @code{@@headings off} command before defining your own
../texinfo/texinfo.txi(,17272) specifications.@refill
../texinfo/texinfo.txi(,17273) 
../texinfo/texinfo.txi(,17274) @need 1000
../texinfo/texinfo.txi(,17275) Here is how to tell @TeX{} to place the chapter name at the left, the
../texinfo/texinfo.txi(,17276) page number in the center, and the date at the right of every header
../texinfo/texinfo.txi(,17277) for both even- and odd-numbered pages:@refill
../texinfo/texinfo.txi(,17278) 
../texinfo/texinfo.txi(,17279) @example
../texinfo/texinfo.txi(,17280) @group
../texinfo/texinfo.txi(,17281) @@headings off
../texinfo/texinfo.txi(,17282) @@everyheading @@thischapter @@| @@thispage @@| @@today@{@}
../texinfo/texinfo.txi(,17283) @end group
../texinfo/texinfo.txi(,17284) @end example
../texinfo/texinfo.txi(,17285) 
../texinfo/texinfo.txi(,17286) @noindent
../texinfo/texinfo.txi(,17287) You need to divide the left part from the central part and the central
../texinfo/texinfo.txi(,17288) part from the right part by inserting @samp{@@|} between parts.
../texinfo/texinfo.txi(,17289) Otherwise, the specification command will not be able to tell where
../texinfo/texinfo.txi(,17290) the text for one part ends and the next part begins.@refill
../texinfo/texinfo.txi(,17291) 
../texinfo/texinfo.txi(,17292) Each part can contain text or @@-commands.  The text
../texinfo/texinfo.txi(,17293) is printed as if the part were within an ordinary paragraph in the
../texinfo/texinfo.txi(,17294) body of the page.  The @@-commands replace
../texinfo/texinfo.txi(,17295) themselves with the page number, date, chapter name, or
../texinfo/texinfo.txi(,17296) whatever.@refill
../texinfo/texinfo.txi(,17297) 
../texinfo/texinfo.txi(,17298) @need 950
../texinfo/texinfo.txi(,17299) Here are the six heading and footing commands:@refill
../texinfo/texinfo.txi(,17300) 
../texinfo/texinfo.txi(,17301) @findex everyheading
../texinfo/texinfo.txi(,17302) @findex everyfooting
../texinfo/texinfo.txi(,17303) @table @code
../texinfo/texinfo.txi(,17304) @item @@everyheading @var{left} @@| @var{center} @@| @var{right}
../texinfo/texinfo.txi(,17305) @itemx @@everyfooting @var{left} @@| @var{center} @@| @var{right}
../texinfo/texinfo.txi(,17306) 
../texinfo/texinfo.txi(,17307) The `every' commands specify the format for both even- and odd-numbered
../texinfo/texinfo.txi(,17308) pages.  These commands are for documents that are printed on one side
../texinfo/texinfo.txi(,17309) of each sheet of paper, or for documents in which you want symmetrical
../texinfo/texinfo.txi(,17310) headers or footers.@refill
../texinfo/texinfo.txi(,17311) 
../texinfo/texinfo.txi(,17312) @findex evenheading
../texinfo/texinfo.txi(,17313) @findex evenfooting
../texinfo/texinfo.txi(,17314) @findex oddheading
../texinfo/texinfo.txi(,17315) @findex oddfooting
../texinfo/texinfo.txi(,17316) @item @@evenheading @var{left} @@| @var{center} @@| @var{right}
../texinfo/texinfo.txi(,17317) @itemx @@oddheading  @var{left} @@| @var{center} @@| @var{right}
../texinfo/texinfo.txi(,17318) 
../texinfo/texinfo.txi(,17319) @itemx @@evenfooting @var{left} @@| @var{center} @@| @var{right}
../texinfo/texinfo.txi(,17320) @itemx @@oddfooting  @var{left} @@| @var{center} @@| @var{right}
../texinfo/texinfo.txi(,17321) 
../texinfo/texinfo.txi(,17322) The `even' and `odd' commands specify the format for even-numbered
../texinfo/texinfo.txi(,17323) pages and odd-numbered pages.  These commands are for books and
../texinfo/texinfo.txi(,17324) manuals that are printed on both sides of each sheet of paper.
../texinfo/texinfo.txi(,17325) @end table
../texinfo/texinfo.txi(,17326) 
../texinfo/texinfo.txi(,17327) Use the @samp{@@this@dots{}} series of @@-commands to
../texinfo/texinfo.txi(,17328) provide the names of chapters
../texinfo/texinfo.txi(,17329) and sections and the page number.  You can use the
../texinfo/texinfo.txi(,17330) @samp{@@this@dots{}} commands in the left, center, or right portions
../texinfo/texinfo.txi(,17331) of headers and footers, or anywhere else in a Texinfo file so long as
../texinfo/texinfo.txi(,17332) they are between @code{@@iftex} and @code{@@end iftex} commands.@refill
../texinfo/texinfo.txi(,17333) 
../texinfo/texinfo.txi(,17334) @need 1000
../texinfo/texinfo.txi(,17335) Here are the @samp{@@this@dots{}} commands:@refill
../texinfo/texinfo.txi(,17336) 
../texinfo/texinfo.txi(,17337) @table @code
../texinfo/texinfo.txi(,17338) @findex thispage
../texinfo/texinfo.txi(,17339) @item @@thispage
../texinfo/texinfo.txi(,17340) Expands to the current page number.@refill
../texinfo/texinfo.txi(,17341) @c !!! Karl Berry says that `thissection' can fail on page breaks.
../texinfo/texinfo.txi(,17346) 
../texinfo/texinfo.txi(,17347) @findex thischaptername
../texinfo/texinfo.txi(,17348) @item @@thischaptername
../texinfo/texinfo.txi(,17349) Expands to the name of the current chapter.@refill
../texinfo/texinfo.txi(,17350) 
../texinfo/texinfo.txi(,17351) @findex thischapter
../texinfo/texinfo.txi(,17352) @item @@thischapter
../texinfo/texinfo.txi(,17353) Expands to the number and name of the current
../texinfo/texinfo.txi(,17354) chapter, in the format `Chapter 1: Title'.@refill
../texinfo/texinfo.txi(,17355) 
../texinfo/texinfo.txi(,17356) @findex thistitle
../texinfo/texinfo.txi(,17357) @item @@thistitle
../texinfo/texinfo.txi(,17358) Expands to the name of the document, as specified by the
../texinfo/texinfo.txi(,17359) @code{@@settitle} command.@refill
../texinfo/texinfo.txi(,17360) 
../texinfo/texinfo.txi(,17361) @findex thisfile
../texinfo/texinfo.txi(,17362) @item @@thisfile
../texinfo/texinfo.txi(,17363) For @code{@@include} files only: expands to the name of the current
../texinfo/texinfo.txi(,17364) @code{@@include} file.  If the current Texinfo source file is not an
../texinfo/texinfo.txi(,17365) @code{@@include} file, this command has no effect.  This command does
../texinfo/texinfo.txi(,17366) @emph{not} provide the name of the current Texinfo source file unless
../texinfo/texinfo.txi(,17367) it is an @code{@@include} file.  (@xref{Include Files}, for more
../texinfo/texinfo.txi(,17368) information about @code{@@include} files.)@refill
../texinfo/texinfo.txi(,17369) @end table
../texinfo/texinfo.txi(,17370) 
../texinfo/texinfo.txi(,17371) @noindent
../texinfo/texinfo.txi(,17372) You can also use the @code{@@today@{@}} command, which expands to the
../texinfo/texinfo.txi(,17373) current date, in `1 Jan 1900' format.@refill
../texinfo/texinfo.txi(,17374) @findex today
../texinfo/texinfo.txi(,17375) 
../texinfo/texinfo.txi(,17376) Other @@-commands and text are printed in a header or footer just as
../texinfo/texinfo.txi(,17377) if they were in the body of a page.  It is useful to incorporate text,
../texinfo/texinfo.txi(,17378) particularly when you are writing drafts:@refill
../texinfo/texinfo.txi(,17379) 
../texinfo/texinfo.txi(,17380) @example
../texinfo/texinfo.txi(,17381) @group
../texinfo/texinfo.txi(,17382) @@headings off
../texinfo/texinfo.txi(,17383) @@everyheading @@emph@{Draft!@} @@| @@thispage @@| @@thischapter
../texinfo/texinfo.txi(,17384) @@everyfooting @@| @@| Version: 0.27: @@today@{@}
../texinfo/texinfo.txi(,17385) @end group
../texinfo/texinfo.txi(,17386) @end example
../texinfo/texinfo.txi(,17387) 
../texinfo/texinfo.txi(,17388) Beware of overlong titles: they may overlap another part of the
../texinfo/texinfo.txi(,17389) header or footer and blot it out.@refill
../texinfo/texinfo.txi(,17390) 
../texinfo/texinfo.txi(,17391) 
../texinfo/texinfo.txi(,17392) @node Catching Mistakes
../texinfo/texinfo.txi(,17393) @appendix Formatting Mistakes
../texinfo/texinfo.txi(,17394) @cindex Structure, catching mistakes in
../texinfo/texinfo.txi(,17395) @cindex Nodes, catching mistakes
../texinfo/texinfo.txi(,17396) @cindex Catching mistakes
../texinfo/texinfo.txi(,17397) @cindex Correcting mistakes
../texinfo/texinfo.txi(,17398) @cindex Mistakes, catching
../texinfo/texinfo.txi(,17399) @cindex Problems, catching
../texinfo/texinfo.txi(,17400) @cindex Debugging the Texinfo structure
../texinfo/texinfo.txi(,17401) 
../texinfo/texinfo.txi(,17402) Besides mistakes in the content of your documentation, there are two
../texinfo/texinfo.txi(,17403) kinds of mistake you can make with Texinfo: you can make mistakes with
../texinfo/texinfo.txi(,17404) @@-commands, and you can make mistakes with the structure of the nodes
../texinfo/texinfo.txi(,17405) and chapters.
../texinfo/texinfo.txi(,17406) 
../texinfo/texinfo.txi(,17407) Emacs has two tools for catching the @@-command mistakes and two for
../texinfo/texinfo.txi(,17408) catching structuring mistakes.@refill
../texinfo/texinfo.txi(,17409) 
../texinfo/texinfo.txi(,17410) For finding problems with @@-commands, you can run @TeX{} or a region
../texinfo/texinfo.txi(,17411) formatting command on the region that has a problem; indeed, you can
../texinfo/texinfo.txi(,17412) run these commands on each region as you write it.@refill
../texinfo/texinfo.txi(,17413) 
../texinfo/texinfo.txi(,17414) For finding problems with the structure of nodes and chapters, you can use
../texinfo/texinfo.txi(,17415) @kbd{C-c C-s} (@code{texinfo-show-structure}) and the related @code{occur}
../texinfo/texinfo.txi(,17416) command and you can use the @kbd{M-x Info-validate} command.@refill
../texinfo/texinfo.txi(,17417) 
../texinfo/texinfo.txi(,17418) @menu
../texinfo/texinfo.txi(,17419) * makeinfo Preferred::          @code{makeinfo} finds errors.
../texinfo/texinfo.txi(,17420) * Debugging with Info::         How to catch errors with Info formatting.
../texinfo/texinfo.txi(,17421) * Debugging with TeX::          How to catch errors with @TeX{} formatting.
../texinfo/texinfo.txi(,17422) * Using texinfo-show-structure::  How to use @code{texinfo-show-structure}.
../texinfo/texinfo.txi(,17423) * Using occur::                 How to list all lines containing a pattern.
../texinfo/texinfo.txi(,17424) * Running Info-Validate::       How to find badly referenced nodes.
../texinfo/texinfo.txi(,17425) @end menu
../texinfo/texinfo.txi(,17426) 
../texinfo/texinfo.txi(,17427) @node makeinfo Preferred, Debugging with Info, Catching Mistakes, Catching Mistakes
../texinfo/texinfo.txi(,17429) @heading @code{makeinfo} Find Errors
../texinfo/texinfo.txi(,17431) 
../texinfo/texinfo.txi(,17432) The @code{makeinfo} program does an excellent job of catching errors
../texinfo/texinfo.txi(,17433) and reporting them---far better than @code{texinfo-format-region} or
../texinfo/texinfo.txi(,17434) @code{texinfo-format-buffer}.  In addition, the various functions for
../texinfo/texinfo.txi(,17435) automatically creating and updating node pointers and menus remove
../texinfo/texinfo.txi(,17436) many opportunities for human error.@refill
../texinfo/texinfo.txi(,17437) 
../texinfo/texinfo.txi(,17438) If you can, use the updating commands to create and insert pointers
../texinfo/texinfo.txi(,17439) and menus.  These prevent many errors.  Then use @code{makeinfo} (or
../texinfo/texinfo.txi(,17440) its Texinfo mode manifestations, @code{makeinfo-region} and
../texinfo/texinfo.txi(,17441) @code{makeinfo-buffer}) to format your file and check for other
../texinfo/texinfo.txi(,17442) errors.  This is the best way to work with Texinfo.  But if you
../texinfo/texinfo.txi(,17443) cannot use @code{makeinfo}, or your problem is very puzzling, then you
../texinfo/texinfo.txi(,17444) may want to use the tools described in this appendix.@refill
../texinfo/texinfo.txi(,17445) 
../texinfo/texinfo.txi(,17446) @node Debugging with Info, Debugging with TeX, makeinfo Preferred, Catching Mistakes
../texinfo/texinfo.txi(,17447) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17448) @section Catching Errors with Info Formatting
../texinfo/texinfo.txi(,17449) @cindex Catching errors with Info formatting
../texinfo/texinfo.txi(,17450) @cindex Debugging with Info formatting
../texinfo/texinfo.txi(,17451) 
../texinfo/texinfo.txi(,17452) After you have written part of a Texinfo file, you can use the
../texinfo/texinfo.txi(,17453) @code{texinfo-format-region} or the @code{makeinfo-region} command to
../texinfo/texinfo.txi(,17454) see whether the region formats properly.@refill
../texinfo/texinfo.txi(,17455) 
../texinfo/texinfo.txi(,17456) Most likely, however, you are reading this section because for some
../texinfo/texinfo.txi(,17457) reason you cannot use the @code{makeinfo-region} command; therefore, the
../texinfo/texinfo.txi(,17458) rest of this section presumes that you are using
../texinfo/texinfo.txi(,17459) @code{texinfo-format-region}.@refill
../texinfo/texinfo.txi(,17460) 
../texinfo/texinfo.txi(,17461) If you have made a mistake with an @@-command,
../texinfo/texinfo.txi(,17462) @code{texinfo-format-region} will stop processing at or after the
../texinfo/texinfo.txi(,17463) error and display an error message.  To see where in the buffer the
../texinfo/texinfo.txi(,17464) error occurred, switch to the @samp{*Info Region*} buffer; the cursor
../texinfo/texinfo.txi(,17465) will be in a position that is after the location of the error.  Also,
../texinfo/texinfo.txi(,17466) the text will not be formatted after the place where the error
../texinfo/texinfo.txi(,17467) occurred (or more precisely, where it was detected).@refill
../texinfo/texinfo.txi(,17468) 
../texinfo/texinfo.txi(,17469) For example, if you accidentally end a menu with the command @code{@@end
../texinfo/texinfo.txi(,17470) menus} with an `s' on the end, instead of with @code{@@end menu}, you
../texinfo/texinfo.txi(,17471) will see an error message that says:@refill
../texinfo/texinfo.txi(,17472) 
../texinfo/texinfo.txi(,17473) @example
../texinfo/texinfo.txi(,17474) @@end menus is not handled by texinfo
../texinfo/texinfo.txi(,17475) @end example
../texinfo/texinfo.txi(,17476) 
../texinfo/texinfo.txi(,17477) @noindent
../texinfo/texinfo.txi(,17478) The cursor will stop at the point in the buffer where the error
../texinfo/texinfo.txi(,17479) occurs, or not long after it.  The buffer will look like this:@refill
../texinfo/texinfo.txi(,17480) 
../texinfo/texinfo.txi(,17481) @example
../texinfo/texinfo.txi(,17482) @group
../texinfo/texinfo.txi(,17483) ---------- Buffer: *Info Region* ----------
../texinfo/texinfo.txi(,17484) * Menu:
../texinfo/texinfo.txi(,17485) 
../texinfo/texinfo.txi(,17486) * Using texinfo-show-structure::  How to use
../texinfo/texinfo.txi(,17487)                                   `texinfo-show-structure'
../texinfo/texinfo.txi(,17488)                                   to catch mistakes.
../texinfo/texinfo.txi(,17489) * Running Info-Validate::         How to check for
../texinfo/texinfo.txi(,17490)                                   unreferenced nodes.
../texinfo/texinfo.txi(,17491) @@end menus
../texinfo/texinfo.txi(,17492) @point{}
../texinfo/texinfo.txi(,17493) ---------- Buffer: *Info Region* ----------
../texinfo/texinfo.txi(,17494) @end group
../texinfo/texinfo.txi(,17495) @end example
../texinfo/texinfo.txi(,17496) 
../texinfo/texinfo.txi(,17497) The @code{texinfo-format-region} command sometimes provides slightly
../texinfo/texinfo.txi(,17498) odd error messages.  For example, the following cross reference fails to format:@refill
../texinfo/texinfo.txi(,17499) 
../texinfo/texinfo.txi(,17500) @example
../texinfo/texinfo.txi(,17501) (@@xref@{Catching Mistakes, for more info.)
../texinfo/texinfo.txi(,17502) @end example
../texinfo/texinfo.txi(,17503) 
../texinfo/texinfo.txi(,17504) @noindent
../texinfo/texinfo.txi(,17505) In this case, @code{texinfo-format-region} detects the missing closing
../texinfo/texinfo.txi(,17506) brace but displays a message that says @samp{Unbalanced parentheses}
../texinfo/texinfo.txi(,17507) rather than @samp{Unbalanced braces}.  This is because the formatting
../texinfo/texinfo.txi(,17508) command looks for mismatches between braces as if they were
../texinfo/texinfo.txi(,17509) parentheses.@refill
../texinfo/texinfo.txi(,17510) 
../texinfo/texinfo.txi(,17511) Sometimes @code{texinfo-format-region} fails to detect mistakes.  For
../texinfo/texinfo.txi(,17512) example, in the following, the closing brace is swapped with the
../texinfo/texinfo.txi(,17513) closing parenthesis:@refill
../texinfo/texinfo.txi(,17514) 
../texinfo/texinfo.txi(,17515) @example
../texinfo/texinfo.txi(,17516) (@@xref@{Catching Mistakes), for more info.@}
../texinfo/texinfo.txi(,17517) @end example
../texinfo/texinfo.txi(,17518) 
../texinfo/texinfo.txi(,17519) @noindent
../texinfo/texinfo.txi(,17520) Formatting produces:
../texinfo/texinfo.txi(,17521) @example
../texinfo/texinfo.txi(,17522) (*Note for more info.: Catching Mistakes)
../texinfo/texinfo.txi(,17523) @end example
../texinfo/texinfo.txi(,17524) 
../texinfo/texinfo.txi(,17525) The only way for you to detect this error is to realize that the
../texinfo/texinfo.txi(,17526) reference should have looked like this:@refill
../texinfo/texinfo.txi(,17527) 
../texinfo/texinfo.txi(,17528) @example
../texinfo/texinfo.txi(,17529) (*Note Catching Mistakes::, for more info.)
../texinfo/texinfo.txi(,17530) @end example
../texinfo/texinfo.txi(,17531) 
../texinfo/texinfo.txi(,17532) Incidentally, if you are reading this node in Info and type @kbd{f
../texinfo/texinfo.txi(,17533) @key{RET}} (@code{Info-follow-reference}), you will generate an error
../texinfo/texinfo.txi(,17534) message that says:
../texinfo/texinfo.txi(,17535) 
../texinfo/texinfo.txi(,17536) @example
../texinfo/texinfo.txi(,17537) No such node: "Catching Mistakes) The only way @dots{}
../texinfo/texinfo.txi(,17538) @end example
../texinfo/texinfo.txi(,17539) 
../texinfo/texinfo.txi(,17540) @noindent
../texinfo/texinfo.txi(,17541) This is because Info perceives the example of the error as the first
../texinfo/texinfo.txi(,17542) cross reference in this node and if you type a @key{RET} immediately
../texinfo/texinfo.txi(,17543) after typing the Info @kbd{f} command, Info will attempt to go to the
../texinfo/texinfo.txi(,17544) referenced node.  If you type @kbd{f catch @key{TAB} @key{RET}}, Info
../texinfo/texinfo.txi(,17545) will complete the node name of the correctly written example and take
../texinfo/texinfo.txi(,17546) you to the `Catching Mistakes' node.  (If you try this, you can return
../texinfo/texinfo.txi(,17547) from the `Catching Mistakes' node by typing @kbd{l}
../texinfo/texinfo.txi(,17548) (@code{Info-last}).)
../texinfo/texinfo.txi(,17549) 
../texinfo/texinfo.txi(,17550) @c !!! section on using Elisp debugger ignored.
../texinfo/texinfo.txi(,17632) 
../texinfo/texinfo.txi(,17633) @node Debugging with TeX, Using texinfo-show-structure, Debugging with Info, Catching Mistakes
../texinfo/texinfo.txi(,17634) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17635) @section Catching Errors with @TeX{} Formatting
../texinfo/texinfo.txi(,17636) @cindex Catching errors with @TeX{} formatting
../texinfo/texinfo.txi(,17637) @cindex Debugging with @TeX{} formatting
../texinfo/texinfo.txi(,17638) 
../texinfo/texinfo.txi(,17639) You can also catch mistakes when you format a file with @TeX{}.@refill
../texinfo/texinfo.txi(,17640) 
../texinfo/texinfo.txi(,17641) Usually, you will want to do this after you have run
../texinfo/texinfo.txi(,17642) @code{texinfo-format-buffer} (or, better, @code{makeinfo-buffer}) on
../texinfo/texinfo.txi(,17643) the same file, because @code{texinfo-format-buffer} sometimes displays
../texinfo/texinfo.txi(,17644) error messages that make more sense than @TeX{}.  (@xref{Debugging
../texinfo/texinfo.txi(,17645) with Info}, for more information.)@refill
../texinfo/texinfo.txi(,17646) 
../texinfo/texinfo.txi(,17647) For example, @TeX{} was run on a Texinfo file, part of which is shown
../texinfo/texinfo.txi(,17648) here:@refill
../texinfo/texinfo.txi(,17649) 
../texinfo/texinfo.txi(,17650) @example
../texinfo/texinfo.txi(,17651) ---------- Buffer: texinfo.texi ----------
../texinfo/texinfo.txi(,17652) name of the Texinfo file as an extension.  The
../texinfo/texinfo.txi(,17653) @@samp@{??@} are `wildcards' that cause the shell to
../texinfo/texinfo.txi(,17654) substitute all the raw index files.  (@@xref@{sorting
../texinfo/texinfo.txi(,17655) indices, for more information about sorting
../texinfo/texinfo.txi(,17656) indices.)@@refill
../texinfo/texinfo.txi(,17657) ---------- Buffer: texinfo.texi ----------
../texinfo/texinfo.txi(,17658) @end example
../texinfo/texinfo.txi(,17659) 
../texinfo/texinfo.txi(,17660) @noindent
../texinfo/texinfo.txi(,17661) (The cross reference lacks a closing brace.)
../texinfo/texinfo.txi(,17662) @TeX{} produced the following output, after which it stopped:@refill
../texinfo/texinfo.txi(,17663) 
../texinfo/texinfo.txi(,17664) @example
../texinfo/texinfo.txi(,17665) ---------- Buffer: *tex-shell* ----------
../texinfo/texinfo.txi(,17666) Runaway argument?
../texinfo/texinfo.txi(,17667) @{sorting indices, for more information about sorting
../texinfo/texinfo.txi(,17668) indices.) @@refill @@ETC.
../texinfo/texinfo.txi(,17669) ! Paragraph ended before @@xref was complete.
../texinfo/texinfo.txi(,17670) <to be read again>
../texinfo/texinfo.txi(,17671)                    @@par
../texinfo/texinfo.txi(,17672) l.27
../texinfo/texinfo.txi(,17673) 
../texinfo/texinfo.txi(,17674) ?
../texinfo/texinfo.txi(,17675) ---------- Buffer: *tex-shell* ----------
../texinfo/texinfo.txi(,17676) @end example
../texinfo/texinfo.txi(,17677) 
../texinfo/texinfo.txi(,17678) In this case, @TeX{} produced an accurate and
../texinfo/texinfo.txi(,17679) understandable error message:
../texinfo/texinfo.txi(,17680) 
../texinfo/texinfo.txi(,17681) @example
../texinfo/texinfo.txi(,17682) Paragraph ended before @@xref was complete.
../texinfo/texinfo.txi(,17683) @end example
../texinfo/texinfo.txi(,17684) 
../texinfo/texinfo.txi(,17685) @noindent
../texinfo/texinfo.txi(,17686) @samp{@@par} is an internal @TeX{} command of no relevance to Texinfo.
../texinfo/texinfo.txi(,17687) @samp{l.27} means that @TeX{} detected the problem on line 27 of the
../texinfo/texinfo.txi(,17688) Texinfo file.  The @samp{?} is the prompt @TeX{} uses in this
../texinfo/texinfo.txi(,17689) circumstance.@refill
../texinfo/texinfo.txi(,17690) 
../texinfo/texinfo.txi(,17691) Unfortunately, @TeX{} is not always so helpful, and sometimes you must
../texinfo/texinfo.txi(,17692) truly be a Sherlock Holmes to discover what went wrong.@refill
../texinfo/texinfo.txi(,17693) 
../texinfo/texinfo.txi(,17694) In any case, if you run into a problem like this, you can do one of three
../texinfo/texinfo.txi(,17695) things.@refill
../texinfo/texinfo.txi(,17696) 
../texinfo/texinfo.txi(,17697) @enumerate
../texinfo/texinfo.txi(,17698) @item
../texinfo/texinfo.txi(,17699) You can tell @TeX{} to continue running and ignore just this error by
../texinfo/texinfo.txi(,17700) typing @key{RET} at the @samp{?} prompt.@refill
../texinfo/texinfo.txi(,17701) 
../texinfo/texinfo.txi(,17702) @item
../texinfo/texinfo.txi(,17703) You can tell @TeX{} to continue running and to ignore all errors as best
../texinfo/texinfo.txi(,17704) it can by typing @kbd{r @key{RET}} at the @samp{?} prompt.@refill
../texinfo/texinfo.txi(,17705) 
../texinfo/texinfo.txi(,17706) This is often the best thing to do.  However, beware: the one error
../texinfo/texinfo.txi(,17707) may produce a cascade of additional error messages as its consequences
../texinfo/texinfo.txi(,17708) are felt through the rest of the file.  To stop @TeX{} when it is
../texinfo/texinfo.txi(,17709) producing such an avalanche of error messages, type @kbd{C-c} (or
../texinfo/texinfo.txi(,17710) @kbd{C-c C-c}, if you are running a shell inside Emacs).
../texinfo/texinfo.txi(,17711) 
../texinfo/texinfo.txi(,17712) @item
../texinfo/texinfo.txi(,17713) You can tell @TeX{} to stop this run by typing @kbd{x @key{RET}}
../texinfo/texinfo.txi(,17714) at the @samp{?} prompt.@refill
../texinfo/texinfo.txi(,17715) @end enumerate
../texinfo/texinfo.txi(,17716) 
../texinfo/texinfo.txi(,17717) If you are running @TeX{} inside Emacs, you need to switch to the shell
../texinfo/texinfo.txi(,17718) buffer and line at which @TeX{} offers the @samp{?} prompt.
../texinfo/texinfo.txi(,17719) 
../texinfo/texinfo.txi(,17720) Sometimes @TeX{} will format a file without producing error messages even
../texinfo/texinfo.txi(,17721) though there is a problem.  This usually occurs if a command is not ended
../texinfo/texinfo.txi(,17722) but @TeX{} is able to continue processing anyhow.  For example, if you fail
../texinfo/texinfo.txi(,17723) to end an itemized list with the @code{@@end itemize} command, @TeX{} will
../texinfo/texinfo.txi(,17724) write a DVI file that you can print out.  The only error message that
../texinfo/texinfo.txi(,17725) @TeX{} will give you is the somewhat mysterious comment that@refill
../texinfo/texinfo.txi(,17726) 
../texinfo/texinfo.txi(,17727) @example
../texinfo/texinfo.txi(,17728) (@@end occurred inside a group at level 1)
../texinfo/texinfo.txi(,17729) @end example
../texinfo/texinfo.txi(,17730) 
../texinfo/texinfo.txi(,17731) @noindent
../texinfo/texinfo.txi(,17732) However, if you print the DVI file, you will find that the text
../texinfo/texinfo.txi(,17733) of the file that follows the itemized list is entirely indented as if
../texinfo/texinfo.txi(,17734) it were part of the last item in the itemized list.  The error message
../texinfo/texinfo.txi(,17735) is the way @TeX{} says that it expected to find an @code{@@end}
../texinfo/texinfo.txi(,17736) command somewhere in the file; but that it could not determine where
../texinfo/texinfo.txi(,17737) it was needed.@refill
../texinfo/texinfo.txi(,17738) 
../texinfo/texinfo.txi(,17739) Another source of notoriously hard-to-find errors is a missing
../texinfo/texinfo.txi(,17740) @code{@@end group} command.  If you ever are stumped by
../texinfo/texinfo.txi(,17741) incomprehensible errors, look for a missing @code{@@end group} command
../texinfo/texinfo.txi(,17742) first.@refill
../texinfo/texinfo.txi(,17743) 
../texinfo/texinfo.txi(,17744) If the Texinfo file lacks header lines,
../texinfo/texinfo.txi(,17745) @TeX{} may stop in the
../texinfo/texinfo.txi(,17746) beginning of its run and display output that looks like the following.
../texinfo/texinfo.txi(,17747) The @samp{*} indicates that @TeX{} is waiting for input.@refill
../texinfo/texinfo.txi(,17748) 
../texinfo/texinfo.txi(,17749) @example
../texinfo/texinfo.txi(,17750) This is TeX, Version 3.14159 (Web2c 7.0)
../texinfo/texinfo.txi(,17751) (test.texinfo [1])
../texinfo/texinfo.txi(,17752) *
../texinfo/texinfo.txi(,17753) @end example
../texinfo/texinfo.txi(,17754) 
../texinfo/texinfo.txi(,17755) @noindent
../texinfo/texinfo.txi(,17756) In this case, simply type @kbd{\end @key{RET}} after the asterisk.  Then
../texinfo/texinfo.txi(,17757) write the header lines in the Texinfo file and run the @TeX{} command
../texinfo/texinfo.txi(,17758) again. (Note the use of the backslash, @samp{\}.  @TeX{} uses @samp{\}
../texinfo/texinfo.txi(,17759) instead of @samp{@@}; and in this circumstance, you are working
../texinfo/texinfo.txi(,17760) directly with @TeX{}, not with Texinfo.)@refill
../texinfo/texinfo.txi(,17761) 
../texinfo/texinfo.txi(,17762) @node Using texinfo-show-structure, Using occur, Debugging with TeX, Catching Mistakes
../texinfo/texinfo.txi(,17763) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17764) @section Using @code{texinfo-show-structure}
../texinfo/texinfo.txi(,17765) @cindex Showing the structure of a file
../texinfo/texinfo.txi(,17766) @findex texinfo-show-structure
../texinfo/texinfo.txi(,17767) 
../texinfo/texinfo.txi(,17768) It is not always easy to keep track of the nodes, chapters, sections, and
../texinfo/texinfo.txi(,17769) subsections of a Texinfo file.  This is especially true if you are revising
../texinfo/texinfo.txi(,17770) or adding to a Texinfo file that someone else has written.@refill
../texinfo/texinfo.txi(,17771) 
../texinfo/texinfo.txi(,17772) In GNU Emacs, in Texinfo mode, the @code{texinfo-show-structure}
../texinfo/texinfo.txi(,17773) command lists all the lines that begin with the @@-commands that
../texinfo/texinfo.txi(,17774) specify the structure: @code{@@chapter}, @code{@@section},
../texinfo/texinfo.txi(,17775) @code{@@appendix}, and so on.  With an argument (@w{@kbd{C-u}}
../texinfo/texinfo.txi(,17776) as prefix argument, if interactive),
../texinfo/texinfo.txi(,17777) the command also shows the @code{@@node} lines.  The
../texinfo/texinfo.txi(,17778) @code{texinfo-show-structure} command is bound to @kbd{C-c C-s} in
../texinfo/texinfo.txi(,17779) Texinfo mode, by default.@refill
../texinfo/texinfo.txi(,17780) 
../texinfo/texinfo.txi(,17781) The lines are displayed in a buffer called the @samp{*Occur*} buffer,
../texinfo/texinfo.txi(,17782) indented by hierarchical level.  For example, here is a part of what was
../texinfo/texinfo.txi(,17783) produced by running @code{texinfo-show-structure} on this manual:@refill
../texinfo/texinfo.txi(,17784) 
../texinfo/texinfo.txi(,17785) @example
../texinfo/texinfo.txi(,17786) @group
../texinfo/texinfo.txi(,17787)  Lines matching "^@@\\(chapter \\|sect\\|subs\\|subh\\|
../texinfo/texinfo.txi(,17788)  unnum\\|major\\|chapheading \\|heading \\|appendix\\)"
../texinfo/texinfo.txi(,17789)  in buffer texinfo.texi.
../texinfo/texinfo.txi(,17790)  @dots{}
../texinfo/texinfo.txi(,17791)  4177:@@chapter Nodes
../texinfo/texinfo.txi(,17792)  4198:    @@heading Two Paths
../texinfo/texinfo.txi(,17793)  4231:    @@section Node and Menu Illustration
../texinfo/texinfo.txi(,17794)  4337:    @@section The @@code@{@@@@node@} Command
../texinfo/texinfo.txi(,17795)  4393:        @@subheading Choosing Node and Pointer Names
../texinfo/texinfo.txi(,17796)  4417:        @@subsection How to Write an @@code@{@@@@node@} Line
../texinfo/texinfo.txi(,17797)  4469:        @@subsection @@code@{@@@@node@} Line Tips
../texinfo/texinfo.txi(,17798)  @dots{}
../texinfo/texinfo.txi(,17799) @end group
../texinfo/texinfo.txi(,17800) @end example
../texinfo/texinfo.txi(,17801) 
../texinfo/texinfo.txi(,17802) This says that lines 4337, 4393, and 4417 of @file{texinfo.texi} begin
../texinfo/texinfo.txi(,17803) with the @code{@@section}, @code{@@subheading}, and @code{@@subsection}
../texinfo/texinfo.txi(,17804) commands respectively.  If you move your cursor into the @samp{*Occur*}
../texinfo/texinfo.txi(,17805) window, you can position the cursor over one of the lines and use the
../texinfo/texinfo.txi(,17806) @kbd{C-c C-c} command (@code{occur-mode-goto-occurrence}), to jump to
../texinfo/texinfo.txi(,17807) the corresponding spot in the Texinfo file.  @xref{Other Repeating
../texinfo/texinfo.txi(,17808) Search, , Using Occur, emacs, The GNU Emacs Manual}, for more
../texinfo/texinfo.txi(,17809) information about @code{occur-mode-goto-occurrence}.@refill
../texinfo/texinfo.txi(,17810) 
../texinfo/texinfo.txi(,17811) The first line in the @samp{*Occur*} window describes the @dfn{regular
../texinfo/texinfo.txi(,17812) expression} specified by @var{texinfo-heading-pattern}.  This regular
../texinfo/texinfo.txi(,17813) expression is the pattern that @code{texinfo-show-structure} looks for.
../texinfo/texinfo.txi(,17814) @xref{Regexps, , Using Regular Expressions, emacs, The GNU Emacs Manual},
../texinfo/texinfo.txi(,17815) for more information.@refill
../texinfo/texinfo.txi(,17816) 
../texinfo/texinfo.txi(,17817) When you invoke the @code{texinfo-show-structure} command, Emacs will
../texinfo/texinfo.txi(,17818) display the structure of the whole buffer.  If you want to see the
../texinfo/texinfo.txi(,17819) structure of just a part of the buffer, of one chapter, for example,
../texinfo/texinfo.txi(,17820) use the @kbd{C-x n n} (@code{narrow-to-region}) command to mark the
../texinfo/texinfo.txi(,17821) region.  (@xref{Narrowing, , , emacs, The GNU Emacs Manual}.)  This is
../texinfo/texinfo.txi(,17822) how the example used above was generated.  (To see the whole buffer
../texinfo/texinfo.txi(,17823) again, use @kbd{C-x n w} (@code{widen}).)@refill
../texinfo/texinfo.txi(,17824) 
../texinfo/texinfo.txi(,17825) If you call @code{texinfo-show-structure} with a prefix argument by
../texinfo/texinfo.txi(,17826) typing @w{@kbd{C-u C-c C-s}}, it will list lines beginning with
../texinfo/texinfo.txi(,17827) @code{@@node} as well as the lines beginning with the @@-sign commands
../texinfo/texinfo.txi(,17828) for @code{@@chapter}, @code{@@section}, and the like.@refill
../texinfo/texinfo.txi(,17829) 
../texinfo/texinfo.txi(,17830) You can remind yourself of the structure of a Texinfo file by looking at
../texinfo/texinfo.txi(,17831) the list in the @samp{*Occur*} window; and if you have mis-named a node
../texinfo/texinfo.txi(,17832) or left out a section, you can correct the mistake.@refill
../texinfo/texinfo.txi(,17833) 
../texinfo/texinfo.txi(,17834) @node Using occur, Running Info-Validate, Using texinfo-show-structure, Catching Mistakes
../texinfo/texinfo.txi(,17835) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17836) @section Using @code{occur}
../texinfo/texinfo.txi(,17837) @cindex Occurrences, listing with @code{@@occur}
../texinfo/texinfo.txi(,17838) @findex occur
../texinfo/texinfo.txi(,17839) 
../texinfo/texinfo.txi(,17840) Sometimes the @code{texinfo-show-structure} command produces too much
../texinfo/texinfo.txi(,17841) information.  Perhaps you want to remind yourself of the overall structure
../texinfo/texinfo.txi(,17842) of a Texinfo file, and are overwhelmed by the detailed list produced by
../texinfo/texinfo.txi(,17843) @code{texinfo-show-structure}.  In this case, you can use the @code{occur}
../texinfo/texinfo.txi(,17844) command directly.  To do this, type@refill
../texinfo/texinfo.txi(,17845) 
../texinfo/texinfo.txi(,17846) @example
../texinfo/texinfo.txi(,17847) @kbd{M-x occur}
../texinfo/texinfo.txi(,17848) @end example
../texinfo/texinfo.txi(,17849) 
../texinfo/texinfo.txi(,17850) @noindent
../texinfo/texinfo.txi(,17851) and then, when prompted, type a @dfn{regexp}, a regular expression for
../texinfo/texinfo.txi(,17852) the pattern you want to match.  (@xref{Regexps, , Regular Expressions,
../texinfo/texinfo.txi(,17853) emacs, The GNU Emacs Manual}.)  The @code{occur} command works from
../texinfo/texinfo.txi(,17854) the current location of the cursor in the buffer to the end of the
../texinfo/texinfo.txi(,17855) buffer.  If you want to run @code{occur} on the whole buffer, place
../texinfo/texinfo.txi(,17856) the cursor at the beginning of the buffer.@refill
../texinfo/texinfo.txi(,17857) 
../texinfo/texinfo.txi(,17858) For example, to see all the lines that contain the word
../texinfo/texinfo.txi(,17859) @samp{@@chapter} in them, just type @samp{@@chapter}.  This will
../texinfo/texinfo.txi(,17860) produce a list of the chapters.  It will also list all the sentences
../texinfo/texinfo.txi(,17861) with @samp{@@chapter} in the middle of the line.@refill
../texinfo/texinfo.txi(,17862) 
../texinfo/texinfo.txi(,17863) If you want to see only those lines that start with the word
../texinfo/texinfo.txi(,17864) @samp{@@chapter}, type @samp{^@@chapter} when prompted by
../texinfo/texinfo.txi(,17865) @code{occur}.  If you want to see all the lines that end with a word
../texinfo/texinfo.txi(,17866) or phrase, end the last word with a @samp{$}; for example,
../texinfo/texinfo.txi(,17867) @samp{catching mistakes$}.  This can be helpful when you want to see
../texinfo/texinfo.txi(,17868) all the nodes that are part of the same chapter or section and
../texinfo/texinfo.txi(,17869) therefore have the same `Up' pointer.@refill
../texinfo/texinfo.txi(,17870) 
../texinfo/texinfo.txi(,17871) @xref{Other Repeating Search, , Using Occur, emacs , The GNU Emacs Manual},
../texinfo/texinfo.txi(,17872) for more information.@refill
../texinfo/texinfo.txi(,17873) 
../texinfo/texinfo.txi(,17874) @node Running Info-Validate,  , Using occur, Catching Mistakes
../texinfo/texinfo.txi(,17875) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17876) @section Finding Badly Referenced Nodes
../texinfo/texinfo.txi(,17877) @findex Info-validate
../texinfo/texinfo.txi(,17878) @cindex Nodes, checking for badly referenced
../texinfo/texinfo.txi(,17879) @cindex Checking for badly referenced nodes
../texinfo/texinfo.txi(,17880) @cindex Looking for badly referenced nodes
../texinfo/texinfo.txi(,17881) @cindex Finding badly referenced nodes
../texinfo/texinfo.txi(,17882) @cindex Badly referenced nodes
../texinfo/texinfo.txi(,17883) 
../texinfo/texinfo.txi(,17884) You can use the @code{Info-validate} command to check whether any of
../texinfo/texinfo.txi(,17885) the `Next', `Previous', `Up' or other node pointers fail to point to a
../texinfo/texinfo.txi(,17886) node.  This command checks that every node pointer points to an
../texinfo/texinfo.txi(,17887) existing node.  The @code{Info-validate} command works only on Info
../texinfo/texinfo.txi(,17888) files, not on Texinfo files.@refill
../texinfo/texinfo.txi(,17889) 
../texinfo/texinfo.txi(,17890) The @code{makeinfo} program validates pointers automatically, so you
../texinfo/texinfo.txi(,17891) do not need to use the @code{Info-validate} command if you are using
../texinfo/texinfo.txi(,17892) @code{makeinfo}.  You only may need to use @code{Info-validate} if you
../texinfo/texinfo.txi(,17893) are unable to run @code{makeinfo} and instead must create an Info file
../texinfo/texinfo.txi(,17894) using @code{texinfo-format-region} or @code{texinfo-format-buffer}, or
../texinfo/texinfo.txi(,17895) if you write an Info file from scratch.@refill
../texinfo/texinfo.txi(,17896) 
../texinfo/texinfo.txi(,17897) @menu
../texinfo/texinfo.txi(,17898) * Using Info-validate::         How to run @code{Info-validate}.
../texinfo/texinfo.txi(,17899) * Unsplit::                     How to create an unsplit file.
../texinfo/texinfo.txi(,17900) * Tagifying::                   How to tagify a file.
../texinfo/texinfo.txi(,17901) * Splitting::                   How to split a file manually.
../texinfo/texinfo.txi(,17902) @end menu
../texinfo/texinfo.txi(,17903) 
../texinfo/texinfo.txi(,17904) @node Using Info-validate, Unsplit, Running Info-Validate, Running Info-Validate
../texinfo/texinfo.txi(,17905) @subsection Running @code{Info-validate}
../texinfo/texinfo.txi(,17906) @cindex Running @code{Info-validate}
../texinfo/texinfo.txi(,17907) @cindex Info validating a large file
../texinfo/texinfo.txi(,17908) @cindex Validating a large file
../texinfo/texinfo.txi(,17909) 
../texinfo/texinfo.txi(,17910) To use @code{Info-validate}, visit the Info file you wish to check and
../texinfo/texinfo.txi(,17911) type:@refill
../texinfo/texinfo.txi(,17912) 
../texinfo/texinfo.txi(,17913) @example
../texinfo/texinfo.txi(,17914) M-x Info-validate
../texinfo/texinfo.txi(,17915) @end example
../texinfo/texinfo.txi(,17916) 
../texinfo/texinfo.txi(,17917) @noindent
../texinfo/texinfo.txi(,17918) Note that the @code{Info-validate} command requires an upper case
../texinfo/texinfo.txi(,17919) `I'.  You may also need to create a tag table before running
../texinfo/texinfo.txi(,17920) @code{Info-validate}.  @xref{Tagifying}.
../texinfo/texinfo.txi(,17921) 
../texinfo/texinfo.txi(,17922) If your file is valid, you will receive a message that says ``File appears
../texinfo/texinfo.txi(,17923) valid''.  However, if you have a pointer that does not point to a node,
../texinfo/texinfo.txi(,17924) error messages will be displayed in a buffer called @samp{*problems in
../texinfo/texinfo.txi(,17925) info file*}.@refill
../texinfo/texinfo.txi(,17926) 
../texinfo/texinfo.txi(,17927) For example, @code{Info-validate} was run on a test file that contained
../texinfo/texinfo.txi(,17928) only the first node of this manual.  One of the messages said:@refill
../texinfo/texinfo.txi(,17929) 
../texinfo/texinfo.txi(,17930) @example
../texinfo/texinfo.txi(,17931) In node "Overview", invalid Next: Texinfo Mode
../texinfo/texinfo.txi(,17932) @end example
../texinfo/texinfo.txi(,17933) 
../texinfo/texinfo.txi(,17934) @noindent
../texinfo/texinfo.txi(,17935) This meant that the node called @samp{Overview} had a `Next' pointer that
../texinfo/texinfo.txi(,17936) did not point to anything (which was true in this case, since the test file
../texinfo/texinfo.txi(,17937) had only one node in it).@refill
../texinfo/texinfo.txi(,17938) 
../texinfo/texinfo.txi(,17939) Now suppose we add a node named @samp{Texinfo Mode} to our test case
../texinfo/texinfo.txi(,17940) but we do not specify a `Previous' for this node.  Then we will get
../texinfo/texinfo.txi(,17941) the following error message:@refill
../texinfo/texinfo.txi(,17942) 
../texinfo/texinfo.txi(,17943) @example
../texinfo/texinfo.txi(,17944) In node "Texinfo Mode", should have Previous: Overview
../texinfo/texinfo.txi(,17945) @end example
../texinfo/texinfo.txi(,17946) 
../texinfo/texinfo.txi(,17947) @noindent
../texinfo/texinfo.txi(,17948) This is because every `Next' pointer should be matched by a
../texinfo/texinfo.txi(,17949) `Previous' (in the node where the `Next' points) which points back.@refill
../texinfo/texinfo.txi(,17950) 
../texinfo/texinfo.txi(,17951) @code{Info-validate} also checks that all menu entries and cross references
../texinfo/texinfo.txi(,17952) point to actual nodes.@refill
../texinfo/texinfo.txi(,17953) 
../texinfo/texinfo.txi(,17954) @code{Info-validate} requires a tag table and does not work with files
../texinfo/texinfo.txi(,17955) that have been split.  (The @code{texinfo-format-buffer} command
../texinfo/texinfo.txi(,17956) automatically splits large files.)  In order to use @code{Info-validate}
../texinfo/texinfo.txi(,17957) on a large file, you must run @code{texinfo-format-buffer} with an
../texinfo/texinfo.txi(,17958) argument so that it does not split the Info file; and you must create a
../texinfo/texinfo.txi(,17959) tag table for the unsplit file.
../texinfo/texinfo.txi(,17960) 
../texinfo/texinfo.txi(,17961) @node Unsplit, Tagifying, Using Info-validate, Running Info-Validate
../texinfo/texinfo.txi(,17962) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,17963) @subsection Creating an Unsplit File
../texinfo/texinfo.txi(,17964) @cindex Creating an unsplit file
../texinfo/texinfo.txi(,17965) @cindex Unsplit file creation
../texinfo/texinfo.txi(,17966) 
../texinfo/texinfo.txi(,17967) You can run @code{Info-validate} only on a single Info file that has a
../texinfo/texinfo.txi(,17968) tag table.  The command will not work on the indirect subfiles that
../texinfo/texinfo.txi(,17969) are generated when a master file is split.  If you have a large file
../texinfo/texinfo.txi(,17970) (longer than 70,000 bytes or so), you need to run the
../texinfo/texinfo.txi(,17971) @code{texinfo-format-buffer} or @code{makeinfo-buffer} command in such
../texinfo/texinfo.txi(,17972) a way that it does not create indirect subfiles.  You will also need
../texinfo/texinfo.txi(,17973) to create a tag table for the Info file.  After you have done this,
../texinfo/texinfo.txi(,17974) you can run @code{Info-validate} and look for badly referenced
../texinfo/texinfo.txi(,17975) nodes.@refill
../texinfo/texinfo.txi(,17976) 
../texinfo/texinfo.txi(,17977) The first step is to create an unsplit Info file.  To prevent
../texinfo/texinfo.txi(,17978) @code{texinfo-format-buffer} from splitting a Texinfo file into
../texinfo/texinfo.txi(,17979) smaller Info files, give a prefix to the @kbd{M-x
../texinfo/texinfo.txi(,17980) texinfo-format-buffer} command:@refill
../texinfo/texinfo.txi(,17981) 
../texinfo/texinfo.txi(,17982) @example
../texinfo/texinfo.txi(,17983) C-u M-x texinfo-format-buffer
../texinfo/texinfo.txi(,17984) @end example
../texinfo/texinfo.txi(,17985) 
../texinfo/texinfo.txi(,17986) @noindent
../texinfo/texinfo.txi(,17987) or else
../texinfo/texinfo.txi(,17988) 
../texinfo/texinfo.txi(,17989) @example
../texinfo/texinfo.txi(,17990) C-u C-c C-e C-b
../texinfo/texinfo.txi(,17991) @end example
../texinfo/texinfo.txi(,17992) 
../texinfo/texinfo.txi(,17993) @noindent
../texinfo/texinfo.txi(,17994) When you do this, Texinfo will not split the file and will not create
../texinfo/texinfo.txi(,17995) a tag table for it. @refill
../texinfo/texinfo.txi(,17996) @cindex Making a tag table manually
../texinfo/texinfo.txi(,17997) @cindex Tag table, making manually
../texinfo/texinfo.txi(,17998) 
../texinfo/texinfo.txi(,17999) @node Tagifying, Splitting, Unsplit, Running Info-Validate
../texinfo/texinfo.txi(,18000) @subsection Tagifying a File
../texinfo/texinfo.txi(,18001) 
../texinfo/texinfo.txi(,18002) After creating an unsplit Info file, you must create a tag table for
../texinfo/texinfo.txi(,18003) it.  Visit the Info file you wish to tagify and type:@refill
../texinfo/texinfo.txi(,18004) 
../texinfo/texinfo.txi(,18005) @example
../texinfo/texinfo.txi(,18006) M-x Info-tagify
../texinfo/texinfo.txi(,18007) @end example
../texinfo/texinfo.txi(,18008) 
../texinfo/texinfo.txi(,18009) @noindent
../texinfo/texinfo.txi(,18010) (Note the upper case @samp{I} in @code{Info-tagify}.)  This creates an
../texinfo/texinfo.txi(,18011) Info file with a tag table that you can validate.@refill
../texinfo/texinfo.txi(,18012) 
../texinfo/texinfo.txi(,18013) The third step is to validate the Info file:@refill
../texinfo/texinfo.txi(,18014) 
../texinfo/texinfo.txi(,18015) @example
../texinfo/texinfo.txi(,18016) M-x Info-validate
../texinfo/texinfo.txi(,18017) @end example
../texinfo/texinfo.txi(,18018) 
../texinfo/texinfo.txi(,18019) @noindent
../texinfo/texinfo.txi(,18020) (Note the upper case @samp{I} in @code{Info-validate}.)
../texinfo/texinfo.txi(,18021) In brief, the steps are:@refill
../texinfo/texinfo.txi(,18022) 
../texinfo/texinfo.txi(,18023) @example
../texinfo/texinfo.txi(,18024) @group
../texinfo/texinfo.txi(,18025) C-u M-x texinfo-format-buffer
../texinfo/texinfo.txi(,18026) M-x Info-tagify
../texinfo/texinfo.txi(,18027) M-x Info-validate
../texinfo/texinfo.txi(,18028) @end group
../texinfo/texinfo.txi(,18029) @end example
../texinfo/texinfo.txi(,18030) 
../texinfo/texinfo.txi(,18031) After you have validated the node structure, you can rerun
../texinfo/texinfo.txi(,18032) @code{texinfo-format-buffer} in the normal way so it will construct a
../texinfo/texinfo.txi(,18033) tag table and split the file automatically, or you can make the tag
../texinfo/texinfo.txi(,18034) table and split the file manually.@refill
../texinfo/texinfo.txi(,18035) 
../texinfo/texinfo.txi(,18036) @node Splitting,  , Tagifying, Running Info-Validate
../texinfo/texinfo.txi(,18037) @comment  node-name,  next,  previous,  up
../texinfo/texinfo.txi(,18038) @subsection Splitting a File Manually
../texinfo/texinfo.txi(,18039) @cindex Splitting an Info file manually
../texinfo/texinfo.txi(,18040) @cindex Info file, splitting manually
../texinfo/texinfo.txi(,18041) 
../texinfo/texinfo.txi(,18042) You should split a large file or else let the
../texinfo/texinfo.txi(,18043) @code{texinfo-format-buffer} or @code{makeinfo-buffer} command do it
../texinfo/texinfo.txi(,18044) for you automatically.  (Generally you will let one of the formatting
../texinfo/texinfo.txi(,18045) commands do this job for you.  @xref{Creating an Info File}.)@refill
../texinfo/texinfo.txi(,18046) 
../texinfo/texinfo.txi(,18047) The split-off files are called the indirect subfiles.@refill
../texinfo/texinfo.txi(,18048) 
../texinfo/texinfo.txi(,18049) Info files are split to save memory.  With smaller files, Emacs does not
../texinfo/texinfo.txi(,18050) have make such a large buffer to hold the information.@refill
../texinfo/texinfo.txi(,18051) 
../texinfo/texinfo.txi(,18052) If an Info file has more than 30 nodes, you should also make a tag
../texinfo/texinfo.txi(,18053) table for it. @xref{Using Info-validate}, for information
../texinfo/texinfo.txi(,18054) about creating a tag table.  (Again, tag tables are usually created
../texinfo/texinfo.txi(,18055) automatically by the formatting command; you only need to create a tag
../texinfo/texinfo.txi(,18056) table yourself if you are doing the job manually.  Most likely, you
../texinfo/texinfo.txi(,18057) will do this for a large, unsplit file on which you have run
../texinfo/texinfo.txi(,18058) @code{Info-validate}.)@refill
../texinfo/texinfo.txi(,18059) 
../texinfo/texinfo.txi(,18060) @c Info-split is autoloaded in `loaddefs.el' in Emacs 18.51
../texinfo/texinfo.txi(,18066) 
../texinfo/texinfo.txi(,18067) Visit the Info file you wish to tagify and split and type the two
../texinfo/texinfo.txi(,18068) commands:@refill
../texinfo/texinfo.txi(,18069) 
../texinfo/texinfo.txi(,18070) @example
../texinfo/texinfo.txi(,18071) M-x Info-tagify
../texinfo/texinfo.txi(,18072) M-x Info-split
../texinfo/texinfo.txi(,18073) @end example
../texinfo/texinfo.txi(,18074) 
../texinfo/texinfo.txi(,18075) @noindent
../texinfo/texinfo.txi(,18076) (Note that the @samp{I} in @samp{Info} is upper case.)@refill
../texinfo/texinfo.txi(,18077) 
../texinfo/texinfo.txi(,18078) When you use the @code{Info-split} command, the buffer is modified into a
../texinfo/texinfo.txi(,18079) (small) Info file which lists the indirect subfiles.  This file should be
../texinfo/texinfo.txi(,18080) saved in place of the original visited file.  The indirect subfiles are
../texinfo/texinfo.txi(,18081) written in the same directory the original file is in, with names generated
../texinfo/texinfo.txi(,18082) by appending @samp{-} and a number to the original file name.@refill
../texinfo/texinfo.txi(,18083) 
../texinfo/texinfo.txi(,18084) The primary file still functions as an Info file, but it contains just
../texinfo/texinfo.txi(,18085) the tag table and a directory of subfiles.@refill
../texinfo/texinfo.txi(,18086) 
../texinfo/texinfo.txi(,18087) 
../texinfo/texinfo.txi(,18088) @node Refilling Paragraphs
../texinfo/texinfo.txi(,18089) @appendix Refilling Paragraphs
../texinfo/texinfo.txi(,18090) @cindex Refilling paragraphs
../texinfo/texinfo.txi(,18091) @cindex Filling paragraphs
../texinfo/texinfo.txi(,18092) @cindex Paragraphs, filling
../texinfo/texinfo.txi(,18093) @findex refill
../texinfo/texinfo.txi(,18094) 
../texinfo/texinfo.txi(,18095) The @code{@@refill} command refills and, optionally, indents the first
../texinfo/texinfo.txi(,18096) line of a paragraph.@footnote{Perhaps the command should have been
../texinfo/texinfo.txi(,18097) called the @code{@@refillandindent} command, but @code{@@refill} is
../texinfo/texinfo.txi(,18098) shorter and the name was chosen before indenting was possible.} The
../texinfo/texinfo.txi(,18099) @code{@@refill} command is no longer important, but we describe it here
../texinfo/texinfo.txi(,18100) because you once needed it.  You will see it in many old Texinfo
../texinfo/texinfo.txi(,18101) files.@refill
../texinfo/texinfo.txi(,18102) 
../texinfo/texinfo.txi(,18103) Without refilling, paragraphs containing long @@-constructs may look
../texinfo/texinfo.txi(,18104) bad after formatting because the formatter removes @@-commands and
../texinfo/texinfo.txi(,18105) shortens some lines more than others.  In the past, neither the
../texinfo/texinfo.txi(,18106) @code{texinfo-format-region} command nor the
../texinfo/texinfo.txi(,18107) @code{texinfo-format-buffer} command refilled paragraphs
../texinfo/texinfo.txi(,18108) automatically.  The @code{@@refill} command had to be written at the
../texinfo/texinfo.txi(,18109) end of every paragraph to cause these formatters to fill them.  (Both
../texinfo/texinfo.txi(,18110) @TeX{} and @code{makeinfo} have always refilled paragraphs
../texinfo/texinfo.txi(,18111) automatically.)  Now, all the Info formatters automatically fill and
../texinfo/texinfo.txi(,18112) indent those paragraphs that need to be filled and indented.@refill
../texinfo/texinfo.txi(,18113) 
../texinfo/texinfo.txi(,18114) The @code{@@refill} command causes @code{texinfo-format-region} and
../texinfo/texinfo.txi(,18115) @code{texinfo-format-buffer} to refill a paragraph in the Info file
../texinfo/texinfo.txi(,18116) @emph{after} all the other processing has been done.  For this reason,
../texinfo/texinfo.txi(,18117) you can not use @code{@@refill} with a paragraph containing either
../texinfo/texinfo.txi(,18118) @code{@@*} or @code{@@w@{ @dots{} @}} since the refilling action will
../texinfo/texinfo.txi(,18119) override those two commands.@refill
../texinfo/texinfo.txi(,18120) 
../texinfo/texinfo.txi(,18121) The @code{texinfo-format-region} and @code{texinfo-format-buffer}
../texinfo/texinfo.txi(,18122) commands now automatically append @code{@@refill} to the end of each
../texinfo/texinfo.txi(,18123) paragraph that should be filled.  They do not append @code{@@refill} to
../texinfo/texinfo.txi(,18124) the ends of paragraphs that contain @code{@@*} or @w{@code{@@w@{ @dots{}@}}}
../texinfo/texinfo.txi(,18125) and therefore do not refill or indent them.@refill
../texinfo/texinfo.txi(,18126) 
../texinfo/texinfo.txi(,18127) 
../texinfo/texinfo.txi(,18128) @node Command Syntax
../texinfo/texinfo.txi(,18129) @appendix @@-Command Syntax
../texinfo/texinfo.txi(,18130) @cindex @@-command syntax
../texinfo/texinfo.txi(,18131) @cindex Syntax, of @@-commands
../texinfo/texinfo.txi(,18132) @cindex Command syntax
../texinfo/texinfo.txi(,18133) 
../texinfo/texinfo.txi(,18134) The character @samp{@@} is used to start special Texinfo commands.
../texinfo/texinfo.txi(,18135) (It has the same meaning that @samp{\} has in plain @TeX{}.)  Texinfo
../texinfo/texinfo.txi(,18136) has four types of @@-command:@refill
../texinfo/texinfo.txi(,18137) 
../texinfo/texinfo.txi(,18138) @table @asis
../texinfo/texinfo.txi(,18139) @item 1. Non-alphabetic commands.
../texinfo/texinfo.txi(,18140) These commands consist of an @@ followed by a punctuation mark or other
../texinfo/texinfo.txi(,18141) character that is not part of the alphabet.  Non-alphabetic commands are
../texinfo/texinfo.txi(,18142) almost always part of the text within a paragraph, and never take any
../texinfo/texinfo.txi(,18143) argument.  The two characters (@@ and the other one) are complete in
../texinfo/texinfo.txi(,18144) themselves; none is followed by braces.  The non-alphabetic commands
../texinfo/texinfo.txi(,18145) are: @code{@@.}, @code{@@:}, @code{@@*}, @code{@@@kbd{SPACE}},
../texinfo/texinfo.txi(,18146) @code{@@@kbd{TAB}}, @code{@@@kbd{NL}}, @code{@@@@}, @code{@@@{}, and
../texinfo/texinfo.txi(,18147) @code{@@@}}.@refill
../texinfo/texinfo.txi(,18148) 
../texinfo/texinfo.txi(,18149) @item 2. Alphabetic commands that do not require arguments.
../texinfo/texinfo.txi(,18150) These commands start with @@ followed by a word followed by left- and
../texinfo/texinfo.txi(,18151) right-hand braces.  These commands insert special symbols in the
../texinfo/texinfo.txi(,18152) document; they do not require arguments.  For example,
../texinfo/texinfo.txi(,18153) @code{@@dots@{@}} @result{} @samp{@dots{}}, @code{@@equiv@{@}}
../texinfo/texinfo.txi(,18154) @result{} @samp{@equiv{}}, @code{@@TeX@{@}} @result{} `@TeX{}',
../texinfo/texinfo.txi(,18155) and @code{@@bullet@{@}} @result{} @samp{@bullet{}}.@refill
../texinfo/texinfo.txi(,18156) 
../texinfo/texinfo.txi(,18157) @item 3. Alphabetic commands that require arguments within braces.
../texinfo/texinfo.txi(,18158) These commands start with @@ followed by a letter or a word, followed by an
../texinfo/texinfo.txi(,18159) argument within braces.  For example, the command @code{@@dfn} indicates
../texinfo/texinfo.txi(,18160) the introductory or defining use of a term; it is used as follows: @samp{In
../texinfo/texinfo.txi(,18161) Texinfo, @@@@-commands are @@dfn@{mark-up@} commands.}@refill
../texinfo/texinfo.txi(,18162) 
../texinfo/texinfo.txi(,18163) @item 4. Alphabetic commands that occupy an entire line.
../texinfo/texinfo.txi(,18164) These commands occupy an entire line.  The line starts with @@,
../texinfo/texinfo.txi(,18165) followed by the name of the command (a word); for example, @code{@@center}
../texinfo/texinfo.txi(,18166) or @code{@@cindex}.  If no argument is needed, the word is followed by
../texinfo/texinfo.txi(,18167) the end of the line.  If there is an argument, it is separated from
../texinfo/texinfo.txi(,18168) the command name by a space.  Braces are not used.@refill
../texinfo/texinfo.txi(,18169) @end table
../texinfo/texinfo.txi(,18170) 
../texinfo/texinfo.txi(,18171) @cindex Braces and argument syntax
../texinfo/texinfo.txi(,18172) Thus, the alphabetic commands fall into classes that have
../texinfo/texinfo.txi(,18173) different argument syntaxes.  You cannot tell to which class a command
../texinfo/texinfo.txi(,18174) belongs by the appearance of its name, but you can tell by the
../texinfo/texinfo.txi(,18175) command's meaning: if the command stands for a glyph, it is in
../texinfo/texinfo.txi(,18176) class 2 and does not require an argument; if it makes sense to use the
../texinfo/texinfo.txi(,18177) command together with other text as part of a paragraph, the command
../texinfo/texinfo.txi(,18178) is in class 3 and must be followed by an argument in braces;
../texinfo/texinfo.txi(,18179) otherwise, it is in class 4 and uses the rest of the line as its
../texinfo/texinfo.txi(,18180) argument.@refill
../texinfo/texinfo.txi(,18181) 
../texinfo/texinfo.txi(,18182) The purpose of having a different syntax for commands of classes 3 and
../texinfo/texinfo.txi(,18183) 4 is to make Texinfo files easier to read, and also to help the GNU
../texinfo/texinfo.txi(,18184) Emacs paragraph and filling commands work properly.  There is only one
../texinfo/texinfo.txi(,18185) exception to this rule: the command @code{@@refill}, which is always
../texinfo/texinfo.txi(,18186) used at the end of a paragraph immediately following the final period
../texinfo/texinfo.txi(,18187) or other punctuation character.  @code{@@refill} takes no argument and
../texinfo/texinfo.txi(,18188) does @emph{not} require braces.  @code{@@refill} never confuses the
../texinfo/texinfo.txi(,18189) Emacs paragraph commands because it cannot appear at the beginning of
../texinfo/texinfo.txi(,18190) a line.@refill
../texinfo/texinfo.txi(,18191) 
../texinfo/texinfo.txi(,18192) 
../texinfo/texinfo.txi(,18193) @node Obtaining TeX
../texinfo/texinfo.txi(,18194) @appendix How to Obtain @TeX{}
../texinfo/texinfo.txi(,18195) @cindex Obtaining @TeX{}
../texinfo/texinfo.txi(,18196) @cindex @TeX{}, how to obtain
../texinfo/texinfo.txi(,18197) 
../texinfo/texinfo.txi(,18198) @c !!! Here is information about obtaining TeX.  Update it whenever.
../texinfo/texinfo.txi(,18199) @c !!! Also consider updating TeX.README on ftp.gnu.org.
../texinfo/texinfo.txi(,18200) @c     Updated by RJC on 1 March 1995, conversation with MacKay.
../texinfo/texinfo.txi(,18201) @c     Updated by kb@cs.umb.edu on 29 July 1996.
../texinfo/texinfo.txi(,18202) @c     Updated by kb@cs.umb.edu on 25 April 1997.
../texinfo/texinfo.txi(,18203) @c     Updated by kb@cs.umb.edu on 27 February 1998.
../texinfo/texinfo.txi(,18204) @TeX{} is freely redistributable.  You can obtain @TeX{} for Unix
../texinfo/texinfo.txi(,18205) systems via anonymous ftp or on physical media.  The core material
../texinfo/texinfo.txi(,18206) consists of the Web2c @TeX{} distribution (@uref{http://tug.org/web2c}).
../texinfo/texinfo.txi(,18207) 
../texinfo/texinfo.txi(,18208) Instructions for retrieval by anonymous ftp and information on other
../texinfo/texinfo.txi(,18209) available distributions:
../texinfo/texinfo.txi(,18210) @example
../texinfo/texinfo.txi(,18211) @uref{ftp://tug.org/tex/unixtex.ftp}
../texinfo/texinfo.txi(,18212) @uref{http://tug.org/unixtex.ftp}
../texinfo/texinfo.txi(,18213) @end example
../texinfo/texinfo.txi(,18214) 
../texinfo/texinfo.txi(,18215) The Free Software Foundation provides a core distribution on its Source
../texinfo/texinfo.txi(,18216) Code CD-ROM suitable for printing Texinfo manuals.  To order it, contact:
../texinfo/texinfo.txi(,18217) 
../texinfo/texinfo.txi(,18218) @display
../texinfo/texinfo.txi(,18219) @group
../texinfo/texinfo.txi(,18220) Free Software Foundation, Inc.
../texinfo/texinfo.txi(,18221) 59 Temple Place Suite 330
../texinfo/texinfo.txi(,18222) Boston, MA @ @ 02111-1307
../texinfo/texinfo.txi(,18223) USA
../texinfo/texinfo.txi(,18224) Telephone: @w{+1-617-542-5942}
../texinfo/texinfo.txi(,18225) Fax: (including Japan) @w{+1-617-542-2652}
../texinfo/texinfo.txi(,18226) Free Dial Fax (in Japan):
../texinfo/texinfo.txi(,18227) @w{ } @w{ } @w{ } 0031-13-2473 (KDD)
../texinfo/texinfo.txi(,18228) @w{ } @w{ } @w{ } 0066-3382-0158 (IDC)
../texinfo/texinfo.txi(,18229) Electronic mail: @code{gnu@@gnu.org}
../texinfo/texinfo.txi(,18230) @end group
../texinfo/texinfo.txi(,18231) @end display
../texinfo/texinfo.txi(,18232) 
../texinfo/texinfo.txi(,18233) Many other @TeX{} distributions are available; see
../texinfo/texinfo.txi(,18234) @uref{http://tug.org/}.
../texinfo/texinfo.txi(,18235) 
../texinfo/texinfo.txi(,18236) 
../texinfo/texinfo.txi(,18237) @c These are no longer ``new'', and the explanations
../texinfo/texinfo.txi(,18238) @c are all given elsewhere anyway, I think.  --karl, 25apr97.
../texinfo/texinfo.txi(,18239) @c So ignore the entire appendix.
../texinfo/texinfo.txi(,18726) 
../texinfo/texinfo.txi(,18727) 
../texinfo/texinfo.txi(,18728) @node Copying This Manual
../texinfo/texinfo.txi(,18729) @appendix Copying This Manual
../texinfo/texinfo.txi(,18730) 
../texinfo/texinfo.txi(,18731) @menu
../texinfo/texinfo.txi(,18732) * GNU Free Documentation License::  License for copying this manual.
../texinfo/texinfo.txi(,18733) @end menu
../texinfo/texinfo.txi(,18734) 
../texinfo/fdl.texi(,1) 
../texinfo/fdl.texi(,2) @node GNU Free Documentation License
../texinfo/fdl.texi(,3) @appendixsec GNU Free Documentation License
../texinfo/fdl.texi(,4) 
../texinfo/fdl.texi(,5) @cindex FDL, GNU Free Documentation License
../texinfo/fdl.texi(,6) @center Version 1.1, March 2000
../texinfo/fdl.texi(,7) 
../texinfo/fdl.texi(,8) @display
../texinfo/fdl.texi(,9) Copyright @copyright{} 2000 Free Software Foundation, Inc.
../texinfo/fdl.texi(,10) 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA
../texinfo/fdl.texi(,11) 
../texinfo/fdl.texi(,12) Everyone is permitted to copy and distribute verbatim copies
../texinfo/fdl.texi(,13) of this license document, but changing it is not allowed.
../texinfo/fdl.texi(,14) @end display
../texinfo/fdl.texi(,15) 
../texinfo/fdl.texi(,16) @enumerate 0
../texinfo/fdl.texi(,17) @item
../texinfo/fdl.texi(,18) PREAMBLE
../texinfo/fdl.texi(,19) 
../texinfo/fdl.texi(,20) The purpose of this License is to make a manual, textbook, or other
../texinfo/fdl.texi(,21) written document @dfn{free} in the sense of freedom: to assure everyone
../texinfo/fdl.texi(,22) the effective freedom to copy and redistribute it, with or without
../texinfo/fdl.texi(,23) modifying it, either commercially or noncommercially.  Secondarily,
../texinfo/fdl.texi(,24) this License preserves for the author and publisher a way to get
../texinfo/fdl.texi(,25) credit for their work, while not being considered responsible for
../texinfo/fdl.texi(,26) modifications made by others.
../texinfo/fdl.texi(,27) 
../texinfo/fdl.texi(,28) This License is a kind of ``copyleft'', which means that derivative
../texinfo/fdl.texi(,29) works of the document must themselves be free in the same sense.  It
../texinfo/fdl.texi(,30) complements the GNU General Public License, which is a copyleft
../texinfo/fdl.texi(,31) license designed for free software.
../texinfo/fdl.texi(,32) 
../texinfo/fdl.texi(,33) We have designed this License in order to use it for manuals for free
../texinfo/fdl.texi(,34) software, because free software needs free documentation: a free
../texinfo/fdl.texi(,35) program should come with manuals providing the same freedoms that the
../texinfo/fdl.texi(,36) software does.  But this License is not limited to software manuals;
../texinfo/fdl.texi(,37) it can be used for any textual work, regardless of subject matter or
../texinfo/fdl.texi(,38) whether it is published as a printed book.  We recommend this License
../texinfo/fdl.texi(,39) principally for works whose purpose is instruction or reference.
../texinfo/fdl.texi(,40) 
../texinfo/fdl.texi(,41) @item
../texinfo/fdl.texi(,42) APPLICABILITY AND DEFINITIONS
../texinfo/fdl.texi(,43) 
../texinfo/fdl.texi(,44) This License applies to any manual or other work that contains a
../texinfo/fdl.texi(,45) notice placed by the copyright holder saying it can be distributed
../texinfo/fdl.texi(,46) under the terms of this License.  The ``Document'', below, refers to any
../texinfo/fdl.texi(,47) such manual or work.  Any member of the public is a licensee, and is
../texinfo/fdl.texi(,48) addressed as ``you''.
../texinfo/fdl.texi(,49) 
../texinfo/fdl.texi(,50) A ``Modified Version'' of the Document means any work containing the
../texinfo/fdl.texi(,51) Document or a portion of it, either copied verbatim, or with
../texinfo/fdl.texi(,52) modifications and/or translated into another language.
../texinfo/fdl.texi(,53) 
../texinfo/fdl.texi(,54) A ``Secondary Section'' is a named appendix or a front-matter section of
../texinfo/fdl.texi(,55) the Document that deals exclusively with the relationship of the
../texinfo/fdl.texi(,56) publishers or authors of the Document to the Document's overall subject
../texinfo/fdl.texi(,57) (or to related matters) and contains nothing that could fall directly
../texinfo/fdl.texi(,58) within that overall subject.  (For example, if the Document is in part a
../texinfo/fdl.texi(,59) textbook of mathematics, a Secondary Section may not explain any
../texinfo/fdl.texi(,60) mathematics.)  The relationship could be a matter of historical
../texinfo/fdl.texi(,61) connection with the subject or with related matters, or of legal,
../texinfo/fdl.texi(,62) commercial, philosophical, ethical or political position regarding
../texinfo/fdl.texi(,63) them.
../texinfo/fdl.texi(,64) 
../texinfo/fdl.texi(,65) The ``Invariant Sections'' are certain Secondary Sections whose titles
../texinfo/fdl.texi(,66) are designated, as being those of Invariant Sections, in the notice
../texinfo/fdl.texi(,67) that says that the Document is released under this License.
../texinfo/fdl.texi(,68) 
../texinfo/fdl.texi(,69) The ``Cover Texts'' are certain short passages of text that are listed,
../texinfo/fdl.texi(,70) as Front-Cover Texts or Back-Cover Texts, in the notice that says that
../texinfo/fdl.texi(,71) the Document is released under this License.
../texinfo/fdl.texi(,72) 
../texinfo/fdl.texi(,73) A ``Transparent'' copy of the Document means a machine-readable copy,
../texinfo/fdl.texi(,74) represented in a format whose specification is available to the
../texinfo/fdl.texi(,75) general public, whose contents can be viewed and edited directly and
../texinfo/fdl.texi(,76) straightforwardly with generic text editors or (for images composed of
../texinfo/fdl.texi(,77) pixels) generic paint programs or (for drawings) some widely available
../texinfo/fdl.texi(,78) drawing editor, and that is suitable for input to text formatters or
../texinfo/fdl.texi(,79) for automatic translation to a variety of formats suitable for input
../texinfo/fdl.texi(,80) to text formatters.  A copy made in an otherwise Transparent file
../texinfo/fdl.texi(,81) format whose markup has been designed to thwart or discourage
../texinfo/fdl.texi(,82) subsequent modification by readers is not Transparent.  A copy that is
../texinfo/fdl.texi(,83) not ``Transparent'' is called ``Opaque''.
../texinfo/fdl.texi(,84) 
../texinfo/fdl.texi(,85) Examples of suitable formats for Transparent copies include plain
../texinfo/fdl.texi(,86) @sc{ascii} without markup, Texinfo input format, La@TeX{} input format,
../texinfo/fdl.texi(,87) @acronym{SGML} or @acronym{XML} using a publicly available
../texinfo/fdl.texi(,88) @acronym{DTD}, and standard-conforming simple @acronym{HTML} designed
../texinfo/fdl.texi(,89) for human modification.  Opaque formats include PostScript,
../texinfo/fdl.texi(,90) @acronym{PDF}, proprietary formats that can be read and edited only by
../texinfo/fdl.texi(,91) proprietary word processors, @acronym{SGML} or @acronym{XML} for which
../texinfo/fdl.texi(,92) the @acronym{DTD} and/or processing tools are not generally available,
../texinfo/fdl.texi(,93) and the machine-generated @acronym{HTML} produced by some word
../texinfo/fdl.texi(,94) processors for output purposes only.
../texinfo/fdl.texi(,95) 
../texinfo/fdl.texi(,96) The ``Title Page'' means, for a printed book, the title page itself,
../texinfo/fdl.texi(,97) plus such following pages as are needed to hold, legibly, the material
../texinfo/fdl.texi(,98) this License requires to appear in the title page.  For works in
../texinfo/fdl.texi(,99) formats which do not have any title page as such, ``Title Page'' means
../texinfo/fdl.texi(,100) the text near the most prominent appearance of the work's title,
../texinfo/fdl.texi(,101) preceding the beginning of the body of the text.
../texinfo/fdl.texi(,102) 
../texinfo/fdl.texi(,103) @item
../texinfo/fdl.texi(,104) VERBATIM COPYING
../texinfo/fdl.texi(,105) 
../texinfo/fdl.texi(,106) You may copy and distribute the Document in any medium, either
../texinfo/fdl.texi(,107) commercially or noncommercially, provided that this License, the
../texinfo/fdl.texi(,108) copyright notices, and the license notice saying this License applies
../texinfo/fdl.texi(,109) to the Document are reproduced in all copies, and that you add no other
../texinfo/fdl.texi(,110) conditions whatsoever to those of this License.  You may not use
../texinfo/fdl.texi(,111) technical measures to obstruct or control the reading or further
../texinfo/fdl.texi(,112) copying of the copies you make or distribute.  However, you may accept
../texinfo/fdl.texi(,113) compensation in exchange for copies.  If you distribute a large enough
../texinfo/fdl.texi(,114) number of copies you must also follow the conditions in section 3.
../texinfo/fdl.texi(,115) 
../texinfo/fdl.texi(,116) You may also lend copies, under the same conditions stated above, and
../texinfo/fdl.texi(,117) you may publicly display copies.
../texinfo/fdl.texi(,118) 
../texinfo/fdl.texi(,119) @item
../texinfo/fdl.texi(,120) COPYING IN QUANTITY
../texinfo/fdl.texi(,121) 
../texinfo/fdl.texi(,122) If you publish printed copies of the Document numbering more than 100,
../texinfo/fdl.texi(,123) and the Document's license notice requires Cover Texts, you must enclose
../texinfo/fdl.texi(,124) the copies in covers that carry, clearly and legibly, all these Cover
../texinfo/fdl.texi(,125) Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
../texinfo/fdl.texi(,126) the back cover.  Both covers must also clearly and legibly identify
../texinfo/fdl.texi(,127) you as the publisher of these copies.  The front cover must present
../texinfo/fdl.texi(,128) the full title with all words of the title equally prominent and
../texinfo/fdl.texi(,129) visible.  You may add other material on the covers in addition.
../texinfo/fdl.texi(,130) Copying with changes limited to the covers, as long as they preserve
../texinfo/fdl.texi(,131) the title of the Document and satisfy these conditions, can be treated
../texinfo/fdl.texi(,132) as verbatim copying in other respects.
../texinfo/fdl.texi(,133) 
../texinfo/fdl.texi(,134) If the required texts for either cover are too voluminous to fit
../texinfo/fdl.texi(,135) legibly, you should put the first ones listed (as many as fit
../texinfo/fdl.texi(,136) reasonably) on the actual cover, and continue the rest onto adjacent
../texinfo/fdl.texi(,137) pages.
../texinfo/fdl.texi(,138) 
../texinfo/fdl.texi(,139) If you publish or distribute Opaque copies of the Document numbering
../texinfo/fdl.texi(,140) more than 100, you must either include a machine-readable Transparent
../texinfo/fdl.texi(,141) copy along with each Opaque copy, or state in or with each Opaque copy
../texinfo/fdl.texi(,142) a publicly-accessible computer-network location containing a complete
../texinfo/fdl.texi(,143) Transparent copy of the Document, free of added material, which the
../texinfo/fdl.texi(,144) general network-using public has access to download anonymously at no
../texinfo/fdl.texi(,145) charge using public-standard network protocols.  If you use the latter
../texinfo/fdl.texi(,146) option, you must take reasonably prudent steps, when you begin
../texinfo/fdl.texi(,147) distribution of Opaque copies in quantity, to ensure that this
../texinfo/fdl.texi(,148) Transparent copy will remain thus accessible at the stated location
../texinfo/fdl.texi(,149) until at least one year after the last time you distribute an Opaque
../texinfo/fdl.texi(,150) copy (directly or through your agents or retailers) of that edition to
../texinfo/fdl.texi(,151) the public.
../texinfo/fdl.texi(,152) 
../texinfo/fdl.texi(,153) It is requested, but not required, that you contact the authors of the
../texinfo/fdl.texi(,154) Document well before redistributing any large number of copies, to give
../texinfo/fdl.texi(,155) them a chance to provide you with an updated version of the Document.
../texinfo/fdl.texi(,156) 
../texinfo/fdl.texi(,157) @item
../texinfo/fdl.texi(,158) MODIFICATIONS
../texinfo/fdl.texi(,159) 
../texinfo/fdl.texi(,160) You may copy and distribute a Modified Version of the Document under
../texinfo/fdl.texi(,161) the conditions of sections 2 and 3 above, provided that you release
../texinfo/fdl.texi(,162) the Modified Version under precisely this License, with the Modified
../texinfo/fdl.texi(,163) Version filling the role of the Document, thus licensing distribution
../texinfo/fdl.texi(,164) and modification of the Modified Version to whoever possesses a copy
../texinfo/fdl.texi(,165) of it.  In addition, you must do these things in the Modified Version:
../texinfo/fdl.texi(,166) 
../texinfo/fdl.texi(,167) @enumerate A
../texinfo/fdl.texi(,168) @item
../texinfo/fdl.texi(,169) Use in the Title Page (and on the covers, if any) a title distinct
../texinfo/fdl.texi(,170) from that of the Document, and from those of previous versions
../texinfo/fdl.texi(,171) (which should, if there were any, be listed in the History section
../texinfo/fdl.texi(,172) of the Document).  You may use the same title as a previous version
../texinfo/fdl.texi(,173) if the original publisher of that version gives permission.
../texinfo/fdl.texi(,174) 
../texinfo/fdl.texi(,175) @item
../texinfo/fdl.texi(,176) List on the Title Page, as authors, one or more persons or entities
../texinfo/fdl.texi(,177) responsible for authorship of the modifications in the Modified
../texinfo/fdl.texi(,178) Version, together with at least five of the principal authors of the
../texinfo/fdl.texi(,179) Document (all of its principal authors, if it has less than five).
../texinfo/fdl.texi(,180) 
../texinfo/fdl.texi(,181) @item
../texinfo/fdl.texi(,182) State on the Title page the name of the publisher of the
../texinfo/fdl.texi(,183) Modified Version, as the publisher.
../texinfo/fdl.texi(,184) 
../texinfo/fdl.texi(,185) @item
../texinfo/fdl.texi(,186) Preserve all the copyright notices of the Document.
../texinfo/fdl.texi(,187) 
../texinfo/fdl.texi(,188) @item
../texinfo/fdl.texi(,189) Add an appropriate copyright notice for your modifications
../texinfo/fdl.texi(,190) adjacent to the other copyright notices.
../texinfo/fdl.texi(,191) 
../texinfo/fdl.texi(,192) @item
../texinfo/fdl.texi(,193) Include, immediately after the copyright notices, a license notice
../texinfo/fdl.texi(,194) giving the public permission to use the Modified Version under the
../texinfo/fdl.texi(,195) terms of this License, in the form shown in the Addendum below.
../texinfo/fdl.texi(,196) 
../texinfo/fdl.texi(,197) @item
../texinfo/fdl.texi(,198) Preserve in that license notice the full lists of Invariant Sections
../texinfo/fdl.texi(,199) and required Cover Texts given in the Document's license notice.
../texinfo/fdl.texi(,200) 
../texinfo/fdl.texi(,201) @item
../texinfo/fdl.texi(,202) Include an unaltered copy of this License.
../texinfo/fdl.texi(,203) 
../texinfo/fdl.texi(,204) @item
../texinfo/fdl.texi(,205) Preserve the section entitled ``History'', and its title, and add to
../texinfo/fdl.texi(,206) it an item stating at least the title, year, new authors, and
../texinfo/fdl.texi(,207) publisher of the Modified Version as given on the Title Page.  If
../texinfo/fdl.texi(,208) there is no section entitled ``History'' in the Document, create one
../texinfo/fdl.texi(,209) stating the title, year, authors, and publisher of the Document as
../texinfo/fdl.texi(,210) given on its Title Page, then add an item describing the Modified
../texinfo/fdl.texi(,211) Version as stated in the previous sentence.
../texinfo/fdl.texi(,212) 
../texinfo/fdl.texi(,213) @item
../texinfo/fdl.texi(,214) Preserve the network location, if any, given in the Document for
../texinfo/fdl.texi(,215) public access to a Transparent copy of the Document, and likewise
../texinfo/fdl.texi(,216) the network locations given in the Document for previous versions
../texinfo/fdl.texi(,217) it was based on.  These may be placed in the ``History'' section.
../texinfo/fdl.texi(,218) You may omit a network location for a work that was published at
../texinfo/fdl.texi(,219) least four years before the Document itself, or if the original
../texinfo/fdl.texi(,220) publisher of the version it refers to gives permission.
../texinfo/fdl.texi(,221) 
../texinfo/fdl.texi(,222) @item
../texinfo/fdl.texi(,223) In any section entitled ``Acknowledgments'' or ``Dedications'',
../texinfo/fdl.texi(,224) preserve the section's title, and preserve in the section all the
../texinfo/fdl.texi(,225) substance and tone of each of the contributor acknowledgments
../texinfo/fdl.texi(,226) and/or dedications given therein.
../texinfo/fdl.texi(,227) 
../texinfo/fdl.texi(,228) @item
../texinfo/fdl.texi(,229) Preserve all the Invariant Sections of the Document,
../texinfo/fdl.texi(,230) unaltered in their text and in their titles.  Section numbers
../texinfo/fdl.texi(,231) or the equivalent are not considered part of the section titles.
../texinfo/fdl.texi(,232) 
../texinfo/fdl.texi(,233) @item
../texinfo/fdl.texi(,234) Delete any section entitled ``Endorsements''.  Such a section
../texinfo/fdl.texi(,235) may not be included in the Modified Version.
../texinfo/fdl.texi(,236) 
../texinfo/fdl.texi(,237) @item
../texinfo/fdl.texi(,238) Do not retitle any existing section as ``Endorsements''
../texinfo/fdl.texi(,239) or to conflict in title with any Invariant Section.
../texinfo/fdl.texi(,240) @end enumerate
../texinfo/fdl.texi(,241) 
../texinfo/fdl.texi(,242) If the Modified Version includes new front-matter sections or
../texinfo/fdl.texi(,243) appendices that qualify as Secondary Sections and contain no material
../texinfo/fdl.texi(,244) copied from the Document, you may at your option designate some or all
../texinfo/fdl.texi(,245) of these sections as invariant.  To do this, add their titles to the
../texinfo/fdl.texi(,246) list of Invariant Sections in the Modified Version's license notice.
../texinfo/fdl.texi(,247) These titles must be distinct from any other section titles.
../texinfo/fdl.texi(,248) 
../texinfo/fdl.texi(,249) You may add a section entitled ``Endorsements'', provided it contains
../texinfo/fdl.texi(,250) nothing but endorsements of your Modified Version by various
../texinfo/fdl.texi(,251) parties---for example, statements of peer review or that the text has
../texinfo/fdl.texi(,252) been approved by an organization as the authoritative definition of a
../texinfo/fdl.texi(,253) standard.
../texinfo/fdl.texi(,254) 
../texinfo/fdl.texi(,255) You may add a passage of up to five words as a Front-Cover Text, and a
../texinfo/fdl.texi(,256) passage of up to 25 words as a Back-Cover Text, to the end of the list
../texinfo/fdl.texi(,257) of Cover Texts in the Modified Version.  Only one passage of
../texinfo/fdl.texi(,258) Front-Cover Text and one of Back-Cover Text may be added by (or
../texinfo/fdl.texi(,259) through arrangements made by) any one entity.  If the Document already
../texinfo/fdl.texi(,260) includes a cover text for the same cover, previously added by you or
../texinfo/fdl.texi(,261) by arrangement made by the same entity you are acting on behalf of,
../texinfo/fdl.texi(,262) you may not add another; but you may replace the old one, on explicit
../texinfo/fdl.texi(,263) permission from the previous publisher that added the old one.
../texinfo/fdl.texi(,264) 
../texinfo/fdl.texi(,265) The author(s) and publisher(s) of the Document do not by this License
../texinfo/fdl.texi(,266) give permission to use their names for publicity for or to assert or
../texinfo/fdl.texi(,267) imply endorsement of any Modified Version.
../texinfo/fdl.texi(,268) 
../texinfo/fdl.texi(,269) @item
../texinfo/fdl.texi(,270) COMBINING DOCUMENTS
../texinfo/fdl.texi(,271) 
../texinfo/fdl.texi(,272) You may combine the Document with other documents released under this
../texinfo/fdl.texi(,273) License, under the terms defined in section 4 above for modified
../texinfo/fdl.texi(,274) versions, provided that you include in the combination all of the
../texinfo/fdl.texi(,275) Invariant Sections of all of the original documents, unmodified, and
../texinfo/fdl.texi(,276) list them all as Invariant Sections of your combined work in its
../texinfo/fdl.texi(,277) license notice.
../texinfo/fdl.texi(,278) 
../texinfo/fdl.texi(,279) The combined work need only contain one copy of this License, and
../texinfo/fdl.texi(,280) multiple identical Invariant Sections may be replaced with a single
../texinfo/fdl.texi(,281) copy.  If there are multiple Invariant Sections with the same name but
../texinfo/fdl.texi(,282) different contents, make the title of each such section unique by
../texinfo/fdl.texi(,283) adding at the end of it, in parentheses, the name of the original
../texinfo/fdl.texi(,284) author or publisher of that section if known, or else a unique number.
../texinfo/fdl.texi(,285) Make the same adjustment to the section titles in the list of
../texinfo/fdl.texi(,286) Invariant Sections in the license notice of the combined work.
../texinfo/fdl.texi(,287) 
../texinfo/fdl.texi(,288) In the combination, you must combine any sections entitled ``History''
../texinfo/fdl.texi(,289) in the various original documents, forming one section entitled
../texinfo/fdl.texi(,290) ``History''; likewise combine any sections entitled ``Acknowledgments'',
../texinfo/fdl.texi(,291) and any sections entitled ``Dedications''.  You must delete all sections
../texinfo/fdl.texi(,292) entitled ``Endorsements.''
../texinfo/fdl.texi(,293) 
../texinfo/fdl.texi(,294) @item
../texinfo/fdl.texi(,295) COLLECTIONS OF DOCUMENTS
../texinfo/fdl.texi(,296) 
../texinfo/fdl.texi(,297) You may make a collection consisting of the Document and other documents
../texinfo/fdl.texi(,298) released under this License, and replace the individual copies of this
../texinfo/fdl.texi(,299) License in the various documents with a single copy that is included in
../texinfo/fdl.texi(,300) the collection, provided that you follow the rules of this License for
../texinfo/fdl.texi(,301) verbatim copying of each of the documents in all other respects.
../texinfo/fdl.texi(,302) 
../texinfo/fdl.texi(,303) You may extract a single document from such a collection, and distribute
../texinfo/fdl.texi(,304) it individually under this License, provided you insert a copy of this
../texinfo/fdl.texi(,305) License into the extracted document, and follow this License in all
../texinfo/fdl.texi(,306) other respects regarding verbatim copying of that document.
../texinfo/fdl.texi(,307) 
../texinfo/fdl.texi(,308) @item
../texinfo/fdl.texi(,309) AGGREGATION WITH INDEPENDENT WORKS
../texinfo/fdl.texi(,310) 
../texinfo/fdl.texi(,311) A compilation of the Document or its derivatives with other separate
../texinfo/fdl.texi(,312) and independent documents or works, in or on a volume of a storage or
../texinfo/fdl.texi(,313) distribution medium, does not as a whole count as a Modified Version
../texinfo/fdl.texi(,314) of the Document, provided no compilation copyright is claimed for the
../texinfo/fdl.texi(,315) compilation.  Such a compilation is called an ``aggregate'', and this
../texinfo/fdl.texi(,316) License does not apply to the other self-contained works thus compiled
../texinfo/fdl.texi(,317) with the Document, on account of their being thus compiled, if they
../texinfo/fdl.texi(,318) are not themselves derivative works of the Document.
../texinfo/fdl.texi(,319) 
../texinfo/fdl.texi(,320) If the Cover Text requirement of section 3 is applicable to these
../texinfo/fdl.texi(,321) copies of the Document, then if the Document is less than one quarter
../texinfo/fdl.texi(,322) of the entire aggregate, the Document's Cover Texts may be placed on
../texinfo/fdl.texi(,323) covers that surround only the Document within the aggregate.
../texinfo/fdl.texi(,324) Otherwise they must appear on covers around the whole aggregate.
../texinfo/fdl.texi(,325) 
../texinfo/fdl.texi(,326) @item
../texinfo/fdl.texi(,327) TRANSLATION
../texinfo/fdl.texi(,328) 
../texinfo/fdl.texi(,329) Translation is considered a kind of modification, so you may
../texinfo/fdl.texi(,330) distribute translations of the Document under the terms of section 4.
../texinfo/fdl.texi(,331) Replacing Invariant Sections with translations requires special
../texinfo/fdl.texi(,332) permission from their copyright holders, but you may include
../texinfo/fdl.texi(,333) translations of some or all Invariant Sections in addition to the
../texinfo/fdl.texi(,334) original versions of these Invariant Sections.  You may include a
../texinfo/fdl.texi(,335) translation of this License provided that you also include the
../texinfo/fdl.texi(,336) original English version of this License.  In case of a disagreement
../texinfo/fdl.texi(,337) between the translation and the original English version of this
../texinfo/fdl.texi(,338) License, the original English version will prevail.
../texinfo/fdl.texi(,339) 
../texinfo/fdl.texi(,340) @item
../texinfo/fdl.texi(,341) TERMINATION
../texinfo/fdl.texi(,342) 
../texinfo/fdl.texi(,343) You may not copy, modify, sublicense, or distribute the Document except
../texinfo/fdl.texi(,344) as expressly provided for under this License.  Any other attempt to
../texinfo/fdl.texi(,345) copy, modify, sublicense or distribute the Document is void, and will
../texinfo/fdl.texi(,346) automatically terminate your rights under this License.  However,
../texinfo/fdl.texi(,347) parties who have received copies, or rights, from you under this
../texinfo/fdl.texi(,348) License will not have their licenses terminated so long as such
../texinfo/fdl.texi(,349) parties remain in full compliance.
../texinfo/fdl.texi(,350) 
../texinfo/fdl.texi(,351) @item
../texinfo/fdl.texi(,352) FUTURE REVISIONS OF THIS LICENSE
../texinfo/fdl.texi(,353) 
../texinfo/fdl.texi(,354) The Free Software Foundation may publish new, revised versions
../texinfo/fdl.texi(,355) of the GNU Free Documentation License from time to time.  Such new
../texinfo/fdl.texi(,356) versions will be similar in spirit to the present version, but may
../texinfo/fdl.texi(,357) differ in detail to address new problems or concerns.  See
../texinfo/fdl.texi(,358) @uref{http://www.gnu.org/copyleft/}.
../texinfo/fdl.texi(,359) 
../texinfo/fdl.texi(,360) Each version of the License is given a distinguishing version number.
../texinfo/fdl.texi(,361) If the Document specifies that a particular numbered version of this
../texinfo/fdl.texi(,362) License ``or any later version'' applies to it, you have the option of
../texinfo/fdl.texi(,363) following the terms and conditions either of that specified version or
../texinfo/fdl.texi(,364) of any later version that has been published (not as a draft) by the
../texinfo/fdl.texi(,365) Free Software Foundation.  If the Document does not specify a version
../texinfo/fdl.texi(,366) number of this License, you may choose any version ever published (not
../texinfo/fdl.texi(,367) as a draft) by the Free Software Foundation.
../texinfo/fdl.texi(,368) @end enumerate
../texinfo/fdl.texi(,369) 
../texinfo/fdl.texi(,370) @page
../texinfo/fdl.texi(,371) @appendixsubsec ADDENDUM: How to use this License for your documents
../texinfo/fdl.texi(,372) 
../texinfo/fdl.texi(,373) To use this License in a document you have written, include a copy of
../texinfo/fdl.texi(,374) the License in the document and put the following copyright and
../texinfo/fdl.texi(,375) license notices just after the title page:
../texinfo/fdl.texi(,376) 
../texinfo/fdl.texi(,377) @smallexample
../texinfo/fdl.texi(,378) @group
../texinfo/fdl.texi(,379)   Copyright (C)  @var{year}  @var{your name}.
../texinfo/fdl.texi(,380)   Permission is granted to copy, distribute and/or modify this document
../texinfo/fdl.texi(,381)   under the terms of the GNU Free Documentation License, Version 1.1
../texinfo/fdl.texi(,382)   or any later version published by the Free Software Foundation;
../texinfo/fdl.texi(,383)   with the Invariant Sections being @var{list their titles}, with the
../texinfo/fdl.texi(,384)   Front-Cover Texts being @var{list}, and with the Back-Cover Texts being @var{list}.
../texinfo/fdl.texi(,385)   A copy of the license is included in the section entitled ``GNU
../texinfo/fdl.texi(,386)   Free Documentation License''.
../texinfo/fdl.texi(,387) @end group
../texinfo/fdl.texi(,388) @end smallexample
../texinfo/fdl.texi(,389) 
../texinfo/fdl.texi(,390) If you have no Invariant Sections, write ``with no Invariant Sections''
../texinfo/fdl.texi(,391) instead of saying which ones are invariant.  If you have no
../texinfo/fdl.texi(,392) Front-Cover Texts, write ``no Front-Cover Texts'' instead of
../texinfo/fdl.texi(,393) ``Front-Cover Texts being @var{list}''; likewise for Back-Cover Texts.
../texinfo/fdl.texi(,394) 
../texinfo/fdl.texi(,395) If your document contains nontrivial examples of program code, we
../texinfo/fdl.texi(,396) recommend releasing these examples in parallel under your choice of
../texinfo/fdl.texi(,397) free software license, such as the GNU General Public License,
../texinfo/fdl.texi(,398) to permit their use in free software.
../texinfo/fdl.texi(,399) 
../texinfo/fdl.texi(,400) @c Local Variables:
../texinfo/fdl.texi(,401) @c ispell-local-pdict: "ispell-dict"
../texinfo/fdl.texi(,402) @c End:
../texinfo/fdl.texi(,403) 
../texinfo/texinfo.txi(,18736) 
../texinfo/texinfo.txi(,18737) 
../texinfo/texinfo.txi(,18738) @node Command and Variable Index
../texinfo/texinfo.txi(,18739) @unnumbered Command and Variable Index
../texinfo/texinfo.txi(,18740) 
../texinfo/texinfo.txi(,18741) This is an alphabetical list of all the @@-commands, assorted Emacs Lisp
../texinfo/texinfo.txi(,18742) functions, and several variables.  To make the list easier to use, the
../texinfo/texinfo.txi(,18743) commands are listed without their preceding @samp{@@}.@refill
../texinfo/texinfo.txi(,18744) 
../texinfo/texinfo.txi(,18745) @printindex fn
../texinfo/texinfo.txi(,18746) 
../texinfo/texinfo.txi(,18747) 
../texinfo/texinfo.txi(,18748) @node Concept Index
../texinfo/texinfo.txi(,18749) @unnumbered Concept Index
../texinfo/texinfo.txi(,18750) 
../texinfo/texinfo.txi(,18751) @printindex cp
../texinfo/texinfo.txi(,18752) 
../texinfo/texinfo.txi(,18753) 
../texinfo/texinfo.txi(,18754) @bye
