* conditionals on @set/@value, output format
* implement command_warn properly
* Check everywhere we store values, we check properly what to do if the
  values are already defined.
* check valid nestings
* @deffn, @deffnx, etc.
* Implement parser options
* Character encoding issues - read and pass to Perl correctly.
* gnulib integration for strrchr, strchrnul, asprintf, etc.  Eliminate
  #define _GNU_SOURCE.
* gettext integration
* figure out what to do with parse_texi_line, etc.  Integration with the 
test suites.
* find where "strlen" and "text_append" are used and try to remove them, for 
efficiency.  Also newSVpv (..., 0);
* Add "TODO" anywhere in the code with explanations of what is not done yet.

Integration with rest of Perl code:

Passing data as Perl code to be evaluated in very slow, which limits the 
speed-up that is obtained. One way round this would be to access the 
parse tree in the Perl code through an API. This would be done in two 
stages:

* Convert makeinfo backends to use a Perl stub for the C API. The C 
parser will not be used at this point.
* Substitute the XS API implementation for the Perl API when the C 
parser is good enough.

